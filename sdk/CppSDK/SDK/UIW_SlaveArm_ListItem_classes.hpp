#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UIW_SlaveArm_ListItem

#include "Basic.hpp"

#include "ProjectP_classes.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass UIW_SlaveArm_ListItem.UIW_SlaveArm_ListItem_C
// 0x0038 (0x02E0 - 0x02A8)
class UUIW_SlaveArm_ListItem_C final : public ULWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02A8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UImage*                                 Icon;                                              // 0x02B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Img_Equip;                                         // 0x02B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Img_Hover;                                         // 0x02C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Img_Select1;                                       // 0x02C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Img_Select2;                                       // 0x02D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Img_X;                                             // 0x02D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_UIW_SlaveArm_ListItem(int32 EntryPoint);
	void OnMouseLeave(const struct FPointerEvent& MouseEvent);
	void OnMouseEnter(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);
	void BP_OnItemSelectionChanged(bool bIsSelected);
	void OnListItemObjectSet(class UObject* ListItemObject);
	void BP_OnItemExpansionChanged(bool bIsExpanded);
	void BP_OnEntryReleased();
	void SetData(class UObject* Object);
	void SetSlotType(class FName ID);
	void SetSlotTypeAll(class FName InputPin);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"UIW_SlaveArm_ListItem_C">();
	}
	static class UUIW_SlaveArm_ListItem_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUIW_SlaveArm_ListItem_C>();
	}
};
static_assert(alignof(UUIW_SlaveArm_ListItem_C) == 0x000008, "Wrong alignment on UUIW_SlaveArm_ListItem_C");
static_assert(sizeof(UUIW_SlaveArm_ListItem_C) == 0x0002E0, "Wrong size on UUIW_SlaveArm_ListItem_C");
static_assert(offsetof(UUIW_SlaveArm_ListItem_C, UberGraphFrame) == 0x0002A8, "Member 'UUIW_SlaveArm_ListItem_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UUIW_SlaveArm_ListItem_C, Icon) == 0x0002B0, "Member 'UUIW_SlaveArm_ListItem_C::Icon' has a wrong offset!");
static_assert(offsetof(UUIW_SlaveArm_ListItem_C, Img_Equip) == 0x0002B8, "Member 'UUIW_SlaveArm_ListItem_C::Img_Equip' has a wrong offset!");
static_assert(offsetof(UUIW_SlaveArm_ListItem_C, Img_Hover) == 0x0002C0, "Member 'UUIW_SlaveArm_ListItem_C::Img_Hover' has a wrong offset!");
static_assert(offsetof(UUIW_SlaveArm_ListItem_C, Img_Select1) == 0x0002C8, "Member 'UUIW_SlaveArm_ListItem_C::Img_Select1' has a wrong offset!");
static_assert(offsetof(UUIW_SlaveArm_ListItem_C, Img_Select2) == 0x0002D0, "Member 'UUIW_SlaveArm_ListItem_C::Img_Select2' has a wrong offset!");
static_assert(offsetof(UUIW_SlaveArm_ListItem_C, Img_X) == 0x0002D8, "Member 'UUIW_SlaveArm_ListItem_C::Img_X' has a wrong offset!");

}


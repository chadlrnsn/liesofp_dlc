#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Action_Test_GuardArm1

#include "Basic.hpp"

#include "ProjectP_structs.hpp"
#include "Engine_structs.hpp"
#include "BP_Action_SlaveArm_classes.hpp"
#include "ProjectPContentInfo_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Action_Test_GuardArm1.BP_Action_Test_GuardArm1_C
// 0x0028 (0x02B8 - 0x0290)
class UBP_Action_Test_GuardArm1_C final : public UBP_Action_SlaveArm_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_Action_Test_GuardArm1_C;         // 0x0290(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class FName                                   FrenzySkill;                                       // 0x0298(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Guard_end;                                         // 0x02A0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          OnGuardAttack;                                     // 0x02A1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          ParryOn;                                           // 0x02A2(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          ExCounter;                                         // 0x02A3(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A4[0x4];                                      // 0x02A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           Cached_TimerHandle_OnConsumeSlaveMagazinePoint;    // 0x02A8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          Parry_Reserve;                                     // 0x02B0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Attack_Reserve;                                    // 0x02B1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_BP_Action_Test_GuardArm1(int32 EntryPoint);
	void OnConsumeSlaveMagazinePoint();
	void OnCommandOccurred_Event(class ULActMgrComponent* ActMgrComponent, class AActor* TargetActor, class FName Command, const struct FVector& Lever, bool SkipCommandPrerequisitiesCheck);
	void OnStop(class ULActBase* ReasonAction, class FName Reason);
	void OnStart();
	void SetReinforcedVariableValue(class FName VariableName, class FName Value);
	void ClearReinforcedVariableValues();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Action_Test_GuardArm1_C">();
	}
	static class UBP_Action_Test_GuardArm1_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_Action_Test_GuardArm1_C>();
	}
};
static_assert(alignof(UBP_Action_Test_GuardArm1_C) == 0x000008, "Wrong alignment on UBP_Action_Test_GuardArm1_C");
static_assert(sizeof(UBP_Action_Test_GuardArm1_C) == 0x0002B8, "Wrong size on UBP_Action_Test_GuardArm1_C");
static_assert(offsetof(UBP_Action_Test_GuardArm1_C, UberGraphFrame_BP_Action_Test_GuardArm1_C) == 0x000290, "Member 'UBP_Action_Test_GuardArm1_C::UberGraphFrame_BP_Action_Test_GuardArm1_C' has a wrong offset!");
static_assert(offsetof(UBP_Action_Test_GuardArm1_C, FrenzySkill) == 0x000298, "Member 'UBP_Action_Test_GuardArm1_C::FrenzySkill' has a wrong offset!");
static_assert(offsetof(UBP_Action_Test_GuardArm1_C, Guard_end) == 0x0002A0, "Member 'UBP_Action_Test_GuardArm1_C::Guard_end' has a wrong offset!");
static_assert(offsetof(UBP_Action_Test_GuardArm1_C, OnGuardAttack) == 0x0002A1, "Member 'UBP_Action_Test_GuardArm1_C::OnGuardAttack' has a wrong offset!");
static_assert(offsetof(UBP_Action_Test_GuardArm1_C, ParryOn) == 0x0002A2, "Member 'UBP_Action_Test_GuardArm1_C::ParryOn' has a wrong offset!");
static_assert(offsetof(UBP_Action_Test_GuardArm1_C, ExCounter) == 0x0002A3, "Member 'UBP_Action_Test_GuardArm1_C::ExCounter' has a wrong offset!");
static_assert(offsetof(UBP_Action_Test_GuardArm1_C, Cached_TimerHandle_OnConsumeSlaveMagazinePoint) == 0x0002A8, "Member 'UBP_Action_Test_GuardArm1_C::Cached_TimerHandle_OnConsumeSlaveMagazinePoint' has a wrong offset!");
static_assert(offsetof(UBP_Action_Test_GuardArm1_C, Parry_Reserve) == 0x0002B0, "Member 'UBP_Action_Test_GuardArm1_C::Parry_Reserve' has a wrong offset!");
static_assert(offsetof(UBP_Action_Test_GuardArm1_C, Attack_Reserve) == 0x0002B1, "Member 'UBP_Action_Test_GuardArm1_C::Attack_Reserve' has a wrong offset!");

}


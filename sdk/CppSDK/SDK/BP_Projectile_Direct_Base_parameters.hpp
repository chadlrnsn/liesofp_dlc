#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Projectile_Direct_Base

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_Projectile_Direct_Base.BP_Projectile_Direct_Base_C.ExecuteUbergraph_BP_Projectile_Direct_Base
// 0x00E0 (0x00E0 - 0x0000)
struct BP_Projectile_Direct_Base_C_ExecuteUbergraph_BP_Projectile_Direct_Base final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_HitComponent;           // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_ComponentBoundEvent_NormalImpulse;          // 0x0020(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_ComponentBoundEvent_Hit;                    // 0x002C(0x0088)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	uint8                                         Pad_B4[0x4];                                       // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Projectile_Design_Base_C*           K2Node_DynamicCast_AsBP_Projectile_Design_Base;    // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue;                  // 0x00C8(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D1[0x3];                                       // 0x00D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Projectile_Direct_Base_C_ExecuteUbergraph_BP_Projectile_Direct_Base) == 0x000008, "Wrong alignment on BP_Projectile_Direct_Base_C_ExecuteUbergraph_BP_Projectile_Direct_Base");
static_assert(sizeof(BP_Projectile_Direct_Base_C_ExecuteUbergraph_BP_Projectile_Direct_Base) == 0x0000E0, "Wrong size on BP_Projectile_Direct_Base_C_ExecuteUbergraph_BP_Projectile_Direct_Base");
static_assert(offsetof(BP_Projectile_Direct_Base_C_ExecuteUbergraph_BP_Projectile_Direct_Base, EntryPoint) == 0x000000, "Member 'BP_Projectile_Direct_Base_C_ExecuteUbergraph_BP_Projectile_Direct_Base::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_Projectile_Direct_Base_C_ExecuteUbergraph_BP_Projectile_Direct_Base, K2Node_ComponentBoundEvent_HitComponent) == 0x000008, "Member 'BP_Projectile_Direct_Base_C_ExecuteUbergraph_BP_Projectile_Direct_Base::K2Node_ComponentBoundEvent_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_Projectile_Direct_Base_C_ExecuteUbergraph_BP_Projectile_Direct_Base, K2Node_ComponentBoundEvent_OtherActor) == 0x000010, "Member 'BP_Projectile_Direct_Base_C_ExecuteUbergraph_BP_Projectile_Direct_Base::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(BP_Projectile_Direct_Base_C_ExecuteUbergraph_BP_Projectile_Direct_Base, K2Node_ComponentBoundEvent_OtherComp) == 0x000018, "Member 'BP_Projectile_Direct_Base_C_ExecuteUbergraph_BP_Projectile_Direct_Base::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(BP_Projectile_Direct_Base_C_ExecuteUbergraph_BP_Projectile_Direct_Base, K2Node_ComponentBoundEvent_NormalImpulse) == 0x000020, "Member 'BP_Projectile_Direct_Base_C_ExecuteUbergraph_BP_Projectile_Direct_Base::K2Node_ComponentBoundEvent_NormalImpulse' has a wrong offset!");
static_assert(offsetof(BP_Projectile_Direct_Base_C_ExecuteUbergraph_BP_Projectile_Direct_Base, K2Node_ComponentBoundEvent_Hit) == 0x00002C, "Member 'BP_Projectile_Direct_Base_C_ExecuteUbergraph_BP_Projectile_Direct_Base::K2Node_ComponentBoundEvent_Hit' has a wrong offset!");
static_assert(offsetof(BP_Projectile_Direct_Base_C_ExecuteUbergraph_BP_Projectile_Direct_Base, K2Node_DynamicCast_AsBP_Projectile_Design_Base) == 0x0000B8, "Member 'BP_Projectile_Direct_Base_C_ExecuteUbergraph_BP_Projectile_Direct_Base::K2Node_DynamicCast_AsBP_Projectile_Design_Base' has a wrong offset!");
static_assert(offsetof(BP_Projectile_Direct_Base_C_ExecuteUbergraph_BP_Projectile_Direct_Base, K2Node_DynamicCast_bSuccess) == 0x0000C0, "Member 'BP_Projectile_Direct_Base_C_ExecuteUbergraph_BP_Projectile_Direct_Base::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Projectile_Direct_Base_C_ExecuteUbergraph_BP_Projectile_Direct_Base, CallFunc_K2_SetTimer_ReturnValue) == 0x0000C8, "Member 'BP_Projectile_Direct_Base_C_ExecuteUbergraph_BP_Projectile_Direct_Base::CallFunc_K2_SetTimer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Projectile_Direct_Base_C_ExecuteUbergraph_BP_Projectile_Direct_Base, CallFunc_Greater_FloatFloat_ReturnValue) == 0x0000D0, "Member 'BP_Projectile_Direct_Base_C_ExecuteUbergraph_BP_Projectile_Direct_Base::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Projectile_Direct_Base_C_ExecuteUbergraph_BP_Projectile_Direct_Base, K2Node_Event_DeltaSeconds) == 0x0000D4, "Member 'BP_Projectile_Direct_Base_C_ExecuteUbergraph_BP_Projectile_Direct_Base::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_Projectile_Direct_Base_C_ExecuteUbergraph_BP_Projectile_Direct_Base, CallFunc_BooleanAND_ReturnValue) == 0x0000D8, "Member 'BP_Projectile_Direct_Base_C_ExecuteUbergraph_BP_Projectile_Direct_Base::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_Projectile_Direct_Base.BP_Projectile_Direct_Base_C.BndEvt__BP_Projectile_Direct_Base_Collision_K2Node_ComponentBoundEvent_3_ComponentHitSignature__DelegateSignature
// 0x00B0 (0x00B0 - 0x0000)
struct BP_Projectile_Direct_Base_C_BndEvt__BP_Projectile_Direct_Base_Collision_K2Node_ComponentBoundEvent_3_ComponentHitSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    HitComponent;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                NormalImpulse;                                     // 0x0018(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit;                                               // 0x0024(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_Projectile_Direct_Base_C_BndEvt__BP_Projectile_Direct_Base_Collision_K2Node_ComponentBoundEvent_3_ComponentHitSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_Projectile_Direct_Base_C_BndEvt__BP_Projectile_Direct_Base_Collision_K2Node_ComponentBoundEvent_3_ComponentHitSignature__DelegateSignature");
static_assert(sizeof(BP_Projectile_Direct_Base_C_BndEvt__BP_Projectile_Direct_Base_Collision_K2Node_ComponentBoundEvent_3_ComponentHitSignature__DelegateSignature) == 0x0000B0, "Wrong size on BP_Projectile_Direct_Base_C_BndEvt__BP_Projectile_Direct_Base_Collision_K2Node_ComponentBoundEvent_3_ComponentHitSignature__DelegateSignature");
static_assert(offsetof(BP_Projectile_Direct_Base_C_BndEvt__BP_Projectile_Direct_Base_Collision_K2Node_ComponentBoundEvent_3_ComponentHitSignature__DelegateSignature, HitComponent) == 0x000000, "Member 'BP_Projectile_Direct_Base_C_BndEvt__BP_Projectile_Direct_Base_Collision_K2Node_ComponentBoundEvent_3_ComponentHitSignature__DelegateSignature::HitComponent' has a wrong offset!");
static_assert(offsetof(BP_Projectile_Direct_Base_C_BndEvt__BP_Projectile_Direct_Base_Collision_K2Node_ComponentBoundEvent_3_ComponentHitSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_Projectile_Direct_Base_C_BndEvt__BP_Projectile_Direct_Base_Collision_K2Node_ComponentBoundEvent_3_ComponentHitSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_Projectile_Direct_Base_C_BndEvt__BP_Projectile_Direct_Base_Collision_K2Node_ComponentBoundEvent_3_ComponentHitSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_Projectile_Direct_Base_C_BndEvt__BP_Projectile_Direct_Base_Collision_K2Node_ComponentBoundEvent_3_ComponentHitSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_Projectile_Direct_Base_C_BndEvt__BP_Projectile_Direct_Base_Collision_K2Node_ComponentBoundEvent_3_ComponentHitSignature__DelegateSignature, NormalImpulse) == 0x000018, "Member 'BP_Projectile_Direct_Base_C_BndEvt__BP_Projectile_Direct_Base_Collision_K2Node_ComponentBoundEvent_3_ComponentHitSignature__DelegateSignature::NormalImpulse' has a wrong offset!");
static_assert(offsetof(BP_Projectile_Direct_Base_C_BndEvt__BP_Projectile_Direct_Base_Collision_K2Node_ComponentBoundEvent_3_ComponentHitSignature__DelegateSignature, Hit) == 0x000024, "Member 'BP_Projectile_Direct_Base_C_BndEvt__BP_Projectile_Direct_Base_Collision_K2Node_ComponentBoundEvent_3_ComponentHitSignature__DelegateSignature::Hit' has a wrong offset!");

// Function BP_Projectile_Direct_Base.BP_Projectile_Direct_Base_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_Projectile_Direct_Base_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Projectile_Direct_Base_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_Projectile_Direct_Base_C_ReceiveTick");
static_assert(sizeof(BP_Projectile_Direct_Base_C_ReceiveTick) == 0x000004, "Wrong size on BP_Projectile_Direct_Base_C_ReceiveTick");
static_assert(offsetof(BP_Projectile_Direct_Base_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_Projectile_Direct_Base_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_Projectile_Direct_Base.BP_Projectile_Direct_Base_C.FinishProjectile
// 0x0018 (0x0018 - 0x0000)
struct BP_Projectile_Direct_Base_C_FinishProjectile final
{
public:
	class ULObjectPoolSystem*                     CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ReturnToRecyclingBin_ReturnValue;         // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_CollisionProfile_NoCollision_ReturnValue; // 0x000C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Projectile_Direct_Base_C_FinishProjectile) == 0x000008, "Wrong alignment on BP_Projectile_Direct_Base_C_FinishProjectile");
static_assert(sizeof(BP_Projectile_Direct_Base_C_FinishProjectile) == 0x000018, "Wrong size on BP_Projectile_Direct_Base_C_FinishProjectile");
static_assert(offsetof(BP_Projectile_Direct_Base_C_FinishProjectile, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000000, "Member 'BP_Projectile_Direct_Base_C_FinishProjectile::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Projectile_Direct_Base_C_FinishProjectile, CallFunc_ReturnToRecyclingBin_ReturnValue) == 0x000008, "Member 'BP_Projectile_Direct_Base_C_FinishProjectile::CallFunc_ReturnToRecyclingBin_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Projectile_Direct_Base_C_FinishProjectile, CallFunc_CollisionProfile_NoCollision_ReturnValue) == 0x00000C, "Member 'BP_Projectile_Direct_Base_C_FinishProjectile::CallFunc_CollisionProfile_NoCollision_ReturnValue' has a wrong offset!");

// Function BP_Projectile_Direct_Base.BP_Projectile_Direct_Base_C.CheckDistance
// 0x00CC (0x00CC - 0x0000)
struct BP_Projectile_Direct_Base_C_CheckDistance final
{
public:
	struct FHitResult                             CallFunc_MakeHitResult_ReturnValue;                // 0x0000(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89[0x3];                                       // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Square_ReturnValue;                       // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0090(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9D[0x3];                                       // 0x009D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x00A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x00AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x00B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Vector_DistanceSquared_ReturnValue;       // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Projectile_Direct_Base_C_CheckDistance) == 0x000004, "Wrong alignment on BP_Projectile_Direct_Base_C_CheckDistance");
static_assert(sizeof(BP_Projectile_Direct_Base_C_CheckDistance) == 0x0000CC, "Wrong size on BP_Projectile_Direct_Base_C_CheckDistance");
static_assert(offsetof(BP_Projectile_Direct_Base_C_CheckDistance, CallFunc_MakeHitResult_ReturnValue) == 0x000000, "Member 'BP_Projectile_Direct_Base_C_CheckDistance::CallFunc_MakeHitResult_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Projectile_Direct_Base_C_CheckDistance, CallFunc_IsValid_ReturnValue) == 0x000088, "Member 'BP_Projectile_Direct_Base_C_CheckDistance::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Projectile_Direct_Base_C_CheckDistance, CallFunc_Square_ReturnValue) == 0x00008C, "Member 'BP_Projectile_Direct_Base_C_CheckDistance::CallFunc_Square_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Projectile_Direct_Base_C_CheckDistance, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000090, "Member 'BP_Projectile_Direct_Base_C_CheckDistance::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Projectile_Direct_Base_C_CheckDistance, K2Node_SwitchEnum_CmpSuccess) == 0x00009C, "Member 'BP_Projectile_Direct_Base_C_CheckDistance::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_Projectile_Direct_Base_C_CheckDistance, CallFunc_BreakTransform_Location) == 0x0000A0, "Member 'BP_Projectile_Direct_Base_C_CheckDistance::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_Projectile_Direct_Base_C_CheckDistance, CallFunc_BreakTransform_Rotation) == 0x0000AC, "Member 'BP_Projectile_Direct_Base_C_CheckDistance::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_Projectile_Direct_Base_C_CheckDistance, CallFunc_BreakTransform_Scale) == 0x0000B8, "Member 'BP_Projectile_Direct_Base_C_CheckDistance::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_Projectile_Direct_Base_C_CheckDistance, CallFunc_Vector_DistanceSquared_ReturnValue) == 0x0000C4, "Member 'BP_Projectile_Direct_Base_C_CheckDistance::CallFunc_Vector_DistanceSquared_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Projectile_Direct_Base_C_CheckDistance, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x0000C8, "Member 'BP_Projectile_Direct_Base_C_CheckDistance::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");

}


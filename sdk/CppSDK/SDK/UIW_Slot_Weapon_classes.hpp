#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UIW_Slot_Weapon

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UIW_ListItem_Weapon_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass UIW_Slot_Weapon.UIW_Slot_Weapon_C
// 0x0028 (0x0360 - 0x0338)
class UUIW_Slot_Weapon_C final : public UUIW_ListItem_Weapon_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_UIW_Slot_Weapon_C;                  // 0x0338(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	FMulticastInlineDelegateProperty_             OnSelected;                                        // 0x0340(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             OnActive;                                          // 0x0350(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)

public:
	void OnSelected__DelegateSignature(class ULWeaponItem* LWeaponItem);
	void OnActive__DelegateSignature(class ULWeaponItem* LWeaponItem);
	void ExecuteUbergraph_UIW_Slot_Weapon(int32 EntryPoint);
	void Destruct();
	void Set_Item(class UObject* ListObject);
	void OnFocusLost(const struct FFocusEvent& InFocusEvent);
	struct FEventReply OnFocusReceived(const struct FGeometry& MyGeometry, const struct FFocusEvent& InFocusEvent);
	struct FEventReply OnMouseButtonDown(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);
	struct FEventReply OnMouseButtonDoubleClick(const struct FGeometry& InMyGeometry, const struct FPointerEvent& InMouseEvent);
	void SetEquipPossible();
	void SetMoveFocusEffect();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"UIW_Slot_Weapon_C">();
	}
	static class UUIW_Slot_Weapon_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUIW_Slot_Weapon_C>();
	}
};
static_assert(alignof(UUIW_Slot_Weapon_C) == 0x000008, "Wrong alignment on UUIW_Slot_Weapon_C");
static_assert(sizeof(UUIW_Slot_Weapon_C) == 0x000360, "Wrong size on UUIW_Slot_Weapon_C");
static_assert(offsetof(UUIW_Slot_Weapon_C, UberGraphFrame_UIW_Slot_Weapon_C) == 0x000338, "Member 'UUIW_Slot_Weapon_C::UberGraphFrame_UIW_Slot_Weapon_C' has a wrong offset!");
static_assert(offsetof(UUIW_Slot_Weapon_C, OnSelected) == 0x000340, "Member 'UUIW_Slot_Weapon_C::OnSelected' has a wrong offset!");
static_assert(offsetof(UUIW_Slot_Weapon_C, OnActive) == 0x000350, "Member 'UUIW_Slot_Weapon_C::OnActive' has a wrong offset!");

}


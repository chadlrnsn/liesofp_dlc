#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Action_Jump

#include "Basic.hpp"

#include "ProjectP_structs.hpp"
#include "ProjectP_classes.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Action_Jump.BP_Action_Jump_C
// 0x0038 (0x0290 - 0x0258)
class UBP_Action_Jump_C final : public ULAction_LoopAnim
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0258(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	bool                                          Option_ShowVelocityLog;                            // 0x0260(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Option_DrawJump;                                   // 0x0261(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_262[0x2];                                      // 0x0262(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Option_Horizontal_Speed;                           // 0x0264(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Option_Vertical_Speed;                             // 0x0268(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Cached_JumpStartHeight;                            // 0x026C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Option_FallingStartHeight;                         // 0x0270(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Cached_StartJumpFalling;                           // 0x0274(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Cached_BlockedByWall;                              // 0x0275(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Option_DrawBlockNormal;                            // 0x0276(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_277[0x1];                                      // 0x0277(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EObjectTypeQuery>                      Option_BlockableObjectType;                        // 0x0278(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          Cached_FinalFallingRaised;                         // 0x0288(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Cached_JumpStarted;                                // 0x0289(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_BP_Action_Jump(int32 EntryPoint);
	void OnCurrMontageEnded(class UAnimMontage* Montage, bool bInterrupted, int32 MontageInstanceID);
	void OnCurrMontageBlendOutStarted(class UAnimMontage* Montage, bool bInterrupted, int32 MontageInstanceID);
	void OnJumped(class ALCharacter* Instigator);
	void OnTick(float DeltaTime);
	void OnStop(class ULActBase* ReasonAction, class FName Reason);
	void OnStart();
	bool ProcessValidLandingSpot(const struct FVector& CapsuleLocation, const struct FHitResult& Hit, bool IsValidLandingSpot);
	bool OnMoveBlockedBy(class ACharacter* BlockedChar, const struct FHitResult& Hit);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Action_Jump_C">();
	}
	static class UBP_Action_Jump_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_Action_Jump_C>();
	}
};
static_assert(alignof(UBP_Action_Jump_C) == 0x000008, "Wrong alignment on UBP_Action_Jump_C");
static_assert(sizeof(UBP_Action_Jump_C) == 0x000290, "Wrong size on UBP_Action_Jump_C");
static_assert(offsetof(UBP_Action_Jump_C, UberGraphFrame) == 0x000258, "Member 'UBP_Action_Jump_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_Action_Jump_C, Option_ShowVelocityLog) == 0x000260, "Member 'UBP_Action_Jump_C::Option_ShowVelocityLog' has a wrong offset!");
static_assert(offsetof(UBP_Action_Jump_C, Option_DrawJump) == 0x000261, "Member 'UBP_Action_Jump_C::Option_DrawJump' has a wrong offset!");
static_assert(offsetof(UBP_Action_Jump_C, Option_Horizontal_Speed) == 0x000264, "Member 'UBP_Action_Jump_C::Option_Horizontal_Speed' has a wrong offset!");
static_assert(offsetof(UBP_Action_Jump_C, Option_Vertical_Speed) == 0x000268, "Member 'UBP_Action_Jump_C::Option_Vertical_Speed' has a wrong offset!");
static_assert(offsetof(UBP_Action_Jump_C, Cached_JumpStartHeight) == 0x00026C, "Member 'UBP_Action_Jump_C::Cached_JumpStartHeight' has a wrong offset!");
static_assert(offsetof(UBP_Action_Jump_C, Option_FallingStartHeight) == 0x000270, "Member 'UBP_Action_Jump_C::Option_FallingStartHeight' has a wrong offset!");
static_assert(offsetof(UBP_Action_Jump_C, Cached_StartJumpFalling) == 0x000274, "Member 'UBP_Action_Jump_C::Cached_StartJumpFalling' has a wrong offset!");
static_assert(offsetof(UBP_Action_Jump_C, Cached_BlockedByWall) == 0x000275, "Member 'UBP_Action_Jump_C::Cached_BlockedByWall' has a wrong offset!");
static_assert(offsetof(UBP_Action_Jump_C, Option_DrawBlockNormal) == 0x000276, "Member 'UBP_Action_Jump_C::Option_DrawBlockNormal' has a wrong offset!");
static_assert(offsetof(UBP_Action_Jump_C, Option_BlockableObjectType) == 0x000278, "Member 'UBP_Action_Jump_C::Option_BlockableObjectType' has a wrong offset!");
static_assert(offsetof(UBP_Action_Jump_C, Cached_FinalFallingRaised) == 0x000288, "Member 'UBP_Action_Jump_C::Cached_FinalFallingRaised' has a wrong offset!");
static_assert(offsetof(UBP_Action_Jump_C, Cached_JumpStarted) == 0x000289, "Member 'UBP_Action_Jump_C::Cached_JumpStarted' has a wrong offset!");

}


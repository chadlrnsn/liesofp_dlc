#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_CH_PC_Pino

#include "Basic.hpp"

#include "ProjectP_structs.hpp"
#include "ProjectP_classes.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "ProjectPContentInfo_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_CH_PC_Pino.BP_CH_PC_Pino_C
// 0x07B0 (0x1660 - 0x0EB0)
class ABP_CH_PC_Pino_C final : public ALPCCharacter
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0EB0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USkeletalMeshComponent*                 Mesh_Eyewear;                                      // 0x0EB8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class ULCharacterHitSphereComponent*          LCharacterHitSphere;                               // 0x0EC0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_InfinityDisplacementComponent_C*    BP_InfinityDisplacementComponent;                  // 0x0EC8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_InfinityFootstepComponent_C*        BP_InfinityFootstepComponent;                      // 0x0ED0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 CH_FootShadowIndirect;                             // 0x0ED8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 CH_FootShadowDirect;                               // 0x0EE0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_PC_PROB_PCLamp_01;                              // 0x0EE8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_EnvSoundComponent_C*                BP_EnvSoundComponent;                              // 0x0EF0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_NoseShadow;                                     // 0x0EF8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        AudioListenerPos;                                  // 0x0F00(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 Mesh_Mask;                                         // 0x0F08(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      NS_Monad_1_Grow_Dialog;                            // 0x0F10(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class ULEquipmentComponentBP_C*               LEquipmentComponentBP;                             // 0x0F18(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 Mesh_Hair;                                         // 0x0F20(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 Mesh_Face;                                         // 0x0F28(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   ENV_PointLight1;                                   // 0x0F30(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   CH_PointLight2;                                    // 0x0F38(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   CH_PointLight1;                                    // 0x0F40(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      NS_Monad_Active_01_GDH;                            // 0x0F48(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_FluidImplementation_C*              BP_FluidImplementation;                            // 0x0F50(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class ULSpringArmComponent*                   LSpringArm;                                        // 0x0F58(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCameraComponent*                       FollowCam;                                         // 0x0F60(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         Emissive_TL_PCLamp_Emissive_On_TL_4147A3B749BD60DAC5596BA012BF24F8; // 0x0F68(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Emissive_TL__Direction_4147A3B749BD60DAC5596BA012BF24F8; // 0x0F6C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F6D[0x3];                                      // 0x0F6D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Emissive_TL;                                       // 0x0F70(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   IK_Socket_Left;                                    // 0x0F78(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   IK_Socket_Right;                                   // 0x0F80(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         IK_TraceDistance;                                  // 0x0F88(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         IK_FeetInterpSpeed;                                // 0x0F8C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         IK_CapsuleHalfHeight;                              // 0x0F90(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         IK_AdjustOffset;                                   // 0x0F94(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         IK_DeltaSeconds;                                   // 0x0F98(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          PointLight_Intensity;                              // 0x0F9C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F9D[0x3];                                      // 0x0F9D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                IK_Foot_Size_Left;                                 // 0x0FA0(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                IK_Foot_Size_Right;                                // 0x0FAC(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         IK_Limit;                                          // 0x0FB8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         IK_Hips_Temp;                                      // 0x0FBC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         IK_LFoot_Temp;                                     // 0x0FC0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         IK_RFoot_Temp;                                     // 0x0FC4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         IK_Standard;                                       // 0x0FC8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SearchDepthByLamp;                                 // 0x0FCC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SearchDistanceVar;                                 // 0x0FD0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SearchDegreeVar;                                   // 0x0FD4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SearchDistanceVarTest;                             // 0x0FD8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   PCLamp_Attach_Socket;                              // 0x0FDC(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Cached_FootLocation_R;                             // 0x0FE4(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Cached_FootLocation_L;                             // 0x0FF0(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PCLamp_Emissive_Off;                               // 0x0FFC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PCLamp_Emissive_On;                                // 0x1000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsDialogLampOn;                                    // 0x1004(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1005[0x3];                                     // 0x1005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         PCLamp_CH1_Off;                                    // 0x1008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PCLamp_CH1_On;                                     // 0x100C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PCLamp_CH2_Off;                                    // 0x1010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PCLamp_CH2_On;                                     // 0x1014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PCLamp_ENV_Off;                                    // 0x1018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PCLamp_ENV_On;                                     // 0x101C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PCLamp_Radius_Off;                                 // 0x1020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PCLamp_Radius_On;                                  // 0x1024(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1028[0x8];                                     // 0x1028(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPostProcessSettings                   PCDefault_Postprocess;                             // 0x1030(0x05B0)(Edit, BlueprintVisible, DisableEditOnInstance)
	float                                         PCToe;                                             // 0x15E0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PCIntensity;                                       // 0x15E4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PCStartOffset;                                     // 0x15E8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PCVignetteIntensity;                               // 0x15EC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PCFocalDistance;                                   // 0x15F0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PCDepthBlur;                                       // 0x15F4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PCDepthBlurRadius;                                 // 0x15F8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PCVignetteSize;                                    // 0x15FC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector4                               PCSaturation;                                      // 0x1600(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                PCLamp_Color_Default;                              // 0x1610(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                PCLamp_Color_Tracing_Mode;                         // 0x161C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NS_Monad_1_Grow_Reset;                             // 0x1628(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Cached_Combo;                                      // 0x1629(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsItemLampOn;                                      // 0x162A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsTracingMode;                                     // 0x162B(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_162C[0x4];                                     // 0x162C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UNiagaraSystem*                         Get_Soul_Ergo_FX;                                  // 0x1630(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<TSoftObjectPtr<class AActor>>          ButterflyLampRefs;                                 // 0x1638(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UMaterialInstanceDynamic*               ENV_PointLight1_Material;                          // 0x1648(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PCLamp_ENV_On_Tracing;                             // 0x1650(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1654[0x4];                                     // 0x1654(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPDS_DisplacementShapes_C*              DefaultDisplacementShape;                          // 0x1658(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_CH_PC_Pino(int32 EntryPoint);
	void Gemini_Lamp_Off();
	void ReceiveEndPlay(EEndPlayReason EndPlayReason);
	void OnApplyNeedShrink();
	void RemoveRainHitSound();
	void AttachRainHitSound(ELPhysicalSurfaceType InPhysicalSurface, const struct FVector& InLocation, float InRainIntensity, bool IsPCHit);
	void Item_Lamp_Emissive_Off();
	void Item_Lamp_Emissive_On();
	void OnAlertLamp(float DurationTime);
	void OnDialogLampOn();
	void OnDialogLampOff();
	void OnUseItemBP(class FName ItemId, bool IsOn);
	void AttachPCLamp();
	void OnFrenzyModeMV(bool bFrenzyMode, bool bInstant);
	void OnGainExp(int32 InExp);
	void ReceiveTick(float DeltaSeconds);
	void ReceiveBeginPlay();
	void Emissive_TL__UpdateFunc();
	void Emissive_TL__FinishedFunc();
	void UserConstructionScript();
	void IK_Trace(float TraceDistance, class FName SocketName, const struct FVector& FootSize, bool Moving, float* Offest, struct FRotator* Impact, bool* BlockHitBool);
	void IK_UpdateFootOffset_(float TargetValue, float& EffectorVar, float InterpSpeed, float* EffectorValue);
	void IK_UpdateFootRotation(const struct FRotator& TargetValue, struct FRotator& RotationVar, float InterpSpeed, struct FRotator* RotatorValue);
	void IK_UpdateCapsuleHalfHeight(float HipsShifts, bool Reset_Default, float* ReturnHipsOffset);
	void IK_AllUpdate(float InterpSpeed, bool Moving, float* ReturnLeftOffset, float* ReturnRightOffset, struct FRotator* ReturnLeftRotator, struct FRotator* ReturnRightRotator, float* ReturnHipsOffset);
	void IK_Reset(float* ReturnLeftOffset, float* ReturnRightOffset, struct FRotator* ReturnLeftRotator, struct FRotator* ReturnRightRotator, float* ReturnHipsOffset);
	void On_PCLamp(int32 InDepth, float InMaxDistance, float InDistance, float InDegree);
	void On_Twinkle_PCLamp();
	void Get_Soul_Ergo();
	void Turn_Off_Butterfly_Lamp(TSoftObjectPtr<class ABP_RedButterFly_Red_C> InActor);
	void TurnOnButterflyLamp(TSoftObjectPtr<class ABP_RedButterFly_Red_C> InButterfly, int32 InDepth, float InMaxDistance, float InDistance, float InDegree);
	void SetNoseShadow(bool Visible);
	void CreateENVPointLightMaterial();
	void UpdateDitherInfo();
	void On_EnteringN2_PCLamp();
	void AddDisplacementShapeData(TArray<struct FBS_DisplacementShape>& Stack, bool* Added);

	class UMeshComponent* GetLampMesh() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_CH_PC_Pino_C">();
	}
	static class ABP_CH_PC_Pino_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_CH_PC_Pino_C>();
	}
};
static_assert(alignof(ABP_CH_PC_Pino_C) == 0x000010, "Wrong alignment on ABP_CH_PC_Pino_C");
static_assert(sizeof(ABP_CH_PC_Pino_C) == 0x001660, "Wrong size on ABP_CH_PC_Pino_C");
static_assert(offsetof(ABP_CH_PC_Pino_C, UberGraphFrame) == 0x000EB0, "Member 'ABP_CH_PC_Pino_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_CH_PC_Pino_C, Mesh_Eyewear) == 0x000EB8, "Member 'ABP_CH_PC_Pino_C::Mesh_Eyewear' has a wrong offset!");
static_assert(offsetof(ABP_CH_PC_Pino_C, LCharacterHitSphere) == 0x000EC0, "Member 'ABP_CH_PC_Pino_C::LCharacterHitSphere' has a wrong offset!");
static_assert(offsetof(ABP_CH_PC_Pino_C, BP_InfinityDisplacementComponent) == 0x000EC8, "Member 'ABP_CH_PC_Pino_C::BP_InfinityDisplacementComponent' has a wrong offset!");
static_assert(offsetof(ABP_CH_PC_Pino_C, BP_InfinityFootstepComponent) == 0x000ED0, "Member 'ABP_CH_PC_Pino_C::BP_InfinityFootstepComponent' has a wrong offset!");
static_assert(offsetof(ABP_CH_PC_Pino_C, CH_FootShadowIndirect) == 0x000ED8, "Member 'ABP_CH_PC_Pino_C::CH_FootShadowIndirect' has a wrong offset!");
static_assert(offsetof(ABP_CH_PC_Pino_C, CH_FootShadowDirect) == 0x000EE0, "Member 'ABP_CH_PC_Pino_C::CH_FootShadowDirect' has a wrong offset!");
static_assert(offsetof(ABP_CH_PC_Pino_C, SM_PC_PROB_PCLamp_01) == 0x000EE8, "Member 'ABP_CH_PC_Pino_C::SM_PC_PROB_PCLamp_01' has a wrong offset!");
static_assert(offsetof(ABP_CH_PC_Pino_C, BP_EnvSoundComponent) == 0x000EF0, "Member 'ABP_CH_PC_Pino_C::BP_EnvSoundComponent' has a wrong offset!");
static_assert(offsetof(ABP_CH_PC_Pino_C, SM_NoseShadow) == 0x000EF8, "Member 'ABP_CH_PC_Pino_C::SM_NoseShadow' has a wrong offset!");
static_assert(offsetof(ABP_CH_PC_Pino_C, AudioListenerPos) == 0x000F00, "Member 'ABP_CH_PC_Pino_C::AudioListenerPos' has a wrong offset!");
static_assert(offsetof(ABP_CH_PC_Pino_C, Mesh_Mask) == 0x000F08, "Member 'ABP_CH_PC_Pino_C::Mesh_Mask' has a wrong offset!");
static_assert(offsetof(ABP_CH_PC_Pino_C, NS_Monad_1_Grow_Dialog) == 0x000F10, "Member 'ABP_CH_PC_Pino_C::NS_Monad_1_Grow_Dialog' has a wrong offset!");
static_assert(offsetof(ABP_CH_PC_Pino_C, LEquipmentComponentBP) == 0x000F18, "Member 'ABP_CH_PC_Pino_C::LEquipmentComponentBP' has a wrong offset!");
static_assert(offsetof(ABP_CH_PC_Pino_C, Mesh_Hair) == 0x000F20, "Member 'ABP_CH_PC_Pino_C::Mesh_Hair' has a wrong offset!");
static_assert(offsetof(ABP_CH_PC_Pino_C, Mesh_Face) == 0x000F28, "Member 'ABP_CH_PC_Pino_C::Mesh_Face' has a wrong offset!");
static_assert(offsetof(ABP_CH_PC_Pino_C, ENV_PointLight1) == 0x000F30, "Member 'ABP_CH_PC_Pino_C::ENV_PointLight1' has a wrong offset!");
static_assert(offsetof(ABP_CH_PC_Pino_C, CH_PointLight2) == 0x000F38, "Member 'ABP_CH_PC_Pino_C::CH_PointLight2' has a wrong offset!");
static_assert(offsetof(ABP_CH_PC_Pino_C, CH_PointLight1) == 0x000F40, "Member 'ABP_CH_PC_Pino_C::CH_PointLight1' has a wrong offset!");
static_assert(offsetof(ABP_CH_PC_Pino_C, NS_Monad_Active_01_GDH) == 0x000F48, "Member 'ABP_CH_PC_Pino_C::NS_Monad_Active_01_GDH' has a wrong offset!");
static_assert(offsetof(ABP_CH_PC_Pino_C, BP_FluidImplementation) == 0x000F50, "Member 'ABP_CH_PC_Pino_C::BP_FluidImplementation' has a wrong offset!");
static_assert(offsetof(ABP_CH_PC_Pino_C, LSpringArm) == 0x000F58, "Member 'ABP_CH_PC_Pino_C::LSpringArm' has a wrong offset!");
static_assert(offsetof(ABP_CH_PC_Pino_C, FollowCam) == 0x000F60, "Member 'ABP_CH_PC_Pino_C::FollowCam' has a wrong offset!");
static_assert(offsetof(ABP_CH_PC_Pino_C, Emissive_TL_PCLamp_Emissive_On_TL_4147A3B749BD60DAC5596BA012BF24F8) == 0x000F68, "Member 'ABP_CH_PC_Pino_C::Emissive_TL_PCLamp_Emissive_On_TL_4147A3B749BD60DAC5596BA012BF24F8' has a wrong offset!");
static_assert(offsetof(ABP_CH_PC_Pino_C, Emissive_TL__Direction_4147A3B749BD60DAC5596BA012BF24F8) == 0x000F6C, "Member 'ABP_CH_PC_Pino_C::Emissive_TL__Direction_4147A3B749BD60DAC5596BA012BF24F8' has a wrong offset!");
static_assert(offsetof(ABP_CH_PC_Pino_C, Emissive_TL) == 0x000F70, "Member 'ABP_CH_PC_Pino_C::Emissive_TL' has a wrong offset!");
static_assert(offsetof(ABP_CH_PC_Pino_C, IK_Socket_Left) == 0x000F78, "Member 'ABP_CH_PC_Pino_C::IK_Socket_Left' has a wrong offset!");
static_assert(offsetof(ABP_CH_PC_Pino_C, IK_Socket_Right) == 0x000F80, "Member 'ABP_CH_PC_Pino_C::IK_Socket_Right' has a wrong offset!");
static_assert(offsetof(ABP_CH_PC_Pino_C, IK_TraceDistance) == 0x000F88, "Member 'ABP_CH_PC_Pino_C::IK_TraceDistance' has a wrong offset!");
static_assert(offsetof(ABP_CH_PC_Pino_C, IK_FeetInterpSpeed) == 0x000F8C, "Member 'ABP_CH_PC_Pino_C::IK_FeetInterpSpeed' has a wrong offset!");
static_assert(offsetof(ABP_CH_PC_Pino_C, IK_CapsuleHalfHeight) == 0x000F90, "Member 'ABP_CH_PC_Pino_C::IK_CapsuleHalfHeight' has a wrong offset!");
static_assert(offsetof(ABP_CH_PC_Pino_C, IK_AdjustOffset) == 0x000F94, "Member 'ABP_CH_PC_Pino_C::IK_AdjustOffset' has a wrong offset!");
static_assert(offsetof(ABP_CH_PC_Pino_C, IK_DeltaSeconds) == 0x000F98, "Member 'ABP_CH_PC_Pino_C::IK_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(ABP_CH_PC_Pino_C, PointLight_Intensity) == 0x000F9C, "Member 'ABP_CH_PC_Pino_C::PointLight_Intensity' has a wrong offset!");
static_assert(offsetof(ABP_CH_PC_Pino_C, IK_Foot_Size_Left) == 0x000FA0, "Member 'ABP_CH_PC_Pino_C::IK_Foot_Size_Left' has a wrong offset!");
static_assert(offsetof(ABP_CH_PC_Pino_C, IK_Foot_Size_Right) == 0x000FAC, "Member 'ABP_CH_PC_Pino_C::IK_Foot_Size_Right' has a wrong offset!");
static_assert(offsetof(ABP_CH_PC_Pino_C, IK_Limit) == 0x000FB8, "Member 'ABP_CH_PC_Pino_C::IK_Limit' has a wrong offset!");
static_assert(offsetof(ABP_CH_PC_Pino_C, IK_Hips_Temp) == 0x000FBC, "Member 'ABP_CH_PC_Pino_C::IK_Hips_Temp' has a wrong offset!");
static_assert(offsetof(ABP_CH_PC_Pino_C, IK_LFoot_Temp) == 0x000FC0, "Member 'ABP_CH_PC_Pino_C::IK_LFoot_Temp' has a wrong offset!");
static_assert(offsetof(ABP_CH_PC_Pino_C, IK_RFoot_Temp) == 0x000FC4, "Member 'ABP_CH_PC_Pino_C::IK_RFoot_Temp' has a wrong offset!");
static_assert(offsetof(ABP_CH_PC_Pino_C, IK_Standard) == 0x000FC8, "Member 'ABP_CH_PC_Pino_C::IK_Standard' has a wrong offset!");
static_assert(offsetof(ABP_CH_PC_Pino_C, SearchDepthByLamp) == 0x000FCC, "Member 'ABP_CH_PC_Pino_C::SearchDepthByLamp' has a wrong offset!");
static_assert(offsetof(ABP_CH_PC_Pino_C, SearchDistanceVar) == 0x000FD0, "Member 'ABP_CH_PC_Pino_C::SearchDistanceVar' has a wrong offset!");
static_assert(offsetof(ABP_CH_PC_Pino_C, SearchDegreeVar) == 0x000FD4, "Member 'ABP_CH_PC_Pino_C::SearchDegreeVar' has a wrong offset!");
static_assert(offsetof(ABP_CH_PC_Pino_C, SearchDistanceVarTest) == 0x000FD8, "Member 'ABP_CH_PC_Pino_C::SearchDistanceVarTest' has a wrong offset!");
static_assert(offsetof(ABP_CH_PC_Pino_C, PCLamp_Attach_Socket) == 0x000FDC, "Member 'ABP_CH_PC_Pino_C::PCLamp_Attach_Socket' has a wrong offset!");
static_assert(offsetof(ABP_CH_PC_Pino_C, Cached_FootLocation_R) == 0x000FE4, "Member 'ABP_CH_PC_Pino_C::Cached_FootLocation_R' has a wrong offset!");
static_assert(offsetof(ABP_CH_PC_Pino_C, Cached_FootLocation_L) == 0x000FF0, "Member 'ABP_CH_PC_Pino_C::Cached_FootLocation_L' has a wrong offset!");
static_assert(offsetof(ABP_CH_PC_Pino_C, PCLamp_Emissive_Off) == 0x000FFC, "Member 'ABP_CH_PC_Pino_C::PCLamp_Emissive_Off' has a wrong offset!");
static_assert(offsetof(ABP_CH_PC_Pino_C, PCLamp_Emissive_On) == 0x001000, "Member 'ABP_CH_PC_Pino_C::PCLamp_Emissive_On' has a wrong offset!");
static_assert(offsetof(ABP_CH_PC_Pino_C, IsDialogLampOn) == 0x001004, "Member 'ABP_CH_PC_Pino_C::IsDialogLampOn' has a wrong offset!");
static_assert(offsetof(ABP_CH_PC_Pino_C, PCLamp_CH1_Off) == 0x001008, "Member 'ABP_CH_PC_Pino_C::PCLamp_CH1_Off' has a wrong offset!");
static_assert(offsetof(ABP_CH_PC_Pino_C, PCLamp_CH1_On) == 0x00100C, "Member 'ABP_CH_PC_Pino_C::PCLamp_CH1_On' has a wrong offset!");
static_assert(offsetof(ABP_CH_PC_Pino_C, PCLamp_CH2_Off) == 0x001010, "Member 'ABP_CH_PC_Pino_C::PCLamp_CH2_Off' has a wrong offset!");
static_assert(offsetof(ABP_CH_PC_Pino_C, PCLamp_CH2_On) == 0x001014, "Member 'ABP_CH_PC_Pino_C::PCLamp_CH2_On' has a wrong offset!");
static_assert(offsetof(ABP_CH_PC_Pino_C, PCLamp_ENV_Off) == 0x001018, "Member 'ABP_CH_PC_Pino_C::PCLamp_ENV_Off' has a wrong offset!");
static_assert(offsetof(ABP_CH_PC_Pino_C, PCLamp_ENV_On) == 0x00101C, "Member 'ABP_CH_PC_Pino_C::PCLamp_ENV_On' has a wrong offset!");
static_assert(offsetof(ABP_CH_PC_Pino_C, PCLamp_Radius_Off) == 0x001020, "Member 'ABP_CH_PC_Pino_C::PCLamp_Radius_Off' has a wrong offset!");
static_assert(offsetof(ABP_CH_PC_Pino_C, PCLamp_Radius_On) == 0x001024, "Member 'ABP_CH_PC_Pino_C::PCLamp_Radius_On' has a wrong offset!");
static_assert(offsetof(ABP_CH_PC_Pino_C, PCDefault_Postprocess) == 0x001030, "Member 'ABP_CH_PC_Pino_C::PCDefault_Postprocess' has a wrong offset!");
static_assert(offsetof(ABP_CH_PC_Pino_C, PCToe) == 0x0015E0, "Member 'ABP_CH_PC_Pino_C::PCToe' has a wrong offset!");
static_assert(offsetof(ABP_CH_PC_Pino_C, PCIntensity) == 0x0015E4, "Member 'ABP_CH_PC_Pino_C::PCIntensity' has a wrong offset!");
static_assert(offsetof(ABP_CH_PC_Pino_C, PCStartOffset) == 0x0015E8, "Member 'ABP_CH_PC_Pino_C::PCStartOffset' has a wrong offset!");
static_assert(offsetof(ABP_CH_PC_Pino_C, PCVignetteIntensity) == 0x0015EC, "Member 'ABP_CH_PC_Pino_C::PCVignetteIntensity' has a wrong offset!");
static_assert(offsetof(ABP_CH_PC_Pino_C, PCFocalDistance) == 0x0015F0, "Member 'ABP_CH_PC_Pino_C::PCFocalDistance' has a wrong offset!");
static_assert(offsetof(ABP_CH_PC_Pino_C, PCDepthBlur) == 0x0015F4, "Member 'ABP_CH_PC_Pino_C::PCDepthBlur' has a wrong offset!");
static_assert(offsetof(ABP_CH_PC_Pino_C, PCDepthBlurRadius) == 0x0015F8, "Member 'ABP_CH_PC_Pino_C::PCDepthBlurRadius' has a wrong offset!");
static_assert(offsetof(ABP_CH_PC_Pino_C, PCVignetteSize) == 0x0015FC, "Member 'ABP_CH_PC_Pino_C::PCVignetteSize' has a wrong offset!");
static_assert(offsetof(ABP_CH_PC_Pino_C, PCSaturation) == 0x001600, "Member 'ABP_CH_PC_Pino_C::PCSaturation' has a wrong offset!");
static_assert(offsetof(ABP_CH_PC_Pino_C, PCLamp_Color_Default) == 0x001610, "Member 'ABP_CH_PC_Pino_C::PCLamp_Color_Default' has a wrong offset!");
static_assert(offsetof(ABP_CH_PC_Pino_C, PCLamp_Color_Tracing_Mode) == 0x00161C, "Member 'ABP_CH_PC_Pino_C::PCLamp_Color_Tracing_Mode' has a wrong offset!");
static_assert(offsetof(ABP_CH_PC_Pino_C, NS_Monad_1_Grow_Reset) == 0x001628, "Member 'ABP_CH_PC_Pino_C::NS_Monad_1_Grow_Reset' has a wrong offset!");
static_assert(offsetof(ABP_CH_PC_Pino_C, Cached_Combo) == 0x001629, "Member 'ABP_CH_PC_Pino_C::Cached_Combo' has a wrong offset!");
static_assert(offsetof(ABP_CH_PC_Pino_C, IsItemLampOn) == 0x00162A, "Member 'ABP_CH_PC_Pino_C::IsItemLampOn' has a wrong offset!");
static_assert(offsetof(ABP_CH_PC_Pino_C, IsTracingMode) == 0x00162B, "Member 'ABP_CH_PC_Pino_C::IsTracingMode' has a wrong offset!");
static_assert(offsetof(ABP_CH_PC_Pino_C, Get_Soul_Ergo_FX) == 0x001630, "Member 'ABP_CH_PC_Pino_C::Get_Soul_Ergo_FX' has a wrong offset!");
static_assert(offsetof(ABP_CH_PC_Pino_C, ButterflyLampRefs) == 0x001638, "Member 'ABP_CH_PC_Pino_C::ButterflyLampRefs' has a wrong offset!");
static_assert(offsetof(ABP_CH_PC_Pino_C, ENV_PointLight1_Material) == 0x001648, "Member 'ABP_CH_PC_Pino_C::ENV_PointLight1_Material' has a wrong offset!");
static_assert(offsetof(ABP_CH_PC_Pino_C, PCLamp_ENV_On_Tracing) == 0x001650, "Member 'ABP_CH_PC_Pino_C::PCLamp_ENV_On_Tracing' has a wrong offset!");
static_assert(offsetof(ABP_CH_PC_Pino_C, DefaultDisplacementShape) == 0x001658, "Member 'ABP_CH_PC_Pino_C::DefaultDisplacementShape' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CWBP_Template_AlignCurve

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "ProjectP_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function CWBP_Template_AlignCurve.CWBP_Template_AlignCurve_C.ExecuteUbergraph_CWBP_Template_AlignCurve
// 0x01D8 (0x01D8 - 0x0000)
struct CWBP_Template_AlignCurve_C_ExecuteUbergraph_CWBP_Template_AlignCurve final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaTime;                            // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCameraTargetArmLength_ReturnValue;     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ELCameraWorkBlendState                        K2Node_Event_CameraWorkBlendState;                 // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E[0x2];                                        // 0x000E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue; // 0x003C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_CalculateCameraLocationFromPC_ReturnValue; // 0x004C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLCameraWorkViewInfo                   K2Node_MakeStruct_LCameraWorkViewInfo;             // 0x0058(0x001C)(NoDestructor)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0074(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ALPCCharacter*                          CallFunc_GetCameraCharacter_ReturnValue;           // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ALCameraManager*                        CallFunc_GetCameraManager_ReturnValue;             // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         K2Node_MakeArray_Array;                            // 0x0090(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                CallFunc_GetCameraLocation_ReturnValue;            // 0x00A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x00AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_SphereTraceSingle_OutHit;                 // 0x00B8(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_SphereTraceSingle_ReturnValue;            // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0141(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0142(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_143[0x1];                                      // 0x0143(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x014C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0158(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0164(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0170(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_17C[0x4];                                      // 0x017C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0190(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x01A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x01AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x01B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x01C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_VInterpTo_ReturnValue;                    // 0x01C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CWBP_Template_AlignCurve_C_ExecuteUbergraph_CWBP_Template_AlignCurve) == 0x000008, "Wrong alignment on CWBP_Template_AlignCurve_C_ExecuteUbergraph_CWBP_Template_AlignCurve");
static_assert(sizeof(CWBP_Template_AlignCurve_C_ExecuteUbergraph_CWBP_Template_AlignCurve) == 0x0001D8, "Wrong size on CWBP_Template_AlignCurve_C_ExecuteUbergraph_CWBP_Template_AlignCurve");
static_assert(offsetof(CWBP_Template_AlignCurve_C_ExecuteUbergraph_CWBP_Template_AlignCurve, EntryPoint) == 0x000000, "Member 'CWBP_Template_AlignCurve_C_ExecuteUbergraph_CWBP_Template_AlignCurve::EntryPoint' has a wrong offset!");
static_assert(offsetof(CWBP_Template_AlignCurve_C_ExecuteUbergraph_CWBP_Template_AlignCurve, K2Node_Event_DeltaTime) == 0x000004, "Member 'CWBP_Template_AlignCurve_C_ExecuteUbergraph_CWBP_Template_AlignCurve::K2Node_Event_DeltaTime' has a wrong offset!");
static_assert(offsetof(CWBP_Template_AlignCurve_C_ExecuteUbergraph_CWBP_Template_AlignCurve, CallFunc_GetCameraTargetArmLength_ReturnValue) == 0x000008, "Member 'CWBP_Template_AlignCurve_C_ExecuteUbergraph_CWBP_Template_AlignCurve::CallFunc_GetCameraTargetArmLength_ReturnValue' has a wrong offset!");
static_assert(offsetof(CWBP_Template_AlignCurve_C_ExecuteUbergraph_CWBP_Template_AlignCurve, K2Node_Event_CameraWorkBlendState) == 0x00000C, "Member 'CWBP_Template_AlignCurve_C_ExecuteUbergraph_CWBP_Template_AlignCurve::K2Node_Event_CameraWorkBlendState' has a wrong offset!");
static_assert(offsetof(CWBP_Template_AlignCurve_C_ExecuteUbergraph_CWBP_Template_AlignCurve, K2Node_SwitchEnum_CmpSuccess) == 0x00000D, "Member 'CWBP_Template_AlignCurve_C_ExecuteUbergraph_CWBP_Template_AlignCurve::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(CWBP_Template_AlignCurve_C_ExecuteUbergraph_CWBP_Template_AlignCurve, CallFunc_BreakRotator_Roll) == 0x000010, "Member 'CWBP_Template_AlignCurve_C_ExecuteUbergraph_CWBP_Template_AlignCurve::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(CWBP_Template_AlignCurve_C_ExecuteUbergraph_CWBP_Template_AlignCurve, CallFunc_BreakRotator_Pitch) == 0x000014, "Member 'CWBP_Template_AlignCurve_C_ExecuteUbergraph_CWBP_Template_AlignCurve::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(CWBP_Template_AlignCurve_C_ExecuteUbergraph_CWBP_Template_AlignCurve, CallFunc_BreakRotator_Yaw) == 0x000018, "Member 'CWBP_Template_AlignCurve_C_ExecuteUbergraph_CWBP_Template_AlignCurve::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(CWBP_Template_AlignCurve_C_ExecuteUbergraph_CWBP_Template_AlignCurve, CallFunc_GetPlayerController_ReturnValue) == 0x000020, "Member 'CWBP_Template_AlignCurve_C_ExecuteUbergraph_CWBP_Template_AlignCurve::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(CWBP_Template_AlignCurve_C_ExecuteUbergraph_CWBP_Template_AlignCurve, CallFunc_MakeRotator_ReturnValue) == 0x000028, "Member 'CWBP_Template_AlignCurve_C_ExecuteUbergraph_CWBP_Template_AlignCurve::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(CWBP_Template_AlignCurve_C_ExecuteUbergraph_CWBP_Template_AlignCurve, CallFunc_IsValid_ReturnValue) == 0x000034, "Member 'CWBP_Template_AlignCurve_C_ExecuteUbergraph_CWBP_Template_AlignCurve::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(CWBP_Template_AlignCurve_C_ExecuteUbergraph_CWBP_Template_AlignCurve, CallFunc_Add_FloatFloat_ReturnValue) == 0x000038, "Member 'CWBP_Template_AlignCurve_C_ExecuteUbergraph_CWBP_Template_AlignCurve::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(CWBP_Template_AlignCurve_C_ExecuteUbergraph_CWBP_Template_AlignCurve, CallFunc_GreaterGreater_VectorRotator_ReturnValue) == 0x00003C, "Member 'CWBP_Template_AlignCurve_C_ExecuteUbergraph_CWBP_Template_AlignCurve::CallFunc_GreaterGreater_VectorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(CWBP_Template_AlignCurve_C_ExecuteUbergraph_CWBP_Template_AlignCurve, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000048, "Member 'CWBP_Template_AlignCurve_C_ExecuteUbergraph_CWBP_Template_AlignCurve::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(CWBP_Template_AlignCurve_C_ExecuteUbergraph_CWBP_Template_AlignCurve, CallFunc_CalculateCameraLocationFromPC_ReturnValue) == 0x00004C, "Member 'CWBP_Template_AlignCurve_C_ExecuteUbergraph_CWBP_Template_AlignCurve::CallFunc_CalculateCameraLocationFromPC_ReturnValue' has a wrong offset!");
static_assert(offsetof(CWBP_Template_AlignCurve_C_ExecuteUbergraph_CWBP_Template_AlignCurve, K2Node_MakeStruct_LCameraWorkViewInfo) == 0x000058, "Member 'CWBP_Template_AlignCurve_C_ExecuteUbergraph_CWBP_Template_AlignCurve::K2Node_MakeStruct_LCameraWorkViewInfo' has a wrong offset!");
static_assert(offsetof(CWBP_Template_AlignCurve_C_ExecuteUbergraph_CWBP_Template_AlignCurve, CallFunc_Add_VectorVector_ReturnValue) == 0x000074, "Member 'CWBP_Template_AlignCurve_C_ExecuteUbergraph_CWBP_Template_AlignCurve::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(CWBP_Template_AlignCurve_C_ExecuteUbergraph_CWBP_Template_AlignCurve, CallFunc_GetCameraCharacter_ReturnValue) == 0x000080, "Member 'CWBP_Template_AlignCurve_C_ExecuteUbergraph_CWBP_Template_AlignCurve::CallFunc_GetCameraCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(CWBP_Template_AlignCurve_C_ExecuteUbergraph_CWBP_Template_AlignCurve, CallFunc_GetCameraManager_ReturnValue) == 0x000088, "Member 'CWBP_Template_AlignCurve_C_ExecuteUbergraph_CWBP_Template_AlignCurve::CallFunc_GetCameraManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(CWBP_Template_AlignCurve_C_ExecuteUbergraph_CWBP_Template_AlignCurve, K2Node_MakeArray_Array) == 0x000090, "Member 'CWBP_Template_AlignCurve_C_ExecuteUbergraph_CWBP_Template_AlignCurve::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(CWBP_Template_AlignCurve_C_ExecuteUbergraph_CWBP_Template_AlignCurve, CallFunc_GetCameraLocation_ReturnValue) == 0x0000A0, "Member 'CWBP_Template_AlignCurve_C_ExecuteUbergraph_CWBP_Template_AlignCurve::CallFunc_GetCameraLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(CWBP_Template_AlignCurve_C_ExecuteUbergraph_CWBP_Template_AlignCurve, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0000AC, "Member 'CWBP_Template_AlignCurve_C_ExecuteUbergraph_CWBP_Template_AlignCurve::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(CWBP_Template_AlignCurve_C_ExecuteUbergraph_CWBP_Template_AlignCurve, CallFunc_SphereTraceSingle_OutHit) == 0x0000B8, "Member 'CWBP_Template_AlignCurve_C_ExecuteUbergraph_CWBP_Template_AlignCurve::CallFunc_SphereTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(CWBP_Template_AlignCurve_C_ExecuteUbergraph_CWBP_Template_AlignCurve, CallFunc_SphereTraceSingle_ReturnValue) == 0x000140, "Member 'CWBP_Template_AlignCurve_C_ExecuteUbergraph_CWBP_Template_AlignCurve::CallFunc_SphereTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(CWBP_Template_AlignCurve_C_ExecuteUbergraph_CWBP_Template_AlignCurve, CallFunc_BreakHitResult_bBlockingHit) == 0x000141, "Member 'CWBP_Template_AlignCurve_C_ExecuteUbergraph_CWBP_Template_AlignCurve::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(CWBP_Template_AlignCurve_C_ExecuteUbergraph_CWBP_Template_AlignCurve, CallFunc_BreakHitResult_bInitialOverlap) == 0x000142, "Member 'CWBP_Template_AlignCurve_C_ExecuteUbergraph_CWBP_Template_AlignCurve::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(CWBP_Template_AlignCurve_C_ExecuteUbergraph_CWBP_Template_AlignCurve, CallFunc_BreakHitResult_Time) == 0x000144, "Member 'CWBP_Template_AlignCurve_C_ExecuteUbergraph_CWBP_Template_AlignCurve::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(CWBP_Template_AlignCurve_C_ExecuteUbergraph_CWBP_Template_AlignCurve, CallFunc_BreakHitResult_Distance) == 0x000148, "Member 'CWBP_Template_AlignCurve_C_ExecuteUbergraph_CWBP_Template_AlignCurve::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(CWBP_Template_AlignCurve_C_ExecuteUbergraph_CWBP_Template_AlignCurve, CallFunc_BreakHitResult_Location) == 0x00014C, "Member 'CWBP_Template_AlignCurve_C_ExecuteUbergraph_CWBP_Template_AlignCurve::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(CWBP_Template_AlignCurve_C_ExecuteUbergraph_CWBP_Template_AlignCurve, CallFunc_BreakHitResult_ImpactPoint) == 0x000158, "Member 'CWBP_Template_AlignCurve_C_ExecuteUbergraph_CWBP_Template_AlignCurve::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(CWBP_Template_AlignCurve_C_ExecuteUbergraph_CWBP_Template_AlignCurve, CallFunc_BreakHitResult_Normal) == 0x000164, "Member 'CWBP_Template_AlignCurve_C_ExecuteUbergraph_CWBP_Template_AlignCurve::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(CWBP_Template_AlignCurve_C_ExecuteUbergraph_CWBP_Template_AlignCurve, CallFunc_BreakHitResult_ImpactNormal) == 0x000170, "Member 'CWBP_Template_AlignCurve_C_ExecuteUbergraph_CWBP_Template_AlignCurve::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(CWBP_Template_AlignCurve_C_ExecuteUbergraph_CWBP_Template_AlignCurve, CallFunc_BreakHitResult_PhysMat) == 0x000180, "Member 'CWBP_Template_AlignCurve_C_ExecuteUbergraph_CWBP_Template_AlignCurve::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(CWBP_Template_AlignCurve_C_ExecuteUbergraph_CWBP_Template_AlignCurve, CallFunc_BreakHitResult_HitActor) == 0x000188, "Member 'CWBP_Template_AlignCurve_C_ExecuteUbergraph_CWBP_Template_AlignCurve::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(CWBP_Template_AlignCurve_C_ExecuteUbergraph_CWBP_Template_AlignCurve, CallFunc_BreakHitResult_HitComponent) == 0x000190, "Member 'CWBP_Template_AlignCurve_C_ExecuteUbergraph_CWBP_Template_AlignCurve::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(CWBP_Template_AlignCurve_C_ExecuteUbergraph_CWBP_Template_AlignCurve, CallFunc_BreakHitResult_HitBoneName) == 0x000198, "Member 'CWBP_Template_AlignCurve_C_ExecuteUbergraph_CWBP_Template_AlignCurve::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(CWBP_Template_AlignCurve_C_ExecuteUbergraph_CWBP_Template_AlignCurve, CallFunc_BreakHitResult_HitItem) == 0x0001A0, "Member 'CWBP_Template_AlignCurve_C_ExecuteUbergraph_CWBP_Template_AlignCurve::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(CWBP_Template_AlignCurve_C_ExecuteUbergraph_CWBP_Template_AlignCurve, CallFunc_BreakHitResult_ElementIndex) == 0x0001A4, "Member 'CWBP_Template_AlignCurve_C_ExecuteUbergraph_CWBP_Template_AlignCurve::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(CWBP_Template_AlignCurve_C_ExecuteUbergraph_CWBP_Template_AlignCurve, CallFunc_BreakHitResult_FaceIndex) == 0x0001A8, "Member 'CWBP_Template_AlignCurve_C_ExecuteUbergraph_CWBP_Template_AlignCurve::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(CWBP_Template_AlignCurve_C_ExecuteUbergraph_CWBP_Template_AlignCurve, CallFunc_BreakHitResult_TraceStart) == 0x0001AC, "Member 'CWBP_Template_AlignCurve_C_ExecuteUbergraph_CWBP_Template_AlignCurve::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(CWBP_Template_AlignCurve_C_ExecuteUbergraph_CWBP_Template_AlignCurve, CallFunc_BreakHitResult_TraceEnd) == 0x0001B8, "Member 'CWBP_Template_AlignCurve_C_ExecuteUbergraph_CWBP_Template_AlignCurve::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(CWBP_Template_AlignCurve_C_ExecuteUbergraph_CWBP_Template_AlignCurve, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x0001C4, "Member 'CWBP_Template_AlignCurve_C_ExecuteUbergraph_CWBP_Template_AlignCurve::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(CWBP_Template_AlignCurve_C_ExecuteUbergraph_CWBP_Template_AlignCurve, CallFunc_VInterpTo_ReturnValue) == 0x0001C8, "Member 'CWBP_Template_AlignCurve_C_ExecuteUbergraph_CWBP_Template_AlignCurve::CallFunc_VInterpTo_ReturnValue' has a wrong offset!");

// Function CWBP_Template_AlignCurve.CWBP_Template_AlignCurve_C.OnChangeBlend
// 0x0001 (0x0001 - 0x0000)
struct CWBP_Template_AlignCurve_C_OnChangeBlend final
{
public:
	ELCameraWorkBlendState                        CameraWorkBlendState;                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CWBP_Template_AlignCurve_C_OnChangeBlend) == 0x000001, "Wrong alignment on CWBP_Template_AlignCurve_C_OnChangeBlend");
static_assert(sizeof(CWBP_Template_AlignCurve_C_OnChangeBlend) == 0x000001, "Wrong size on CWBP_Template_AlignCurve_C_OnChangeBlend");
static_assert(offsetof(CWBP_Template_AlignCurve_C_OnChangeBlend, CameraWorkBlendState) == 0x000000, "Member 'CWBP_Template_AlignCurve_C_OnChangeBlend::CameraWorkBlendState' has a wrong offset!");

// Function CWBP_Template_AlignCurve.CWBP_Template_AlignCurve_C.UpdateTargetView
// 0x0004 (0x0004 - 0x0000)
struct CWBP_Template_AlignCurve_C_UpdateTargetView final
{
public:
	float                                         DeltaTime;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CWBP_Template_AlignCurve_C_UpdateTargetView) == 0x000004, "Wrong alignment on CWBP_Template_AlignCurve_C_UpdateTargetView");
static_assert(sizeof(CWBP_Template_AlignCurve_C_UpdateTargetView) == 0x000004, "Wrong size on CWBP_Template_AlignCurve_C_UpdateTargetView");
static_assert(offsetof(CWBP_Template_AlignCurve_C_UpdateTargetView, DeltaTime) == 0x000000, "Member 'CWBP_Template_AlignCurve_C_UpdateTargetView::DeltaTime' has a wrong offset!");

}


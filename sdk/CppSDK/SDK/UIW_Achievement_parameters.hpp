#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UIW_Achievement

#include "Basic.hpp"

#include "ProjectP_structs.hpp"
#include "ProjectPContentInfo_structs.hpp"
#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function UIW_Achievement.UIW_Achievement_C.ExecuteUbergraph_UIW_Achievement
// 0x0060 (0x0060 - 0x0000)
struct UIW_Achievement_C_ExecuteUbergraph_UIW_Achievement final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUIW_Btn_Key_C*                         K2Node_ComponentBoundEvent_BtnKey;                 // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                K2Node_ComponentBoundEvent_Item_1;                 // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bIsHovered;             // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UWidget*>                        K2Node_MakeArray_Array;                            // 0x0020(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UObject*                                K2Node_ComponentBoundEvent_Item;                   // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bIsSelected;            // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUIW_Main_C*                            CallFunc_GetMainWidget_MainWidget;                 // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUIBP_ListData_Achievement_C*           K2Node_DynamicCast_AsUIBP_List_Data_Achievement;   // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_AchievementCodeName;            // 0x0054(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UIW_Achievement_C_ExecuteUbergraph_UIW_Achievement) == 0x000008, "Wrong alignment on UIW_Achievement_C_ExecuteUbergraph_UIW_Achievement");
static_assert(sizeof(UIW_Achievement_C_ExecuteUbergraph_UIW_Achievement) == 0x000060, "Wrong size on UIW_Achievement_C_ExecuteUbergraph_UIW_Achievement");
static_assert(offsetof(UIW_Achievement_C_ExecuteUbergraph_UIW_Achievement, EntryPoint) == 0x000000, "Member 'UIW_Achievement_C_ExecuteUbergraph_UIW_Achievement::EntryPoint' has a wrong offset!");
static_assert(offsetof(UIW_Achievement_C_ExecuteUbergraph_UIW_Achievement, K2Node_ComponentBoundEvent_BtnKey) == 0x000008, "Member 'UIW_Achievement_C_ExecuteUbergraph_UIW_Achievement::K2Node_ComponentBoundEvent_BtnKey' has a wrong offset!");
static_assert(offsetof(UIW_Achievement_C_ExecuteUbergraph_UIW_Achievement, K2Node_ComponentBoundEvent_Item_1) == 0x000010, "Member 'UIW_Achievement_C_ExecuteUbergraph_UIW_Achievement::K2Node_ComponentBoundEvent_Item_1' has a wrong offset!");
static_assert(offsetof(UIW_Achievement_C_ExecuteUbergraph_UIW_Achievement, K2Node_ComponentBoundEvent_bIsHovered) == 0x000018, "Member 'UIW_Achievement_C_ExecuteUbergraph_UIW_Achievement::K2Node_ComponentBoundEvent_bIsHovered' has a wrong offset!");
static_assert(offsetof(UIW_Achievement_C_ExecuteUbergraph_UIW_Achievement, K2Node_MakeArray_Array) == 0x000020, "Member 'UIW_Achievement_C_ExecuteUbergraph_UIW_Achievement::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(UIW_Achievement_C_ExecuteUbergraph_UIW_Achievement, K2Node_ComponentBoundEvent_Item) == 0x000030, "Member 'UIW_Achievement_C_ExecuteUbergraph_UIW_Achievement::K2Node_ComponentBoundEvent_Item' has a wrong offset!");
static_assert(offsetof(UIW_Achievement_C_ExecuteUbergraph_UIW_Achievement, K2Node_ComponentBoundEvent_bIsSelected) == 0x000038, "Member 'UIW_Achievement_C_ExecuteUbergraph_UIW_Achievement::K2Node_ComponentBoundEvent_bIsSelected' has a wrong offset!");
static_assert(offsetof(UIW_Achievement_C_ExecuteUbergraph_UIW_Achievement, CallFunc_GetMainWidget_MainWidget) == 0x000040, "Member 'UIW_Achievement_C_ExecuteUbergraph_UIW_Achievement::CallFunc_GetMainWidget_MainWidget' has a wrong offset!");
static_assert(offsetof(UIW_Achievement_C_ExecuteUbergraph_UIW_Achievement, K2Node_DynamicCast_AsUIBP_List_Data_Achievement) == 0x000048, "Member 'UIW_Achievement_C_ExecuteUbergraph_UIW_Achievement::K2Node_DynamicCast_AsUIBP_List_Data_Achievement' has a wrong offset!");
static_assert(offsetof(UIW_Achievement_C_ExecuteUbergraph_UIW_Achievement, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'UIW_Achievement_C_ExecuteUbergraph_UIW_Achievement::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(UIW_Achievement_C_ExecuteUbergraph_UIW_Achievement, K2Node_CustomEvent_AchievementCodeName) == 0x000054, "Member 'UIW_Achievement_C_ExecuteUbergraph_UIW_Achievement::K2Node_CustomEvent_AchievementCodeName' has a wrong offset!");

// Function UIW_Achievement.UIW_Achievement_C.OnUpdateDetail
// 0x0008 (0x0008 - 0x0000)
struct UIW_Achievement_C_OnUpdateDetail final
{
public:
	class FName                                   AchievementCodeName;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UIW_Achievement_C_OnUpdateDetail) == 0x000004, "Wrong alignment on UIW_Achievement_C_OnUpdateDetail");
static_assert(sizeof(UIW_Achievement_C_OnUpdateDetail) == 0x000008, "Wrong size on UIW_Achievement_C_OnUpdateDetail");
static_assert(offsetof(UIW_Achievement_C_OnUpdateDetail, AchievementCodeName) == 0x000000, "Member 'UIW_Achievement_C_OnUpdateDetail::AchievementCodeName' has a wrong offset!");

// Function UIW_Achievement.UIW_Achievement_C.BndEvt__UIW_Achievement_List_K2Node_ComponentBoundEvent_2_OnListItemSelectionChangedDynamic__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct UIW_Achievement_C_BndEvt__UIW_Achievement_List_K2Node_ComponentBoundEvent_2_OnListItemSelectionChangedDynamic__DelegateSignature final
{
public:
	class UObject*                                Item;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsSelected;                                       // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UIW_Achievement_C_BndEvt__UIW_Achievement_List_K2Node_ComponentBoundEvent_2_OnListItemSelectionChangedDynamic__DelegateSignature) == 0x000008, "Wrong alignment on UIW_Achievement_C_BndEvt__UIW_Achievement_List_K2Node_ComponentBoundEvent_2_OnListItemSelectionChangedDynamic__DelegateSignature");
static_assert(sizeof(UIW_Achievement_C_BndEvt__UIW_Achievement_List_K2Node_ComponentBoundEvent_2_OnListItemSelectionChangedDynamic__DelegateSignature) == 0x000010, "Wrong size on UIW_Achievement_C_BndEvt__UIW_Achievement_List_K2Node_ComponentBoundEvent_2_OnListItemSelectionChangedDynamic__DelegateSignature");
static_assert(offsetof(UIW_Achievement_C_BndEvt__UIW_Achievement_List_K2Node_ComponentBoundEvent_2_OnListItemSelectionChangedDynamic__DelegateSignature, Item) == 0x000000, "Member 'UIW_Achievement_C_BndEvt__UIW_Achievement_List_K2Node_ComponentBoundEvent_2_OnListItemSelectionChangedDynamic__DelegateSignature::Item' has a wrong offset!");
static_assert(offsetof(UIW_Achievement_C_BndEvt__UIW_Achievement_List_K2Node_ComponentBoundEvent_2_OnListItemSelectionChangedDynamic__DelegateSignature, bIsSelected) == 0x000008, "Member 'UIW_Achievement_C_BndEvt__UIW_Achievement_List_K2Node_ComponentBoundEvent_2_OnListItemSelectionChangedDynamic__DelegateSignature::bIsSelected' has a wrong offset!");

// Function UIW_Achievement.UIW_Achievement_C.BndEvt__List_K2Node_ComponentBoundEvent_6_OnItemIsHoveredChangedDynamic__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct UIW_Achievement_C_BndEvt__List_K2Node_ComponentBoundEvent_6_OnItemIsHoveredChangedDynamic__DelegateSignature final
{
public:
	class UObject*                                Item;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsHovered;                                        // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UIW_Achievement_C_BndEvt__List_K2Node_ComponentBoundEvent_6_OnItemIsHoveredChangedDynamic__DelegateSignature) == 0x000008, "Wrong alignment on UIW_Achievement_C_BndEvt__List_K2Node_ComponentBoundEvent_6_OnItemIsHoveredChangedDynamic__DelegateSignature");
static_assert(sizeof(UIW_Achievement_C_BndEvt__List_K2Node_ComponentBoundEvent_6_OnItemIsHoveredChangedDynamic__DelegateSignature) == 0x000010, "Wrong size on UIW_Achievement_C_BndEvt__List_K2Node_ComponentBoundEvent_6_OnItemIsHoveredChangedDynamic__DelegateSignature");
static_assert(offsetof(UIW_Achievement_C_BndEvt__List_K2Node_ComponentBoundEvent_6_OnItemIsHoveredChangedDynamic__DelegateSignature, Item) == 0x000000, "Member 'UIW_Achievement_C_BndEvt__List_K2Node_ComponentBoundEvent_6_OnItemIsHoveredChangedDynamic__DelegateSignature::Item' has a wrong offset!");
static_assert(offsetof(UIW_Achievement_C_BndEvt__List_K2Node_ComponentBoundEvent_6_OnItemIsHoveredChangedDynamic__DelegateSignature, bIsHovered) == 0x000008, "Member 'UIW_Achievement_C_BndEvt__List_K2Node_ComponentBoundEvent_6_OnItemIsHoveredChangedDynamic__DelegateSignature::bIsHovered' has a wrong offset!");

// Function UIW_Achievement.UIW_Achievement_C.BndEvt__Btn_Back_K2Node_ComponentBoundEvent_1_OnActive__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct UIW_Achievement_C_BndEvt__Btn_Back_K2Node_ComponentBoundEvent_1_OnActive__DelegateSignature final
{
public:
	class UUIW_Btn_Key_C*                         BtnKey;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UIW_Achievement_C_BndEvt__Btn_Back_K2Node_ComponentBoundEvent_1_OnActive__DelegateSignature) == 0x000008, "Wrong alignment on UIW_Achievement_C_BndEvt__Btn_Back_K2Node_ComponentBoundEvent_1_OnActive__DelegateSignature");
static_assert(sizeof(UIW_Achievement_C_BndEvt__Btn_Back_K2Node_ComponentBoundEvent_1_OnActive__DelegateSignature) == 0x000008, "Wrong size on UIW_Achievement_C_BndEvt__Btn_Back_K2Node_ComponentBoundEvent_1_OnActive__DelegateSignature");
static_assert(offsetof(UIW_Achievement_C_BndEvt__Btn_Back_K2Node_ComponentBoundEvent_1_OnActive__DelegateSignature, BtnKey) == 0x000000, "Member 'UIW_Achievement_C_BndEvt__Btn_Back_K2Node_ComponentBoundEvent_1_OnActive__DelegateSignature::BtnKey' has a wrong offset!");

// Function UIW_Achievement.UIW_Achievement_C.OnReady
// 0x04D0 (0x04D0 - 0x0000)
struct UIW_Achievement_C_OnReady final
{
public:
	struct FScrollBarStyle                        CallFunc_GetScrollBarStyle_ScrollBarStyle;         // 0x0000(0x04D0)()
};
static_assert(alignof(UIW_Achievement_C_OnReady) == 0x000008, "Wrong alignment on UIW_Achievement_C_OnReady");
static_assert(sizeof(UIW_Achievement_C_OnReady) == 0x0004D0, "Wrong size on UIW_Achievement_C_OnReady");
static_assert(offsetof(UIW_Achievement_C_OnReady, CallFunc_GetScrollBarStyle_ScrollBarStyle) == 0x000000, "Member 'UIW_Achievement_C_OnReady::CallFunc_GetScrollBarStyle_ScrollBarStyle' has a wrong offset!");

// Function UIW_Achievement.UIW_Achievement_C.FocusManage
// 0x0220 (0x0220 - 0x0000)
struct UIW_Achievement_C_FocusManage final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0070)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FEventReply                            ReturnValue;                                       // 0x00A8(0x00B8)(Parm, OutParm, ReturnParm)
	struct FEventReply                            CallFunc_FocusManage_ReturnValue;                  // 0x0160(0x00B8)()
	class UObject*                                CallFunc_BP_GetSelectedItem_ReturnValue;           // 0x0218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UIW_Achievement_C_FocusManage) == 0x000008, "Wrong alignment on UIW_Achievement_C_FocusManage");
static_assert(sizeof(UIW_Achievement_C_FocusManage) == 0x000220, "Wrong size on UIW_Achievement_C_FocusManage");
static_assert(offsetof(UIW_Achievement_C_FocusManage, MyGeometry) == 0x000000, "Member 'UIW_Achievement_C_FocusManage::MyGeometry' has a wrong offset!");
static_assert(offsetof(UIW_Achievement_C_FocusManage, MouseEvent) == 0x000038, "Member 'UIW_Achievement_C_FocusManage::MouseEvent' has a wrong offset!");
static_assert(offsetof(UIW_Achievement_C_FocusManage, ReturnValue) == 0x0000A8, "Member 'UIW_Achievement_C_FocusManage::ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Achievement_C_FocusManage, CallFunc_FocusManage_ReturnValue) == 0x000160, "Member 'UIW_Achievement_C_FocusManage::CallFunc_FocusManage_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Achievement_C_FocusManage, CallFunc_BP_GetSelectedItem_ReturnValue) == 0x000218, "Member 'UIW_Achievement_C_FocusManage::CallFunc_BP_GetSelectedItem_ReturnValue' has a wrong offset!");

// Function UIW_Achievement.UIW_Achievement_C.AddEventBinding
// 0x0028 (0x0028 - 0x0000)
struct UIW_Achievement_C_AddEventBinding final
{
public:
	TDelegate<void(class FName AchievementCodeName)> K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(class FName AchievementCodeName)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x0010(0x0010)(ZeroConstructor, NoDestructor)
	class ULAchievementSystem*                    CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UIW_Achievement_C_AddEventBinding) == 0x000008, "Wrong alignment on UIW_Achievement_C_AddEventBinding");
static_assert(sizeof(UIW_Achievement_C_AddEventBinding) == 0x000028, "Wrong size on UIW_Achievement_C_AddEventBinding");
static_assert(offsetof(UIW_Achievement_C_AddEventBinding, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'UIW_Achievement_C_AddEventBinding::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(UIW_Achievement_C_AddEventBinding, K2Node_CreateDelegate_OutputDelegate_1) == 0x000010, "Member 'UIW_Achievement_C_AddEventBinding::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(UIW_Achievement_C_AddEventBinding, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000020, "Member 'UIW_Achievement_C_AddEventBinding::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");

// Function UIW_Achievement.UIW_Achievement_C.ClearEventBinding
// 0x0028 (0x0028 - 0x0000)
struct UIW_Achievement_C_ClearEventBinding final
{
public:
	TDelegate<void(class FName AchievementCodeName)> K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(class FName AchievementCodeName)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x0010(0x0010)(ZeroConstructor, NoDestructor)
	class ULAchievementSystem*                    CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UIW_Achievement_C_ClearEventBinding) == 0x000008, "Wrong alignment on UIW_Achievement_C_ClearEventBinding");
static_assert(sizeof(UIW_Achievement_C_ClearEventBinding) == 0x000028, "Wrong size on UIW_Achievement_C_ClearEventBinding");
static_assert(offsetof(UIW_Achievement_C_ClearEventBinding, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'UIW_Achievement_C_ClearEventBinding::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(UIW_Achievement_C_ClearEventBinding, K2Node_CreateDelegate_OutputDelegate_1) == 0x000010, "Member 'UIW_Achievement_C_ClearEventBinding::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(UIW_Achievement_C_ClearEventBinding, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000020, "Member 'UIW_Achievement_C_ClearEventBinding::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");

// Function UIW_Achievement.UIW_Achievement_C.OnCompleteAchievement
// 0x0008 (0x0008 - 0x0000)
struct UIW_Achievement_C_OnCompleteAchievement final
{
public:
	class FName                                   AchievementCodeName;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UIW_Achievement_C_OnCompleteAchievement) == 0x000004, "Wrong alignment on UIW_Achievement_C_OnCompleteAchievement");
static_assert(sizeof(UIW_Achievement_C_OnCompleteAchievement) == 0x000008, "Wrong size on UIW_Achievement_C_OnCompleteAchievement");
static_assert(offsetof(UIW_Achievement_C_OnCompleteAchievement, AchievementCodeName) == 0x000000, "Member 'UIW_Achievement_C_OnCompleteAchievement::AchievementCodeName' has a wrong offset!");

// Function UIW_Achievement.UIW_Achievement_C.ShowTooltip
// 0x0048 (0x0048 - 0x0000)
struct UIW_Achievement_C_ShowTooltip final
{
public:
	class UUIBP_ListData_Achievement_C*           ItemData;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 LocalLog;                                          // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class ULAchievementSystem*                    CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_MakeAchievementLog_ReturnValue;           // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0030(0x0018)()
};
static_assert(alignof(UIW_Achievement_C_ShowTooltip) == 0x000008, "Wrong alignment on UIW_Achievement_C_ShowTooltip");
static_assert(sizeof(UIW_Achievement_C_ShowTooltip) == 0x000048, "Wrong size on UIW_Achievement_C_ShowTooltip");
static_assert(offsetof(UIW_Achievement_C_ShowTooltip, ItemData) == 0x000000, "Member 'UIW_Achievement_C_ShowTooltip::ItemData' has a wrong offset!");
static_assert(offsetof(UIW_Achievement_C_ShowTooltip, LocalLog) == 0x000008, "Member 'UIW_Achievement_C_ShowTooltip::LocalLog' has a wrong offset!");
static_assert(offsetof(UIW_Achievement_C_ShowTooltip, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000018, "Member 'UIW_Achievement_C_ShowTooltip::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Achievement_C_ShowTooltip, CallFunc_MakeAchievementLog_ReturnValue) == 0x000020, "Member 'UIW_Achievement_C_ShowTooltip::CallFunc_MakeAchievementLog_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Achievement_C_ShowTooltip, CallFunc_Conv_StringToText_ReturnValue) == 0x000030, "Member 'UIW_Achievement_C_ShowTooltip::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");

// Function UIW_Achievement.UIW_Achievement_C.RefreshListData
// 0x00C8 (0x00C8 - 0x0000)
struct UIW_Achievement_C_RefreshListData final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ULAchievementSystem*                    CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FLAchievementHierarchyInfo>     CallFunc_Map_Values_Values;                        // 0x0018(0x0010)(ReferenceParm)
	struct FLAchievementHierarchyInfo             CallFunc_Array_Get_Item;                           // 0x0028(0x0078)()
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ELAchieveGradeType                            CallFunc_GetAchieveGrade_ReturnValue;              // 0x00A5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x00A6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A7[0x1];                                       // 0x00A7(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class UUIBP_ListData_Achievement_C*           CallFunc_SpawnObject_ReturnValue;                  // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_3;                  // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_4;                  // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UIW_Achievement_C_RefreshListData) == 0x000008, "Wrong alignment on UIW_Achievement_C_RefreshListData");
static_assert(sizeof(UIW_Achievement_C_RefreshListData) == 0x0000C8, "Wrong size on UIW_Achievement_C_RefreshListData");
static_assert(offsetof(UIW_Achievement_C_RefreshListData, Temp_int_Array_Index_Variable) == 0x000000, "Member 'UIW_Achievement_C_RefreshListData::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(UIW_Achievement_C_RefreshListData, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'UIW_Achievement_C_RefreshListData::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(UIW_Achievement_C_RefreshListData, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'UIW_Achievement_C_RefreshListData::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Achievement_C_RefreshListData, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000010, "Member 'UIW_Achievement_C_RefreshListData::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Achievement_C_RefreshListData, CallFunc_Map_Values_Values) == 0x000018, "Member 'UIW_Achievement_C_RefreshListData::CallFunc_Map_Values_Values' has a wrong offset!");
static_assert(offsetof(UIW_Achievement_C_RefreshListData, CallFunc_Array_Get_Item) == 0x000028, "Member 'UIW_Achievement_C_RefreshListData::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(UIW_Achievement_C_RefreshListData, CallFunc_Array_Length_ReturnValue) == 0x0000A0, "Member 'UIW_Achievement_C_RefreshListData::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Achievement_C_RefreshListData, CallFunc_Less_IntInt_ReturnValue) == 0x0000A4, "Member 'UIW_Achievement_C_RefreshListData::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Achievement_C_RefreshListData, CallFunc_GetAchieveGrade_ReturnValue) == 0x0000A5, "Member 'UIW_Achievement_C_RefreshListData::CallFunc_GetAchieveGrade_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Achievement_C_RefreshListData, K2Node_SwitchEnum_CmpSuccess) == 0x0000A6, "Member 'UIW_Achievement_C_RefreshListData::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(UIW_Achievement_C_RefreshListData, CallFunc_SpawnObject_ReturnValue) == 0x0000A8, "Member 'UIW_Achievement_C_RefreshListData::CallFunc_SpawnObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Achievement_C_RefreshListData, CallFunc_Array_Add_ReturnValue) == 0x0000B0, "Member 'UIW_Achievement_C_RefreshListData::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Achievement_C_RefreshListData, CallFunc_Array_Add_ReturnValue_1) == 0x0000B4, "Member 'UIW_Achievement_C_RefreshListData::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UIW_Achievement_C_RefreshListData, CallFunc_Array_Add_ReturnValue_2) == 0x0000B8, "Member 'UIW_Achievement_C_RefreshListData::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UIW_Achievement_C_RefreshListData, CallFunc_Array_Add_ReturnValue_3) == 0x0000BC, "Member 'UIW_Achievement_C_RefreshListData::CallFunc_Array_Add_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(UIW_Achievement_C_RefreshListData, CallFunc_Array_Add_ReturnValue_4) == 0x0000C0, "Member 'UIW_Achievement_C_RefreshListData::CallFunc_Array_Add_ReturnValue_4' has a wrong offset!");

// Function UIW_Achievement.UIW_Achievement_C.RefreshDataOne
// 0x00B8 (0x00B8 - 0x0000)
struct UIW_Achievement_C_RefreshDataOne final
{
public:
	class FName                                   AchievementCodeName;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ULAchievementSystem*                    CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLAchievementHierarchyInfo             CallFunc_Map_Find_Value;                           // 0x0028(0x0078)()
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUIBP_ListData_Achievement_C*           CallFunc_Array_Get_Item;                           // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x00B5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00B6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UIW_Achievement_C_RefreshDataOne) == 0x000008, "Wrong alignment on UIW_Achievement_C_RefreshDataOne");
static_assert(sizeof(UIW_Achievement_C_RefreshDataOne) == 0x0000B8, "Wrong size on UIW_Achievement_C_RefreshDataOne");
static_assert(offsetof(UIW_Achievement_C_RefreshDataOne, AchievementCodeName) == 0x000000, "Member 'UIW_Achievement_C_RefreshDataOne::AchievementCodeName' has a wrong offset!");
static_assert(offsetof(UIW_Achievement_C_RefreshDataOne, Temp_bool_True_if_break_was_hit_Variable) == 0x000008, "Member 'UIW_Achievement_C_RefreshDataOne::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(UIW_Achievement_C_RefreshDataOne, Temp_int_Array_Index_Variable) == 0x00000C, "Member 'UIW_Achievement_C_RefreshDataOne::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(UIW_Achievement_C_RefreshDataOne, CallFunc_Not_PreBool_ReturnValue) == 0x000010, "Member 'UIW_Achievement_C_RefreshDataOne::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Achievement_C_RefreshDataOne, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'UIW_Achievement_C_RefreshDataOne::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(UIW_Achievement_C_RefreshDataOne, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'UIW_Achievement_C_RefreshDataOne::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Achievement_C_RefreshDataOne, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000020, "Member 'UIW_Achievement_C_RefreshDataOne::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Achievement_C_RefreshDataOne, CallFunc_Map_Find_Value) == 0x000028, "Member 'UIW_Achievement_C_RefreshDataOne::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(UIW_Achievement_C_RefreshDataOne, CallFunc_Map_Find_ReturnValue) == 0x0000A0, "Member 'UIW_Achievement_C_RefreshDataOne::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Achievement_C_RefreshDataOne, CallFunc_Array_Get_Item) == 0x0000A8, "Member 'UIW_Achievement_C_RefreshDataOne::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(UIW_Achievement_C_RefreshDataOne, CallFunc_Array_Length_ReturnValue) == 0x0000B0, "Member 'UIW_Achievement_C_RefreshDataOne::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Achievement_C_RefreshDataOne, CallFunc_Less_IntInt_ReturnValue) == 0x0000B4, "Member 'UIW_Achievement_C_RefreshDataOne::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Achievement_C_RefreshDataOne, CallFunc_EqualEqual_NameName_ReturnValue) == 0x0000B5, "Member 'UIW_Achievement_C_RefreshDataOne::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Achievement_C_RefreshDataOne, CallFunc_BooleanAND_ReturnValue) == 0x0000B6, "Member 'UIW_Achievement_C_RefreshDataOne::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function UIW_Achievement.UIW_Achievement_C.RefreshCountData
// 0x02B8 (0x02B8 - 0x0000)
struct UIW_Achievement_C_RefreshCountData final
{
public:
	int32                                         Temp_int_Variable;                                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULAchievementSystem*                    CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FLAchievementHierarchyInfo>     CallFunc_Map_Values_Values;                        // 0x0018(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLAchievementHierarchyInfo             CallFunc_Array_Get_Item;                           // 0x0038(0x0078)()
	ELAchieveGradeType                            CallFunc_GetAchieveGrade_ReturnValue;              // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B1[0x3];                                       // 0x00B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetGamerScore_ReturnValue;                // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B9[0x3];                                       // 0x00B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_3;                               // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C4[0x4];                                       // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x00C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x00D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_1;           // 0x00E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x00F8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_2;           // 0x0108(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0118(0x0018)()
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0130(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_3;           // 0x0140(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_4;           // 0x0150(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x0160(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_4;              // 0x0170(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x0180(0x0018)()
	int32                                         Temp_int_Variable_4;                               // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19C[0x4];                                      // 0x019C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_5;           // 0x01A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_5;              // 0x01B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_6;           // 0x01C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_2;          // 0x01D0(0x0018)()
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_6;              // 0x01E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_7;           // 0x01F8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_8;           // 0x0208(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_7;              // 0x0218(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_8;              // 0x0228(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_3;          // 0x0238(0x0018)()
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_9;           // 0x0250(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_9;              // 0x0260(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_4;          // 0x0270(0x0018)()
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0288(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x028C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_5;                               // 0x0290(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x0294(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_5;                 // 0x0298(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_6;                 // 0x029C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_7;                 // 0x02A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_6;                               // 0x02A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_8;                 // 0x02A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_9;                 // 0x02AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_10;                // 0x02B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_7;                               // 0x02B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UIW_Achievement_C_RefreshCountData) == 0x000008, "Wrong alignment on UIW_Achievement_C_RefreshCountData");
static_assert(sizeof(UIW_Achievement_C_RefreshCountData) == 0x0002B8, "Wrong size on UIW_Achievement_C_RefreshCountData");
static_assert(offsetof(UIW_Achievement_C_RefreshCountData, Temp_int_Variable) == 0x000000, "Member 'UIW_Achievement_C_RefreshCountData::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(UIW_Achievement_C_RefreshCountData, Temp_int_Variable_1) == 0x000004, "Member 'UIW_Achievement_C_RefreshCountData::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(UIW_Achievement_C_RefreshCountData, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000008, "Member 'UIW_Achievement_C_RefreshCountData::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Achievement_C_RefreshCountData, Temp_int_Loop_Counter_Variable) == 0x000010, "Member 'UIW_Achievement_C_RefreshCountData::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(UIW_Achievement_C_RefreshCountData, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'UIW_Achievement_C_RefreshCountData::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Achievement_C_RefreshCountData, CallFunc_Map_Values_Values) == 0x000018, "Member 'UIW_Achievement_C_RefreshCountData::CallFunc_Map_Values_Values' has a wrong offset!");
static_assert(offsetof(UIW_Achievement_C_RefreshCountData, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'UIW_Achievement_C_RefreshCountData::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Achievement_C_RefreshCountData, CallFunc_Less_IntInt_ReturnValue) == 0x00002C, "Member 'UIW_Achievement_C_RefreshCountData::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Achievement_C_RefreshCountData, Temp_int_Array_Index_Variable) == 0x000030, "Member 'UIW_Achievement_C_RefreshCountData::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(UIW_Achievement_C_RefreshCountData, Temp_int_Variable_2) == 0x000034, "Member 'UIW_Achievement_C_RefreshCountData::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(UIW_Achievement_C_RefreshCountData, CallFunc_Array_Get_Item) == 0x000038, "Member 'UIW_Achievement_C_RefreshCountData::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(UIW_Achievement_C_RefreshCountData, CallFunc_GetAchieveGrade_ReturnValue) == 0x0000B0, "Member 'UIW_Achievement_C_RefreshCountData::CallFunc_GetAchieveGrade_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Achievement_C_RefreshCountData, CallFunc_GetGamerScore_ReturnValue) == 0x0000B4, "Member 'UIW_Achievement_C_RefreshCountData::CallFunc_GetGamerScore_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Achievement_C_RefreshCountData, K2Node_SwitchEnum_CmpSuccess) == 0x0000B8, "Member 'UIW_Achievement_C_RefreshCountData::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(UIW_Achievement_C_RefreshCountData, Temp_int_Variable_3) == 0x0000BC, "Member 'UIW_Achievement_C_RefreshCountData::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(UIW_Achievement_C_RefreshCountData, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000C0, "Member 'UIW_Achievement_C_RefreshCountData::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UIW_Achievement_C_RefreshCountData, CallFunc_Conv_IntToString_ReturnValue) == 0x0000C8, "Member 'UIW_Achievement_C_RefreshCountData::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Achievement_C_RefreshCountData, CallFunc_Concat_StrStr_ReturnValue) == 0x0000D8, "Member 'UIW_Achievement_C_RefreshCountData::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Achievement_C_RefreshCountData, CallFunc_Conv_IntToString_ReturnValue_1) == 0x0000E8, "Member 'UIW_Achievement_C_RefreshCountData::CallFunc_Conv_IntToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UIW_Achievement_C_RefreshCountData, CallFunc_Concat_StrStr_ReturnValue_1) == 0x0000F8, "Member 'UIW_Achievement_C_RefreshCountData::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UIW_Achievement_C_RefreshCountData, CallFunc_Conv_IntToString_ReturnValue_2) == 0x000108, "Member 'UIW_Achievement_C_RefreshCountData::CallFunc_Conv_IntToString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UIW_Achievement_C_RefreshCountData, CallFunc_Conv_StringToText_ReturnValue) == 0x000118, "Member 'UIW_Achievement_C_RefreshCountData::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Achievement_C_RefreshCountData, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000130, "Member 'UIW_Achievement_C_RefreshCountData::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UIW_Achievement_C_RefreshCountData, CallFunc_Conv_IntToString_ReturnValue_3) == 0x000140, "Member 'UIW_Achievement_C_RefreshCountData::CallFunc_Conv_IntToString_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(UIW_Achievement_C_RefreshCountData, CallFunc_Conv_IntToString_ReturnValue_4) == 0x000150, "Member 'UIW_Achievement_C_RefreshCountData::CallFunc_Conv_IntToString_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(UIW_Achievement_C_RefreshCountData, CallFunc_Concat_StrStr_ReturnValue_3) == 0x000160, "Member 'UIW_Achievement_C_RefreshCountData::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(UIW_Achievement_C_RefreshCountData, CallFunc_Concat_StrStr_ReturnValue_4) == 0x000170, "Member 'UIW_Achievement_C_RefreshCountData::CallFunc_Concat_StrStr_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(UIW_Achievement_C_RefreshCountData, CallFunc_Conv_StringToText_ReturnValue_1) == 0x000180, "Member 'UIW_Achievement_C_RefreshCountData::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UIW_Achievement_C_RefreshCountData, Temp_int_Variable_4) == 0x000198, "Member 'UIW_Achievement_C_RefreshCountData::Temp_int_Variable_4' has a wrong offset!");
static_assert(offsetof(UIW_Achievement_C_RefreshCountData, CallFunc_Conv_IntToString_ReturnValue_5) == 0x0001A0, "Member 'UIW_Achievement_C_RefreshCountData::CallFunc_Conv_IntToString_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(UIW_Achievement_C_RefreshCountData, CallFunc_Concat_StrStr_ReturnValue_5) == 0x0001B0, "Member 'UIW_Achievement_C_RefreshCountData::CallFunc_Concat_StrStr_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(UIW_Achievement_C_RefreshCountData, CallFunc_Conv_IntToString_ReturnValue_6) == 0x0001C0, "Member 'UIW_Achievement_C_RefreshCountData::CallFunc_Conv_IntToString_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(UIW_Achievement_C_RefreshCountData, CallFunc_Conv_StringToText_ReturnValue_2) == 0x0001D0, "Member 'UIW_Achievement_C_RefreshCountData::CallFunc_Conv_StringToText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UIW_Achievement_C_RefreshCountData, CallFunc_Concat_StrStr_ReturnValue_6) == 0x0001E8, "Member 'UIW_Achievement_C_RefreshCountData::CallFunc_Concat_StrStr_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(UIW_Achievement_C_RefreshCountData, CallFunc_Conv_IntToString_ReturnValue_7) == 0x0001F8, "Member 'UIW_Achievement_C_RefreshCountData::CallFunc_Conv_IntToString_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(UIW_Achievement_C_RefreshCountData, CallFunc_Conv_IntToString_ReturnValue_8) == 0x000208, "Member 'UIW_Achievement_C_RefreshCountData::CallFunc_Conv_IntToString_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(UIW_Achievement_C_RefreshCountData, CallFunc_Concat_StrStr_ReturnValue_7) == 0x000218, "Member 'UIW_Achievement_C_RefreshCountData::CallFunc_Concat_StrStr_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(UIW_Achievement_C_RefreshCountData, CallFunc_Concat_StrStr_ReturnValue_8) == 0x000228, "Member 'UIW_Achievement_C_RefreshCountData::CallFunc_Concat_StrStr_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(UIW_Achievement_C_RefreshCountData, CallFunc_Conv_StringToText_ReturnValue_3) == 0x000238, "Member 'UIW_Achievement_C_RefreshCountData::CallFunc_Conv_StringToText_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(UIW_Achievement_C_RefreshCountData, CallFunc_Conv_IntToString_ReturnValue_9) == 0x000250, "Member 'UIW_Achievement_C_RefreshCountData::CallFunc_Conv_IntToString_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(UIW_Achievement_C_RefreshCountData, CallFunc_Concat_StrStr_ReturnValue_9) == 0x000260, "Member 'UIW_Achievement_C_RefreshCountData::CallFunc_Concat_StrStr_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(UIW_Achievement_C_RefreshCountData, CallFunc_Conv_StringToText_ReturnValue_4) == 0x000270, "Member 'UIW_Achievement_C_RefreshCountData::CallFunc_Conv_StringToText_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(UIW_Achievement_C_RefreshCountData, CallFunc_Add_IntInt_ReturnValue_2) == 0x000288, "Member 'UIW_Achievement_C_RefreshCountData::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UIW_Achievement_C_RefreshCountData, CallFunc_Add_IntInt_ReturnValue_3) == 0x00028C, "Member 'UIW_Achievement_C_RefreshCountData::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(UIW_Achievement_C_RefreshCountData, Temp_int_Variable_5) == 0x000290, "Member 'UIW_Achievement_C_RefreshCountData::Temp_int_Variable_5' has a wrong offset!");
static_assert(offsetof(UIW_Achievement_C_RefreshCountData, CallFunc_Add_IntInt_ReturnValue_4) == 0x000294, "Member 'UIW_Achievement_C_RefreshCountData::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(UIW_Achievement_C_RefreshCountData, CallFunc_Add_IntInt_ReturnValue_5) == 0x000298, "Member 'UIW_Achievement_C_RefreshCountData::CallFunc_Add_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(UIW_Achievement_C_RefreshCountData, CallFunc_Add_IntInt_ReturnValue_6) == 0x00029C, "Member 'UIW_Achievement_C_RefreshCountData::CallFunc_Add_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(UIW_Achievement_C_RefreshCountData, CallFunc_Add_IntInt_ReturnValue_7) == 0x0002A0, "Member 'UIW_Achievement_C_RefreshCountData::CallFunc_Add_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(UIW_Achievement_C_RefreshCountData, Temp_int_Variable_6) == 0x0002A4, "Member 'UIW_Achievement_C_RefreshCountData::Temp_int_Variable_6' has a wrong offset!");
static_assert(offsetof(UIW_Achievement_C_RefreshCountData, CallFunc_Add_IntInt_ReturnValue_8) == 0x0002A8, "Member 'UIW_Achievement_C_RefreshCountData::CallFunc_Add_IntInt_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(UIW_Achievement_C_RefreshCountData, CallFunc_Add_IntInt_ReturnValue_9) == 0x0002AC, "Member 'UIW_Achievement_C_RefreshCountData::CallFunc_Add_IntInt_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(UIW_Achievement_C_RefreshCountData, CallFunc_Add_IntInt_ReturnValue_10) == 0x0002B0, "Member 'UIW_Achievement_C_RefreshCountData::CallFunc_Add_IntInt_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(UIW_Achievement_C_RefreshCountData, Temp_int_Variable_7) == 0x0002B4, "Member 'UIW_Achievement_C_RefreshCountData::Temp_int_Variable_7' has a wrong offset!");

}


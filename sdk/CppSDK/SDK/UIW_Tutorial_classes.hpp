#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UIW_Tutorial

#include "Basic.hpp"

#include "ProjectP_classes.hpp"
#include "Engine_structs.hpp"
#include "ProjectPContentInfo_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass UIW_Tutorial.UIW_Tutorial_C
// 0x0098 (0x0340 - 0x02A8)
class UUIW_Tutorial_C final : public ULWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02A8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Ani_PageChange;                                    // 0x02B0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Ani_Construct;                                     // 0x02B8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UUIW_Btn_Arrow_C*                       Button_L;                                          // 0x02C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUIW_Btn_Arrow_C*                       Button_R;                                          // 0x02C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Img;                                               // 0x02D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUIBP_LRichKeyTextBlock_C*              Text_Info;                                         // 0x02D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Text_Page;                                         // 0x02E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Text_Title;                                        // 0x02E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	bool                                          IsInit;                                            // 0x02F0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F1[0x3];                                      // 0x02F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CodeName;                                          // 0x02F4(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CurrentPageArrayIndex;                             // 0x02FC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NextPage;                                          // 0x0300(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MaxPage;                                           // 0x0304(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUIW_Window_C*                          ParentWindow;                                      // 0x0308(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class UUIW_Btn_Key_C*                         Btn_Prev;                                          // 0x0310(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class UUIW_Btn_Key_C*                         Btn_Next;                                          // 0x0318(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class UUIW_Btn_Key_C*                         Btn_Close;                                         // 0x0320(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	TArray<struct FTutorialInfoPtr>               TutorialInfoArr;                                   // 0x0328(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	int32                                         TutorialMaxStep;                                   // 0x0338(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_UIW_Tutorial(int32 EntryPoint);
	void Destruct();
	void Construct();
	void OnMiddleOfTransition();
	void SetCodeName(class FName CodeName_0);
	void OnReleasePrev();
	void OnReleaseNext();
	void SetPage();
	void PreparePageData();
	struct FEventReply OnMouseWheel(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);
	void IsLastPage(bool* IsLastPage_0);
	void SetPrevBtnVisibility(ESlateVisibility NewParam);
	void SetNextBtnVisibility(ESlateVisibility NewParam);
	void SetCloseBtnVisibility(ESlateVisibility NewParam);
	void SequenceEvent__ENTRYPOINTUIW_Tutorial_0();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"UIW_Tutorial_C">();
	}
	static class UUIW_Tutorial_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUIW_Tutorial_C>();
	}
};
static_assert(alignof(UUIW_Tutorial_C) == 0x000008, "Wrong alignment on UUIW_Tutorial_C");
static_assert(sizeof(UUIW_Tutorial_C) == 0x000340, "Wrong size on UUIW_Tutorial_C");
static_assert(offsetof(UUIW_Tutorial_C, UberGraphFrame) == 0x0002A8, "Member 'UUIW_Tutorial_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UUIW_Tutorial_C, Ani_PageChange) == 0x0002B0, "Member 'UUIW_Tutorial_C::Ani_PageChange' has a wrong offset!");
static_assert(offsetof(UUIW_Tutorial_C, Ani_Construct) == 0x0002B8, "Member 'UUIW_Tutorial_C::Ani_Construct' has a wrong offset!");
static_assert(offsetof(UUIW_Tutorial_C, Button_L) == 0x0002C0, "Member 'UUIW_Tutorial_C::Button_L' has a wrong offset!");
static_assert(offsetof(UUIW_Tutorial_C, Button_R) == 0x0002C8, "Member 'UUIW_Tutorial_C::Button_R' has a wrong offset!");
static_assert(offsetof(UUIW_Tutorial_C, Img) == 0x0002D0, "Member 'UUIW_Tutorial_C::Img' has a wrong offset!");
static_assert(offsetof(UUIW_Tutorial_C, Text_Info) == 0x0002D8, "Member 'UUIW_Tutorial_C::Text_Info' has a wrong offset!");
static_assert(offsetof(UUIW_Tutorial_C, Text_Page) == 0x0002E0, "Member 'UUIW_Tutorial_C::Text_Page' has a wrong offset!");
static_assert(offsetof(UUIW_Tutorial_C, Text_Title) == 0x0002E8, "Member 'UUIW_Tutorial_C::Text_Title' has a wrong offset!");
static_assert(offsetof(UUIW_Tutorial_C, IsInit) == 0x0002F0, "Member 'UUIW_Tutorial_C::IsInit' has a wrong offset!");
static_assert(offsetof(UUIW_Tutorial_C, CodeName) == 0x0002F4, "Member 'UUIW_Tutorial_C::CodeName' has a wrong offset!");
static_assert(offsetof(UUIW_Tutorial_C, CurrentPageArrayIndex) == 0x0002FC, "Member 'UUIW_Tutorial_C::CurrentPageArrayIndex' has a wrong offset!");
static_assert(offsetof(UUIW_Tutorial_C, NextPage) == 0x000300, "Member 'UUIW_Tutorial_C::NextPage' has a wrong offset!");
static_assert(offsetof(UUIW_Tutorial_C, MaxPage) == 0x000304, "Member 'UUIW_Tutorial_C::MaxPage' has a wrong offset!");
static_assert(offsetof(UUIW_Tutorial_C, ParentWindow) == 0x000308, "Member 'UUIW_Tutorial_C::ParentWindow' has a wrong offset!");
static_assert(offsetof(UUIW_Tutorial_C, Btn_Prev) == 0x000310, "Member 'UUIW_Tutorial_C::Btn_Prev' has a wrong offset!");
static_assert(offsetof(UUIW_Tutorial_C, Btn_Next) == 0x000318, "Member 'UUIW_Tutorial_C::Btn_Next' has a wrong offset!");
static_assert(offsetof(UUIW_Tutorial_C, Btn_Close) == 0x000320, "Member 'UUIW_Tutorial_C::Btn_Close' has a wrong offset!");
static_assert(offsetof(UUIW_Tutorial_C, TutorialInfoArr) == 0x000328, "Member 'UUIW_Tutorial_C::TutorialInfoArr' has a wrong offset!");
static_assert(offsetof(UUIW_Tutorial_C, TutorialMaxStep) == 0x000338, "Member 'UUIW_Tutorial_C::TutorialMaxStep' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Action_SlaveArm_FlameThrower

#include "Basic.hpp"

#include "ProjectP_structs.hpp"
#include "Engine_structs.hpp"
#include "BP_Action_SlaveArm_classes.hpp"
#include "ProjectPContentInfo_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Action_SlaveArm_FlameThrower.BP_Action_SlaveArm_FlameThrower_C
// 0x0038 (0x02C8 - 0x0290)
class UBP_Action_SlaveArm_FlameThrower_C final : public UBP_Action_SlaveArm_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_Action_SlaveArm_FlameThrower_C;  // 0x0290(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	float                                         FlameThrower_ThrowDuration;                        // 0x0298(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29C[0x4];                                      // 0x029C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           FlameThrower_Timer_ThrowDuration;                  // 0x02A0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          FireState_MultyplyDamage;                          // 0x02A8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          EnableFirstHit;                                    // 0x02A9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2AA[0x2];                                      // 0x02AA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Interval;                                          // 0x02AC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MoveAxisUpperLimit;                                // 0x02B0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Lv3_Child_Spawn_Interval;                          // 0x02B4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           Lv3_Child_Spawn_Timer;                             // 0x02B8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          EnableFireBoom;                                    // 0x02C0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          CachedBoomReadyState;                              // 0x02C1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_BP_Action_SlaveArm_FlameThrower(int32 EntryPoint);
	void OnTick(float DeltaTime);
	void OnStart();
	void OnFlameThrowerDurationOver();
	void Spawn_Lv3_Child();
	void OnCommandOccurred_Event(class ULActMgrComponent* ActMgrComponent, class AActor* TargetActor, class FName Command, const struct FVector& Lever, bool SkipCommandPrerequisitiesCheck);
	void OnStop(class ULActBase* ReasonAction, class FName Reason);
	void SetReinforcedVariableValue(class FName VariableName, class FName Value);
	void ApplyAllTimeReinforcement();
	void ClearReinforcedVariableValues();
	void SetBoomState(bool bEnable);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Action_SlaveArm_FlameThrower_C">();
	}
	static class UBP_Action_SlaveArm_FlameThrower_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_Action_SlaveArm_FlameThrower_C>();
	}
};
static_assert(alignof(UBP_Action_SlaveArm_FlameThrower_C) == 0x000008, "Wrong alignment on UBP_Action_SlaveArm_FlameThrower_C");
static_assert(sizeof(UBP_Action_SlaveArm_FlameThrower_C) == 0x0002C8, "Wrong size on UBP_Action_SlaveArm_FlameThrower_C");
static_assert(offsetof(UBP_Action_SlaveArm_FlameThrower_C, UberGraphFrame_BP_Action_SlaveArm_FlameThrower_C) == 0x000290, "Member 'UBP_Action_SlaveArm_FlameThrower_C::UberGraphFrame_BP_Action_SlaveArm_FlameThrower_C' has a wrong offset!");
static_assert(offsetof(UBP_Action_SlaveArm_FlameThrower_C, FlameThrower_ThrowDuration) == 0x000298, "Member 'UBP_Action_SlaveArm_FlameThrower_C::FlameThrower_ThrowDuration' has a wrong offset!");
static_assert(offsetof(UBP_Action_SlaveArm_FlameThrower_C, FlameThrower_Timer_ThrowDuration) == 0x0002A0, "Member 'UBP_Action_SlaveArm_FlameThrower_C::FlameThrower_Timer_ThrowDuration' has a wrong offset!");
static_assert(offsetof(UBP_Action_SlaveArm_FlameThrower_C, FireState_MultyplyDamage) == 0x0002A8, "Member 'UBP_Action_SlaveArm_FlameThrower_C::FireState_MultyplyDamage' has a wrong offset!");
static_assert(offsetof(UBP_Action_SlaveArm_FlameThrower_C, EnableFirstHit) == 0x0002A9, "Member 'UBP_Action_SlaveArm_FlameThrower_C::EnableFirstHit' has a wrong offset!");
static_assert(offsetof(UBP_Action_SlaveArm_FlameThrower_C, Interval) == 0x0002AC, "Member 'UBP_Action_SlaveArm_FlameThrower_C::Interval' has a wrong offset!");
static_assert(offsetof(UBP_Action_SlaveArm_FlameThrower_C, MoveAxisUpperLimit) == 0x0002B0, "Member 'UBP_Action_SlaveArm_FlameThrower_C::MoveAxisUpperLimit' has a wrong offset!");
static_assert(offsetof(UBP_Action_SlaveArm_FlameThrower_C, Lv3_Child_Spawn_Interval) == 0x0002B4, "Member 'UBP_Action_SlaveArm_FlameThrower_C::Lv3_Child_Spawn_Interval' has a wrong offset!");
static_assert(offsetof(UBP_Action_SlaveArm_FlameThrower_C, Lv3_Child_Spawn_Timer) == 0x0002B8, "Member 'UBP_Action_SlaveArm_FlameThrower_C::Lv3_Child_Spawn_Timer' has a wrong offset!");
static_assert(offsetof(UBP_Action_SlaveArm_FlameThrower_C, EnableFireBoom) == 0x0002C0, "Member 'UBP_Action_SlaveArm_FlameThrower_C::EnableFireBoom' has a wrong offset!");
static_assert(offsetof(UBP_Action_SlaveArm_FlameThrower_C, CachedBoomReadyState) == 0x0002C1, "Member 'UBP_Action_SlaveArm_FlameThrower_C::CachedBoomReadyState' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Action_JumpSkill_Curve

#include "Basic.hpp"

#include "ProjectP_structs.hpp"
#include "ProjectP_classes.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Action_JumpSkill_Curve.BP_Action_JumpSkill_Curve_C
// 0x0080 (0x02F0 - 0x0270)
class UBP_Action_JumpSkill_Curve_C final : public ULAction_MultiAnim
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0270(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	float                                         Option_MoveMeshStartBlend_Jump_Common;             // 0x0278(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Option_MoveMeshEndBlend_Jump_Common;               // 0x027C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLGameObjectHandle                     Cached_GameHandle_RootMotion;                      // 0x0280(0x0004)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	struct FVector                                Cached_DestLocation;                               // 0x0284(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Cached_MoveDistance;                               // 0x0290(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Cached_MeshMove_Original;                          // 0x029C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           Cached_MeshMove_TimerHandle;                       // 0x02A8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Cached_MeshMove_Offset;                            // 0x02B0(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Cached_MeshMove_StartTime;                         // 0x02BC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Cached_Rootmotion_MoveDistance;                    // 0x02C0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Cached_MeshMove_Activated;                         // 0x02C4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	ELLandPositionSelectType                      Cached_LandPositionSelectType;                     // 0x02C5(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C6[0x2];                                      // 0x02C6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Cached_LandPositionSelectTypeOffset;               // 0x02C8(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Cached_DestLocation_Desired;                       // 0x02D4(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Cached_RootmotionScaleLimit_Horizontal_Min;        // 0x02E0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Cached_RootmotionScaleLimit_Horizontal_Max;        // 0x02E4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Cached_RootmotionScaleLimit_Vertical_Min;          // 0x02E8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Cached_RootmotionScaleLimit_Vertical_Max;          // 0x02EC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_Action_JumpSkill_Curve(int32 EntryPoint);
	void ReseveMoveMesh(float MoveDelayTime);
	void StopMoveMesh();
	void MoveMesh();
	void RecoverMesh();
	void OnTick(float DeltaTime);
	void OnCurrMontageBlendOutStarted(class UAnimMontage* Montage, bool bInterrupted, int32 MontageInstanceID);
	void OnCurrMontageEnded(class UAnimMontage* Montage, bool bInterrupted, int32 MontageInstanceID);
	void OnStart();
	void OnStop(class ULActBase* ReasonAction, class FName Reason);
	bool OnMoveBlockedBy(class ACharacter* BlockedChar, const struct FHitResult& Hit);
	int32 OnSelectNextAnim(class UAnimMontage* Montage, bool bInterrupted, int32 CurrentAnimIndex);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Action_JumpSkill_Curve_C">();
	}
	static class UBP_Action_JumpSkill_Curve_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_Action_JumpSkill_Curve_C>();
	}
};
static_assert(alignof(UBP_Action_JumpSkill_Curve_C) == 0x000008, "Wrong alignment on UBP_Action_JumpSkill_Curve_C");
static_assert(sizeof(UBP_Action_JumpSkill_Curve_C) == 0x0002F0, "Wrong size on UBP_Action_JumpSkill_Curve_C");
static_assert(offsetof(UBP_Action_JumpSkill_Curve_C, UberGraphFrame) == 0x000270, "Member 'UBP_Action_JumpSkill_Curve_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_Action_JumpSkill_Curve_C, Option_MoveMeshStartBlend_Jump_Common) == 0x000278, "Member 'UBP_Action_JumpSkill_Curve_C::Option_MoveMeshStartBlend_Jump_Common' has a wrong offset!");
static_assert(offsetof(UBP_Action_JumpSkill_Curve_C, Option_MoveMeshEndBlend_Jump_Common) == 0x00027C, "Member 'UBP_Action_JumpSkill_Curve_C::Option_MoveMeshEndBlend_Jump_Common' has a wrong offset!");
static_assert(offsetof(UBP_Action_JumpSkill_Curve_C, Cached_GameHandle_RootMotion) == 0x000280, "Member 'UBP_Action_JumpSkill_Curve_C::Cached_GameHandle_RootMotion' has a wrong offset!");
static_assert(offsetof(UBP_Action_JumpSkill_Curve_C, Cached_DestLocation) == 0x000284, "Member 'UBP_Action_JumpSkill_Curve_C::Cached_DestLocation' has a wrong offset!");
static_assert(offsetof(UBP_Action_JumpSkill_Curve_C, Cached_MoveDistance) == 0x000290, "Member 'UBP_Action_JumpSkill_Curve_C::Cached_MoveDistance' has a wrong offset!");
static_assert(offsetof(UBP_Action_JumpSkill_Curve_C, Cached_MeshMove_Original) == 0x00029C, "Member 'UBP_Action_JumpSkill_Curve_C::Cached_MeshMove_Original' has a wrong offset!");
static_assert(offsetof(UBP_Action_JumpSkill_Curve_C, Cached_MeshMove_TimerHandle) == 0x0002A8, "Member 'UBP_Action_JumpSkill_Curve_C::Cached_MeshMove_TimerHandle' has a wrong offset!");
static_assert(offsetof(UBP_Action_JumpSkill_Curve_C, Cached_MeshMove_Offset) == 0x0002B0, "Member 'UBP_Action_JumpSkill_Curve_C::Cached_MeshMove_Offset' has a wrong offset!");
static_assert(offsetof(UBP_Action_JumpSkill_Curve_C, Cached_MeshMove_StartTime) == 0x0002BC, "Member 'UBP_Action_JumpSkill_Curve_C::Cached_MeshMove_StartTime' has a wrong offset!");
static_assert(offsetof(UBP_Action_JumpSkill_Curve_C, Cached_Rootmotion_MoveDistance) == 0x0002C0, "Member 'UBP_Action_JumpSkill_Curve_C::Cached_Rootmotion_MoveDistance' has a wrong offset!");
static_assert(offsetof(UBP_Action_JumpSkill_Curve_C, Cached_MeshMove_Activated) == 0x0002C4, "Member 'UBP_Action_JumpSkill_Curve_C::Cached_MeshMove_Activated' has a wrong offset!");
static_assert(offsetof(UBP_Action_JumpSkill_Curve_C, Cached_LandPositionSelectType) == 0x0002C5, "Member 'UBP_Action_JumpSkill_Curve_C::Cached_LandPositionSelectType' has a wrong offset!");
static_assert(offsetof(UBP_Action_JumpSkill_Curve_C, Cached_LandPositionSelectTypeOffset) == 0x0002C8, "Member 'UBP_Action_JumpSkill_Curve_C::Cached_LandPositionSelectTypeOffset' has a wrong offset!");
static_assert(offsetof(UBP_Action_JumpSkill_Curve_C, Cached_DestLocation_Desired) == 0x0002D4, "Member 'UBP_Action_JumpSkill_Curve_C::Cached_DestLocation_Desired' has a wrong offset!");
static_assert(offsetof(UBP_Action_JumpSkill_Curve_C, Cached_RootmotionScaleLimit_Horizontal_Min) == 0x0002E0, "Member 'UBP_Action_JumpSkill_Curve_C::Cached_RootmotionScaleLimit_Horizontal_Min' has a wrong offset!");
static_assert(offsetof(UBP_Action_JumpSkill_Curve_C, Cached_RootmotionScaleLimit_Horizontal_Max) == 0x0002E4, "Member 'UBP_Action_JumpSkill_Curve_C::Cached_RootmotionScaleLimit_Horizontal_Max' has a wrong offset!");
static_assert(offsetof(UBP_Action_JumpSkill_Curve_C, Cached_RootmotionScaleLimit_Vertical_Min) == 0x0002E8, "Member 'UBP_Action_JumpSkill_Curve_C::Cached_RootmotionScaleLimit_Vertical_Min' has a wrong offset!");
static_assert(offsetof(UBP_Action_JumpSkill_Curve_C, Cached_RootmotionScaleLimit_Vertical_Max) == 0x0002EC, "Member 'UBP_Action_JumpSkill_Curve_C::Cached_RootmotionScaleLimit_Vertical_Max' has a wrong offset!");

}


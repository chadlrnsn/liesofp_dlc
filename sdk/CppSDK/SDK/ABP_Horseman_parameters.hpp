#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_Horseman

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function ABP_Horseman.ABP_Horseman_C.ExecuteUbergraph_ABP_Horseman
// 0x0060 (0x0060 - 0x0000)
struct ABP_Horseman_C_ExecuteUbergraph_ABP_Horseman final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_1;          // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F[0x1];                                        // 0x000F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Abs_ReturnValue;                          // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_FloatFloat_ReturnValue;          // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_FloatFloat_ReturnValue_1;        // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_4;        // 0x0017(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_5;        // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetCurveValue_ReturnValue;                // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurveValue_ReturnValue_1;              // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue_1;                        // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_1;            // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetCurveValue_ReturnValue_2;              // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue;                         // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue_1;                       // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x003C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_1;                // 0x004C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_2;          // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_3;          // 0x005B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ABP_Horseman_C_ExecuteUbergraph_ABP_Horseman) == 0x000004, "Wrong alignment on ABP_Horseman_C_ExecuteUbergraph_ABP_Horseman");
static_assert(sizeof(ABP_Horseman_C_ExecuteUbergraph_ABP_Horseman) == 0x000060, "Wrong size on ABP_Horseman_C_ExecuteUbergraph_ABP_Horseman");
static_assert(offsetof(ABP_Horseman_C_ExecuteUbergraph_ABP_Horseman, EntryPoint) == 0x000000, "Member 'ABP_Horseman_C_ExecuteUbergraph_ABP_Horseman::EntryPoint' has a wrong offset!");
static_assert(offsetof(ABP_Horseman_C_ExecuteUbergraph_ABP_Horseman, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000004, "Member 'ABP_Horseman_C_ExecuteUbergraph_ABP_Horseman::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Horseman_C_ExecuteUbergraph_ABP_Horseman, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000005, "Member 'ABP_Horseman_C_ExecuteUbergraph_ABP_Horseman::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Horseman_C_ExecuteUbergraph_ABP_Horseman, CallFunc_BooleanAND_ReturnValue) == 0x000006, "Member 'ABP_Horseman_C_ExecuteUbergraph_ABP_Horseman::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Horseman_C_ExecuteUbergraph_ABP_Horseman, CallFunc_Not_PreBool_ReturnValue) == 0x000007, "Member 'ABP_Horseman_C_ExecuteUbergraph_ABP_Horseman::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Horseman_C_ExecuteUbergraph_ABP_Horseman, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000008, "Member 'ABP_Horseman_C_ExecuteUbergraph_ABP_Horseman::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_Horseman_C_ExecuteUbergraph_ABP_Horseman, CallFunc_Not_PreBool_ReturnValue_1) == 0x000009, "Member 'ABP_Horseman_C_ExecuteUbergraph_ABP_Horseman::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_Horseman_C_ExecuteUbergraph_ABP_Horseman, CallFunc_NotEqual_ByteByte_ReturnValue_1) == 0x00000A, "Member 'ABP_Horseman_C_ExecuteUbergraph_ABP_Horseman::CallFunc_NotEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_Horseman_C_ExecuteUbergraph_ABP_Horseman, CallFunc_BooleanAND_ReturnValue_1) == 0x00000B, "Member 'ABP_Horseman_C_ExecuteUbergraph_ABP_Horseman::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_Horseman_C_ExecuteUbergraph_ABP_Horseman, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x00000C, "Member 'ABP_Horseman_C_ExecuteUbergraph_ABP_Horseman::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ABP_Horseman_C_ExecuteUbergraph_ABP_Horseman, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x00000D, "Member 'ABP_Horseman_C_ExecuteUbergraph_ABP_Horseman::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ABP_Horseman_C_ExecuteUbergraph_ABP_Horseman, CallFunc_Not_PreBool_ReturnValue_2) == 0x00000E, "Member 'ABP_Horseman_C_ExecuteUbergraph_ABP_Horseman::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ABP_Horseman_C_ExecuteUbergraph_ABP_Horseman, CallFunc_Abs_ReturnValue) == 0x000010, "Member 'ABP_Horseman_C_ExecuteUbergraph_ABP_Horseman::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Horseman_C_ExecuteUbergraph_ABP_Horseman, CallFunc_Less_FloatFloat_ReturnValue) == 0x000014, "Member 'ABP_Horseman_C_ExecuteUbergraph_ABP_Horseman::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Horseman_C_ExecuteUbergraph_ABP_Horseman, CallFunc_NotEqual_FloatFloat_ReturnValue) == 0x000015, "Member 'ABP_Horseman_C_ExecuteUbergraph_ABP_Horseman::CallFunc_NotEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Horseman_C_ExecuteUbergraph_ABP_Horseman, CallFunc_NotEqual_FloatFloat_ReturnValue_1) == 0x000016, "Member 'ABP_Horseman_C_ExecuteUbergraph_ABP_Horseman::CallFunc_NotEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_Horseman_C_ExecuteUbergraph_ABP_Horseman, CallFunc_EqualEqual_ByteByte_ReturnValue_4) == 0x000017, "Member 'ABP_Horseman_C_ExecuteUbergraph_ABP_Horseman::CallFunc_EqualEqual_ByteByte_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ABP_Horseman_C_ExecuteUbergraph_ABP_Horseman, CallFunc_EqualEqual_ByteByte_ReturnValue_5) == 0x000018, "Member 'ABP_Horseman_C_ExecuteUbergraph_ABP_Horseman::CallFunc_EqualEqual_ByteByte_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(ABP_Horseman_C_ExecuteUbergraph_ABP_Horseman, CallFunc_GetCurveValue_ReturnValue) == 0x00001C, "Member 'ABP_Horseman_C_ExecuteUbergraph_ABP_Horseman::CallFunc_GetCurveValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Horseman_C_ExecuteUbergraph_ABP_Horseman, CallFunc_GetCurveValue_ReturnValue_1) == 0x000020, "Member 'ABP_Horseman_C_ExecuteUbergraph_ABP_Horseman::CallFunc_GetCurveValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_Horseman_C_ExecuteUbergraph_ABP_Horseman, CallFunc_Abs_ReturnValue_1) == 0x000024, "Member 'ABP_Horseman_C_ExecuteUbergraph_ABP_Horseman::CallFunc_Abs_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_Horseman_C_ExecuteUbergraph_ABP_Horseman, CallFunc_Less_FloatFloat_ReturnValue_1) == 0x000028, "Member 'ABP_Horseman_C_ExecuteUbergraph_ABP_Horseman::CallFunc_Less_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_Horseman_C_ExecuteUbergraph_ABP_Horseman, CallFunc_GetCurveValue_ReturnValue_2) == 0x00002C, "Member 'ABP_Horseman_C_ExecuteUbergraph_ABP_Horseman::CallFunc_GetCurveValue_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ABP_Horseman_C_ExecuteUbergraph_ABP_Horseman, CallFunc_FMax_ReturnValue) == 0x000030, "Member 'ABP_Horseman_C_ExecuteUbergraph_ABP_Horseman::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Horseman_C_ExecuteUbergraph_ABP_Horseman, CallFunc_FMax_ReturnValue_1) == 0x000034, "Member 'ABP_Horseman_C_ExecuteUbergraph_ABP_Horseman::CallFunc_FMax_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_Horseman_C_ExecuteUbergraph_ABP_Horseman, CallFunc_Lerp_ReturnValue) == 0x000038, "Member 'ABP_Horseman_C_ExecuteUbergraph_ABP_Horseman::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Horseman_C_ExecuteUbergraph_ABP_Horseman, CallFunc_MakeRotator_ReturnValue) == 0x00003C, "Member 'ABP_Horseman_C_ExecuteUbergraph_ABP_Horseman::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Horseman_C_ExecuteUbergraph_ABP_Horseman, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000048, "Member 'ABP_Horseman_C_ExecuteUbergraph_ABP_Horseman::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Horseman_C_ExecuteUbergraph_ABP_Horseman, CallFunc_MakeRotator_ReturnValue_1) == 0x00004C, "Member 'ABP_Horseman_C_ExecuteUbergraph_ABP_Horseman::CallFunc_MakeRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_Horseman_C_ExecuteUbergraph_ABP_Horseman, CallFunc_NotEqual_ByteByte_ReturnValue_2) == 0x000058, "Member 'ABP_Horseman_C_ExecuteUbergraph_ABP_Horseman::CallFunc_NotEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ABP_Horseman_C_ExecuteUbergraph_ABP_Horseman, CallFunc_BooleanAND_ReturnValue_2) == 0x000059, "Member 'ABP_Horseman_C_ExecuteUbergraph_ABP_Horseman::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ABP_Horseman_C_ExecuteUbergraph_ABP_Horseman, CallFunc_Not_PreBool_ReturnValue_3) == 0x00005A, "Member 'ABP_Horseman_C_ExecuteUbergraph_ABP_Horseman::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ABP_Horseman_C_ExecuteUbergraph_ABP_Horseman, CallFunc_NotEqual_ByteByte_ReturnValue_3) == 0x00005B, "Member 'ABP_Horseman_C_ExecuteUbergraph_ABP_Horseman::CallFunc_NotEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ABP_Horseman_C_ExecuteUbergraph_ABP_Horseman, CallFunc_BooleanAND_ReturnValue_3) == 0x00005C, "Member 'ABP_Horseman_C_ExecuteUbergraph_ABP_Horseman::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");

// Function ABP_Horseman.ABP_Horseman_C.AnimGraph
// 0x0010 (0x0010 - 0x0000)
struct ABP_Horseman_C_AnimGraph final
{
public:
	struct FPoseLink                              AnimGraph_0;                                       // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(ABP_Horseman_C_AnimGraph) == 0x000008, "Wrong alignment on ABP_Horseman_C_AnimGraph");
static_assert(sizeof(ABP_Horseman_C_AnimGraph) == 0x000010, "Wrong size on ABP_Horseman_C_AnimGraph");
static_assert(offsetof(ABP_Horseman_C_AnimGraph, AnimGraph_0) == 0x000000, "Member 'ABP_Horseman_C_AnimGraph::AnimGraph_0' has a wrong offset!");

// Function ABP_Horseman.ABP_Horseman_C.AnimLayer_Additive
// 0x0030 (0x0030 - 0x0000)
struct ABP_Horseman_C_AnimLayer_Additive final
{
public:
	struct FPoseLink                              MainStateBasePose;                                 // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FPoseLink                              AdditivePose;                                      // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FPoseLink                              AnimLayer_Additive_0;                              // 0x0020(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(ABP_Horseman_C_AnimLayer_Additive) == 0x000008, "Wrong alignment on ABP_Horseman_C_AnimLayer_Additive");
static_assert(sizeof(ABP_Horseman_C_AnimLayer_Additive) == 0x000030, "Wrong size on ABP_Horseman_C_AnimLayer_Additive");
static_assert(offsetof(ABP_Horseman_C_AnimLayer_Additive, MainStateBasePose) == 0x000000, "Member 'ABP_Horseman_C_AnimLayer_Additive::MainStateBasePose' has a wrong offset!");
static_assert(offsetof(ABP_Horseman_C_AnimLayer_Additive, AdditivePose) == 0x000010, "Member 'ABP_Horseman_C_AnimLayer_Additive::AdditivePose' has a wrong offset!");
static_assert(offsetof(ABP_Horseman_C_AnimLayer_Additive, AnimLayer_Additive_0) == 0x000020, "Member 'ABP_Horseman_C_AnimLayer_Additive::AnimLayer_Additive_0' has a wrong offset!");

}


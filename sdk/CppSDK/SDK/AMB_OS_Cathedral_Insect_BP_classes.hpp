#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AMB_OS_Cathedral_Insect_BP

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass AMB_OS_Cathedral_Insect_BP.AMB_OS_Cathedral_Insect_BP_C
// 0x0088 (0x0268 - 0x01E0)
class AAMB_OS_Cathedral_Insect_BP_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x01E0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UStaticMeshComponent*                   Sphere;                                            // 0x01E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USplineComponent*                       Spline2;                                           // 0x01F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USplineComponent*                       Spline1;                                           // 0x01F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        Audio;                                             // 0x0200(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USplineComponent*                       Spline;                                            // 0x0208(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0210(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         Timeline_0_SplinePosition_5F2E5BC442B0D829AB9A848F5A8C7750; // 0x0218(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Timeline_0__Direction_5F2E5BC442B0D829AB9A848F5A8C7750; // 0x021C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21D[0x3];                                      // 0x021D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Timeline_0;                                        // 0x0220(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class USplineComponent*>               SplineArray;                                       // 0x0228(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	class USplineComponent*                       SelectedSpline;                                    // 0x0238(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Sound;                                             // 0x0240(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundAttenuation*                      AttenuationSettings;                               // 0x0248(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MovementSpeed;                                     // 0x0250(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShowVisualiser;                                    // 0x0254(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ShowSplines;                                       // 0x0255(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Auto;                                              // 0x0256(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Looping;                                           // 0x0257(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<class AActor*>                         SplineBasedActors;                                 // 0x0258(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)

public:
	void ChooseSpline();
	void ExecuteUbergraph_AMB_OS_Cathedral_Insect_BP(int32 EntryPoint);
	void Trigger_Movement();
	void ReceiveBeginPlay();
	void Timeline_0__Retrigger__EventFunc();
	void Timeline_0__UpdateFunc();
	void Timeline_0__FinishedFunc();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"AMB_OS_Cathedral_Insect_BP_C">();
	}
	static class AAMB_OS_Cathedral_Insect_BP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AAMB_OS_Cathedral_Insect_BP_C>();
	}
};
static_assert(alignof(AAMB_OS_Cathedral_Insect_BP_C) == 0x000008, "Wrong alignment on AAMB_OS_Cathedral_Insect_BP_C");
static_assert(sizeof(AAMB_OS_Cathedral_Insect_BP_C) == 0x000268, "Wrong size on AAMB_OS_Cathedral_Insect_BP_C");
static_assert(offsetof(AAMB_OS_Cathedral_Insect_BP_C, UberGraphFrame) == 0x0001E0, "Member 'AAMB_OS_Cathedral_Insect_BP_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AAMB_OS_Cathedral_Insect_BP_C, Sphere) == 0x0001E8, "Member 'AAMB_OS_Cathedral_Insect_BP_C::Sphere' has a wrong offset!");
static_assert(offsetof(AAMB_OS_Cathedral_Insect_BP_C, Spline2) == 0x0001F0, "Member 'AAMB_OS_Cathedral_Insect_BP_C::Spline2' has a wrong offset!");
static_assert(offsetof(AAMB_OS_Cathedral_Insect_BP_C, Spline1) == 0x0001F8, "Member 'AAMB_OS_Cathedral_Insect_BP_C::Spline1' has a wrong offset!");
static_assert(offsetof(AAMB_OS_Cathedral_Insect_BP_C, Audio) == 0x000200, "Member 'AAMB_OS_Cathedral_Insect_BP_C::Audio' has a wrong offset!");
static_assert(offsetof(AAMB_OS_Cathedral_Insect_BP_C, Spline) == 0x000208, "Member 'AAMB_OS_Cathedral_Insect_BP_C::Spline' has a wrong offset!");
static_assert(offsetof(AAMB_OS_Cathedral_Insect_BP_C, DefaultSceneRoot) == 0x000210, "Member 'AAMB_OS_Cathedral_Insect_BP_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(AAMB_OS_Cathedral_Insect_BP_C, Timeline_0_SplinePosition_5F2E5BC442B0D829AB9A848F5A8C7750) == 0x000218, "Member 'AAMB_OS_Cathedral_Insect_BP_C::Timeline_0_SplinePosition_5F2E5BC442B0D829AB9A848F5A8C7750' has a wrong offset!");
static_assert(offsetof(AAMB_OS_Cathedral_Insect_BP_C, Timeline_0__Direction_5F2E5BC442B0D829AB9A848F5A8C7750) == 0x00021C, "Member 'AAMB_OS_Cathedral_Insect_BP_C::Timeline_0__Direction_5F2E5BC442B0D829AB9A848F5A8C7750' has a wrong offset!");
static_assert(offsetof(AAMB_OS_Cathedral_Insect_BP_C, Timeline_0) == 0x000220, "Member 'AAMB_OS_Cathedral_Insect_BP_C::Timeline_0' has a wrong offset!");
static_assert(offsetof(AAMB_OS_Cathedral_Insect_BP_C, SplineArray) == 0x000228, "Member 'AAMB_OS_Cathedral_Insect_BP_C::SplineArray' has a wrong offset!");
static_assert(offsetof(AAMB_OS_Cathedral_Insect_BP_C, SelectedSpline) == 0x000238, "Member 'AAMB_OS_Cathedral_Insect_BP_C::SelectedSpline' has a wrong offset!");
static_assert(offsetof(AAMB_OS_Cathedral_Insect_BP_C, Sound) == 0x000240, "Member 'AAMB_OS_Cathedral_Insect_BP_C::Sound' has a wrong offset!");
static_assert(offsetof(AAMB_OS_Cathedral_Insect_BP_C, AttenuationSettings) == 0x000248, "Member 'AAMB_OS_Cathedral_Insect_BP_C::AttenuationSettings' has a wrong offset!");
static_assert(offsetof(AAMB_OS_Cathedral_Insect_BP_C, MovementSpeed) == 0x000250, "Member 'AAMB_OS_Cathedral_Insect_BP_C::MovementSpeed' has a wrong offset!");
static_assert(offsetof(AAMB_OS_Cathedral_Insect_BP_C, ShowVisualiser) == 0x000254, "Member 'AAMB_OS_Cathedral_Insect_BP_C::ShowVisualiser' has a wrong offset!");
static_assert(offsetof(AAMB_OS_Cathedral_Insect_BP_C, ShowSplines) == 0x000255, "Member 'AAMB_OS_Cathedral_Insect_BP_C::ShowSplines' has a wrong offset!");
static_assert(offsetof(AAMB_OS_Cathedral_Insect_BP_C, Auto) == 0x000256, "Member 'AAMB_OS_Cathedral_Insect_BP_C::Auto' has a wrong offset!");
static_assert(offsetof(AAMB_OS_Cathedral_Insect_BP_C, Looping) == 0x000257, "Member 'AAMB_OS_Cathedral_Insect_BP_C::Looping' has a wrong offset!");
static_assert(offsetof(AAMB_OS_Cathedral_Insect_BP_C, SplineBasedActors) == 0x000258, "Member 'AAMB_OS_Cathedral_Insect_BP_C::SplineBasedActors' has a wrong offset!");

}


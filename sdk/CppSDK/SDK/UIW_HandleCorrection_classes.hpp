#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UIW_HandleCorrection

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "ProjectP_structs.hpp"
#include "Engine_structs.hpp"
#include "UIEN_WeaponPart_structs.hpp"
#include "ProjectPContentInfo_structs.hpp"
#include "UIW_Window_classes.hpp"
#include "SlateCore_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass UIW_HandleCorrection.UIW_HandleCorrection_C
// 0x01D8 (0x0528 - 0x0350)
class UUIW_HandleCorrection_C final : public UUIW_Window_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_UIW_HandleCorrection_C;             // 0x0350(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Ani_Deterioration;                                 // 0x0358(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UUIW_BG_Tab_C*                          BG_Tab;                                            // 0x0360(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUIW_Btn_Arrow_C*                       Btn_ArrowL;                                        // 0x0368(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUIW_Btn_Arrow_C*                       Btn_ArrowR;                                        // 0x0370(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUIW_Btn_Key_C*                         Btn_Back;                                          // 0x0378(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUIW_Btn_Key_C*                         Btn_Correction;                                    // 0x0380(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUIW_Btn_Key_C*                         Btn_ItemInfo;                                      // 0x0388(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUIW_Btn_Key_C*                         Btn_Left;                                          // 0x0390(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUIW_Btn_Key_C*                         Btn_NextPage;                                      // 0x0398(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUIW_Btn_Key_C*                         Btn_PrevPage;                                      // 0x03A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUIW_Btn_Key_C*                         Btn_Right;                                         // 0x03A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUIW_Btn_Key_C*                         Btn_Scroll;                                        // 0x03B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUIW_Btn_Key_C*                         Btn_Tab_LeftKey;                                   // 0x03B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUIW_Btn_Key_C*                         Btn_Tab_RightKey;                                  // 0x03C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           Group_FX_Active;                                   // 0x03C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Img_Item;                                          // 0x03D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUIW_ItemInfo_C*                        ItemInfo;                                          // 0x03D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class ULListView*                             List_Correction;                                   // 0x03E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class ULListView*                             List_Handle;                                       // 0x03E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class ULListView*                             List_Tab;                                          // 0x03F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class ULListView*                             List_Weapon;                                       // 0x03F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Tab;                                               // 0x0400(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Text_Advance;                                      // 0x0408(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Text_Advance_Value;                                // 0x0410(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Text_Ergo;                                         // 0x0418(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Text_HasErgo;                                      // 0x0420(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Text_HasItem;                                      // 0x0428(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Text_ItemName;                                     // 0x0430(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Text_Motivity;                                     // 0x0438(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Text_Motivity_Value;                               // 0x0440(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Text_RequireErgo;                                  // 0x0448(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Text_RequireItem;                                  // 0x0450(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Text_SubTitle_0;                                   // 0x0458(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Text_SubTitle_1;                                   // 0x0460(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Text_SubTitle_2;                                   // 0x0468(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Text_Technique;                                    // 0x0470(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Text_Technique_Value;                              // 0x0478(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	EUIEN_WeaponPart                              WeaponPart;                                        // 0x0480(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_481[0x7];                                      // 0x0481(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ULWeaponItem*                           SelectedWeapon;                                    // 0x0488(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULItem*                                 SelectedHandle;                                    // 0x0490(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UUIBP_ListData_Resource_C*>      ResourceListData;                                  // 0x0498(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          EnoughResource;                                    // 0x04A8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4A9[0x3];                                      // 0x04A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         SelectedIndex;                                     // 0x04AC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ELStatCorrectChangeType                       SelectedStatType;                                  // 0x04B0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4B1[0x7];                                      // 0x04B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<ELStatCorrectChangeType, class FName>    StatTypeName;                                      // 0x04B8(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FColor                                 CorrectionTitleColor;                              // 0x0508(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsUpgradeMoment;                                   // 0x050C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_50D[0x3];                                      // 0x050D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   RequireItemCode;                                   // 0x0510(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SelectedCorrectionIndex;                           // 0x0518(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CountForPage;                                      // 0x051C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULListView*                             SelectedList;                                      // 0x0520(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_UIW_HandleCorrection(int32 EntryPoint);
	void BndEvt__UIW_HandleCorrection_Btn_NextPage_K2Node_ComponentBoundEvent_9_OnActive__DelegateSignature(class UUIW_Btn_Key_C* BtnKey);
	void BndEvt__UIW_HandleCorrection_Btn_PrevPage_K2Node_ComponentBoundEvent_8_OnActive__DelegateSignature(class UUIW_Btn_Key_C* BtnKey);
	void BndEvt__UIW_HandleCorrection_List_Correction_K2Node_ComponentBoundEvent_7_OnListItemSelectionChangedDynamic__DelegateSignature(class UObject* Item, bool bIsSelected);
	void Destruct();
	void BndEvt__UIW_HandleCorrection_Btn_Right_K2Node_ComponentBoundEvent_6_OnRepeat__DelegateSignature(class UUIW_Btn_Key_C* BtnKey);
	void BndEvt__UIW_HandleCorrection_Btn_Right_K2Node_ComponentBoundEvent_4_OnActive__DelegateSignature(class UUIW_Btn_Key_C* BtnKey);
	void BndEvt__UIW_HandleCorrection_Btn_Left_K2Node_ComponentBoundEvent_3_OnRepeat__DelegateSignature(class UUIW_Btn_Key_C* BtnKey);
	void BndEvt__UIW_HandleCorrection_Btn_Left_K2Node_ComponentBoundEvent_1_OnActive__DelegateSignature(class UUIW_Btn_Key_C* BtnKey);
	void BndEvt__UIW_HandleCorrection_List_Correction_K2Node_ComponentBoundEvent_0_SimpleListItemEventDynamic__DelegateSignature(class UObject* Item);
	void BndEvt__Btn_Select_K2Node_ComponentBoundEvent_2_OnActive__DelegateSignature(class UUIW_Btn_Key_C* BtnKey);
	void BndEvt__Btn_Back_K2Node_ComponentBoundEvent_1_OnActive__DelegateSignature(class UUIW_Btn_Key_C* BtnKey);
	void Construct();
	void HasWeapon_Handle();
	void MoveLeftTab(class UUIW_Btn_Key_C* BtnKey);
	void MoveRightTab(class UUIW_Btn_Key_C* BtnKey);
	void RefreshTab();
	void ChangeTab(class UObject* Item, bool bIsSelected);
	void RefreshInventory();
	void FocusedWeaponParts(class UObject* Item, bool bIsSelected);
	void FocusedStat(class UObject* Item, bool bIsSelected);
	void MoveLeftItem();
	void MoveRightItem();
	void CallbackCorrection(class UUIW_Popup_C* Popup, class UUIW_Btn_Key_C* BtnKey);
	struct FEventReply FocusManage(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);
	void CallbackContextMenu(class FName EventName);
	void OpenPopup();
	void CheckCondition(bool* CanCorrection);
	void OnReady();
	void GetResultGrade(ELFirstStat FirstStat, int32* StackLevel, ELHandleCorrectResultGrade* ResultGrade);
	void GetChangedType(ELStatCorrectChangeType* StatType);
	void GetIsChanged(bool* IsChanged);
	class UWidget* NavToStartWeapon(EUINavigation Navigation_0);
	class UWidget* NavToEndWeapon(EUINavigation Navigation_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"UIW_HandleCorrection_C">();
	}
	static class UUIW_HandleCorrection_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUIW_HandleCorrection_C>();
	}
};
static_assert(alignof(UUIW_HandleCorrection_C) == 0x000008, "Wrong alignment on UUIW_HandleCorrection_C");
static_assert(sizeof(UUIW_HandleCorrection_C) == 0x000528, "Wrong size on UUIW_HandleCorrection_C");
static_assert(offsetof(UUIW_HandleCorrection_C, UberGraphFrame_UIW_HandleCorrection_C) == 0x000350, "Member 'UUIW_HandleCorrection_C::UberGraphFrame_UIW_HandleCorrection_C' has a wrong offset!");
static_assert(offsetof(UUIW_HandleCorrection_C, Ani_Deterioration) == 0x000358, "Member 'UUIW_HandleCorrection_C::Ani_Deterioration' has a wrong offset!");
static_assert(offsetof(UUIW_HandleCorrection_C, BG_Tab) == 0x000360, "Member 'UUIW_HandleCorrection_C::BG_Tab' has a wrong offset!");
static_assert(offsetof(UUIW_HandleCorrection_C, Btn_ArrowL) == 0x000368, "Member 'UUIW_HandleCorrection_C::Btn_ArrowL' has a wrong offset!");
static_assert(offsetof(UUIW_HandleCorrection_C, Btn_ArrowR) == 0x000370, "Member 'UUIW_HandleCorrection_C::Btn_ArrowR' has a wrong offset!");
static_assert(offsetof(UUIW_HandleCorrection_C, Btn_Back) == 0x000378, "Member 'UUIW_HandleCorrection_C::Btn_Back' has a wrong offset!");
static_assert(offsetof(UUIW_HandleCorrection_C, Btn_Correction) == 0x000380, "Member 'UUIW_HandleCorrection_C::Btn_Correction' has a wrong offset!");
static_assert(offsetof(UUIW_HandleCorrection_C, Btn_ItemInfo) == 0x000388, "Member 'UUIW_HandleCorrection_C::Btn_ItemInfo' has a wrong offset!");
static_assert(offsetof(UUIW_HandleCorrection_C, Btn_Left) == 0x000390, "Member 'UUIW_HandleCorrection_C::Btn_Left' has a wrong offset!");
static_assert(offsetof(UUIW_HandleCorrection_C, Btn_NextPage) == 0x000398, "Member 'UUIW_HandleCorrection_C::Btn_NextPage' has a wrong offset!");
static_assert(offsetof(UUIW_HandleCorrection_C, Btn_PrevPage) == 0x0003A0, "Member 'UUIW_HandleCorrection_C::Btn_PrevPage' has a wrong offset!");
static_assert(offsetof(UUIW_HandleCorrection_C, Btn_Right) == 0x0003A8, "Member 'UUIW_HandleCorrection_C::Btn_Right' has a wrong offset!");
static_assert(offsetof(UUIW_HandleCorrection_C, Btn_Scroll) == 0x0003B0, "Member 'UUIW_HandleCorrection_C::Btn_Scroll' has a wrong offset!");
static_assert(offsetof(UUIW_HandleCorrection_C, Btn_Tab_LeftKey) == 0x0003B8, "Member 'UUIW_HandleCorrection_C::Btn_Tab_LeftKey' has a wrong offset!");
static_assert(offsetof(UUIW_HandleCorrection_C, Btn_Tab_RightKey) == 0x0003C0, "Member 'UUIW_HandleCorrection_C::Btn_Tab_RightKey' has a wrong offset!");
static_assert(offsetof(UUIW_HandleCorrection_C, Group_FX_Active) == 0x0003C8, "Member 'UUIW_HandleCorrection_C::Group_FX_Active' has a wrong offset!");
static_assert(offsetof(UUIW_HandleCorrection_C, Img_Item) == 0x0003D0, "Member 'UUIW_HandleCorrection_C::Img_Item' has a wrong offset!");
static_assert(offsetof(UUIW_HandleCorrection_C, ItemInfo) == 0x0003D8, "Member 'UUIW_HandleCorrection_C::ItemInfo' has a wrong offset!");
static_assert(offsetof(UUIW_HandleCorrection_C, List_Correction) == 0x0003E0, "Member 'UUIW_HandleCorrection_C::List_Correction' has a wrong offset!");
static_assert(offsetof(UUIW_HandleCorrection_C, List_Handle) == 0x0003E8, "Member 'UUIW_HandleCorrection_C::List_Handle' has a wrong offset!");
static_assert(offsetof(UUIW_HandleCorrection_C, List_Tab) == 0x0003F0, "Member 'UUIW_HandleCorrection_C::List_Tab' has a wrong offset!");
static_assert(offsetof(UUIW_HandleCorrection_C, List_Weapon) == 0x0003F8, "Member 'UUIW_HandleCorrection_C::List_Weapon' has a wrong offset!");
static_assert(offsetof(UUIW_HandleCorrection_C, Tab) == 0x000400, "Member 'UUIW_HandleCorrection_C::Tab' has a wrong offset!");
static_assert(offsetof(UUIW_HandleCorrection_C, Text_Advance) == 0x000408, "Member 'UUIW_HandleCorrection_C::Text_Advance' has a wrong offset!");
static_assert(offsetof(UUIW_HandleCorrection_C, Text_Advance_Value) == 0x000410, "Member 'UUIW_HandleCorrection_C::Text_Advance_Value' has a wrong offset!");
static_assert(offsetof(UUIW_HandleCorrection_C, Text_Ergo) == 0x000418, "Member 'UUIW_HandleCorrection_C::Text_Ergo' has a wrong offset!");
static_assert(offsetof(UUIW_HandleCorrection_C, Text_HasErgo) == 0x000420, "Member 'UUIW_HandleCorrection_C::Text_HasErgo' has a wrong offset!");
static_assert(offsetof(UUIW_HandleCorrection_C, Text_HasItem) == 0x000428, "Member 'UUIW_HandleCorrection_C::Text_HasItem' has a wrong offset!");
static_assert(offsetof(UUIW_HandleCorrection_C, Text_ItemName) == 0x000430, "Member 'UUIW_HandleCorrection_C::Text_ItemName' has a wrong offset!");
static_assert(offsetof(UUIW_HandleCorrection_C, Text_Motivity) == 0x000438, "Member 'UUIW_HandleCorrection_C::Text_Motivity' has a wrong offset!");
static_assert(offsetof(UUIW_HandleCorrection_C, Text_Motivity_Value) == 0x000440, "Member 'UUIW_HandleCorrection_C::Text_Motivity_Value' has a wrong offset!");
static_assert(offsetof(UUIW_HandleCorrection_C, Text_RequireErgo) == 0x000448, "Member 'UUIW_HandleCorrection_C::Text_RequireErgo' has a wrong offset!");
static_assert(offsetof(UUIW_HandleCorrection_C, Text_RequireItem) == 0x000450, "Member 'UUIW_HandleCorrection_C::Text_RequireItem' has a wrong offset!");
static_assert(offsetof(UUIW_HandleCorrection_C, Text_SubTitle_0) == 0x000458, "Member 'UUIW_HandleCorrection_C::Text_SubTitle_0' has a wrong offset!");
static_assert(offsetof(UUIW_HandleCorrection_C, Text_SubTitle_1) == 0x000460, "Member 'UUIW_HandleCorrection_C::Text_SubTitle_1' has a wrong offset!");
static_assert(offsetof(UUIW_HandleCorrection_C, Text_SubTitle_2) == 0x000468, "Member 'UUIW_HandleCorrection_C::Text_SubTitle_2' has a wrong offset!");
static_assert(offsetof(UUIW_HandleCorrection_C, Text_Technique) == 0x000470, "Member 'UUIW_HandleCorrection_C::Text_Technique' has a wrong offset!");
static_assert(offsetof(UUIW_HandleCorrection_C, Text_Technique_Value) == 0x000478, "Member 'UUIW_HandleCorrection_C::Text_Technique_Value' has a wrong offset!");
static_assert(offsetof(UUIW_HandleCorrection_C, WeaponPart) == 0x000480, "Member 'UUIW_HandleCorrection_C::WeaponPart' has a wrong offset!");
static_assert(offsetof(UUIW_HandleCorrection_C, SelectedWeapon) == 0x000488, "Member 'UUIW_HandleCorrection_C::SelectedWeapon' has a wrong offset!");
static_assert(offsetof(UUIW_HandleCorrection_C, SelectedHandle) == 0x000490, "Member 'UUIW_HandleCorrection_C::SelectedHandle' has a wrong offset!");
static_assert(offsetof(UUIW_HandleCorrection_C, ResourceListData) == 0x000498, "Member 'UUIW_HandleCorrection_C::ResourceListData' has a wrong offset!");
static_assert(offsetof(UUIW_HandleCorrection_C, EnoughResource) == 0x0004A8, "Member 'UUIW_HandleCorrection_C::EnoughResource' has a wrong offset!");
static_assert(offsetof(UUIW_HandleCorrection_C, SelectedIndex) == 0x0004AC, "Member 'UUIW_HandleCorrection_C::SelectedIndex' has a wrong offset!");
static_assert(offsetof(UUIW_HandleCorrection_C, SelectedStatType) == 0x0004B0, "Member 'UUIW_HandleCorrection_C::SelectedStatType' has a wrong offset!");
static_assert(offsetof(UUIW_HandleCorrection_C, StatTypeName) == 0x0004B8, "Member 'UUIW_HandleCorrection_C::StatTypeName' has a wrong offset!");
static_assert(offsetof(UUIW_HandleCorrection_C, CorrectionTitleColor) == 0x000508, "Member 'UUIW_HandleCorrection_C::CorrectionTitleColor' has a wrong offset!");
static_assert(offsetof(UUIW_HandleCorrection_C, IsUpgradeMoment) == 0x00050C, "Member 'UUIW_HandleCorrection_C::IsUpgradeMoment' has a wrong offset!");
static_assert(offsetof(UUIW_HandleCorrection_C, RequireItemCode) == 0x000510, "Member 'UUIW_HandleCorrection_C::RequireItemCode' has a wrong offset!");
static_assert(offsetof(UUIW_HandleCorrection_C, SelectedCorrectionIndex) == 0x000518, "Member 'UUIW_HandleCorrection_C::SelectedCorrectionIndex' has a wrong offset!");
static_assert(offsetof(UUIW_HandleCorrection_C, CountForPage) == 0x00051C, "Member 'UUIW_HandleCorrection_C::CountForPage' has a wrong offset!");
static_assert(offsetof(UUIW_HandleCorrection_C, SelectedList) == 0x000520, "Member 'UUIW_HandleCorrection_C::SelectedList' has a wrong offset!");

}


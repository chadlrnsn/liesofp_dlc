#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ErogoWall

#include "Basic.hpp"

#include "ProjectP_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_ErogoWall.BP_ErogoWall_C.ExecuteUbergraph_BP_ErogoWall
// 0x03B0 (0x03B0 - 0x0000)
struct BP_ErogoWall_C_ExecuteUbergraph_BP_ErogoWall final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent_4;  // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_4;           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_4;            // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex_4;       // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep_4;           // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult_4;          // 0x0028(0x0088)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	ELFogGateState                                K2Node_Event_StateData;                            // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B1[0x7];                                       // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ALPCCharacter*                          K2Node_DynamicCast_AsLPCCharacter;                 // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable_1;                     // 0x00C3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00C5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable_1;               // 0x00C6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_ErgoWallState;                  // 0x00C7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_1;                       // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_2;                       // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_3;                       // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EEndPlayReason                                K2Node_Event_EndPlayReason;                        // 0x00D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DA[0x6];                                       // 0x00DA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent_3;  // 0x00E0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_3;           // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_3;            // 0x00F0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex_3;       // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep_3;           // 0x00FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_FD[0x3];                                       // 0x00FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult_3;          // 0x0100(0x0088)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent_2;  // 0x0188(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_2;           // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_2;            // 0x0198(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex_2;       // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep_2;           // 0x01A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A5[0x3];                                      // 0x01A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult_2;          // 0x01A8(0x0088)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class ALPCCharacter*                          K2Node_DynamicCast_AsLPCCharacter_1;               // 0x0230(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0238(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_239[0x7];                                      // 0x0239(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ALPCCharacter*                          K2Node_DynamicCast_AsLPCCharacter_2;               // 0x0240(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0248(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0249(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x024A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_24B[0x5];                                      // 0x024B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent_1;  // 0x0250(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_1;           // 0x0258(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_1;            // 0x0260(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex_1;       // 0x0268(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep_1;           // 0x026C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_26D[0x3];                                      // 0x026D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult_1;          // 0x0270(0x0088)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class ALPCCharacter*                          K2Node_DynamicCast_AsLPCCharacter_3;               // 0x02F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0300(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0301(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x0302(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0303(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_304[0x4];                                      // 0x0304(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent;    // 0x0308(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x0310(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x0318(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex;         // 0x0320(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep;             // 0x0324(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_325[0x3];                                      // 0x0325(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult;            // 0x0328(0x0088)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_ErogoWall_C_ExecuteUbergraph_BP_ErogoWall) == 0x000008, "Wrong alignment on BP_ErogoWall_C_ExecuteUbergraph_BP_ErogoWall");
static_assert(sizeof(BP_ErogoWall_C_ExecuteUbergraph_BP_ErogoWall) == 0x0003B0, "Wrong size on BP_ErogoWall_C_ExecuteUbergraph_BP_ErogoWall");
static_assert(offsetof(BP_ErogoWall_C_ExecuteUbergraph_BP_ErogoWall, EntryPoint) == 0x000000, "Member 'BP_ErogoWall_C_ExecuteUbergraph_BP_ErogoWall::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_ErogoWall_C_ExecuteUbergraph_BP_ErogoWall, Temp_bool_Has_Been_Initd_Variable) == 0x000004, "Member 'BP_ErogoWall_C_ExecuteUbergraph_BP_ErogoWall::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(BP_ErogoWall_C_ExecuteUbergraph_BP_ErogoWall, Temp_bool_IsClosed_Variable) == 0x000005, "Member 'BP_ErogoWall_C_ExecuteUbergraph_BP_ErogoWall::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(BP_ErogoWall_C_ExecuteUbergraph_BP_ErogoWall, K2Node_ComponentBoundEvent_OverlappedComponent_4) == 0x000008, "Member 'BP_ErogoWall_C_ExecuteUbergraph_BP_ErogoWall::K2Node_ComponentBoundEvent_OverlappedComponent_4' has a wrong offset!");
static_assert(offsetof(BP_ErogoWall_C_ExecuteUbergraph_BP_ErogoWall, K2Node_ComponentBoundEvent_OtherActor_4) == 0x000010, "Member 'BP_ErogoWall_C_ExecuteUbergraph_BP_ErogoWall::K2Node_ComponentBoundEvent_OtherActor_4' has a wrong offset!");
static_assert(offsetof(BP_ErogoWall_C_ExecuteUbergraph_BP_ErogoWall, K2Node_ComponentBoundEvent_OtherComp_4) == 0x000018, "Member 'BP_ErogoWall_C_ExecuteUbergraph_BP_ErogoWall::K2Node_ComponentBoundEvent_OtherComp_4' has a wrong offset!");
static_assert(offsetof(BP_ErogoWall_C_ExecuteUbergraph_BP_ErogoWall, K2Node_ComponentBoundEvent_OtherBodyIndex_4) == 0x000020, "Member 'BP_ErogoWall_C_ExecuteUbergraph_BP_ErogoWall::K2Node_ComponentBoundEvent_OtherBodyIndex_4' has a wrong offset!");
static_assert(offsetof(BP_ErogoWall_C_ExecuteUbergraph_BP_ErogoWall, K2Node_ComponentBoundEvent_bFromSweep_4) == 0x000024, "Member 'BP_ErogoWall_C_ExecuteUbergraph_BP_ErogoWall::K2Node_ComponentBoundEvent_bFromSweep_4' has a wrong offset!");
static_assert(offsetof(BP_ErogoWall_C_ExecuteUbergraph_BP_ErogoWall, K2Node_ComponentBoundEvent_SweepResult_4) == 0x000028, "Member 'BP_ErogoWall_C_ExecuteUbergraph_BP_ErogoWall::K2Node_ComponentBoundEvent_SweepResult_4' has a wrong offset!");
static_assert(offsetof(BP_ErogoWall_C_ExecuteUbergraph_BP_ErogoWall, K2Node_Event_StateData) == 0x0000B0, "Member 'BP_ErogoWall_C_ExecuteUbergraph_BP_ErogoWall::K2Node_Event_StateData' has a wrong offset!");
static_assert(offsetof(BP_ErogoWall_C_ExecuteUbergraph_BP_ErogoWall, K2Node_DynamicCast_AsLPCCharacter) == 0x0000B8, "Member 'BP_ErogoWall_C_ExecuteUbergraph_BP_ErogoWall::K2Node_DynamicCast_AsLPCCharacter' has a wrong offset!");
static_assert(offsetof(BP_ErogoWall_C_ExecuteUbergraph_BP_ErogoWall, K2Node_DynamicCast_bSuccess) == 0x0000C0, "Member 'BP_ErogoWall_C_ExecuteUbergraph_BP_ErogoWall::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_ErogoWall_C_ExecuteUbergraph_BP_ErogoWall, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000C1, "Member 'BP_ErogoWall_C_ExecuteUbergraph_BP_ErogoWall::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ErogoWall_C_ExecuteUbergraph_BP_ErogoWall, CallFunc_IsValid_ReturnValue) == 0x0000C2, "Member 'BP_ErogoWall_C_ExecuteUbergraph_BP_ErogoWall::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ErogoWall_C_ExecuteUbergraph_BP_ErogoWall, Temp_bool_IsClosed_Variable_1) == 0x0000C3, "Member 'BP_ErogoWall_C_ExecuteUbergraph_BP_ErogoWall::Temp_bool_IsClosed_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_ErogoWall_C_ExecuteUbergraph_BP_ErogoWall, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x0000C4, "Member 'BP_ErogoWall_C_ExecuteUbergraph_BP_ErogoWall::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ErogoWall_C_ExecuteUbergraph_BP_ErogoWall, CallFunc_BooleanAND_ReturnValue) == 0x0000C5, "Member 'BP_ErogoWall_C_ExecuteUbergraph_BP_ErogoWall::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ErogoWall_C_ExecuteUbergraph_BP_ErogoWall, Temp_bool_Has_Been_Initd_Variable_1) == 0x0000C6, "Member 'BP_ErogoWall_C_ExecuteUbergraph_BP_ErogoWall::Temp_bool_Has_Been_Initd_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_ErogoWall_C_ExecuteUbergraph_BP_ErogoWall, K2Node_CustomEvent_ErgoWallState) == 0x0000C7, "Member 'BP_ErogoWall_C_ExecuteUbergraph_BP_ErogoWall::K2Node_CustomEvent_ErgoWallState' has a wrong offset!");
static_assert(offsetof(BP_ErogoWall_C_ExecuteUbergraph_BP_ErogoWall, CallFunc_Lerp_ReturnValue) == 0x0000C8, "Member 'BP_ErogoWall_C_ExecuteUbergraph_BP_ErogoWall::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ErogoWall_C_ExecuteUbergraph_BP_ErogoWall, CallFunc_Lerp_ReturnValue_1) == 0x0000CC, "Member 'BP_ErogoWall_C_ExecuteUbergraph_BP_ErogoWall::CallFunc_Lerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ErogoWall_C_ExecuteUbergraph_BP_ErogoWall, CallFunc_Lerp_ReturnValue_2) == 0x0000D0, "Member 'BP_ErogoWall_C_ExecuteUbergraph_BP_ErogoWall::CallFunc_Lerp_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ErogoWall_C_ExecuteUbergraph_BP_ErogoWall, CallFunc_Lerp_ReturnValue_3) == 0x0000D4, "Member 'BP_ErogoWall_C_ExecuteUbergraph_BP_ErogoWall::CallFunc_Lerp_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_ErogoWall_C_ExecuteUbergraph_BP_ErogoWall, K2Node_SwitchEnum_CmpSuccess) == 0x0000D8, "Member 'BP_ErogoWall_C_ExecuteUbergraph_BP_ErogoWall::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_ErogoWall_C_ExecuteUbergraph_BP_ErogoWall, K2Node_Event_EndPlayReason) == 0x0000D9, "Member 'BP_ErogoWall_C_ExecuteUbergraph_BP_ErogoWall::K2Node_Event_EndPlayReason' has a wrong offset!");
static_assert(offsetof(BP_ErogoWall_C_ExecuteUbergraph_BP_ErogoWall, K2Node_ComponentBoundEvent_OverlappedComponent_3) == 0x0000E0, "Member 'BP_ErogoWall_C_ExecuteUbergraph_BP_ErogoWall::K2Node_ComponentBoundEvent_OverlappedComponent_3' has a wrong offset!");
static_assert(offsetof(BP_ErogoWall_C_ExecuteUbergraph_BP_ErogoWall, K2Node_ComponentBoundEvent_OtherActor_3) == 0x0000E8, "Member 'BP_ErogoWall_C_ExecuteUbergraph_BP_ErogoWall::K2Node_ComponentBoundEvent_OtherActor_3' has a wrong offset!");
static_assert(offsetof(BP_ErogoWall_C_ExecuteUbergraph_BP_ErogoWall, K2Node_ComponentBoundEvent_OtherComp_3) == 0x0000F0, "Member 'BP_ErogoWall_C_ExecuteUbergraph_BP_ErogoWall::K2Node_ComponentBoundEvent_OtherComp_3' has a wrong offset!");
static_assert(offsetof(BP_ErogoWall_C_ExecuteUbergraph_BP_ErogoWall, K2Node_ComponentBoundEvent_OtherBodyIndex_3) == 0x0000F8, "Member 'BP_ErogoWall_C_ExecuteUbergraph_BP_ErogoWall::K2Node_ComponentBoundEvent_OtherBodyIndex_3' has a wrong offset!");
static_assert(offsetof(BP_ErogoWall_C_ExecuteUbergraph_BP_ErogoWall, K2Node_ComponentBoundEvent_bFromSweep_3) == 0x0000FC, "Member 'BP_ErogoWall_C_ExecuteUbergraph_BP_ErogoWall::K2Node_ComponentBoundEvent_bFromSweep_3' has a wrong offset!");
static_assert(offsetof(BP_ErogoWall_C_ExecuteUbergraph_BP_ErogoWall, K2Node_ComponentBoundEvent_SweepResult_3) == 0x000100, "Member 'BP_ErogoWall_C_ExecuteUbergraph_BP_ErogoWall::K2Node_ComponentBoundEvent_SweepResult_3' has a wrong offset!");
static_assert(offsetof(BP_ErogoWall_C_ExecuteUbergraph_BP_ErogoWall, K2Node_ComponentBoundEvent_OverlappedComponent_2) == 0x000188, "Member 'BP_ErogoWall_C_ExecuteUbergraph_BP_ErogoWall::K2Node_ComponentBoundEvent_OverlappedComponent_2' has a wrong offset!");
static_assert(offsetof(BP_ErogoWall_C_ExecuteUbergraph_BP_ErogoWall, K2Node_ComponentBoundEvent_OtherActor_2) == 0x000190, "Member 'BP_ErogoWall_C_ExecuteUbergraph_BP_ErogoWall::K2Node_ComponentBoundEvent_OtherActor_2' has a wrong offset!");
static_assert(offsetof(BP_ErogoWall_C_ExecuteUbergraph_BP_ErogoWall, K2Node_ComponentBoundEvent_OtherComp_2) == 0x000198, "Member 'BP_ErogoWall_C_ExecuteUbergraph_BP_ErogoWall::K2Node_ComponentBoundEvent_OtherComp_2' has a wrong offset!");
static_assert(offsetof(BP_ErogoWall_C_ExecuteUbergraph_BP_ErogoWall, K2Node_ComponentBoundEvent_OtherBodyIndex_2) == 0x0001A0, "Member 'BP_ErogoWall_C_ExecuteUbergraph_BP_ErogoWall::K2Node_ComponentBoundEvent_OtherBodyIndex_2' has a wrong offset!");
static_assert(offsetof(BP_ErogoWall_C_ExecuteUbergraph_BP_ErogoWall, K2Node_ComponentBoundEvent_bFromSweep_2) == 0x0001A4, "Member 'BP_ErogoWall_C_ExecuteUbergraph_BP_ErogoWall::K2Node_ComponentBoundEvent_bFromSweep_2' has a wrong offset!");
static_assert(offsetof(BP_ErogoWall_C_ExecuteUbergraph_BP_ErogoWall, K2Node_ComponentBoundEvent_SweepResult_2) == 0x0001A8, "Member 'BP_ErogoWall_C_ExecuteUbergraph_BP_ErogoWall::K2Node_ComponentBoundEvent_SweepResult_2' has a wrong offset!");
static_assert(offsetof(BP_ErogoWall_C_ExecuteUbergraph_BP_ErogoWall, K2Node_DynamicCast_AsLPCCharacter_1) == 0x000230, "Member 'BP_ErogoWall_C_ExecuteUbergraph_BP_ErogoWall::K2Node_DynamicCast_AsLPCCharacter_1' has a wrong offset!");
static_assert(offsetof(BP_ErogoWall_C_ExecuteUbergraph_BP_ErogoWall, K2Node_DynamicCast_bSuccess_1) == 0x000238, "Member 'BP_ErogoWall_C_ExecuteUbergraph_BP_ErogoWall::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_ErogoWall_C_ExecuteUbergraph_BP_ErogoWall, K2Node_DynamicCast_AsLPCCharacter_2) == 0x000240, "Member 'BP_ErogoWall_C_ExecuteUbergraph_BP_ErogoWall::K2Node_DynamicCast_AsLPCCharacter_2' has a wrong offset!");
static_assert(offsetof(BP_ErogoWall_C_ExecuteUbergraph_BP_ErogoWall, K2Node_DynamicCast_bSuccess_2) == 0x000248, "Member 'BP_ErogoWall_C_ExecuteUbergraph_BP_ErogoWall::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_ErogoWall_C_ExecuteUbergraph_BP_ErogoWall, CallFunc_IsValid_ReturnValue_1) == 0x000249, "Member 'BP_ErogoWall_C_ExecuteUbergraph_BP_ErogoWall::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ErogoWall_C_ExecuteUbergraph_BP_ErogoWall, CallFunc_IsValid_ReturnValue_2) == 0x00024A, "Member 'BP_ErogoWall_C_ExecuteUbergraph_BP_ErogoWall::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ErogoWall_C_ExecuteUbergraph_BP_ErogoWall, K2Node_ComponentBoundEvent_OverlappedComponent_1) == 0x000250, "Member 'BP_ErogoWall_C_ExecuteUbergraph_BP_ErogoWall::K2Node_ComponentBoundEvent_OverlappedComponent_1' has a wrong offset!");
static_assert(offsetof(BP_ErogoWall_C_ExecuteUbergraph_BP_ErogoWall, K2Node_ComponentBoundEvent_OtherActor_1) == 0x000258, "Member 'BP_ErogoWall_C_ExecuteUbergraph_BP_ErogoWall::K2Node_ComponentBoundEvent_OtherActor_1' has a wrong offset!");
static_assert(offsetof(BP_ErogoWall_C_ExecuteUbergraph_BP_ErogoWall, K2Node_ComponentBoundEvent_OtherComp_1) == 0x000260, "Member 'BP_ErogoWall_C_ExecuteUbergraph_BP_ErogoWall::K2Node_ComponentBoundEvent_OtherComp_1' has a wrong offset!");
static_assert(offsetof(BP_ErogoWall_C_ExecuteUbergraph_BP_ErogoWall, K2Node_ComponentBoundEvent_OtherBodyIndex_1) == 0x000268, "Member 'BP_ErogoWall_C_ExecuteUbergraph_BP_ErogoWall::K2Node_ComponentBoundEvent_OtherBodyIndex_1' has a wrong offset!");
static_assert(offsetof(BP_ErogoWall_C_ExecuteUbergraph_BP_ErogoWall, K2Node_ComponentBoundEvent_bFromSweep_1) == 0x00026C, "Member 'BP_ErogoWall_C_ExecuteUbergraph_BP_ErogoWall::K2Node_ComponentBoundEvent_bFromSweep_1' has a wrong offset!");
static_assert(offsetof(BP_ErogoWall_C_ExecuteUbergraph_BP_ErogoWall, K2Node_ComponentBoundEvent_SweepResult_1) == 0x000270, "Member 'BP_ErogoWall_C_ExecuteUbergraph_BP_ErogoWall::K2Node_ComponentBoundEvent_SweepResult_1' has a wrong offset!");
static_assert(offsetof(BP_ErogoWall_C_ExecuteUbergraph_BP_ErogoWall, K2Node_DynamicCast_AsLPCCharacter_3) == 0x0002F8, "Member 'BP_ErogoWall_C_ExecuteUbergraph_BP_ErogoWall::K2Node_DynamicCast_AsLPCCharacter_3' has a wrong offset!");
static_assert(offsetof(BP_ErogoWall_C_ExecuteUbergraph_BP_ErogoWall, K2Node_DynamicCast_bSuccess_3) == 0x000300, "Member 'BP_ErogoWall_C_ExecuteUbergraph_BP_ErogoWall::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_ErogoWall_C_ExecuteUbergraph_BP_ErogoWall, CallFunc_IsValid_ReturnValue_3) == 0x000301, "Member 'BP_ErogoWall_C_ExecuteUbergraph_BP_ErogoWall::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_ErogoWall_C_ExecuteUbergraph_BP_ErogoWall, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x000302, "Member 'BP_ErogoWall_C_ExecuteUbergraph_BP_ErogoWall::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ErogoWall_C_ExecuteUbergraph_BP_ErogoWall, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000303, "Member 'BP_ErogoWall_C_ExecuteUbergraph_BP_ErogoWall::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ErogoWall_C_ExecuteUbergraph_BP_ErogoWall, K2Node_ComponentBoundEvent_OverlappedComponent) == 0x000308, "Member 'BP_ErogoWall_C_ExecuteUbergraph_BP_ErogoWall::K2Node_ComponentBoundEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_ErogoWall_C_ExecuteUbergraph_BP_ErogoWall, K2Node_ComponentBoundEvent_OtherActor) == 0x000310, "Member 'BP_ErogoWall_C_ExecuteUbergraph_BP_ErogoWall::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(BP_ErogoWall_C_ExecuteUbergraph_BP_ErogoWall, K2Node_ComponentBoundEvent_OtherComp) == 0x000318, "Member 'BP_ErogoWall_C_ExecuteUbergraph_BP_ErogoWall::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(BP_ErogoWall_C_ExecuteUbergraph_BP_ErogoWall, K2Node_ComponentBoundEvent_OtherBodyIndex) == 0x000320, "Member 'BP_ErogoWall_C_ExecuteUbergraph_BP_ErogoWall::K2Node_ComponentBoundEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_ErogoWall_C_ExecuteUbergraph_BP_ErogoWall, K2Node_ComponentBoundEvent_bFromSweep) == 0x000324, "Member 'BP_ErogoWall_C_ExecuteUbergraph_BP_ErogoWall::K2Node_ComponentBoundEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_ErogoWall_C_ExecuteUbergraph_BP_ErogoWall, K2Node_ComponentBoundEvent_SweepResult) == 0x000328, "Member 'BP_ErogoWall_C_ExecuteUbergraph_BP_ErogoWall::K2Node_ComponentBoundEvent_SweepResult' has a wrong offset!");

// Function BP_ErogoWall.BP_ErogoWall_C.BndEvt__BP_ErogoWall_Block_Targeting_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature
// 0x00A8 (0x00A8 - 0x0000)
struct BP_ErogoWall_C_BndEvt__BP_ErogoWall_Block_Targeting_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_ErogoWall_C_BndEvt__BP_ErogoWall_Block_Targeting_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_ErogoWall_C_BndEvt__BP_ErogoWall_Block_Targeting_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_ErogoWall_C_BndEvt__BP_ErogoWall_Block_Targeting_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature) == 0x0000A8, "Wrong size on BP_ErogoWall_C_BndEvt__BP_ErogoWall_Block_Targeting_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_ErogoWall_C_BndEvt__BP_ErogoWall_Block_Targeting_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_ErogoWall_C_BndEvt__BP_ErogoWall_Block_Targeting_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_ErogoWall_C_BndEvt__BP_ErogoWall_Block_Targeting_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_ErogoWall_C_BndEvt__BP_ErogoWall_Block_Targeting_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_ErogoWall_C_BndEvt__BP_ErogoWall_Block_Targeting_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_ErogoWall_C_BndEvt__BP_ErogoWall_Block_Targeting_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_ErogoWall_C_BndEvt__BP_ErogoWall_Block_Targeting_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_ErogoWall_C_BndEvt__BP_ErogoWall_Block_Targeting_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_ErogoWall_C_BndEvt__BP_ErogoWall_Block_Targeting_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'BP_ErogoWall_C_BndEvt__BP_ErogoWall_Block_Targeting_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_ErogoWall_C_BndEvt__BP_ErogoWall_Block_Targeting_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'BP_ErogoWall_C_BndEvt__BP_ErogoWall_Block_Targeting_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function BP_ErogoWall.BP_ErogoWall_C.BndEvt__BP_ErogoWall_Trigger_WallResume03_K2Node_ComponentBoundEvent_4_ComponentBeginOverlapSignature__DelegateSignature
// 0x00A8 (0x00A8 - 0x0000)
struct BP_ErogoWall_C_BndEvt__BP_ErogoWall_Trigger_WallResume03_K2Node_ComponentBoundEvent_4_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_ErogoWall_C_BndEvt__BP_ErogoWall_Trigger_WallResume03_K2Node_ComponentBoundEvent_4_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_ErogoWall_C_BndEvt__BP_ErogoWall_Trigger_WallResume03_K2Node_ComponentBoundEvent_4_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_ErogoWall_C_BndEvt__BP_ErogoWall_Trigger_WallResume03_K2Node_ComponentBoundEvent_4_ComponentBeginOverlapSignature__DelegateSignature) == 0x0000A8, "Wrong size on BP_ErogoWall_C_BndEvt__BP_ErogoWall_Trigger_WallResume03_K2Node_ComponentBoundEvent_4_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_ErogoWall_C_BndEvt__BP_ErogoWall_Trigger_WallResume03_K2Node_ComponentBoundEvent_4_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_ErogoWall_C_BndEvt__BP_ErogoWall_Trigger_WallResume03_K2Node_ComponentBoundEvent_4_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_ErogoWall_C_BndEvt__BP_ErogoWall_Trigger_WallResume03_K2Node_ComponentBoundEvent_4_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_ErogoWall_C_BndEvt__BP_ErogoWall_Trigger_WallResume03_K2Node_ComponentBoundEvent_4_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_ErogoWall_C_BndEvt__BP_ErogoWall_Trigger_WallResume03_K2Node_ComponentBoundEvent_4_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_ErogoWall_C_BndEvt__BP_ErogoWall_Trigger_WallResume03_K2Node_ComponentBoundEvent_4_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_ErogoWall_C_BndEvt__BP_ErogoWall_Trigger_WallResume03_K2Node_ComponentBoundEvent_4_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_ErogoWall_C_BndEvt__BP_ErogoWall_Trigger_WallResume03_K2Node_ComponentBoundEvent_4_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_ErogoWall_C_BndEvt__BP_ErogoWall_Trigger_WallResume03_K2Node_ComponentBoundEvent_4_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'BP_ErogoWall_C_BndEvt__BP_ErogoWall_Trigger_WallResume03_K2Node_ComponentBoundEvent_4_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_ErogoWall_C_BndEvt__BP_ErogoWall_Trigger_WallResume03_K2Node_ComponentBoundEvent_4_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'BP_ErogoWall_C_BndEvt__BP_ErogoWall_Trigger_WallResume03_K2Node_ComponentBoundEvent_4_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function BP_ErogoWall.BP_ErogoWall_C.BndEvt__BP_ErogoWall_Trigger_WallResume02_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature
// 0x00A8 (0x00A8 - 0x0000)
struct BP_ErogoWall_C_BndEvt__BP_ErogoWall_Trigger_WallResume02_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_ErogoWall_C_BndEvt__BP_ErogoWall_Trigger_WallResume02_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_ErogoWall_C_BndEvt__BP_ErogoWall_Trigger_WallResume02_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_ErogoWall_C_BndEvt__BP_ErogoWall_Trigger_WallResume02_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature) == 0x0000A8, "Wrong size on BP_ErogoWall_C_BndEvt__BP_ErogoWall_Trigger_WallResume02_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_ErogoWall_C_BndEvt__BP_ErogoWall_Trigger_WallResume02_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_ErogoWall_C_BndEvt__BP_ErogoWall_Trigger_WallResume02_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_ErogoWall_C_BndEvt__BP_ErogoWall_Trigger_WallResume02_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_ErogoWall_C_BndEvt__BP_ErogoWall_Trigger_WallResume02_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_ErogoWall_C_BndEvt__BP_ErogoWall_Trigger_WallResume02_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_ErogoWall_C_BndEvt__BP_ErogoWall_Trigger_WallResume02_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_ErogoWall_C_BndEvt__BP_ErogoWall_Trigger_WallResume02_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_ErogoWall_C_BndEvt__BP_ErogoWall_Trigger_WallResume02_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_ErogoWall_C_BndEvt__BP_ErogoWall_Trigger_WallResume02_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'BP_ErogoWall_C_BndEvt__BP_ErogoWall_Trigger_WallResume02_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_ErogoWall_C_BndEvt__BP_ErogoWall_Trigger_WallResume02_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'BP_ErogoWall_C_BndEvt__BP_ErogoWall_Trigger_WallResume02_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function BP_ErogoWall.BP_ErogoWall_C.BndEvt__BP_ErogoWall_Trigger_WallResume01_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature
// 0x00A8 (0x00A8 - 0x0000)
struct BP_ErogoWall_C_BndEvt__BP_ErogoWall_Trigger_WallResume01_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_ErogoWall_C_BndEvt__BP_ErogoWall_Trigger_WallResume01_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_ErogoWall_C_BndEvt__BP_ErogoWall_Trigger_WallResume01_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_ErogoWall_C_BndEvt__BP_ErogoWall_Trigger_WallResume01_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature) == 0x0000A8, "Wrong size on BP_ErogoWall_C_BndEvt__BP_ErogoWall_Trigger_WallResume01_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_ErogoWall_C_BndEvt__BP_ErogoWall_Trigger_WallResume01_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_ErogoWall_C_BndEvt__BP_ErogoWall_Trigger_WallResume01_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_ErogoWall_C_BndEvt__BP_ErogoWall_Trigger_WallResume01_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_ErogoWall_C_BndEvt__BP_ErogoWall_Trigger_WallResume01_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_ErogoWall_C_BndEvt__BP_ErogoWall_Trigger_WallResume01_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_ErogoWall_C_BndEvt__BP_ErogoWall_Trigger_WallResume01_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_ErogoWall_C_BndEvt__BP_ErogoWall_Trigger_WallResume01_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_ErogoWall_C_BndEvt__BP_ErogoWall_Trigger_WallResume01_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_ErogoWall_C_BndEvt__BP_ErogoWall_Trigger_WallResume01_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'BP_ErogoWall_C_BndEvt__BP_ErogoWall_Trigger_WallResume01_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_ErogoWall_C_BndEvt__BP_ErogoWall_Trigger_WallResume01_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'BP_ErogoWall_C_BndEvt__BP_ErogoWall_Trigger_WallResume01_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function BP_ErogoWall.BP_ErogoWall_C.ReceiveEndPlay
// 0x0001 (0x0001 - 0x0000)
struct BP_ErogoWall_C_ReceiveEndPlay final
{
public:
	EEndPlayReason                                EndPlayReason;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ErogoWall_C_ReceiveEndPlay) == 0x000001, "Wrong alignment on BP_ErogoWall_C_ReceiveEndPlay");
static_assert(sizeof(BP_ErogoWall_C_ReceiveEndPlay) == 0x000001, "Wrong size on BP_ErogoWall_C_ReceiveEndPlay");
static_assert(offsetof(BP_ErogoWall_C_ReceiveEndPlay, EndPlayReason) == 0x000000, "Member 'BP_ErogoWall_C_ReceiveEndPlay::EndPlayReason' has a wrong offset!");

// Function BP_ErogoWall.BP_ErogoWall_C.ErgoWallOpenClose
// 0x0001 (0x0001 - 0x0000)
struct BP_ErogoWall_C_ErgoWallOpenClose final
{
public:
	bool                                          ErgoWallState;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ErogoWall_C_ErgoWallOpenClose) == 0x000001, "Wrong alignment on BP_ErogoWall_C_ErgoWallOpenClose");
static_assert(sizeof(BP_ErogoWall_C_ErgoWallOpenClose) == 0x000001, "Wrong size on BP_ErogoWall_C_ErgoWallOpenClose");
static_assert(offsetof(BP_ErogoWall_C_ErgoWallOpenClose, ErgoWallState) == 0x000000, "Member 'BP_ErogoWall_C_ErgoWallOpenClose::ErgoWallState' has a wrong offset!");

// Function BP_ErogoWall.BP_ErogoWall_C.SetFogGateState
// 0x0001 (0x0001 - 0x0000)
struct BP_ErogoWall_C_SetFogGateState final
{
public:
	ELFogGateState                                StateData;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ErogoWall_C_SetFogGateState) == 0x000001, "Wrong alignment on BP_ErogoWall_C_SetFogGateState");
static_assert(sizeof(BP_ErogoWall_C_SetFogGateState) == 0x000001, "Wrong size on BP_ErogoWall_C_SetFogGateState");
static_assert(offsetof(BP_ErogoWall_C_SetFogGateState, StateData) == 0x000000, "Member 'BP_ErogoWall_C_SetFogGateState::StateData' has a wrong offset!");

// Function BP_ErogoWall.BP_ErogoWall_C.BndEvt__BP_ErogoWall_Trigger_WallStop_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature
// 0x00A8 (0x00A8 - 0x0000)
struct BP_ErogoWall_C_BndEvt__BP_ErogoWall_Trigger_WallStop_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_ErogoWall_C_BndEvt__BP_ErogoWall_Trigger_WallStop_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_ErogoWall_C_BndEvt__BP_ErogoWall_Trigger_WallStop_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_ErogoWall_C_BndEvt__BP_ErogoWall_Trigger_WallStop_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x0000A8, "Wrong size on BP_ErogoWall_C_BndEvt__BP_ErogoWall_Trigger_WallStop_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_ErogoWall_C_BndEvt__BP_ErogoWall_Trigger_WallStop_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_ErogoWall_C_BndEvt__BP_ErogoWall_Trigger_WallStop_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_ErogoWall_C_BndEvt__BP_ErogoWall_Trigger_WallStop_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_ErogoWall_C_BndEvt__BP_ErogoWall_Trigger_WallStop_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_ErogoWall_C_BndEvt__BP_ErogoWall_Trigger_WallStop_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_ErogoWall_C_BndEvt__BP_ErogoWall_Trigger_WallStop_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_ErogoWall_C_BndEvt__BP_ErogoWall_Trigger_WallStop_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_ErogoWall_C_BndEvt__BP_ErogoWall_Trigger_WallStop_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_ErogoWall_C_BndEvt__BP_ErogoWall_Trigger_WallStop_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'BP_ErogoWall_C_BndEvt__BP_ErogoWall_Trigger_WallStop_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_ErogoWall_C_BndEvt__BP_ErogoWall_Trigger_WallStop_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'BP_ErogoWall_C_BndEvt__BP_ErogoWall_Trigger_WallStop_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

}


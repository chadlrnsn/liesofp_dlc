#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UIW_Record

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UIW_Window_classes.hpp"
#include "SlateCore_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass UIW_Record.UIW_Record_C
// 0x00E0 (0x0430 - 0x0350)
class UUIW_Record_C final : public UUIW_Window_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_UIW_Record_C;                       // 0x0350(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Ani_Pin;                                           // 0x0358(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UUIW_Btn_Key_C*                         Btn_Close;                                         // 0x0360(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUIW_Btn_Key_C*                         Btn_More;                                          // 0x0368(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUIW_Btn_Key_C*                         Btn_Play;                                          // 0x0370(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUIW_Btn_Key_C*                         Btn_Stop;                                          // 0x0378(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Img_Fx_Light;                                      // 0x0380(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Img_Record;                                        // 0x0388(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Img_RecordPin;                                     // 0x0390(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Img_TitleBg;                                       // 0x0398(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class ULListView*                             List;                                              // 0x03A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UProgressBar*                           Progress;                                          // 0x03A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Record;                                            // 0x03B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Text_Name;                                         // 0x03B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Text_PlayTime;                                     // 0x03C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Text_Time;                                         // 0x03C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class FName                                   SelectedRecord;                                    // 0x03D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   PlayRecord;                                        // 0x03D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LastSelectedIndex;                                 // 0x03E0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          InPin;                                             // 0x03E4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3E5[0x3];                                      // 0x03E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         PrevPlayTimePercent;                               // 0x03E8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3EC[0x4];                                      // 0x03EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           PredelayTimer;                                     // 0x03F0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class FName                                   CandidateRecordForPlay;                            // 0x03F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsPreparingRecord;                                 // 0x0400(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_401[0x7];                                      // 0x0401(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        LPNoiseSound;                                      // 0x0408(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsPassedFirst;                                     // 0x0410(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_411[0x3];                                      // 0x0411(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   PendingNextCodeName;                               // 0x0414(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsStopping;                                        // 0x041C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41D[0x3];                                      // 0x041D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           ListPendingTimer;                                  // 0x0420(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          IsInit;                                            // 0x0428(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_UIW_Record(int32 EntryPoint);
	void BndEvt__UIW_Record_Btn_Stop_K2Node_ComponentBoundEvent_3_OnActive__DelegateSignature(class UUIW_Btn_Key_C* BtnKey);
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void Destruct();
	void BndEvt__Btn_Close_K2Node_ComponentBoundEvent_2_OnActive__DelegateSignature(class UUIW_Btn_Key_C* BtnKey);
	void BndEvt__Btn_Detail_K2Node_ComponentBoundEvent_1_OnActive__DelegateSignature(class UUIW_Btn_Key_C* BtnKey);
	void BndEvt__Btn_Play_K2Node_ComponentBoundEvent_0_OnActive__DelegateSignature(class UUIW_Btn_Key_C* BtnKey);
	void Construct();
	void RefreshList();
	void OnSelectionChanged(class UObject* Item, bool bIsSelected);
	void OnDoubleClicked(class UObject* Item);
	struct FEventReply FocusManage(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);
	void OnReady();
	void StartTween();
	void OnPlay(bool IsPlaying, class FName CodeName);
	void OnPlayTime(const class USoundWave* PlayingSoundWave, const float PlaybackPercent);
	void CheckButton();
	void OnCompleteTweenEvent(class FName Name_0);
	void PlayReal();
	class UWidget* NavToTop(EUINavigation Navigation_0);
	class UWidget* NavToBottom(EUINavigation Navigation_0);
	void SetPlayRecord(int32 Index_0, class FName CodeName, bool NeedTweenAndNextPending);
	void ListPendingCheck();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"UIW_Record_C">();
	}
	static class UUIW_Record_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUIW_Record_C>();
	}
};
static_assert(alignof(UUIW_Record_C) == 0x000008, "Wrong alignment on UUIW_Record_C");
static_assert(sizeof(UUIW_Record_C) == 0x000430, "Wrong size on UUIW_Record_C");
static_assert(offsetof(UUIW_Record_C, UberGraphFrame_UIW_Record_C) == 0x000350, "Member 'UUIW_Record_C::UberGraphFrame_UIW_Record_C' has a wrong offset!");
static_assert(offsetof(UUIW_Record_C, Ani_Pin) == 0x000358, "Member 'UUIW_Record_C::Ani_Pin' has a wrong offset!");
static_assert(offsetof(UUIW_Record_C, Btn_Close) == 0x000360, "Member 'UUIW_Record_C::Btn_Close' has a wrong offset!");
static_assert(offsetof(UUIW_Record_C, Btn_More) == 0x000368, "Member 'UUIW_Record_C::Btn_More' has a wrong offset!");
static_assert(offsetof(UUIW_Record_C, Btn_Play) == 0x000370, "Member 'UUIW_Record_C::Btn_Play' has a wrong offset!");
static_assert(offsetof(UUIW_Record_C, Btn_Stop) == 0x000378, "Member 'UUIW_Record_C::Btn_Stop' has a wrong offset!");
static_assert(offsetof(UUIW_Record_C, Img_Fx_Light) == 0x000380, "Member 'UUIW_Record_C::Img_Fx_Light' has a wrong offset!");
static_assert(offsetof(UUIW_Record_C, Img_Record) == 0x000388, "Member 'UUIW_Record_C::Img_Record' has a wrong offset!");
static_assert(offsetof(UUIW_Record_C, Img_RecordPin) == 0x000390, "Member 'UUIW_Record_C::Img_RecordPin' has a wrong offset!");
static_assert(offsetof(UUIW_Record_C, Img_TitleBg) == 0x000398, "Member 'UUIW_Record_C::Img_TitleBg' has a wrong offset!");
static_assert(offsetof(UUIW_Record_C, List) == 0x0003A0, "Member 'UUIW_Record_C::List' has a wrong offset!");
static_assert(offsetof(UUIW_Record_C, Progress) == 0x0003A8, "Member 'UUIW_Record_C::Progress' has a wrong offset!");
static_assert(offsetof(UUIW_Record_C, Record) == 0x0003B0, "Member 'UUIW_Record_C::Record' has a wrong offset!");
static_assert(offsetof(UUIW_Record_C, Text_Name) == 0x0003B8, "Member 'UUIW_Record_C::Text_Name' has a wrong offset!");
static_assert(offsetof(UUIW_Record_C, Text_PlayTime) == 0x0003C0, "Member 'UUIW_Record_C::Text_PlayTime' has a wrong offset!");
static_assert(offsetof(UUIW_Record_C, Text_Time) == 0x0003C8, "Member 'UUIW_Record_C::Text_Time' has a wrong offset!");
static_assert(offsetof(UUIW_Record_C, SelectedRecord) == 0x0003D0, "Member 'UUIW_Record_C::SelectedRecord' has a wrong offset!");
static_assert(offsetof(UUIW_Record_C, PlayRecord) == 0x0003D8, "Member 'UUIW_Record_C::PlayRecord' has a wrong offset!");
static_assert(offsetof(UUIW_Record_C, LastSelectedIndex) == 0x0003E0, "Member 'UUIW_Record_C::LastSelectedIndex' has a wrong offset!");
static_assert(offsetof(UUIW_Record_C, InPin) == 0x0003E4, "Member 'UUIW_Record_C::InPin' has a wrong offset!");
static_assert(offsetof(UUIW_Record_C, PrevPlayTimePercent) == 0x0003E8, "Member 'UUIW_Record_C::PrevPlayTimePercent' has a wrong offset!");
static_assert(offsetof(UUIW_Record_C, PredelayTimer) == 0x0003F0, "Member 'UUIW_Record_C::PredelayTimer' has a wrong offset!");
static_assert(offsetof(UUIW_Record_C, CandidateRecordForPlay) == 0x0003F8, "Member 'UUIW_Record_C::CandidateRecordForPlay' has a wrong offset!");
static_assert(offsetof(UUIW_Record_C, IsPreparingRecord) == 0x000400, "Member 'UUIW_Record_C::IsPreparingRecord' has a wrong offset!");
static_assert(offsetof(UUIW_Record_C, LPNoiseSound) == 0x000408, "Member 'UUIW_Record_C::LPNoiseSound' has a wrong offset!");
static_assert(offsetof(UUIW_Record_C, IsPassedFirst) == 0x000410, "Member 'UUIW_Record_C::IsPassedFirst' has a wrong offset!");
static_assert(offsetof(UUIW_Record_C, PendingNextCodeName) == 0x000414, "Member 'UUIW_Record_C::PendingNextCodeName' has a wrong offset!");
static_assert(offsetof(UUIW_Record_C, IsStopping) == 0x00041C, "Member 'UUIW_Record_C::IsStopping' has a wrong offset!");
static_assert(offsetof(UUIW_Record_C, ListPendingTimer) == 0x000420, "Member 'UUIW_Record_C::ListPendingTimer' has a wrong offset!");
static_assert(offsetof(UUIW_Record_C, IsInit) == 0x000428, "Member 'UUIW_Record_C::IsInit' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_FootstepVolume

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "BS_FootstepRequred_structs.hpp"
#include "PhysicsCore_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_FootstepVolume.BP_FootstepVolume_C
// 0x0030 (0x0210 - 0x01E0)
class ABP_FootstepVolume_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x01E0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBoxComponent*                          Box;                                               // 0x01E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          Active;                                            // 0x01F0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1F1[0x3];                                      // 0x01F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Priority;                                          // 0x01F4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBS_FootstepRequred                    Requred;                                           // 0x01F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPhysicalSurface                              SurfaceType;                                       // 0x0200(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_201[0x3];                                      // 0x0201(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Surface;                                           // 0x0204(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_FootstepVolume(int32 EntryPoint);
	void ReceiveBeginPlay();
	void BndEvt__Box_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void UserConstructionScript();
	void SetActive(bool Activate);

	void IsActive(bool* IsActive_0) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_FootstepVolume_C">();
	}
	static class ABP_FootstepVolume_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_FootstepVolume_C>();
	}
};
static_assert(alignof(ABP_FootstepVolume_C) == 0x000008, "Wrong alignment on ABP_FootstepVolume_C");
static_assert(sizeof(ABP_FootstepVolume_C) == 0x000210, "Wrong size on ABP_FootstepVolume_C");
static_assert(offsetof(ABP_FootstepVolume_C, UberGraphFrame) == 0x0001E0, "Member 'ABP_FootstepVolume_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_FootstepVolume_C, Box) == 0x0001E8, "Member 'ABP_FootstepVolume_C::Box' has a wrong offset!");
static_assert(offsetof(ABP_FootstepVolume_C, Active) == 0x0001F0, "Member 'ABP_FootstepVolume_C::Active' has a wrong offset!");
static_assert(offsetof(ABP_FootstepVolume_C, Priority) == 0x0001F4, "Member 'ABP_FootstepVolume_C::Priority' has a wrong offset!");
static_assert(offsetof(ABP_FootstepVolume_C, Requred) == 0x0001F8, "Member 'ABP_FootstepVolume_C::Requred' has a wrong offset!");
static_assert(offsetof(ABP_FootstepVolume_C, SurfaceType) == 0x000200, "Member 'ABP_FootstepVolume_C::SurfaceType' has a wrong offset!");
static_assert(offsetof(ABP_FootstepVolume_C, Surface) == 0x000204, "Member 'ABP_FootstepVolume_C::Surface' has a wrong offset!");

}


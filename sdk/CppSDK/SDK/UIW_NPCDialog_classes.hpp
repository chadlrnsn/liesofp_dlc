#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UIW_NPCDialog

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "UIW_Window_classes.hpp"
#include "ProjectPContentInfo_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass UIW_NPCDialog.UIW_NPCDialog_C
// 0x01C0 (0x0510 - 0x0350)
class UUIW_NPCDialog_C final : public UUIW_Window_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_UIW_NPCDialog_C;                    // 0x0350(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Ani_LieDestruct_Low;                               // 0x0358(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Ani_LieConstruct_Low;                              // 0x0360(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Ani_LieDestruct_High;                              // 0x0368(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Ani_LieConstruct_High;                             // 0x0370(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UUIW_ListItem_Lie_High_C*               Answer_High_0;                                     // 0x0378(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUIW_ListItem_Lie_High_C*               Answer_High_1;                                     // 0x0380(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUIW_ListItem_Lie_Low_C*                Answer_Low_0;                                      // 0x0388(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUIW_ListItem_Lie_Low_C*                Answer_Low_1;                                      // 0x0390(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           Basic_Dialog;                                      // 0x0398(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUIW_Btn_Key_C*                         Btn_Camera;                                        // 0x03A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUIW_Btn_Key_C*                         Btn_Exit;                                          // 0x03A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUIW_Btn_Key_C*                         Btn_Next;                                          // 0x03B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                Btn_Rotation;                                      // 0x03B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUIW_Btn_Key_C*                         Btn_Select;                                        // 0x03C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           CanvasForSetDialogEnabled;                         // 0x03C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           CanvasPanel;                                       // 0x03D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUIW_NPCDialog_GoldenTree_C*            GoldenTree_UI;                                     // 0x03D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           Group_NPCName;                                     // 0x03E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           Lie_Dialog_High;                                   // 0x03E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           Lie_Dialog_Low;                                    // 0x03F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class ULListView*                             List_Answer;                                       // 0x03F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUIW_Lie_Progress_High_C*               Progress_High;                                     // 0x0400(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUIW_Lie_Progress_Low_C*                Progress_Low;                                      // 0x0408(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UScaleBox*                              Script_Scale;                                      // 0x0410(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUIBP_LRichKeyTextBlock_C*              Text_Desc;                                         // 0x0418(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Text_Name;                                         // 0x0420(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	float                                         InitTime;                                          // 0x0428(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RemainTime;                                        // 0x042C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           ClockTimer;                                        // 0x0430(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CameraTimer;                                       // 0x0438(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           GoldenTreeTimer;                                   // 0x0440(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           AddWidgetTimer;                                    // 0x0448(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	int32                                         SelectedAnswerIndex;                               // 0x0450(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_454[0x4];                                      // 0x0454(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FText>                           AnswerDataList;                                    // 0x0458(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          IsBasicDialog;                                     // 0x0468(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_469[0x7];                                      // 0x0469(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        ClockAudio;                                        // 0x0470(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             OnSelectedLie;                                     // 0x0478(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	struct FVector2D                              StartMousePosition;                                // 0x0488(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               StartCameraRotatior;                               // 0x0490(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	int32                                         CameraHorizontalValue_Gamepad;                     // 0x049C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CameraVerticalValue_Gamepad;                       // 0x04A0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CameraHorizontalValue_Mouse;                       // 0x04A4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CameraVerticalValue_Mouse;                         // 0x04A8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         GolenTreeLimitCount;                               // 0x04AC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   WidgetName;                                        // 0x04B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        LieQuestHighSound;                                 // 0x04B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        LieQuestLowSound;                                  // 0x04C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           InputPreventTimer;                                 // 0x04C8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TArray<float>                                 MoveStepArrHorizontal;                             // 0x04D0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<float>                                 MoveStepArrVertical;                               // 0x04E0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          IsSlaveArmExchangeShop;                            // 0x04F0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4F1[0x7];                                      // 0x04F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<float>                                 MoveStepArr_Mouse;                                 // 0x04F8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          LieSelectComplete;                                 // 0x0508(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsGiveUpSelected;                                  // 0x0509(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void OnSelectedLie__DelegateSignature(int32 Index_0);
	void ExecuteUbergraph_UIW_NPCDialog(int32 EntryPoint);
	void OnGiveUpHeart(class UUIW_Popup_C* Popup, class UUIW_Btn_Key_C* BtnKey);
	void OnEndPreventInput();
	void WidgetAnimationEvt_Ani_LieConstruct_Low_K2Node_WidgetAnimationEvent_6();
	void BndEvt__UIW_NPCDialog_Answer_High_1_K2Node_ComponentBoundEvent_18_On_Focused__DelegateSignature(int32 Index_0);
	void BndEvt__UIW_NPCDialog_Answer_High_0_K2Node_ComponentBoundEvent_17_On_Focused__DelegateSignature(int32 Index_0);
	void BndEvt__UIW_NPCDialog_Answer_Low_1_K2Node_ComponentBoundEvent_16_On_Focused__DelegateSignature(int32 Index_0);
	void BndEvt__UIW_NPCDialog_Answer_Low_0_K2Node_ComponentBoundEvent_14_On_Focused__DelegateSignature(int32 Index_0);
	void WidgetAnimationEvt_Ani_LieDestruct_Low_K2Node_WidgetAnimationEvent_5();
	void WidgetAnimationEvt_Ani_LieConstruct_Low_K2Node_WidgetAnimationEvent_4();
	void BndEvt__UIW_NPCDialog_Answer_High_1_K2Node_ComponentBoundEvent_13_On_Clicked__DelegateSignature(int32 Index_0);
	void BndEvt__UIW_NPCDialog_Answer_High_0_K2Node_ComponentBoundEvent_12_On_Clicked__DelegateSignature(int32 Index_0);
	void BndEvt__UIW_NPCDialog_Answer_Low_1_K2Node_ComponentBoundEvent_11_On_Clicked__DelegateSignature(int32 Index_0);
	void BndEvt__UIW_NPCDialog_Answer_Low_0_K2Node_ComponentBoundEvent_10_On_Clicked__DelegateSignature(int32 Index_0);
	void BndEvt__UIW_NPCDialog_Btn_Drag_K2Node_ComponentBoundEvent_5_OnButtonReleasedEvent__DelegateSignature();
	void BndEvt__UIW_NPCDialog_Btn_Drag_K2Node_ComponentBoundEvent_3_OnButtonPressedEvent__DelegateSignature();
	void BndEvt__UIW_NPCDialog_Btn_Camera_K2Node_ComponentBoundEvent_2_OnAxis__DelegateSignature(class UUIW_Btn_Key_C* BtnKey, float AxisX, float AxisY, float AxisXY, float Angle);
	void WidgetAnimationEvt_Ani_LieDestruct_High_K2Node_WidgetAnimationEvent_3();
	void WidgetAnimationEvt_Ani_LieConstruct_High_K2Node_WidgetAnimationEvent_1();
	void WidgetAnimationEvt_Ani_LieConstruct_High_K2Node_WidgetAnimationEvent_0();
	void BndEvt__UIW_NPCDialog_Btn_Select_K2Node_ComponentBoundEvent_4_OnActive__DelegateSignature(class UUIW_Btn_Key_C* BtnKey);
	void Destruct();
	void BndEvt__Btn_Next_K2Node_ComponentBoundEvent_1_OnActive__DelegateSignature(class UUIW_Btn_Key_C* BtnKey);
	void BndEvt__Btn_Exit_K2Node_ComponentBoundEvent_0_OnActive__DelegateSignature(class UUIW_Btn_Key_C* BtnKey);
	void Construct();
	void RefreshData(bool NeedSoundPlay);
	void LoopTimeLow();
	void LoopTimeHigh();
	void SendToAnswer();
	void SetEnabledWindow(bool IsEnabled);
	void OnReady();
	void RequestCloseWindow();
	void OnAnswerSelected(class UObject* Item, bool bIsSelected);
	void OnAnswerHovered(class UObject* Item, bool bIsHovered);
	void OnAnswerClicked(class UObject* Item);
	void ClearClock();
	struct FEventReply FocusManage(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);
	void SetVisibilityExitButton(bool IsViewContents);
	void SetCameraRotation();
	void SetCameraInvert();
	void AddEventBinding();
	void ClearEventBinding();
	void OnChangeInput(bool bGamePad);
	void AddWidget();
	void IsNewMenu(TArray<int32>& MenuNotifies, int32 AnswerIndex, bool* IsNewMenu_0);
	void SetIsEnabledForEffect(bool Enabled);
	class UWidget* NavToTop(EUINavigation Navigation_0);
	class UWidget* NavToBottom(EUINavigation Navigation_0);
	class UWidget* NavToAnswerHigh0(EUINavigation Navigation_0);
	class UWidget* NavToAnswerHigh1(EUINavigation Navigation_0);
	class UWidget* NavToAnswerLow0(EUINavigation Navigation_0);
	class UWidget* NavToAnswerLow1(EUINavigation Navigation_0);
	void IsGiveUpHeart(bool* IsGiveUp, class FText* GiveUpText);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"UIW_NPCDialog_C">();
	}
	static class UUIW_NPCDialog_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUIW_NPCDialog_C>();
	}
};
static_assert(alignof(UUIW_NPCDialog_C) == 0x000008, "Wrong alignment on UUIW_NPCDialog_C");
static_assert(sizeof(UUIW_NPCDialog_C) == 0x000510, "Wrong size on UUIW_NPCDialog_C");
static_assert(offsetof(UUIW_NPCDialog_C, UberGraphFrame_UIW_NPCDialog_C) == 0x000350, "Member 'UUIW_NPCDialog_C::UberGraphFrame_UIW_NPCDialog_C' has a wrong offset!");
static_assert(offsetof(UUIW_NPCDialog_C, Ani_LieDestruct_Low) == 0x000358, "Member 'UUIW_NPCDialog_C::Ani_LieDestruct_Low' has a wrong offset!");
static_assert(offsetof(UUIW_NPCDialog_C, Ani_LieConstruct_Low) == 0x000360, "Member 'UUIW_NPCDialog_C::Ani_LieConstruct_Low' has a wrong offset!");
static_assert(offsetof(UUIW_NPCDialog_C, Ani_LieDestruct_High) == 0x000368, "Member 'UUIW_NPCDialog_C::Ani_LieDestruct_High' has a wrong offset!");
static_assert(offsetof(UUIW_NPCDialog_C, Ani_LieConstruct_High) == 0x000370, "Member 'UUIW_NPCDialog_C::Ani_LieConstruct_High' has a wrong offset!");
static_assert(offsetof(UUIW_NPCDialog_C, Answer_High_0) == 0x000378, "Member 'UUIW_NPCDialog_C::Answer_High_0' has a wrong offset!");
static_assert(offsetof(UUIW_NPCDialog_C, Answer_High_1) == 0x000380, "Member 'UUIW_NPCDialog_C::Answer_High_1' has a wrong offset!");
static_assert(offsetof(UUIW_NPCDialog_C, Answer_Low_0) == 0x000388, "Member 'UUIW_NPCDialog_C::Answer_Low_0' has a wrong offset!");
static_assert(offsetof(UUIW_NPCDialog_C, Answer_Low_1) == 0x000390, "Member 'UUIW_NPCDialog_C::Answer_Low_1' has a wrong offset!");
static_assert(offsetof(UUIW_NPCDialog_C, Basic_Dialog) == 0x000398, "Member 'UUIW_NPCDialog_C::Basic_Dialog' has a wrong offset!");
static_assert(offsetof(UUIW_NPCDialog_C, Btn_Camera) == 0x0003A0, "Member 'UUIW_NPCDialog_C::Btn_Camera' has a wrong offset!");
static_assert(offsetof(UUIW_NPCDialog_C, Btn_Exit) == 0x0003A8, "Member 'UUIW_NPCDialog_C::Btn_Exit' has a wrong offset!");
static_assert(offsetof(UUIW_NPCDialog_C, Btn_Next) == 0x0003B0, "Member 'UUIW_NPCDialog_C::Btn_Next' has a wrong offset!");
static_assert(offsetof(UUIW_NPCDialog_C, Btn_Rotation) == 0x0003B8, "Member 'UUIW_NPCDialog_C::Btn_Rotation' has a wrong offset!");
static_assert(offsetof(UUIW_NPCDialog_C, Btn_Select) == 0x0003C0, "Member 'UUIW_NPCDialog_C::Btn_Select' has a wrong offset!");
static_assert(offsetof(UUIW_NPCDialog_C, CanvasForSetDialogEnabled) == 0x0003C8, "Member 'UUIW_NPCDialog_C::CanvasForSetDialogEnabled' has a wrong offset!");
static_assert(offsetof(UUIW_NPCDialog_C, CanvasPanel) == 0x0003D0, "Member 'UUIW_NPCDialog_C::CanvasPanel' has a wrong offset!");
static_assert(offsetof(UUIW_NPCDialog_C, GoldenTree_UI) == 0x0003D8, "Member 'UUIW_NPCDialog_C::GoldenTree_UI' has a wrong offset!");
static_assert(offsetof(UUIW_NPCDialog_C, Group_NPCName) == 0x0003E0, "Member 'UUIW_NPCDialog_C::Group_NPCName' has a wrong offset!");
static_assert(offsetof(UUIW_NPCDialog_C, Lie_Dialog_High) == 0x0003E8, "Member 'UUIW_NPCDialog_C::Lie_Dialog_High' has a wrong offset!");
static_assert(offsetof(UUIW_NPCDialog_C, Lie_Dialog_Low) == 0x0003F0, "Member 'UUIW_NPCDialog_C::Lie_Dialog_Low' has a wrong offset!");
static_assert(offsetof(UUIW_NPCDialog_C, List_Answer) == 0x0003F8, "Member 'UUIW_NPCDialog_C::List_Answer' has a wrong offset!");
static_assert(offsetof(UUIW_NPCDialog_C, Progress_High) == 0x000400, "Member 'UUIW_NPCDialog_C::Progress_High' has a wrong offset!");
static_assert(offsetof(UUIW_NPCDialog_C, Progress_Low) == 0x000408, "Member 'UUIW_NPCDialog_C::Progress_Low' has a wrong offset!");
static_assert(offsetof(UUIW_NPCDialog_C, Script_Scale) == 0x000410, "Member 'UUIW_NPCDialog_C::Script_Scale' has a wrong offset!");
static_assert(offsetof(UUIW_NPCDialog_C, Text_Desc) == 0x000418, "Member 'UUIW_NPCDialog_C::Text_Desc' has a wrong offset!");
static_assert(offsetof(UUIW_NPCDialog_C, Text_Name) == 0x000420, "Member 'UUIW_NPCDialog_C::Text_Name' has a wrong offset!");
static_assert(offsetof(UUIW_NPCDialog_C, InitTime) == 0x000428, "Member 'UUIW_NPCDialog_C::InitTime' has a wrong offset!");
static_assert(offsetof(UUIW_NPCDialog_C, RemainTime) == 0x00042C, "Member 'UUIW_NPCDialog_C::RemainTime' has a wrong offset!");
static_assert(offsetof(UUIW_NPCDialog_C, ClockTimer) == 0x000430, "Member 'UUIW_NPCDialog_C::ClockTimer' has a wrong offset!");
static_assert(offsetof(UUIW_NPCDialog_C, CameraTimer) == 0x000438, "Member 'UUIW_NPCDialog_C::CameraTimer' has a wrong offset!");
static_assert(offsetof(UUIW_NPCDialog_C, GoldenTreeTimer) == 0x000440, "Member 'UUIW_NPCDialog_C::GoldenTreeTimer' has a wrong offset!");
static_assert(offsetof(UUIW_NPCDialog_C, AddWidgetTimer) == 0x000448, "Member 'UUIW_NPCDialog_C::AddWidgetTimer' has a wrong offset!");
static_assert(offsetof(UUIW_NPCDialog_C, SelectedAnswerIndex) == 0x000450, "Member 'UUIW_NPCDialog_C::SelectedAnswerIndex' has a wrong offset!");
static_assert(offsetof(UUIW_NPCDialog_C, AnswerDataList) == 0x000458, "Member 'UUIW_NPCDialog_C::AnswerDataList' has a wrong offset!");
static_assert(offsetof(UUIW_NPCDialog_C, IsBasicDialog) == 0x000468, "Member 'UUIW_NPCDialog_C::IsBasicDialog' has a wrong offset!");
static_assert(offsetof(UUIW_NPCDialog_C, ClockAudio) == 0x000470, "Member 'UUIW_NPCDialog_C::ClockAudio' has a wrong offset!");
static_assert(offsetof(UUIW_NPCDialog_C, OnSelectedLie) == 0x000478, "Member 'UUIW_NPCDialog_C::OnSelectedLie' has a wrong offset!");
static_assert(offsetof(UUIW_NPCDialog_C, StartMousePosition) == 0x000488, "Member 'UUIW_NPCDialog_C::StartMousePosition' has a wrong offset!");
static_assert(offsetof(UUIW_NPCDialog_C, StartCameraRotatior) == 0x000490, "Member 'UUIW_NPCDialog_C::StartCameraRotatior' has a wrong offset!");
static_assert(offsetof(UUIW_NPCDialog_C, CameraHorizontalValue_Gamepad) == 0x00049C, "Member 'UUIW_NPCDialog_C::CameraHorizontalValue_Gamepad' has a wrong offset!");
static_assert(offsetof(UUIW_NPCDialog_C, CameraVerticalValue_Gamepad) == 0x0004A0, "Member 'UUIW_NPCDialog_C::CameraVerticalValue_Gamepad' has a wrong offset!");
static_assert(offsetof(UUIW_NPCDialog_C, CameraHorizontalValue_Mouse) == 0x0004A4, "Member 'UUIW_NPCDialog_C::CameraHorizontalValue_Mouse' has a wrong offset!");
static_assert(offsetof(UUIW_NPCDialog_C, CameraVerticalValue_Mouse) == 0x0004A8, "Member 'UUIW_NPCDialog_C::CameraVerticalValue_Mouse' has a wrong offset!");
static_assert(offsetof(UUIW_NPCDialog_C, GolenTreeLimitCount) == 0x0004AC, "Member 'UUIW_NPCDialog_C::GolenTreeLimitCount' has a wrong offset!");
static_assert(offsetof(UUIW_NPCDialog_C, WidgetName) == 0x0004B0, "Member 'UUIW_NPCDialog_C::WidgetName' has a wrong offset!");
static_assert(offsetof(UUIW_NPCDialog_C, LieQuestHighSound) == 0x0004B8, "Member 'UUIW_NPCDialog_C::LieQuestHighSound' has a wrong offset!");
static_assert(offsetof(UUIW_NPCDialog_C, LieQuestLowSound) == 0x0004C0, "Member 'UUIW_NPCDialog_C::LieQuestLowSound' has a wrong offset!");
static_assert(offsetof(UUIW_NPCDialog_C, InputPreventTimer) == 0x0004C8, "Member 'UUIW_NPCDialog_C::InputPreventTimer' has a wrong offset!");
static_assert(offsetof(UUIW_NPCDialog_C, MoveStepArrHorizontal) == 0x0004D0, "Member 'UUIW_NPCDialog_C::MoveStepArrHorizontal' has a wrong offset!");
static_assert(offsetof(UUIW_NPCDialog_C, MoveStepArrVertical) == 0x0004E0, "Member 'UUIW_NPCDialog_C::MoveStepArrVertical' has a wrong offset!");
static_assert(offsetof(UUIW_NPCDialog_C, IsSlaveArmExchangeShop) == 0x0004F0, "Member 'UUIW_NPCDialog_C::IsSlaveArmExchangeShop' has a wrong offset!");
static_assert(offsetof(UUIW_NPCDialog_C, MoveStepArr_Mouse) == 0x0004F8, "Member 'UUIW_NPCDialog_C::MoveStepArr_Mouse' has a wrong offset!");
static_assert(offsetof(UUIW_NPCDialog_C, LieSelectComplete) == 0x000508, "Member 'UUIW_NPCDialog_C::LieSelectComplete' has a wrong offset!");
static_assert(offsetof(UUIW_NPCDialog_C, IsGiveUpSelected) == 0x000509, "Member 'UUIW_NPCDialog_C::IsGiveUpSelected' has a wrong offset!");

}


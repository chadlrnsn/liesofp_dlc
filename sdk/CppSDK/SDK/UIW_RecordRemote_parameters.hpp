#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UIW_RecordRemote

#include "Basic.hpp"

#include "UIST_Time_structs.hpp"
#include "ProjectPContentInfo_structs.hpp"
#include "ProjectP_structs.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function UIW_RecordRemote.UIW_RecordRemote_C.ExecuteUbergraph_UIW_RecordRemote
// 0x01E8 (0x01E8 - 0x0000)
struct UIW_RecordRemote_C_ExecuteUbergraph_UIW_RecordRemote final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(class FName EventName, bool IsStart)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x0014(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ULEventDispatcherSystem*                CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULSoundSystem*                          CallFunc_GetGameInstanceSubsystem_ReturnValue_1;   // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULSoundSystem*                          CallFunc_GetGameInstanceSubsystem_ReturnValue_2;   // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(bool IsPlay)>                  K2Node_CreateDelegate_OutputDelegate_2;            // 0x0040(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(class USoundWave* PlayingSoundWave, float PlaybackPercent)> K2Node_CreateDelegate_OutputDelegate_3;            // 0x0050(0x0010)(ZeroConstructor, NoDestructor)
	class ULEventDispatcherSystem*                CallFunc_GetGameInstanceSubsystem_ReturnValue_3;   // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUIW_Btn_Key_C*                         K2Node_ComponentBoundEvent_BtnKey_3;               // 0x0068(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUIW_Btn_Key_C*                         K2Node_ComponentBoundEvent_BtnKey_2;               // 0x0070(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUIW_Btn_Key_C*                         K2Node_ComponentBoundEvent_BtnKey_1;               // 0x0078(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUIW_Btn_Key_C*                         K2Node_ComponentBoundEvent_BtnKey;                 // 0x0080(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName CategoryName)>     K2Node_CreateDelegate_OutputDelegate_4;            // 0x0088(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_CategoryName;                   // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchName_CmpSuccess;                      // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A2[0x6];                                       // 0x00A2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ULSoundSystem*                          CallFunc_GetGameInstanceSubsystem_ReturnValue_4;   // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class ULItem* Item, int32 Count)> K2Node_CreateDelegate_OutputDelegate_5;            // 0x00B0(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   CallFunc_FindPlayableRecordFromPlayingNow_ReturnValue; // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULItem*                                 K2Node_CustomEvent_Item;                           // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_Count;                          // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoPlayRecord_ReturnValue;                 // 0x00D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D5[0x3];                                       // 0x00D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FItemCollectionInfoPtr                 CallFunc_GetCollectionInfo_ReturnValue;            // 0x00D8(0x0008)(NoDestructor)
	int32                                         CallFunc_GetPageMax_ReturnValue;                   // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EContentInfoExecutePin                        CallFunc_IsValidBranch_Branches;                   // 0x00E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x00E5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x00E6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E7[0x1];                                       // 0x00E7(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class ULSoundSystem*                          CallFunc_GetGameInstanceSubsystem_ReturnValue_5;   // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULSoundSystem*                          CallFunc_GetGameInstanceSubsystem_ReturnValue_6;   // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_FindPlayableRecordFromPlayingNow_ReturnValue_1; // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoPlayRecord_ReturnValue_1;               // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_101[0x3];                                      // 0x0101(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_6;            // 0x0104(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_114[0x4];                                      // 0x0114(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0118(0x0008)(NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetRenderTransformAngle_ReturnValue;      // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_129[0x3];                                      // 0x0129(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(ESlateVisibility InVisibility)> K2Node_CreateDelegate_OutputDelegate_7;            // 0x012C(0x0010)(ZeroConstructor, NoDestructor)
	ESlateVisibility                              K2Node_CustomEvent_InVisibility;                   // 0x013C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x013D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_13E[0x2];                                      // 0x013E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UUIW_Main_C*                            CallFunc_GetMainWidget_MainWidget;                 // 0x0140(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FUIST_Time                             CallFunc_GetDataTableRowFromName_OutRow;           // 0x0148(0x0018)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_161[0x3];                                      // 0x0161(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_EventName;                      // 0x0164(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_IsStart;                        // 0x016C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x016D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_16E[0x2];                                      // 0x016E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_8;            // 0x0170(0x0010)(ZeroConstructor, NoDestructor)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_1;        // 0x0180(0x0008)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_9;            // 0x018C(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x019C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(bool IsPlayStart, class FName RecordCodeName)> K2Node_CreateDelegate_OutputDelegate_10;           // 0x01A0(0x0010)(ZeroConstructor, NoDestructor)
	class ULItemSystem*                           CallFunc_GetGameInstanceSubsystem_ReturnValue_7;   // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUIW_Main_C*                            CallFunc_GetMainWidget_MainWidget_1;               // 0x01B8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULPlayerInventory*                      CallFunc_GetPlayerInventory_ReturnValue;           // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_IsPlay;                         // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsVisible_ReturnValue_1;                  // 0x01C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlayingSequence_ReturnValue;            // 0x01CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlayingSequence_ReturnValue_1;          // 0x01CB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x01CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x01CD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x01CE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x01CF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlayingSequence_ReturnValue_2;          // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlayingSequence_ReturnValue_3;          // 0x01D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x01D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_4;                // 0x01D3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x01D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x01D5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D6[0x2];                                      // 0x01D6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTweenEase                             K2Node_MakeStruct_TweenEase;                       // 0x01D8(0x000C)(NoDestructor)
};
static_assert(alignof(UIW_RecordRemote_C_ExecuteUbergraph_UIW_RecordRemote) == 0x000008, "Wrong alignment on UIW_RecordRemote_C_ExecuteUbergraph_UIW_RecordRemote");
static_assert(sizeof(UIW_RecordRemote_C_ExecuteUbergraph_UIW_RecordRemote) == 0x0001E8, "Wrong size on UIW_RecordRemote_C_ExecuteUbergraph_UIW_RecordRemote");
static_assert(offsetof(UIW_RecordRemote_C_ExecuteUbergraph_UIW_RecordRemote, EntryPoint) == 0x000000, "Member 'UIW_RecordRemote_C_ExecuteUbergraph_UIW_RecordRemote::EntryPoint' has a wrong offset!");
static_assert(offsetof(UIW_RecordRemote_C_ExecuteUbergraph_UIW_RecordRemote, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'UIW_RecordRemote_C_ExecuteUbergraph_UIW_RecordRemote::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(UIW_RecordRemote_C_ExecuteUbergraph_UIW_RecordRemote, K2Node_CreateDelegate_OutputDelegate_1) == 0x000014, "Member 'UIW_RecordRemote_C_ExecuteUbergraph_UIW_RecordRemote::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(UIW_RecordRemote_C_ExecuteUbergraph_UIW_RecordRemote, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000028, "Member 'UIW_RecordRemote_C_ExecuteUbergraph_UIW_RecordRemote::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_RecordRemote_C_ExecuteUbergraph_UIW_RecordRemote, CallFunc_GetGameInstanceSubsystem_ReturnValue_1) == 0x000030, "Member 'UIW_RecordRemote_C_ExecuteUbergraph_UIW_RecordRemote::CallFunc_GetGameInstanceSubsystem_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UIW_RecordRemote_C_ExecuteUbergraph_UIW_RecordRemote, CallFunc_GetGameInstanceSubsystem_ReturnValue_2) == 0x000038, "Member 'UIW_RecordRemote_C_ExecuteUbergraph_UIW_RecordRemote::CallFunc_GetGameInstanceSubsystem_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UIW_RecordRemote_C_ExecuteUbergraph_UIW_RecordRemote, K2Node_CreateDelegate_OutputDelegate_2) == 0x000040, "Member 'UIW_RecordRemote_C_ExecuteUbergraph_UIW_RecordRemote::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(UIW_RecordRemote_C_ExecuteUbergraph_UIW_RecordRemote, K2Node_CreateDelegate_OutputDelegate_3) == 0x000050, "Member 'UIW_RecordRemote_C_ExecuteUbergraph_UIW_RecordRemote::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(UIW_RecordRemote_C_ExecuteUbergraph_UIW_RecordRemote, CallFunc_GetGameInstanceSubsystem_ReturnValue_3) == 0x000060, "Member 'UIW_RecordRemote_C_ExecuteUbergraph_UIW_RecordRemote::CallFunc_GetGameInstanceSubsystem_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(UIW_RecordRemote_C_ExecuteUbergraph_UIW_RecordRemote, K2Node_ComponentBoundEvent_BtnKey_3) == 0x000068, "Member 'UIW_RecordRemote_C_ExecuteUbergraph_UIW_RecordRemote::K2Node_ComponentBoundEvent_BtnKey_3' has a wrong offset!");
static_assert(offsetof(UIW_RecordRemote_C_ExecuteUbergraph_UIW_RecordRemote, K2Node_ComponentBoundEvent_BtnKey_2) == 0x000070, "Member 'UIW_RecordRemote_C_ExecuteUbergraph_UIW_RecordRemote::K2Node_ComponentBoundEvent_BtnKey_2' has a wrong offset!");
static_assert(offsetof(UIW_RecordRemote_C_ExecuteUbergraph_UIW_RecordRemote, K2Node_ComponentBoundEvent_BtnKey_1) == 0x000078, "Member 'UIW_RecordRemote_C_ExecuteUbergraph_UIW_RecordRemote::K2Node_ComponentBoundEvent_BtnKey_1' has a wrong offset!");
static_assert(offsetof(UIW_RecordRemote_C_ExecuteUbergraph_UIW_RecordRemote, K2Node_ComponentBoundEvent_BtnKey) == 0x000080, "Member 'UIW_RecordRemote_C_ExecuteUbergraph_UIW_RecordRemote::K2Node_ComponentBoundEvent_BtnKey' has a wrong offset!");
static_assert(offsetof(UIW_RecordRemote_C_ExecuteUbergraph_UIW_RecordRemote, K2Node_CreateDelegate_OutputDelegate_4) == 0x000088, "Member 'UIW_RecordRemote_C_ExecuteUbergraph_UIW_RecordRemote::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(UIW_RecordRemote_C_ExecuteUbergraph_UIW_RecordRemote, K2Node_CustomEvent_CategoryName) == 0x000098, "Member 'UIW_RecordRemote_C_ExecuteUbergraph_UIW_RecordRemote::K2Node_CustomEvent_CategoryName' has a wrong offset!");
static_assert(offsetof(UIW_RecordRemote_C_ExecuteUbergraph_UIW_RecordRemote, K2Node_SwitchName_CmpSuccess) == 0x0000A0, "Member 'UIW_RecordRemote_C_ExecuteUbergraph_UIW_RecordRemote::K2Node_SwitchName_CmpSuccess' has a wrong offset!");
static_assert(offsetof(UIW_RecordRemote_C_ExecuteUbergraph_UIW_RecordRemote, CallFunc_Not_PreBool_ReturnValue) == 0x0000A1, "Member 'UIW_RecordRemote_C_ExecuteUbergraph_UIW_RecordRemote::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_RecordRemote_C_ExecuteUbergraph_UIW_RecordRemote, CallFunc_GetGameInstanceSubsystem_ReturnValue_4) == 0x0000A8, "Member 'UIW_RecordRemote_C_ExecuteUbergraph_UIW_RecordRemote::CallFunc_GetGameInstanceSubsystem_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(UIW_RecordRemote_C_ExecuteUbergraph_UIW_RecordRemote, K2Node_CreateDelegate_OutputDelegate_5) == 0x0000B0, "Member 'UIW_RecordRemote_C_ExecuteUbergraph_UIW_RecordRemote::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(UIW_RecordRemote_C_ExecuteUbergraph_UIW_RecordRemote, CallFunc_FindPlayableRecordFromPlayingNow_ReturnValue) == 0x0000C0, "Member 'UIW_RecordRemote_C_ExecuteUbergraph_UIW_RecordRemote::CallFunc_FindPlayableRecordFromPlayingNow_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_RecordRemote_C_ExecuteUbergraph_UIW_RecordRemote, K2Node_CustomEvent_Item) == 0x0000C8, "Member 'UIW_RecordRemote_C_ExecuteUbergraph_UIW_RecordRemote::K2Node_CustomEvent_Item' has a wrong offset!");
static_assert(offsetof(UIW_RecordRemote_C_ExecuteUbergraph_UIW_RecordRemote, K2Node_CustomEvent_Count) == 0x0000D0, "Member 'UIW_RecordRemote_C_ExecuteUbergraph_UIW_RecordRemote::K2Node_CustomEvent_Count' has a wrong offset!");
static_assert(offsetof(UIW_RecordRemote_C_ExecuteUbergraph_UIW_RecordRemote, CallFunc_DoPlayRecord_ReturnValue) == 0x0000D4, "Member 'UIW_RecordRemote_C_ExecuteUbergraph_UIW_RecordRemote::CallFunc_DoPlayRecord_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_RecordRemote_C_ExecuteUbergraph_UIW_RecordRemote, CallFunc_GetCollectionInfo_ReturnValue) == 0x0000D8, "Member 'UIW_RecordRemote_C_ExecuteUbergraph_UIW_RecordRemote::CallFunc_GetCollectionInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_RecordRemote_C_ExecuteUbergraph_UIW_RecordRemote, CallFunc_GetPageMax_ReturnValue) == 0x0000E0, "Member 'UIW_RecordRemote_C_ExecuteUbergraph_UIW_RecordRemote::CallFunc_GetPageMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_RecordRemote_C_ExecuteUbergraph_UIW_RecordRemote, CallFunc_IsValidBranch_Branches) == 0x0000E4, "Member 'UIW_RecordRemote_C_ExecuteUbergraph_UIW_RecordRemote::CallFunc_IsValidBranch_Branches' has a wrong offset!");
static_assert(offsetof(UIW_RecordRemote_C_ExecuteUbergraph_UIW_RecordRemote, CallFunc_Greater_IntInt_ReturnValue) == 0x0000E5, "Member 'UIW_RecordRemote_C_ExecuteUbergraph_UIW_RecordRemote::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_RecordRemote_C_ExecuteUbergraph_UIW_RecordRemote, K2Node_SwitchEnum_CmpSuccess) == 0x0000E6, "Member 'UIW_RecordRemote_C_ExecuteUbergraph_UIW_RecordRemote::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(UIW_RecordRemote_C_ExecuteUbergraph_UIW_RecordRemote, CallFunc_GetGameInstanceSubsystem_ReturnValue_5) == 0x0000E8, "Member 'UIW_RecordRemote_C_ExecuteUbergraph_UIW_RecordRemote::CallFunc_GetGameInstanceSubsystem_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(UIW_RecordRemote_C_ExecuteUbergraph_UIW_RecordRemote, CallFunc_GetGameInstanceSubsystem_ReturnValue_6) == 0x0000F0, "Member 'UIW_RecordRemote_C_ExecuteUbergraph_UIW_RecordRemote::CallFunc_GetGameInstanceSubsystem_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(UIW_RecordRemote_C_ExecuteUbergraph_UIW_RecordRemote, CallFunc_FindPlayableRecordFromPlayingNow_ReturnValue_1) == 0x0000F8, "Member 'UIW_RecordRemote_C_ExecuteUbergraph_UIW_RecordRemote::CallFunc_FindPlayableRecordFromPlayingNow_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UIW_RecordRemote_C_ExecuteUbergraph_UIW_RecordRemote, CallFunc_DoPlayRecord_ReturnValue_1) == 0x000100, "Member 'UIW_RecordRemote_C_ExecuteUbergraph_UIW_RecordRemote::CallFunc_DoPlayRecord_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UIW_RecordRemote_C_ExecuteUbergraph_UIW_RecordRemote, K2Node_CreateDelegate_OutputDelegate_6) == 0x000104, "Member 'UIW_RecordRemote_C_ExecuteUbergraph_UIW_RecordRemote::K2Node_CreateDelegate_OutputDelegate_6' has a wrong offset!");
static_assert(offsetof(UIW_RecordRemote_C_ExecuteUbergraph_UIW_RecordRemote, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000118, "Member 'UIW_RecordRemote_C_ExecuteUbergraph_UIW_RecordRemote::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_RecordRemote_C_ExecuteUbergraph_UIW_RecordRemote, CallFunc_GetRenderTransformAngle_ReturnValue) == 0x000120, "Member 'UIW_RecordRemote_C_ExecuteUbergraph_UIW_RecordRemote::CallFunc_GetRenderTransformAngle_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_RecordRemote_C_ExecuteUbergraph_UIW_RecordRemote, CallFunc_Add_FloatFloat_ReturnValue) == 0x000124, "Member 'UIW_RecordRemote_C_ExecuteUbergraph_UIW_RecordRemote::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_RecordRemote_C_ExecuteUbergraph_UIW_RecordRemote, CallFunc_IsVisible_ReturnValue) == 0x000128, "Member 'UIW_RecordRemote_C_ExecuteUbergraph_UIW_RecordRemote::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_RecordRemote_C_ExecuteUbergraph_UIW_RecordRemote, K2Node_CreateDelegate_OutputDelegate_7) == 0x00012C, "Member 'UIW_RecordRemote_C_ExecuteUbergraph_UIW_RecordRemote::K2Node_CreateDelegate_OutputDelegate_7' has a wrong offset!");
static_assert(offsetof(UIW_RecordRemote_C_ExecuteUbergraph_UIW_RecordRemote, K2Node_CustomEvent_InVisibility) == 0x00013C, "Member 'UIW_RecordRemote_C_ExecuteUbergraph_UIW_RecordRemote::K2Node_CustomEvent_InVisibility' has a wrong offset!");
static_assert(offsetof(UIW_RecordRemote_C_ExecuteUbergraph_UIW_RecordRemote, K2Node_SwitchEnum_CmpSuccess_1) == 0x00013D, "Member 'UIW_RecordRemote_C_ExecuteUbergraph_UIW_RecordRemote::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(UIW_RecordRemote_C_ExecuteUbergraph_UIW_RecordRemote, CallFunc_GetMainWidget_MainWidget) == 0x000140, "Member 'UIW_RecordRemote_C_ExecuteUbergraph_UIW_RecordRemote::CallFunc_GetMainWidget_MainWidget' has a wrong offset!");
static_assert(offsetof(UIW_RecordRemote_C_ExecuteUbergraph_UIW_RecordRemote, CallFunc_GetDataTableRowFromName_OutRow) == 0x000148, "Member 'UIW_RecordRemote_C_ExecuteUbergraph_UIW_RecordRemote::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(UIW_RecordRemote_C_ExecuteUbergraph_UIW_RecordRemote, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000160, "Member 'UIW_RecordRemote_C_ExecuteUbergraph_UIW_RecordRemote::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_RecordRemote_C_ExecuteUbergraph_UIW_RecordRemote, K2Node_CustomEvent_EventName) == 0x000164, "Member 'UIW_RecordRemote_C_ExecuteUbergraph_UIW_RecordRemote::K2Node_CustomEvent_EventName' has a wrong offset!");
static_assert(offsetof(UIW_RecordRemote_C_ExecuteUbergraph_UIW_RecordRemote, K2Node_CustomEvent_IsStart) == 0x00016C, "Member 'UIW_RecordRemote_C_ExecuteUbergraph_UIW_RecordRemote::K2Node_CustomEvent_IsStart' has a wrong offset!");
static_assert(offsetof(UIW_RecordRemote_C_ExecuteUbergraph_UIW_RecordRemote, CallFunc_BooleanOR_ReturnValue) == 0x00016D, "Member 'UIW_RecordRemote_C_ExecuteUbergraph_UIW_RecordRemote::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_RecordRemote_C_ExecuteUbergraph_UIW_RecordRemote, K2Node_CreateDelegate_OutputDelegate_8) == 0x000170, "Member 'UIW_RecordRemote_C_ExecuteUbergraph_UIW_RecordRemote::K2Node_CreateDelegate_OutputDelegate_8' has a wrong offset!");
static_assert(offsetof(UIW_RecordRemote_C_ExecuteUbergraph_UIW_RecordRemote, CallFunc_K2_SetTimerDelegate_ReturnValue_1) == 0x000180, "Member 'UIW_RecordRemote_C_ExecuteUbergraph_UIW_RecordRemote::CallFunc_K2_SetTimerDelegate_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UIW_RecordRemote_C_ExecuteUbergraph_UIW_RecordRemote, CallFunc_Subtract_IntInt_ReturnValue) == 0x000188, "Member 'UIW_RecordRemote_C_ExecuteUbergraph_UIW_RecordRemote::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_RecordRemote_C_ExecuteUbergraph_UIW_RecordRemote, K2Node_CreateDelegate_OutputDelegate_9) == 0x00018C, "Member 'UIW_RecordRemote_C_ExecuteUbergraph_UIW_RecordRemote::K2Node_CreateDelegate_OutputDelegate_9' has a wrong offset!");
static_assert(offsetof(UIW_RecordRemote_C_ExecuteUbergraph_UIW_RecordRemote, CallFunc_Add_IntInt_ReturnValue) == 0x00019C, "Member 'UIW_RecordRemote_C_ExecuteUbergraph_UIW_RecordRemote::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_RecordRemote_C_ExecuteUbergraph_UIW_RecordRemote, K2Node_CreateDelegate_OutputDelegate_10) == 0x0001A0, "Member 'UIW_RecordRemote_C_ExecuteUbergraph_UIW_RecordRemote::K2Node_CreateDelegate_OutputDelegate_10' has a wrong offset!");
static_assert(offsetof(UIW_RecordRemote_C_ExecuteUbergraph_UIW_RecordRemote, CallFunc_GetGameInstanceSubsystem_ReturnValue_7) == 0x0001B0, "Member 'UIW_RecordRemote_C_ExecuteUbergraph_UIW_RecordRemote::CallFunc_GetGameInstanceSubsystem_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(UIW_RecordRemote_C_ExecuteUbergraph_UIW_RecordRemote, CallFunc_GetMainWidget_MainWidget_1) == 0x0001B8, "Member 'UIW_RecordRemote_C_ExecuteUbergraph_UIW_RecordRemote::CallFunc_GetMainWidget_MainWidget_1' has a wrong offset!");
static_assert(offsetof(UIW_RecordRemote_C_ExecuteUbergraph_UIW_RecordRemote, CallFunc_GetPlayerInventory_ReturnValue) == 0x0001C0, "Member 'UIW_RecordRemote_C_ExecuteUbergraph_UIW_RecordRemote::CallFunc_GetPlayerInventory_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_RecordRemote_C_ExecuteUbergraph_UIW_RecordRemote, K2Node_CustomEvent_IsPlay) == 0x0001C8, "Member 'UIW_RecordRemote_C_ExecuteUbergraph_UIW_RecordRemote::K2Node_CustomEvent_IsPlay' has a wrong offset!");
static_assert(offsetof(UIW_RecordRemote_C_ExecuteUbergraph_UIW_RecordRemote, CallFunc_IsVisible_ReturnValue_1) == 0x0001C9, "Member 'UIW_RecordRemote_C_ExecuteUbergraph_UIW_RecordRemote::CallFunc_IsVisible_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UIW_RecordRemote_C_ExecuteUbergraph_UIW_RecordRemote, CallFunc_IsPlayingSequence_ReturnValue) == 0x0001CA, "Member 'UIW_RecordRemote_C_ExecuteUbergraph_UIW_RecordRemote::CallFunc_IsPlayingSequence_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_RecordRemote_C_ExecuteUbergraph_UIW_RecordRemote, CallFunc_IsPlayingSequence_ReturnValue_1) == 0x0001CB, "Member 'UIW_RecordRemote_C_ExecuteUbergraph_UIW_RecordRemote::CallFunc_IsPlayingSequence_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UIW_RecordRemote_C_ExecuteUbergraph_UIW_RecordRemote, CallFunc_Not_PreBool_ReturnValue_1) == 0x0001CC, "Member 'UIW_RecordRemote_C_ExecuteUbergraph_UIW_RecordRemote::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UIW_RecordRemote_C_ExecuteUbergraph_UIW_RecordRemote, CallFunc_Not_PreBool_ReturnValue_2) == 0x0001CD, "Member 'UIW_RecordRemote_C_ExecuteUbergraph_UIW_RecordRemote::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UIW_RecordRemote_C_ExecuteUbergraph_UIW_RecordRemote, CallFunc_BooleanAND_ReturnValue) == 0x0001CE, "Member 'UIW_RecordRemote_C_ExecuteUbergraph_UIW_RecordRemote::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_RecordRemote_C_ExecuteUbergraph_UIW_RecordRemote, CallFunc_BooleanAND_ReturnValue_1) == 0x0001CF, "Member 'UIW_RecordRemote_C_ExecuteUbergraph_UIW_RecordRemote::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UIW_RecordRemote_C_ExecuteUbergraph_UIW_RecordRemote, CallFunc_IsPlayingSequence_ReturnValue_2) == 0x0001D0, "Member 'UIW_RecordRemote_C_ExecuteUbergraph_UIW_RecordRemote::CallFunc_IsPlayingSequence_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UIW_RecordRemote_C_ExecuteUbergraph_UIW_RecordRemote, CallFunc_IsPlayingSequence_ReturnValue_3) == 0x0001D1, "Member 'UIW_RecordRemote_C_ExecuteUbergraph_UIW_RecordRemote::CallFunc_IsPlayingSequence_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(UIW_RecordRemote_C_ExecuteUbergraph_UIW_RecordRemote, CallFunc_Not_PreBool_ReturnValue_3) == 0x0001D2, "Member 'UIW_RecordRemote_C_ExecuteUbergraph_UIW_RecordRemote::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(UIW_RecordRemote_C_ExecuteUbergraph_UIW_RecordRemote, CallFunc_Not_PreBool_ReturnValue_4) == 0x0001D3, "Member 'UIW_RecordRemote_C_ExecuteUbergraph_UIW_RecordRemote::CallFunc_Not_PreBool_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(UIW_RecordRemote_C_ExecuteUbergraph_UIW_RecordRemote, CallFunc_BooleanAND_ReturnValue_2) == 0x0001D4, "Member 'UIW_RecordRemote_C_ExecuteUbergraph_UIW_RecordRemote::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UIW_RecordRemote_C_ExecuteUbergraph_UIW_RecordRemote, CallFunc_BooleanAND_ReturnValue_3) == 0x0001D5, "Member 'UIW_RecordRemote_C_ExecuteUbergraph_UIW_RecordRemote::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(UIW_RecordRemote_C_ExecuteUbergraph_UIW_RecordRemote, K2Node_MakeStruct_TweenEase) == 0x0001D8, "Member 'UIW_RecordRemote_C_ExecuteUbergraph_UIW_RecordRemote::K2Node_MakeStruct_TweenEase' has a wrong offset!");

// Function UIW_RecordRemote.UIW_RecordRemote_C.OnRecordStop
// 0x0001 (0x0001 - 0x0000)
struct UIW_RecordRemote_C_OnRecordStop final
{
public:
	bool                                          IsPlay;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UIW_RecordRemote_C_OnRecordStop) == 0x000001, "Wrong alignment on UIW_RecordRemote_C_OnRecordStop");
static_assert(sizeof(UIW_RecordRemote_C_OnRecordStop) == 0x000001, "Wrong size on UIW_RecordRemote_C_OnRecordStop");
static_assert(offsetof(UIW_RecordRemote_C_OnRecordStop, IsPlay) == 0x000000, "Member 'UIW_RecordRemote_C_OnRecordStop::IsPlay' has a wrong offset!");

// Function UIW_RecordRemote.UIW_RecordRemote_C.OnHUDEvent
// 0x000C (0x000C - 0x0000)
struct UIW_RecordRemote_C_OnHUDEvent final
{
public:
	class FName                                   EventName;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsStart;                                           // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UIW_RecordRemote_C_OnHUDEvent) == 0x000004, "Wrong alignment on UIW_RecordRemote_C_OnHUDEvent");
static_assert(sizeof(UIW_RecordRemote_C_OnHUDEvent) == 0x00000C, "Wrong size on UIW_RecordRemote_C_OnHUDEvent");
static_assert(offsetof(UIW_RecordRemote_C_OnHUDEvent, EventName) == 0x000000, "Member 'UIW_RecordRemote_C_OnHUDEvent::EventName' has a wrong offset!");
static_assert(offsetof(UIW_RecordRemote_C_OnHUDEvent, IsStart) == 0x000008, "Member 'UIW_RecordRemote_C_OnHUDEvent::IsStart' has a wrong offset!");

// Function UIW_RecordRemote.UIW_RecordRemote_C.OnVisibilityChange
// 0x0001 (0x0001 - 0x0000)
struct UIW_RecordRemote_C_OnVisibilityChange final
{
public:
	ESlateVisibility                              InVisibility;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UIW_RecordRemote_C_OnVisibilityChange) == 0x000001, "Wrong alignment on UIW_RecordRemote_C_OnVisibilityChange");
static_assert(sizeof(UIW_RecordRemote_C_OnVisibilityChange) == 0x000001, "Wrong size on UIW_RecordRemote_C_OnVisibilityChange");
static_assert(offsetof(UIW_RecordRemote_C_OnVisibilityChange, InVisibility) == 0x000000, "Member 'UIW_RecordRemote_C_OnVisibilityChange::InVisibility' has a wrong offset!");

// Function UIW_RecordRemote.UIW_RecordRemote_C.OnLetterPreviewEvent
// 0x0010 (0x0010 - 0x0000)
struct UIW_RecordRemote_C_OnLetterPreviewEvent final
{
public:
	class ULItem*                                 Item;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Count;                                             // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UIW_RecordRemote_C_OnLetterPreviewEvent) == 0x000008, "Wrong alignment on UIW_RecordRemote_C_OnLetterPreviewEvent");
static_assert(sizeof(UIW_RecordRemote_C_OnLetterPreviewEvent) == 0x000010, "Wrong size on UIW_RecordRemote_C_OnLetterPreviewEvent");
static_assert(offsetof(UIW_RecordRemote_C_OnLetterPreviewEvent, Item) == 0x000000, "Member 'UIW_RecordRemote_C_OnLetterPreviewEvent::Item' has a wrong offset!");
static_assert(offsetof(UIW_RecordRemote_C_OnLetterPreviewEvent, Count) == 0x000008, "Member 'UIW_RecordRemote_C_OnLetterPreviewEvent::Count' has a wrong offset!");

// Function UIW_RecordRemote.UIW_RecordRemote_C.OnTweenComplete
// 0x0008 (0x0008 - 0x0000)
struct UIW_RecordRemote_C_OnTweenComplete final
{
public:
	class FName                                   CategoryName;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UIW_RecordRemote_C_OnTweenComplete) == 0x000004, "Wrong alignment on UIW_RecordRemote_C_OnTweenComplete");
static_assert(sizeof(UIW_RecordRemote_C_OnTweenComplete) == 0x000008, "Wrong size on UIW_RecordRemote_C_OnTweenComplete");
static_assert(offsetof(UIW_RecordRemote_C_OnTweenComplete, CategoryName) == 0x000000, "Member 'UIW_RecordRemote_C_OnTweenComplete::CategoryName' has a wrong offset!");

// Function UIW_RecordRemote.UIW_RecordRemote_C.BndEvt__UIW_HUD_Btn_Stop_K2Node_ComponentBoundEvent_3_OnActive__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct UIW_RecordRemote_C_BndEvt__UIW_HUD_Btn_Stop_K2Node_ComponentBoundEvent_3_OnActive__DelegateSignature final
{
public:
	class UUIW_Btn_Key_C*                         BtnKey;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UIW_RecordRemote_C_BndEvt__UIW_HUD_Btn_Stop_K2Node_ComponentBoundEvent_3_OnActive__DelegateSignature) == 0x000008, "Wrong alignment on UIW_RecordRemote_C_BndEvt__UIW_HUD_Btn_Stop_K2Node_ComponentBoundEvent_3_OnActive__DelegateSignature");
static_assert(sizeof(UIW_RecordRemote_C_BndEvt__UIW_HUD_Btn_Stop_K2Node_ComponentBoundEvent_3_OnActive__DelegateSignature) == 0x000008, "Wrong size on UIW_RecordRemote_C_BndEvt__UIW_HUD_Btn_Stop_K2Node_ComponentBoundEvent_3_OnActive__DelegateSignature");
static_assert(offsetof(UIW_RecordRemote_C_BndEvt__UIW_HUD_Btn_Stop_K2Node_ComponentBoundEvent_3_OnActive__DelegateSignature, BtnKey) == 0x000000, "Member 'UIW_RecordRemote_C_BndEvt__UIW_HUD_Btn_Stop_K2Node_ComponentBoundEvent_3_OnActive__DelegateSignature::BtnKey' has a wrong offset!");

// Function UIW_RecordRemote.UIW_RecordRemote_C.BndEvt__UIW_HUD_Btn_Next_K2Node_ComponentBoundEvent_2_OnActive__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct UIW_RecordRemote_C_BndEvt__UIW_HUD_Btn_Next_K2Node_ComponentBoundEvent_2_OnActive__DelegateSignature final
{
public:
	class UUIW_Btn_Key_C*                         BtnKey;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UIW_RecordRemote_C_BndEvt__UIW_HUD_Btn_Next_K2Node_ComponentBoundEvent_2_OnActive__DelegateSignature) == 0x000008, "Wrong alignment on UIW_RecordRemote_C_BndEvt__UIW_HUD_Btn_Next_K2Node_ComponentBoundEvent_2_OnActive__DelegateSignature");
static_assert(sizeof(UIW_RecordRemote_C_BndEvt__UIW_HUD_Btn_Next_K2Node_ComponentBoundEvent_2_OnActive__DelegateSignature) == 0x000008, "Wrong size on UIW_RecordRemote_C_BndEvt__UIW_HUD_Btn_Next_K2Node_ComponentBoundEvent_2_OnActive__DelegateSignature");
static_assert(offsetof(UIW_RecordRemote_C_BndEvt__UIW_HUD_Btn_Next_K2Node_ComponentBoundEvent_2_OnActive__DelegateSignature, BtnKey) == 0x000000, "Member 'UIW_RecordRemote_C_BndEvt__UIW_HUD_Btn_Next_K2Node_ComponentBoundEvent_2_OnActive__DelegateSignature::BtnKey' has a wrong offset!");

// Function UIW_RecordRemote.UIW_RecordRemote_C.BndEvt__UIW_HUD_Btn_Prev_K2Node_ComponentBoundEvent_1_OnActive__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct UIW_RecordRemote_C_BndEvt__UIW_HUD_Btn_Prev_K2Node_ComponentBoundEvent_1_OnActive__DelegateSignature final
{
public:
	class UUIW_Btn_Key_C*                         BtnKey;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UIW_RecordRemote_C_BndEvt__UIW_HUD_Btn_Prev_K2Node_ComponentBoundEvent_1_OnActive__DelegateSignature) == 0x000008, "Wrong alignment on UIW_RecordRemote_C_BndEvt__UIW_HUD_Btn_Prev_K2Node_ComponentBoundEvent_1_OnActive__DelegateSignature");
static_assert(sizeof(UIW_RecordRemote_C_BndEvt__UIW_HUD_Btn_Prev_K2Node_ComponentBoundEvent_1_OnActive__DelegateSignature) == 0x000008, "Wrong size on UIW_RecordRemote_C_BndEvt__UIW_HUD_Btn_Prev_K2Node_ComponentBoundEvent_1_OnActive__DelegateSignature");
static_assert(offsetof(UIW_RecordRemote_C_BndEvt__UIW_HUD_Btn_Prev_K2Node_ComponentBoundEvent_1_OnActive__DelegateSignature, BtnKey) == 0x000000, "Member 'UIW_RecordRemote_C_BndEvt__UIW_HUD_Btn_Prev_K2Node_ComponentBoundEvent_1_OnActive__DelegateSignature::BtnKey' has a wrong offset!");

// Function UIW_RecordRemote.UIW_RecordRemote_C.BndEvt__UIW_HUD_Btn_Toggle_K2Node_ComponentBoundEvent_0_OnActive__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct UIW_RecordRemote_C_BndEvt__UIW_HUD_Btn_Toggle_K2Node_ComponentBoundEvent_0_OnActive__DelegateSignature final
{
public:
	class UUIW_Btn_Key_C*                         BtnKey;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UIW_RecordRemote_C_BndEvt__UIW_HUD_Btn_Toggle_K2Node_ComponentBoundEvent_0_OnActive__DelegateSignature) == 0x000008, "Wrong alignment on UIW_RecordRemote_C_BndEvt__UIW_HUD_Btn_Toggle_K2Node_ComponentBoundEvent_0_OnActive__DelegateSignature");
static_assert(sizeof(UIW_RecordRemote_C_BndEvt__UIW_HUD_Btn_Toggle_K2Node_ComponentBoundEvent_0_OnActive__DelegateSignature) == 0x000008, "Wrong size on UIW_RecordRemote_C_BndEvt__UIW_HUD_Btn_Toggle_K2Node_ComponentBoundEvent_0_OnActive__DelegateSignature");
static_assert(offsetof(UIW_RecordRemote_C_BndEvt__UIW_HUD_Btn_Toggle_K2Node_ComponentBoundEvent_0_OnActive__DelegateSignature, BtnKey) == 0x000000, "Member 'UIW_RecordRemote_C_BndEvt__UIW_HUD_Btn_Toggle_K2Node_ComponentBoundEvent_0_OnActive__DelegateSignature::BtnKey' has a wrong offset!");

// Function UIW_RecordRemote.UIW_RecordRemote_C.Init
// 0x0008 (0x0008 - 0x0000)
struct UIW_RecordRemote_C_Init final
{
public:
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationTimeRange_ReturnValue;       // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UIW_RecordRemote_C_Init) == 0x000008, "Wrong alignment on UIW_RecordRemote_C_Init");
static_assert(sizeof(UIW_RecordRemote_C_Init) == 0x000008, "Wrong size on UIW_RecordRemote_C_Init");
static_assert(offsetof(UIW_RecordRemote_C_Init, CallFunc_PlayAnimationTimeRange_ReturnValue) == 0x000000, "Member 'UIW_RecordRemote_C_Init::CallFunc_PlayAnimationTimeRange_ReturnValue' has a wrong offset!");

// Function UIW_RecordRemote.UIW_RecordRemote_C.RefreshName
// 0x0020 (0x0020 - 0x0000)
struct UIW_RecordRemote_C_RefreshName final
{
public:
	class FText                                   LocalizedMusicName;                                // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class FName                                   RecordCodeName_0;                                  // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UIW_RecordRemote_C_RefreshName) == 0x000008, "Wrong alignment on UIW_RecordRemote_C_RefreshName");
static_assert(sizeof(UIW_RecordRemote_C_RefreshName) == 0x000020, "Wrong size on UIW_RecordRemote_C_RefreshName");
static_assert(offsetof(UIW_RecordRemote_C_RefreshName, LocalizedMusicName) == 0x000000, "Member 'UIW_RecordRemote_C_RefreshName::LocalizedMusicName' has a wrong offset!");
static_assert(offsetof(UIW_RecordRemote_C_RefreshName, RecordCodeName_0) == 0x000018, "Member 'UIW_RecordRemote_C_RefreshName::RecordCodeName_0' has a wrong offset!");

// Function UIW_RecordRemote.UIW_RecordRemote_C.RefreshTime
// 0x0030 (0x0030 - 0x0000)
struct UIW_RecordRemote_C_RefreshTime final
{
public:
	class ULSoundSystem*                          CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetRecordDuration_ReturnValue;            // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimespan                              CallFunc_MakeTimespan_ReturnValue;                 // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_AsTimespan_Timespan_ReturnValue;          // 0x0018(0x0018)()
};
static_assert(alignof(UIW_RecordRemote_C_RefreshTime) == 0x000008, "Wrong alignment on UIW_RecordRemote_C_RefreshTime");
static_assert(sizeof(UIW_RecordRemote_C_RefreshTime) == 0x000030, "Wrong size on UIW_RecordRemote_C_RefreshTime");
static_assert(offsetof(UIW_RecordRemote_C_RefreshTime, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000000, "Member 'UIW_RecordRemote_C_RefreshTime::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_RecordRemote_C_RefreshTime, CallFunc_GetRecordDuration_ReturnValue) == 0x000008, "Member 'UIW_RecordRemote_C_RefreshTime::CallFunc_GetRecordDuration_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_RecordRemote_C_RefreshTime, CallFunc_FTrunc_ReturnValue) == 0x00000C, "Member 'UIW_RecordRemote_C_RefreshTime::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_RecordRemote_C_RefreshTime, CallFunc_MakeTimespan_ReturnValue) == 0x000010, "Member 'UIW_RecordRemote_C_RefreshTime::CallFunc_MakeTimespan_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_RecordRemote_C_RefreshTime, CallFunc_AsTimespan_Timespan_ReturnValue) == 0x000018, "Member 'UIW_RecordRemote_C_RefreshTime::CallFunc_AsTimespan_Timespan_ReturnValue' has a wrong offset!");

// Function UIW_RecordRemote.UIW_RecordRemote_C.RefreshDisc
// 0x0030 (0x0030 - 0x0000)
struct UIW_RecordRemote_C_RefreshDisc final
{
public:
	struct FItemCommonInfoPtr                     CallFunc_FindItemCommonInfoByNameBP_ReturnValue;   // 0x0000(0x0008)(NoDestructor)
	TSoftObjectPtr<class UObject>                 CallFunc_GetImageResource_ReturnValue;             // 0x0008(0x0028)(ConstParm, UObjectWrapper, HasGetValueTypeHash)
};
static_assert(alignof(UIW_RecordRemote_C_RefreshDisc) == 0x000008, "Wrong alignment on UIW_RecordRemote_C_RefreshDisc");
static_assert(sizeof(UIW_RecordRemote_C_RefreshDisc) == 0x000030, "Wrong size on UIW_RecordRemote_C_RefreshDisc");
static_assert(offsetof(UIW_RecordRemote_C_RefreshDisc, CallFunc_FindItemCommonInfoByNameBP_ReturnValue) == 0x000000, "Member 'UIW_RecordRemote_C_RefreshDisc::CallFunc_FindItemCommonInfoByNameBP_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_RecordRemote_C_RefreshDisc, CallFunc_GetImageResource_ReturnValue) == 0x000008, "Member 'UIW_RecordRemote_C_RefreshDisc::CallFunc_GetImageResource_ReturnValue' has a wrong offset!");

// Function UIW_RecordRemote.UIW_RecordRemote_C.ShowRecordRemote
// 0x0018 (0x0018 - 0x0000)
struct UIW_RecordRemote_C_ShowRecordRemote final
{
public:
	struct FTweenEase                             K2Node_MakeStruct_TweenEase;                       // 0x0000(0x000C)(NoDestructor)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UIW_RecordRemote_C_ShowRecordRemote) == 0x000008, "Wrong alignment on UIW_RecordRemote_C_ShowRecordRemote");
static_assert(sizeof(UIW_RecordRemote_C_ShowRecordRemote) == 0x000018, "Wrong size on UIW_RecordRemote_C_ShowRecordRemote");
static_assert(offsetof(UIW_RecordRemote_C_ShowRecordRemote, K2Node_MakeStruct_TweenEase) == 0x000000, "Member 'UIW_RecordRemote_C_ShowRecordRemote::K2Node_MakeStruct_TweenEase' has a wrong offset!");
static_assert(offsetof(UIW_RecordRemote_C_ShowRecordRemote, CallFunc_PlayAnimation_ReturnValue) == 0x000010, "Member 'UIW_RecordRemote_C_ShowRecordRemote::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function UIW_RecordRemote.UIW_RecordRemote_C.HideRecordRemote
// 0x0028 (0x0028 - 0x0000)
struct UIW_RecordRemote_C_HideRecordRemote final
{
public:
	bool                                          NeedStopRecord;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ULSoundSystem*                          CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoStopRecord_ReturnValue;                 // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ULSoundSystem*                          CallFunc_GetGameInstanceSubsystem_ReturnValue_1;   // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UIW_RecordRemote_C_HideRecordRemote) == 0x000008, "Wrong alignment on UIW_RecordRemote_C_HideRecordRemote");
static_assert(sizeof(UIW_RecordRemote_C_HideRecordRemote) == 0x000028, "Wrong size on UIW_RecordRemote_C_HideRecordRemote");
static_assert(offsetof(UIW_RecordRemote_C_HideRecordRemote, NeedStopRecord) == 0x000000, "Member 'UIW_RecordRemote_C_HideRecordRemote::NeedStopRecord' has a wrong offset!");
static_assert(offsetof(UIW_RecordRemote_C_HideRecordRemote, CallFunc_IsVisible_ReturnValue) == 0x000001, "Member 'UIW_RecordRemote_C_HideRecordRemote::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_RecordRemote_C_HideRecordRemote, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000008, "Member 'UIW_RecordRemote_C_HideRecordRemote::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_RecordRemote_C_HideRecordRemote, CallFunc_DoStopRecord_ReturnValue) == 0x000010, "Member 'UIW_RecordRemote_C_HideRecordRemote::CallFunc_DoStopRecord_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_RecordRemote_C_HideRecordRemote, CallFunc_GetGameInstanceSubsystem_ReturnValue_1) == 0x000018, "Member 'UIW_RecordRemote_C_HideRecordRemote::CallFunc_GetGameInstanceSubsystem_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UIW_RecordRemote_C_HideRecordRemote, CallFunc_PlayAnimation_ReturnValue) == 0x000020, "Member 'UIW_RecordRemote_C_HideRecordRemote::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function UIW_RecordRemote.UIW_RecordRemote_C.Sub Control Show
// 0x0038 (0x0038 - 0x0000)
struct UIW_RecordRemote_C_Sub_Control_Show final
{
public:
	bool                                          IsShow;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          NeedAnimation;                                     // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          UISoundPlay;                                       // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3[0x5];                                        // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue;                  // 0x0010(0x0008)(NoDestructor, HasGetValueTypeHash)
	class UUIW_Main_C*                            CallFunc_GetMainWidget_MainWidget;                 // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_IsValidTimerHandle_ReturnValue;        // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_UnlockPCActions_ReturnValue;              // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LockPCActions_ReturnValue;                // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_23[0x5];                                       // 0x0023(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UUIW_Main_C*                            CallFunc_GetMainWidget_MainWidget_1;               // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUIW_Main_C*                            CallFunc_GetMainWidget_MainWidget_2;               // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UIW_RecordRemote_C_Sub_Control_Show) == 0x000008, "Wrong alignment on UIW_RecordRemote_C_Sub_Control_Show");
static_assert(sizeof(UIW_RecordRemote_C_Sub_Control_Show) == 0x000038, "Wrong size on UIW_RecordRemote_C_Sub_Control_Show");
static_assert(offsetof(UIW_RecordRemote_C_Sub_Control_Show, IsShow) == 0x000000, "Member 'UIW_RecordRemote_C_Sub_Control_Show::IsShow' has a wrong offset!");
static_assert(offsetof(UIW_RecordRemote_C_Sub_Control_Show, NeedAnimation) == 0x000001, "Member 'UIW_RecordRemote_C_Sub_Control_Show::NeedAnimation' has a wrong offset!");
static_assert(offsetof(UIW_RecordRemote_C_Sub_Control_Show, UISoundPlay) == 0x000002, "Member 'UIW_RecordRemote_C_Sub_Control_Show::UISoundPlay' has a wrong offset!");
static_assert(offsetof(UIW_RecordRemote_C_Sub_Control_Show, CallFunc_GetPlayerController_ReturnValue) == 0x000008, "Member 'UIW_RecordRemote_C_Sub_Control_Show::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_RecordRemote_C_Sub_Control_Show, CallFunc_K2_SetTimer_ReturnValue) == 0x000010, "Member 'UIW_RecordRemote_C_Sub_Control_Show::CallFunc_K2_SetTimer_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_RecordRemote_C_Sub_Control_Show, CallFunc_GetMainWidget_MainWidget) == 0x000018, "Member 'UIW_RecordRemote_C_Sub_Control_Show::CallFunc_GetMainWidget_MainWidget' has a wrong offset!");
static_assert(offsetof(UIW_RecordRemote_C_Sub_Control_Show, CallFunc_K2_IsValidTimerHandle_ReturnValue) == 0x000020, "Member 'UIW_RecordRemote_C_Sub_Control_Show::CallFunc_K2_IsValidTimerHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_RecordRemote_C_Sub_Control_Show, CallFunc_UnlockPCActions_ReturnValue) == 0x000021, "Member 'UIW_RecordRemote_C_Sub_Control_Show::CallFunc_UnlockPCActions_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_RecordRemote_C_Sub_Control_Show, CallFunc_LockPCActions_ReturnValue) == 0x000022, "Member 'UIW_RecordRemote_C_Sub_Control_Show::CallFunc_LockPCActions_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_RecordRemote_C_Sub_Control_Show, CallFunc_GetMainWidget_MainWidget_1) == 0x000028, "Member 'UIW_RecordRemote_C_Sub_Control_Show::CallFunc_GetMainWidget_MainWidget_1' has a wrong offset!");
static_assert(offsetof(UIW_RecordRemote_C_Sub_Control_Show, CallFunc_GetMainWidget_MainWidget_2) == 0x000030, "Member 'UIW_RecordRemote_C_Sub_Control_Show::CallFunc_GetMainWidget_MainWidget_2' has a wrong offset!");

// Function UIW_RecordRemote.UIW_RecordRemote_C.SubControlShowAni
// 0x0018 (0x0018 - 0x0000)
struct UIW_RecordRemote_C_SubControlShowAni final
{
public:
	bool                                          Condition;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetAnimationCurrentTime_ReturnValue;      // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UIW_RecordRemote_C_SubControlShowAni) == 0x000008, "Wrong alignment on UIW_RecordRemote_C_SubControlShowAni");
static_assert(sizeof(UIW_RecordRemote_C_SubControlShowAni) == 0x000018, "Wrong size on UIW_RecordRemote_C_SubControlShowAni");
static_assert(offsetof(UIW_RecordRemote_C_SubControlShowAni, Condition) == 0x000000, "Member 'UIW_RecordRemote_C_SubControlShowAni::Condition' has a wrong offset!");
static_assert(offsetof(UIW_RecordRemote_C_SubControlShowAni, CallFunc_GetAnimationCurrentTime_ReturnValue) == 0x000004, "Member 'UIW_RecordRemote_C_SubControlShowAni::CallFunc_GetAnimationCurrentTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_RecordRemote_C_SubControlShowAni, CallFunc_PlayAnimation_ReturnValue) == 0x000008, "Member 'UIW_RecordRemote_C_SubControlShowAni::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_RecordRemote_C_SubControlShowAni, CallFunc_PlayAnimation_ReturnValue_1) == 0x000010, "Member 'UIW_RecordRemote_C_SubControlShowAni::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");

// Function UIW_RecordRemote.UIW_RecordRemote_C.OnPlayTime
// 0x0040 (0x0040 - 0x0000)
struct UIW_RecordRemote_C_OnPlayTime final
{
public:
	const class USoundWave*                       PlayingSoundWave;                                  // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PlaybackPercent;                                   // 0x0008(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ULSoundSystem*                          CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetRecordCurrentDuration_ReturnValue;     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimespan                              CallFunc_MakeTimespan_ReturnValue;                 // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_AsTimespan_Timespan_ReturnValue;          // 0x0028(0x0018)()
};
static_assert(alignof(UIW_RecordRemote_C_OnPlayTime) == 0x000008, "Wrong alignment on UIW_RecordRemote_C_OnPlayTime");
static_assert(sizeof(UIW_RecordRemote_C_OnPlayTime) == 0x000040, "Wrong size on UIW_RecordRemote_C_OnPlayTime");
static_assert(offsetof(UIW_RecordRemote_C_OnPlayTime, PlayingSoundWave) == 0x000000, "Member 'UIW_RecordRemote_C_OnPlayTime::PlayingSoundWave' has a wrong offset!");
static_assert(offsetof(UIW_RecordRemote_C_OnPlayTime, PlaybackPercent) == 0x000008, "Member 'UIW_RecordRemote_C_OnPlayTime::PlaybackPercent' has a wrong offset!");
static_assert(offsetof(UIW_RecordRemote_C_OnPlayTime, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000010, "Member 'UIW_RecordRemote_C_OnPlayTime::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_RecordRemote_C_OnPlayTime, CallFunc_GetRecordCurrentDuration_ReturnValue) == 0x000018, "Member 'UIW_RecordRemote_C_OnPlayTime::CallFunc_GetRecordCurrentDuration_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_RecordRemote_C_OnPlayTime, CallFunc_FTrunc_ReturnValue) == 0x00001C, "Member 'UIW_RecordRemote_C_OnPlayTime::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_RecordRemote_C_OnPlayTime, CallFunc_MakeTimespan_ReturnValue) == 0x000020, "Member 'UIW_RecordRemote_C_OnPlayTime::CallFunc_MakeTimespan_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_RecordRemote_C_OnPlayTime, CallFunc_AsTimespan_Timespan_ReturnValue) == 0x000028, "Member 'UIW_RecordRemote_C_OnPlayTime::CallFunc_AsTimespan_Timespan_ReturnValue' has a wrong offset!");

// Function UIW_RecordRemote.UIW_RecordRemote_C.OnPlayRecord
// 0x02C8 (0x02C8 - 0x0000)
struct UIW_RecordRemote_C_OnPlayRecord final
{
public:
	bool                                          IsPlayStart;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   RecordCodeName_0;                                  // 0x0004(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LocalFirstValidRecordIndex;                        // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   LocalFirstValidRecord;                             // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LocalLastRecordIndex;                              // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          LocalIsLastRecord;                                 // 0x001C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Is_Play_State_IsValid;                    // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x001E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1F[0x1];                                       // 0x001F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class ULItemSystem*                           CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULPlayerInventory*                      CallFunc_GetPlayerInventory_ReturnValue;           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUIW_Main_C*                            CallFunc_GetMainWidget_MainWidget;                 // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUIW_Window_C*                          CallFunc_GetTopWindow_Window;                      // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue;            // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUIW_Record_C*                          K2Node_DynamicCast_AsUIW_Record;                   // 0x0058(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUIW_Record_C*                          K2Node_DynamicCast_AsUIW_Record_1;                 // 0x0068(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue_1;          // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0072(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue_1;        // 0x0073(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x3];                                       // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue;                  // 0x0088(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_IsValidTimerHandle_ReturnValue;        // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0092(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_93[0x5];                                       // 0x0093(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ULSoundSystem*                          CallFunc_GetGameInstanceSubsystem_ReturnValue_1;   // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FItemCommonInfo>                CallFunc_GetAllRecordList_ReturnValue;             // 0x00A0(0x0010)(ConstParm, ReferenceParm)
	struct FItemCommonInfo                        CallFunc_Array_Get_Item;                           // 0x00B0(0x01B8)()
	class FText                                   CallFunc_GetLocalTextItemNameLocalize_ReturnValue; // 0x0268(0x0018)()
	class FName                                   CallFunc_GetCodeName_ReturnValue;                  // 0x0280(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULItem*                                 CallFunc_FindItemByCodeName_ReturnValue;           // 0x0288(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0290(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue_2;        // 0x0291(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x0292(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_293[0x1];                                      // 0x0293(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0294(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULSoundSystem*                          CallFunc_GetGameInstanceSubsystem_ReturnValue_2;   // 0x0298(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x02A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x02A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue_3;        // 0x02A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A3[0x5];                                      // 0x02A3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ULSoundSystem*                          CallFunc_GetGameInstanceSubsystem_ReturnValue_3;   // 0x02A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULSoundSystem*                          CallFunc_GetGameInstanceSubsystem_ReturnValue_4;   // 0x02B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetIsAsncLoadingMapCompleted_ReturnValue; // 0x02B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2B9[0x7];                                      // 0x02B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ULSoundSystem*                          CallFunc_GetGameInstanceSubsystem_ReturnValue_5;   // 0x02C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UIW_RecordRemote_C_OnPlayRecord) == 0x000008, "Wrong alignment on UIW_RecordRemote_C_OnPlayRecord");
static_assert(sizeof(UIW_RecordRemote_C_OnPlayRecord) == 0x0002C8, "Wrong size on UIW_RecordRemote_C_OnPlayRecord");
static_assert(offsetof(UIW_RecordRemote_C_OnPlayRecord, IsPlayStart) == 0x000000, "Member 'UIW_RecordRemote_C_OnPlayRecord::IsPlayStart' has a wrong offset!");
static_assert(offsetof(UIW_RecordRemote_C_OnPlayRecord, RecordCodeName_0) == 0x000004, "Member 'UIW_RecordRemote_C_OnPlayRecord::RecordCodeName_0' has a wrong offset!");
static_assert(offsetof(UIW_RecordRemote_C_OnPlayRecord, LocalFirstValidRecordIndex) == 0x00000C, "Member 'UIW_RecordRemote_C_OnPlayRecord::LocalFirstValidRecordIndex' has a wrong offset!");
static_assert(offsetof(UIW_RecordRemote_C_OnPlayRecord, LocalFirstValidRecord) == 0x000010, "Member 'UIW_RecordRemote_C_OnPlayRecord::LocalFirstValidRecord' has a wrong offset!");
static_assert(offsetof(UIW_RecordRemote_C_OnPlayRecord, LocalLastRecordIndex) == 0x000018, "Member 'UIW_RecordRemote_C_OnPlayRecord::LocalLastRecordIndex' has a wrong offset!");
static_assert(offsetof(UIW_RecordRemote_C_OnPlayRecord, LocalIsLastRecord) == 0x00001C, "Member 'UIW_RecordRemote_C_OnPlayRecord::LocalIsLastRecord' has a wrong offset!");
static_assert(offsetof(UIW_RecordRemote_C_OnPlayRecord, CallFunc_Is_Play_State_IsValid) == 0x00001D, "Member 'UIW_RecordRemote_C_OnPlayRecord::CallFunc_Is_Play_State_IsValid' has a wrong offset!");
static_assert(offsetof(UIW_RecordRemote_C_OnPlayRecord, CallFunc_Not_PreBool_ReturnValue) == 0x00001E, "Member 'UIW_RecordRemote_C_OnPlayRecord::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_RecordRemote_C_OnPlayRecord, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000020, "Member 'UIW_RecordRemote_C_OnPlayRecord::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_RecordRemote_C_OnPlayRecord, CallFunc_GetPlayerInventory_ReturnValue) == 0x000028, "Member 'UIW_RecordRemote_C_OnPlayRecord::CallFunc_GetPlayerInventory_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_RecordRemote_C_OnPlayRecord, CallFunc_Not_PreBool_ReturnValue_1) == 0x000030, "Member 'UIW_RecordRemote_C_OnPlayRecord::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UIW_RecordRemote_C_OnPlayRecord, Temp_int_Array_Index_Variable) == 0x000034, "Member 'UIW_RecordRemote_C_OnPlayRecord::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(UIW_RecordRemote_C_OnPlayRecord, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000038, "Member 'UIW_RecordRemote_C_OnPlayRecord::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_RecordRemote_C_OnPlayRecord, CallFunc_GetMainWidget_MainWidget) == 0x000040, "Member 'UIW_RecordRemote_C_OnPlayRecord::CallFunc_GetMainWidget_MainWidget' has a wrong offset!");
static_assert(offsetof(UIW_RecordRemote_C_OnPlayRecord, CallFunc_GetTopWindow_Window) == 0x000048, "Member 'UIW_RecordRemote_C_OnPlayRecord::CallFunc_GetTopWindow_Window' has a wrong offset!");
static_assert(offsetof(UIW_RecordRemote_C_OnPlayRecord, CallFunc_NotEqual_NameName_ReturnValue) == 0x000050, "Member 'UIW_RecordRemote_C_OnPlayRecord::CallFunc_NotEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_RecordRemote_C_OnPlayRecord, K2Node_DynamicCast_AsUIW_Record) == 0x000058, "Member 'UIW_RecordRemote_C_OnPlayRecord::K2Node_DynamicCast_AsUIW_Record' has a wrong offset!");
static_assert(offsetof(UIW_RecordRemote_C_OnPlayRecord, K2Node_DynamicCast_bSuccess) == 0x000060, "Member 'UIW_RecordRemote_C_OnPlayRecord::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(UIW_RecordRemote_C_OnPlayRecord, K2Node_DynamicCast_AsUIW_Record_1) == 0x000068, "Member 'UIW_RecordRemote_C_OnPlayRecord::K2Node_DynamicCast_AsUIW_Record_1' has a wrong offset!");
static_assert(offsetof(UIW_RecordRemote_C_OnPlayRecord, K2Node_DynamicCast_bSuccess_1) == 0x000070, "Member 'UIW_RecordRemote_C_OnPlayRecord::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(UIW_RecordRemote_C_OnPlayRecord, CallFunc_NotEqual_NameName_ReturnValue_1) == 0x000071, "Member 'UIW_RecordRemote_C_OnPlayRecord::CallFunc_NotEqual_NameName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UIW_RecordRemote_C_OnPlayRecord, CallFunc_BooleanAND_ReturnValue) == 0x000072, "Member 'UIW_RecordRemote_C_OnPlayRecord::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_RecordRemote_C_OnPlayRecord, CallFunc_EqualEqual_NameName_ReturnValue_1) == 0x000073, "Member 'UIW_RecordRemote_C_OnPlayRecord::CallFunc_EqualEqual_NameName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UIW_RecordRemote_C_OnPlayRecord, Temp_int_Loop_Counter_Variable) == 0x000074, "Member 'UIW_RecordRemote_C_OnPlayRecord::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(UIW_RecordRemote_C_OnPlayRecord, CallFunc_BooleanAND_ReturnValue_1) == 0x000078, "Member 'UIW_RecordRemote_C_OnPlayRecord::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UIW_RecordRemote_C_OnPlayRecord, CallFunc_Add_IntInt_ReturnValue) == 0x00007C, "Member 'UIW_RecordRemote_C_OnPlayRecord::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_RecordRemote_C_OnPlayRecord, CallFunc_BooleanAND_ReturnValue_2) == 0x000080, "Member 'UIW_RecordRemote_C_OnPlayRecord::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UIW_RecordRemote_C_OnPlayRecord, CallFunc_K2_SetTimer_ReturnValue) == 0x000088, "Member 'UIW_RecordRemote_C_OnPlayRecord::CallFunc_K2_SetTimer_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_RecordRemote_C_OnPlayRecord, CallFunc_K2_IsValidTimerHandle_ReturnValue) == 0x000090, "Member 'UIW_RecordRemote_C_OnPlayRecord::CallFunc_K2_IsValidTimerHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_RecordRemote_C_OnPlayRecord, Temp_bool_True_if_break_was_hit_Variable) == 0x000091, "Member 'UIW_RecordRemote_C_OnPlayRecord::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(UIW_RecordRemote_C_OnPlayRecord, CallFunc_Not_PreBool_ReturnValue_2) == 0x000092, "Member 'UIW_RecordRemote_C_OnPlayRecord::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UIW_RecordRemote_C_OnPlayRecord, CallFunc_GetGameInstanceSubsystem_ReturnValue_1) == 0x000098, "Member 'UIW_RecordRemote_C_OnPlayRecord::CallFunc_GetGameInstanceSubsystem_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UIW_RecordRemote_C_OnPlayRecord, CallFunc_GetAllRecordList_ReturnValue) == 0x0000A0, "Member 'UIW_RecordRemote_C_OnPlayRecord::CallFunc_GetAllRecordList_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_RecordRemote_C_OnPlayRecord, CallFunc_Array_Get_Item) == 0x0000B0, "Member 'UIW_RecordRemote_C_OnPlayRecord::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(UIW_RecordRemote_C_OnPlayRecord, CallFunc_GetLocalTextItemNameLocalize_ReturnValue) == 0x000268, "Member 'UIW_RecordRemote_C_OnPlayRecord::CallFunc_GetLocalTextItemNameLocalize_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_RecordRemote_C_OnPlayRecord, CallFunc_GetCodeName_ReturnValue) == 0x000280, "Member 'UIW_RecordRemote_C_OnPlayRecord::CallFunc_GetCodeName_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_RecordRemote_C_OnPlayRecord, CallFunc_FindItemByCodeName_ReturnValue) == 0x000288, "Member 'UIW_RecordRemote_C_OnPlayRecord::CallFunc_FindItemByCodeName_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_RecordRemote_C_OnPlayRecord, CallFunc_IsValid_ReturnValue) == 0x000290, "Member 'UIW_RecordRemote_C_OnPlayRecord::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_RecordRemote_C_OnPlayRecord, CallFunc_EqualEqual_NameName_ReturnValue_2) == 0x000291, "Member 'UIW_RecordRemote_C_OnPlayRecord::CallFunc_EqualEqual_NameName_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UIW_RecordRemote_C_OnPlayRecord, CallFunc_BooleanAND_ReturnValue_3) == 0x000292, "Member 'UIW_RecordRemote_C_OnPlayRecord::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(UIW_RecordRemote_C_OnPlayRecord, CallFunc_Array_Length_ReturnValue) == 0x000294, "Member 'UIW_RecordRemote_C_OnPlayRecord::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_RecordRemote_C_OnPlayRecord, CallFunc_GetGameInstanceSubsystem_ReturnValue_2) == 0x000298, "Member 'UIW_RecordRemote_C_OnPlayRecord::CallFunc_GetGameInstanceSubsystem_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UIW_RecordRemote_C_OnPlayRecord, CallFunc_Less_IntInt_ReturnValue) == 0x0002A0, "Member 'UIW_RecordRemote_C_OnPlayRecord::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_RecordRemote_C_OnPlayRecord, CallFunc_BooleanAND_ReturnValue_4) == 0x0002A1, "Member 'UIW_RecordRemote_C_OnPlayRecord::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(UIW_RecordRemote_C_OnPlayRecord, CallFunc_EqualEqual_NameName_ReturnValue_3) == 0x0002A2, "Member 'UIW_RecordRemote_C_OnPlayRecord::CallFunc_EqualEqual_NameName_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(UIW_RecordRemote_C_OnPlayRecord, CallFunc_GetGameInstanceSubsystem_ReturnValue_3) == 0x0002A8, "Member 'UIW_RecordRemote_C_OnPlayRecord::CallFunc_GetGameInstanceSubsystem_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(UIW_RecordRemote_C_OnPlayRecord, CallFunc_GetGameInstanceSubsystem_ReturnValue_4) == 0x0002B0, "Member 'UIW_RecordRemote_C_OnPlayRecord::CallFunc_GetGameInstanceSubsystem_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(UIW_RecordRemote_C_OnPlayRecord, CallFunc_GetIsAsncLoadingMapCompleted_ReturnValue) == 0x0002B8, "Member 'UIW_RecordRemote_C_OnPlayRecord::CallFunc_GetIsAsncLoadingMapCompleted_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_RecordRemote_C_OnPlayRecord, CallFunc_GetGameInstanceSubsystem_ReturnValue_5) == 0x0002C0, "Member 'UIW_RecordRemote_C_OnPlayRecord::CallFunc_GetGameInstanceSubsystem_ReturnValue_5' has a wrong offset!");

// Function UIW_RecordRemote.UIW_RecordRemote_C.RecordControl
// 0x0038 (0x0038 - 0x0000)
struct UIW_RecordRemote_C_RecordControl final
{
public:
	int32                                         Index_0;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AddIndex;                                          // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULSoundSystem*                          CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FItemCommonInfo>                CallFunc_GetAllRecordList_ReturnValue;             // 0x0010(0x0010)(ConstParm, ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetCodeName_ReturnValue;                  // 0x0024(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetValidArrayIndex_NewParam;              // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoPlayRecord_ReturnValue;                 // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UIW_RecordRemote_C_RecordControl) == 0x000008, "Wrong alignment on UIW_RecordRemote_C_RecordControl");
static_assert(sizeof(UIW_RecordRemote_C_RecordControl) == 0x000038, "Wrong size on UIW_RecordRemote_C_RecordControl");
static_assert(offsetof(UIW_RecordRemote_C_RecordControl, Index_0) == 0x000000, "Member 'UIW_RecordRemote_C_RecordControl::Index_0' has a wrong offset!");
static_assert(offsetof(UIW_RecordRemote_C_RecordControl, AddIndex) == 0x000004, "Member 'UIW_RecordRemote_C_RecordControl::AddIndex' has a wrong offset!");
static_assert(offsetof(UIW_RecordRemote_C_RecordControl, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000008, "Member 'UIW_RecordRemote_C_RecordControl::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_RecordRemote_C_RecordControl, CallFunc_GetAllRecordList_ReturnValue) == 0x000010, "Member 'UIW_RecordRemote_C_RecordControl::CallFunc_GetAllRecordList_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_RecordRemote_C_RecordControl, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'UIW_RecordRemote_C_RecordControl::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_RecordRemote_C_RecordControl, CallFunc_GetCodeName_ReturnValue) == 0x000024, "Member 'UIW_RecordRemote_C_RecordControl::CallFunc_GetCodeName_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_RecordRemote_C_RecordControl, CallFunc_GetValidArrayIndex_NewParam) == 0x00002C, "Member 'UIW_RecordRemote_C_RecordControl::CallFunc_GetValidArrayIndex_NewParam' has a wrong offset!");
static_assert(offsetof(UIW_RecordRemote_C_RecordControl, CallFunc_DoPlayRecord_ReturnValue) == 0x000030, "Member 'UIW_RecordRemote_C_RecordControl::CallFunc_DoPlayRecord_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_RecordRemote_C_RecordControl, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000031, "Member 'UIW_RecordRemote_C_RecordControl::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");

// Function UIW_RecordRemote.UIW_RecordRemote_C.OnGetHumanity
// 0x0008 (0x0008 - 0x0000)
struct UIW_RecordRemote_C_OnGetHumanity final
{
public:
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UIW_RecordRemote_C_OnGetHumanity) == 0x000008, "Wrong alignment on UIW_RecordRemote_C_OnGetHumanity");
static_assert(sizeof(UIW_RecordRemote_C_OnGetHumanity) == 0x000008, "Wrong size on UIW_RecordRemote_C_OnGetHumanity");
static_assert(offsetof(UIW_RecordRemote_C_OnGetHumanity, CallFunc_PlayAnimation_ReturnValue) == 0x000000, "Member 'UIW_RecordRemote_C_OnGetHumanity::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function UIW_RecordRemote.UIW_RecordRemote_C.OnTeleport
// 0x0008 (0x0008 - 0x0000)
struct UIW_RecordRemote_C_OnTeleport final
{
public:
	class ULSoundSystem*                          CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UIW_RecordRemote_C_OnTeleport) == 0x000008, "Wrong alignment on UIW_RecordRemote_C_OnTeleport");
static_assert(sizeof(UIW_RecordRemote_C_OnTeleport) == 0x000008, "Wrong size on UIW_RecordRemote_C_OnTeleport");
static_assert(offsetof(UIW_RecordRemote_C_OnTeleport, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000000, "Member 'UIW_RecordRemote_C_OnTeleport::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");

// Function UIW_RecordRemote.UIW_RecordRemote_C.ListenPreviewAction
// 0x0010 (0x0010 - 0x0000)
struct UIW_RecordRemote_C_ListenPreviewAction final
{
public:
	class ULPlayInputSystem*                      CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsGamePadMode_ReturnValue;                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsUsingPlayStationGamePad_ReturnValue;    // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UIW_RecordRemote_C_ListenPreviewAction) == 0x000008, "Wrong alignment on UIW_RecordRemote_C_ListenPreviewAction");
static_assert(sizeof(UIW_RecordRemote_C_ListenPreviewAction) == 0x000010, "Wrong size on UIW_RecordRemote_C_ListenPreviewAction");
static_assert(offsetof(UIW_RecordRemote_C_ListenPreviewAction, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000000, "Member 'UIW_RecordRemote_C_ListenPreviewAction::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_RecordRemote_C_ListenPreviewAction, CallFunc_IsGamePadMode_ReturnValue) == 0x000008, "Member 'UIW_RecordRemote_C_ListenPreviewAction::CallFunc_IsGamePadMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_RecordRemote_C_ListenPreviewAction, CallFunc_IsUsingPlayStationGamePad_ReturnValue) == 0x000009, "Member 'UIW_RecordRemote_C_ListenPreviewAction::CallFunc_IsUsingPlayStationGamePad_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_RecordRemote_C_ListenPreviewAction, CallFunc_EqualEqual_NameName_ReturnValue) == 0x00000A, "Member 'UIW_RecordRemote_C_ListenPreviewAction::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_RecordRemote_C_ListenPreviewAction, CallFunc_BooleanAND_ReturnValue) == 0x00000B, "Member 'UIW_RecordRemote_C_ListenPreviewAction::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

}


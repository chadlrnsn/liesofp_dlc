#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Action_HitBase

#include "Basic.hpp"

#include "BP_Action_HitBase_classes.hpp"
#include "BP_Action_HitBase_parameters.hpp"


namespace SDK
{

// Function BP_Action_HitBase.BP_Action_HitBase_C.ExecuteUbergraph_BP_Action_HitBase
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_Action_HitBase_C::ExecuteUbergraph_BP_Action_HitBase(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Action_HitBase_C", "ExecuteUbergraph_BP_Action_HitBase");

	Params::BP_Action_HitBase_C_ExecuteUbergraph_BP_Action_HitBase Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Action_HitBase.BP_Action_HitBase_C.OnStopByMe
// (Event, Public, BlueprintEvent)
// Parameters:
// class ULActBase*                        StoppingAction                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_Action_HitBase_C::OnStopByMe(class ULActBase* StoppingAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Action_HitBase_C", "OnStopByMe");

	Params::BP_Action_HitBase_C_OnStopByMe Parms{};

	Parms.StoppingAction = StoppingAction;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Action_HitBase.BP_Action_HitBase_C.OnStiffen
// (BlueprintCallable, BlueprintEvent)

void UBP_Action_HitBase_C::OnStiffen()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Action_HitBase_C", "OnStiffen");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Action_HitBase.BP_Action_HitBase_C.OnStop
// (Event, Public, BlueprintEvent)
// Parameters:
// class ULActBase*                        ReasonAction                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             Reason                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_Action_HitBase_C::OnStop(class ULActBase* ReasonAction, class FName Reason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Action_HitBase_C", "OnStop");

	Params::BP_Action_HitBase_C_OnStop Parms{};

	Parms.ReasonAction = ReasonAction;
	Parms.Reason = Reason;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Action_HitBase.BP_Action_HitBase_C.OnStart
// (Event, Public, BlueprintEvent)

void UBP_Action_HitBase_C::OnStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Action_HitBase_C", "OnStart");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Action_HitBase.BP_Action_HitBase_C.TryToDie
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ULActBase*                        ReasonAction                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_Action_HitBase_C::TryToDie(class ULActBase* ReasonAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Action_HitBase_C", "TryToDie");

	Params::BP_Action_HitBase_C_TryToDie Parms{};

	Parms.ReasonAction = ReasonAction;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Action_HitBase.BP_Action_HitBase_C.MsToSec
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   Millisecond                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Second                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_Action_HitBase_C::MsToSec(int32 Millisecond, float* Second)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Action_HitBase_C", "MsToSec");

	Params::BP_Action_HitBase_C_MsToSec Parms{};

	Parms.Millisecond = Millisecond;

	UObject::ProcessEvent(Func, &Parms);

	if (Second != nullptr)
		*Second = Parms.Second;
}


// Function BP_Action_HitBase.BP_Action_HitBase_C.GetBlade_HitDurationRatio
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   HitDurationRatio                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_Action_HitBase_C::GetBlade_HitDurationRatio(float* HitDurationRatio)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Action_HitBase_C", "GetBlade_HitDurationRatio");

	Params::BP_Action_HitBase_C_GetBlade_HitDurationRatio Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (HitDurationRatio != nullptr)
		*HitDurationRatio = Parms.HitDurationRatio;
}


// Function BP_Action_HitBase.BP_Action_HitBase_C.DoMoveIgnoreAttacker
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Ignore                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_Action_HitBase_C::DoMoveIgnoreAttacker(bool Ignore)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Action_HitBase_C", "DoMoveIgnoreAttacker");

	Params::BP_Action_HitBase_C_DoMoveIgnoreAttacker Parms{};

	Parms.Ignore = Ignore;

	UObject::ProcessEvent(Func, &Parms);
}

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UIW_ListItem_SlaveArm_ReinForceInfo

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass UIW_ListItem_SlaveArm_ReinForceInfo.UIW_ListItem_SlaveArm_ReinforceInfo_C
// 0x0060 (0x02C8 - 0x0268)
class UUIW_ListItem_SlaveArm_ReinforceInfo_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0268(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UImage*                                 Bg_Dimed;                                          // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUIW_Fx_Listbar_C*                      Fx_Selected;                                       // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Img_Lock;                                          // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Text_Label;                                        // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class ULSlaveArmTree*                         SlotData;                                          // 0x0290(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Type;                                              // 0x0298(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_299[0x3];                                      // 0x0299(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Depth;                                             // 0x029C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             OnFocusedSlot;                                     // 0x02A0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             OnDoubleClick;                                     // 0x02B0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          IsSelected;                                        // 0x02C0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void OnFocusedSlot__DelegateSignature(class UUIW_ListItem_SlaveArm_ReinforceInfo_C* Slot_0);
	void OnDoubleClick__DelegateSignature();
	void ExecuteUbergraph_UIW_ListItem_SlaveArm_ReinforceInfo(int32 EntryPoint);
	void OnFocusLost(const struct FFocusEvent& InFocusEvent);
	void OnMouseLeave(const struct FPointerEvent& MouseEvent);
	void OnMouseEnter(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);
	struct FEventReply OnMouseButtonDown(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);
	struct FEventReply OnMouseButtonDoubleClick(const struct FGeometry& InMyGeometry, const struct FPointerEvent& InMouseEvent);
	struct FEventReply OnFocusReceived(const struct FGeometry& MyGeometry, const struct FFocusEvent& InFocusEvent);
	void SetData(class ULSlaveArmTree* SlotData_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"UIW_ListItem_SlaveArm_ReinforceInfo_C">();
	}
	static class UUIW_ListItem_SlaveArm_ReinforceInfo_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUIW_ListItem_SlaveArm_ReinforceInfo_C>();
	}
};
static_assert(alignof(UUIW_ListItem_SlaveArm_ReinforceInfo_C) == 0x000008, "Wrong alignment on UUIW_ListItem_SlaveArm_ReinforceInfo_C");
static_assert(sizeof(UUIW_ListItem_SlaveArm_ReinforceInfo_C) == 0x0002C8, "Wrong size on UUIW_ListItem_SlaveArm_ReinforceInfo_C");
static_assert(offsetof(UUIW_ListItem_SlaveArm_ReinforceInfo_C, UberGraphFrame) == 0x000268, "Member 'UUIW_ListItem_SlaveArm_ReinforceInfo_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UUIW_ListItem_SlaveArm_ReinforceInfo_C, Bg_Dimed) == 0x000270, "Member 'UUIW_ListItem_SlaveArm_ReinforceInfo_C::Bg_Dimed' has a wrong offset!");
static_assert(offsetof(UUIW_ListItem_SlaveArm_ReinforceInfo_C, Fx_Selected) == 0x000278, "Member 'UUIW_ListItem_SlaveArm_ReinforceInfo_C::Fx_Selected' has a wrong offset!");
static_assert(offsetof(UUIW_ListItem_SlaveArm_ReinforceInfo_C, Img_Lock) == 0x000280, "Member 'UUIW_ListItem_SlaveArm_ReinforceInfo_C::Img_Lock' has a wrong offset!");
static_assert(offsetof(UUIW_ListItem_SlaveArm_ReinforceInfo_C, Text_Label) == 0x000288, "Member 'UUIW_ListItem_SlaveArm_ReinforceInfo_C::Text_Label' has a wrong offset!");
static_assert(offsetof(UUIW_ListItem_SlaveArm_ReinforceInfo_C, SlotData) == 0x000290, "Member 'UUIW_ListItem_SlaveArm_ReinforceInfo_C::SlotData' has a wrong offset!");
static_assert(offsetof(UUIW_ListItem_SlaveArm_ReinforceInfo_C, Type) == 0x000298, "Member 'UUIW_ListItem_SlaveArm_ReinforceInfo_C::Type' has a wrong offset!");
static_assert(offsetof(UUIW_ListItem_SlaveArm_ReinforceInfo_C, Depth) == 0x00029C, "Member 'UUIW_ListItem_SlaveArm_ReinforceInfo_C::Depth' has a wrong offset!");
static_assert(offsetof(UUIW_ListItem_SlaveArm_ReinforceInfo_C, OnFocusedSlot) == 0x0002A0, "Member 'UUIW_ListItem_SlaveArm_ReinforceInfo_C::OnFocusedSlot' has a wrong offset!");
static_assert(offsetof(UUIW_ListItem_SlaveArm_ReinforceInfo_C, OnDoubleClick) == 0x0002B0, "Member 'UUIW_ListItem_SlaveArm_ReinforceInfo_C::OnDoubleClick' has a wrong offset!");
static_assert(offsetof(UUIW_ListItem_SlaveArm_ReinforceInfo_C, IsSelected) == 0x0002C0, "Member 'UUIW_ListItem_SlaveArm_ReinforceInfo_C::IsSelected' has a wrong offset!");

}


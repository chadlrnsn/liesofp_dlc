#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Action_UseGrinder

#include "Basic.hpp"

#include "ProjectP_structs.hpp"
#include "ProjectP_classes.hpp"
#include "Engine_structs.hpp"
#include "ProjectPContentInfo_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Action_UseGrinder.BP_Action_UseGrinder_C
// 0x0070 (0x02C8 - 0x0258)
class UBP_Action_UseGrinder_C final : public ULAction_LoopAnim
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0258(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class ULItem*                                 TargetItem;                                        // 0x0260(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULActPayload_UseItem*                   PayloadItem;                                       // 0x0268(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Cached_UseMainItemInstead;                         // 0x0270(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Success;                                           // 0x0271(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_272[0x6];                                      // 0x0272(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ULItem*                                 Cached_CurrentItem;                                // 0x0278(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULItem*                                 Cached_CurrentItem_Unit;                           // 0x0280(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          PlayCurrentSkill;                                  // 0x0288(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_289[0x3];                                      // 0x0289(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   PO_FastGrindBuff_1;                                // 0x028C(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   PO_FastGrindBuff_2;                                // 0x0294(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         PO_AddRepairRatioPerSecondRate;                    // 0x029C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RepairRatioPerSecond;                              // 0x02A0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   PO_FastGrindBuff_3;                                // 0x02A4(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2AC[0x4];                                      // 0x02AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           PO_AppliedAbnormals;                               // 0x02B0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	int32                                         PO_FastGrindBuff_LV;                               // 0x02C0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_Action_UseGrinder(int32 EntryPoint);
	void OnTick(float DeltaTime);
	void OnCurrMontageEnded(class UAnimMontage* Montage, bool bInterrupted, int32 MontageInstanceID);
	void OnCommandOccured(class ULActMgrComponent* ActMgrComponent, class AActor* TargetActor, class FName Command, const struct FVector& Lever, bool SkipCommandPrerequisitiesCheck);
	void OnStart();
	void OnStop(class ULActBase* ReasonAction, class FName Reason);
	bool OnPreProcessAction();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Action_UseGrinder_C">();
	}
	static class UBP_Action_UseGrinder_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_Action_UseGrinder_C>();
	}
};
static_assert(alignof(UBP_Action_UseGrinder_C) == 0x000008, "Wrong alignment on UBP_Action_UseGrinder_C");
static_assert(sizeof(UBP_Action_UseGrinder_C) == 0x0002C8, "Wrong size on UBP_Action_UseGrinder_C");
static_assert(offsetof(UBP_Action_UseGrinder_C, UberGraphFrame) == 0x000258, "Member 'UBP_Action_UseGrinder_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_Action_UseGrinder_C, TargetItem) == 0x000260, "Member 'UBP_Action_UseGrinder_C::TargetItem' has a wrong offset!");
static_assert(offsetof(UBP_Action_UseGrinder_C, PayloadItem) == 0x000268, "Member 'UBP_Action_UseGrinder_C::PayloadItem' has a wrong offset!");
static_assert(offsetof(UBP_Action_UseGrinder_C, Cached_UseMainItemInstead) == 0x000270, "Member 'UBP_Action_UseGrinder_C::Cached_UseMainItemInstead' has a wrong offset!");
static_assert(offsetof(UBP_Action_UseGrinder_C, Success) == 0x000271, "Member 'UBP_Action_UseGrinder_C::Success' has a wrong offset!");
static_assert(offsetof(UBP_Action_UseGrinder_C, Cached_CurrentItem) == 0x000278, "Member 'UBP_Action_UseGrinder_C::Cached_CurrentItem' has a wrong offset!");
static_assert(offsetof(UBP_Action_UseGrinder_C, Cached_CurrentItem_Unit) == 0x000280, "Member 'UBP_Action_UseGrinder_C::Cached_CurrentItem_Unit' has a wrong offset!");
static_assert(offsetof(UBP_Action_UseGrinder_C, PlayCurrentSkill) == 0x000288, "Member 'UBP_Action_UseGrinder_C::PlayCurrentSkill' has a wrong offset!");
static_assert(offsetof(UBP_Action_UseGrinder_C, PO_FastGrindBuff_1) == 0x00028C, "Member 'UBP_Action_UseGrinder_C::PO_FastGrindBuff_1' has a wrong offset!");
static_assert(offsetof(UBP_Action_UseGrinder_C, PO_FastGrindBuff_2) == 0x000294, "Member 'UBP_Action_UseGrinder_C::PO_FastGrindBuff_2' has a wrong offset!");
static_assert(offsetof(UBP_Action_UseGrinder_C, PO_AddRepairRatioPerSecondRate) == 0x00029C, "Member 'UBP_Action_UseGrinder_C::PO_AddRepairRatioPerSecondRate' has a wrong offset!");
static_assert(offsetof(UBP_Action_UseGrinder_C, RepairRatioPerSecond) == 0x0002A0, "Member 'UBP_Action_UseGrinder_C::RepairRatioPerSecond' has a wrong offset!");
static_assert(offsetof(UBP_Action_UseGrinder_C, PO_FastGrindBuff_3) == 0x0002A4, "Member 'UBP_Action_UseGrinder_C::PO_FastGrindBuff_3' has a wrong offset!");
static_assert(offsetof(UBP_Action_UseGrinder_C, PO_AppliedAbnormals) == 0x0002B0, "Member 'UBP_Action_UseGrinder_C::PO_AppliedAbnormals' has a wrong offset!");
static_assert(offsetof(UBP_Action_UseGrinder_C, PO_FastGrindBuff_LV) == 0x0002C0, "Member 'UBP_Action_UseGrinder_C::PO_FastGrindBuff_LV' has a wrong offset!");

}


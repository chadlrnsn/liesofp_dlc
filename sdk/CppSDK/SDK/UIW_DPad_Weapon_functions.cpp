#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UIW_DPad_Weapon

#include "Basic.hpp"

#include "UIW_DPad_Weapon_classes.hpp"
#include "UIW_DPad_Weapon_parameters.hpp"


namespace SDK
{

// Function UIW_DPad_Weapon.UIW_DPad_Weapon_C.ExecuteUbergraph_UIW_DPad_Weapon
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUIW_DPad_Weapon_C::ExecuteUbergraph_UIW_DPad_Weapon(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIW_DPad_Weapon_C", "ExecuteUbergraph_UIW_DPad_Weapon");

	Params::UIW_DPad_Weapon_C_ExecuteUbergraph_UIW_DPad_Weapon Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UIW_DPad_Weapon.UIW_DPad_Weapon_C.Tick
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// float                                   InDeltaTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUIW_DPad_Weapon_C::Tick(const struct FGeometry& MyGeometry, float InDeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIW_DPad_Weapon_C", "Tick");

	Params::UIW_DPad_Weapon_C_Tick Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InDeltaTime = InDeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UIW_DPad_Weapon.UIW_DPad_Weapon_C.OnActionStarted
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class ULActMgrComponent*                ActMgrComponent                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ULActBase*                        StartedAction                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUIW_DPad_Weapon_C::OnActionStarted(class ULActMgrComponent* ActMgrComponent, class ULActBase* StartedAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIW_DPad_Weapon_C", "OnActionStarted");

	Params::UIW_DPad_Weapon_C_OnActionStarted Parms{};

	Parms.ActMgrComponent = ActMgrComponent;
	Parms.StartedAction = StartedAction;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UIW_DPad_Weapon.UIW_DPad_Weapon_C.OnActionEnded
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class ULActMgrComponent*                ActMgrComponent                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ULActBase*                        StoppingAction                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ULActBase*                        ReasonAction                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUIW_DPad_Weapon_C::OnActionEnded(class ULActMgrComponent* ActMgrComponent, class ULActBase* StoppingAction, class ULActBase* ReasonAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIW_DPad_Weapon_C", "OnActionEnded");

	Params::UIW_DPad_Weapon_C_OnActionEnded Parms{};

	Parms.ActMgrComponent = ActMgrComponent;
	Parms.StoppingAction = StoppingAction;
	Parms.ReasonAction = ReasonAction;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UIW_DPad_Weapon.UIW_DPad_Weapon_C.CompleteTween
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             CategoryName                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUIW_DPad_Weapon_C::CompleteTween(class FName CategoryName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIW_DPad_Weapon_C", "CompleteTween");

	Params::UIW_DPad_Weapon_C_CompleteTween Parms{};

	Parms.CategoryName = CategoryName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UIW_DPad_Weapon.UIW_DPad_Weapon_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UUIW_DPad_Weapon_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIW_DPad_Weapon_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UIW_DPad_Weapon.UIW_DPad_Weapon_C.Destruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UUIW_DPad_Weapon_C::Destruct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIW_DPad_Weapon_C", "Destruct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UIW_DPad_Weapon.UIW_DPad_Weapon_C.ChangeIcon
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UTexture2D*                       Texture                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUIW_DPad_Weapon_C::ChangeIcon(class UTexture2D* Texture)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIW_DPad_Weapon_C", "ChangeIcon");

	Params::UIW_DPad_Weapon_C_ChangeIcon Parms{};

	Parms.Texture = Texture;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UIW_DPad_Weapon.UIW_DPad_Weapon_C.SetItem
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// ELEquipSlotType                         EquipSlotType                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ULWeaponItem*                     LWeapon                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUIW_DPad_Weapon_C::SetItem(ELEquipSlotType EquipSlotType, class ULWeaponItem* LWeapon)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIW_DPad_Weapon_C", "SetItem");

	Params::UIW_DPad_Weapon_C_SetItem Parms{};

	Parms.EquipSlotType = EquipSlotType;
	Parms.LWeapon = LWeapon;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UIW_DPad_Weapon.UIW_DPad_Weapon_C.SetFableInfo
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UUIW_DPad_Weapon_C::SetFableInfo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIW_DPad_Weapon_C", "SetFableInfo");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UIW_DPad_Weapon.UIW_DPad_Weapon_C.Set Durability
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Current                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Max                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsGrinder                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UUIW_DPad_Weapon_C::Set_Durability(int32 Current, int32 Max, bool IsGrinder)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIW_DPad_Weapon_C", "Set Durability");

	Params::UIW_DPad_Weapon_C_Set_Durability Parms{};

	Parms.Current = Current;
	Parms.Max = Max;
	Parms.IsGrinder = IsGrinder;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UIW_DPad_Weapon.UIW_DPad_Weapon_C.SetControlGuide
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsGamePad                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UUIW_DPad_Weapon_C::SetControlGuide(bool IsGamePad)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIW_DPad_Weapon_C", "SetControlGuide");

	Params::UIW_DPad_Weapon_C_SetControlGuide Parms{};

	Parms.IsGamePad = IsGamePad;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UIW_DPad_Weapon.UIW_DPad_Weapon_C.Set Visible Control Guide
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsShow                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UUIW_DPad_Weapon_C::Set_Visible_Control_Guide(bool IsShow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIW_DPad_Weapon_C", "Set Visible Control Guide");

	Params::UIW_DPad_Weapon_C_Set_Visible_Control_Guide Parms{};

	Parms.IsShow = IsShow;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UIW_DPad_Weapon.UIW_DPad_Weapon_C.OnChooseWeapon
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FLEquipItemSlot                  EquipSlot                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)

void UUIW_DPad_Weapon_C::OnChooseWeapon(const struct FLEquipItemSlot& EquipSlot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIW_DPad_Weapon_C", "OnChooseWeapon");

	Params::UIW_DPad_Weapon_C_OnChooseWeapon Parms{};

	Parms.EquipSlot = std::move(EquipSlot);

	UObject::ProcessEvent(Func, &Parms);
}


// Function UIW_DPad_Weapon.UIW_DPad_Weapon_C.OnChangeWeaponFableSkill
// (Public, BlueprintCallable, BlueprintEvent)

void UUIW_DPad_Weapon_C::OnChangeWeaponFableSkill()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIW_DPad_Weapon_C", "OnChangeWeaponFableSkill");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UIW_DPad_Weapon.UIW_DPad_Weapon_C.OnFableBuffEnable
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    On                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    IsHandle                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UUIW_DPad_Weapon_C::OnFableBuffEnable(bool On, bool IsHandle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIW_DPad_Weapon_C", "OnFableBuffEnable");

	Params::UIW_DPad_Weapon_C_OnFableBuffEnable Parms{};

	Parms.On = On;
	Parms.IsHandle = IsHandle;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UIW_DPad_Weapon.UIW_DPad_Weapon_C.OnUpdateHeroicWeapon
// (Public, BlueprintCallable, BlueprintEvent)

void UUIW_DPad_Weapon_C::OnUpdateHeroicWeapon()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIW_DPad_Weapon_C", "OnUpdateHeroicWeapon");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UIW_DPad_Weapon.UIW_DPad_Weapon_C.RefreshFrenzy
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Current                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Max                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   UnitCount                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   ConsumeUnitCount_0                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// ELFrenzyConsumeReason                   FrenzyPointConsumeReason                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUIW_DPad_Weapon_C::RefreshFrenzy(int32 Current, int32 Max, int32 UnitCount, int32 ConsumeUnitCount_0, ELFrenzyConsumeReason FrenzyPointConsumeReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIW_DPad_Weapon_C", "RefreshFrenzy");

	Params::UIW_DPad_Weapon_C_RefreshFrenzy Parms{};

	Parms.Current = Current;
	Parms.Max = Max;
	Parms.UnitCount = UnitCount;
	Parms.ConsumeUnitCount_0 = ConsumeUnitCount_0;
	Parms.FrenzyPointConsumeReason = FrenzyPointConsumeReason;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UIW_DPad_Weapon.UIW_DPad_Weapon_C.RefreshFrenzyReal
// (Public, BlueprintCallable, BlueprintEvent)

void UUIW_DPad_Weapon_C::RefreshFrenzyReal()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIW_DPad_Weapon_C", "RefreshFrenzyReal");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UIW_DPad_Weapon.UIW_DPad_Weapon_C.SetFrenzyUnitCount
// (Private, BlueprintCallable, BlueprintEvent)

void UUIW_DPad_Weapon_C::SetFrenzyUnitCount()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIW_DPad_Weapon_C", "SetFrenzyUnitCount");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UIW_DPad_Weapon.UIW_DPad_Weapon_C.OnChangeInputMode
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bGamePad                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UUIW_DPad_Weapon_C::OnChangeInputMode(bool bGamePad)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIW_DPad_Weapon_C", "OnChangeInputMode");

	Params::UIW_DPad_Weapon_C_OnChangeInputMode Parms{};

	Parms.bGamePad = bGamePad;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UIW_DPad_Weapon.UIW_DPad_Weapon_C.GetIsActiveUnit
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   ActiveCount                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   PrevActiveCount_0                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   NeedActiveCount                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ForceUpdate                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    PrevIsActiveUnit                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    IsActiveUnit                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    NeedUpdate                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UUIW_DPad_Weapon_C::GetIsActiveUnit(int32 ActiveCount, int32 PrevActiveCount_0, int32 NeedActiveCount, bool ForceUpdate, bool PrevIsActiveUnit, bool* IsActiveUnit, bool* NeedUpdate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIW_DPad_Weapon_C", "GetIsActiveUnit");

	Params::UIW_DPad_Weapon_C_GetIsActiveUnit Parms{};

	Parms.ActiveCount = ActiveCount;
	Parms.PrevActiveCount_0 = PrevActiveCount_0;
	Parms.NeedActiveCount = NeedActiveCount;
	Parms.ForceUpdate = ForceUpdate;
	Parms.PrevIsActiveUnit = PrevIsActiveUnit;

	UObject::ProcessEvent(Func, &Parms);

	if (IsActiveUnit != nullptr)
		*IsActiveUnit = Parms.IsActiveUnit;

	if (NeedUpdate != nullptr)
		*NeedUpdate = Parms.NeedUpdate;
}


// Function UIW_DPad_Weapon.UIW_DPad_Weapon_C.SetFrenzyUnitCountBlade
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UUIW_DPad_Weapon_C::SetFrenzyUnitCountBlade()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIW_DPad_Weapon_C", "SetFrenzyUnitCountBlade");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UIW_DPad_Weapon.UIW_DPad_Weapon_C.SetFrenzyUnitCountHandle
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UUIW_DPad_Weapon_C::SetFrenzyUnitCountHandle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIW_DPad_Weapon_C", "SetFrenzyUnitCountHandle");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UIW_DPad_Weapon.UIW_DPad_Weapon_C.GetActiveBladeCount
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   ActiveCount                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   BladeUnitCount_0                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsActive                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   ResultCount                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUIW_DPad_Weapon_C::GetActiveBladeCount(int32 ActiveCount, int32 BladeUnitCount_0, bool IsActive, int32* ResultCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIW_DPad_Weapon_C", "GetActiveBladeCount");

	Params::UIW_DPad_Weapon_C_GetActiveBladeCount Parms{};

	Parms.ActiveCount = ActiveCount;
	Parms.BladeUnitCount_0 = BladeUnitCount_0;
	Parms.IsActive = IsActive;

	UObject::ProcessEvent(Func, &Parms);

	if (ResultCount != nullptr)
		*ResultCount = Parms.ResultCount;
}


// Function UIW_DPad_Weapon.UIW_DPad_Weapon_C.GetActiveHandleCount
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   ActiveCount                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   BladeUnitCount_0                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsActive                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   ResultCount                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUIW_DPad_Weapon_C::GetActiveHandleCount(int32 ActiveCount, int32 BladeUnitCount_0, bool IsActive, int32* ResultCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIW_DPad_Weapon_C", "GetActiveHandleCount");

	Params::UIW_DPad_Weapon_C_GetActiveHandleCount Parms{};

	Parms.ActiveCount = ActiveCount;
	Parms.BladeUnitCount_0 = BladeUnitCount_0;
	Parms.IsActive = IsActive;

	UObject::ProcessEvent(Func, &Parms);

	if (ResultCount != nullptr)
		*ResultCount = Parms.ResultCount;
}


// Function UIW_DPad_Weapon.UIW_DPad_Weapon_C.GetActiveControlGuideCount
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   ModifiedActiveCount                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUIW_DPad_Weapon_C::GetActiveControlGuideCount(int32 ModifiedActiveCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIW_DPad_Weapon_C", "GetActiveControlGuideCount");

	Params::UIW_DPad_Weapon_C_GetActiveControlGuideCount Parms{};

	Parms.ModifiedActiveCount = ModifiedActiveCount;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UIW_DPad_Weapon.UIW_DPad_Weapon_C.GetComboStep
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   ComboStep_0                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUIW_DPad_Weapon_C::GetComboStep(int32* ComboStep_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIW_DPad_Weapon_C", "GetComboStep");

	Params::UIW_DPad_Weapon_C_GetComboStep Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ComboStep_0 != nullptr)
		*ComboStep_0 = Parms.ComboStep_0;
}


// Function UIW_DPad_Weapon.UIW_DPad_Weapon_C.SetUnitCount
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// ELInputTypeHudOnly                      InputType                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ChainStarted                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   SkillRequireUnitCount                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   SkillConsumeUnitCount                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   ChainUnitCount                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsBladeOrHandle                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    ResultChainStarted                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   ResultChainUnitCount                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   UnitCount                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUIW_DPad_Weapon_C::SetUnitCount(ELInputTypeHudOnly InputType, bool ChainStarted, int32 SkillRequireUnitCount, int32 SkillConsumeUnitCount, int32 ChainUnitCount, bool IsBladeOrHandle, bool* ResultChainStarted, int32* ResultChainUnitCount, int32* UnitCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIW_DPad_Weapon_C", "SetUnitCount");

	Params::UIW_DPad_Weapon_C_SetUnitCount Parms{};

	Parms.InputType = InputType;
	Parms.ChainStarted = ChainStarted;
	Parms.SkillRequireUnitCount = SkillRequireUnitCount;
	Parms.SkillConsumeUnitCount = SkillConsumeUnitCount;
	Parms.ChainUnitCount = ChainUnitCount;
	Parms.IsBladeOrHandle = IsBladeOrHandle;

	UObject::ProcessEvent(Func, &Parms);

	if (ResultChainStarted != nullptr)
		*ResultChainStarted = Parms.ResultChainStarted;

	if (ResultChainUnitCount != nullptr)
		*ResultChainUnitCount = Parms.ResultChainUnitCount;

	if (UnitCount != nullptr)
		*UnitCount = Parms.UnitCount;
}

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Projectile_PileBunker

#include "Basic.hpp"

#include "ProjectP_structs.hpp"
#include "Engine_structs.hpp"
#include "BP_Projectile_Fixed_Base_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Projectile_PileBunker.BP_Projectile_PileBunker_C
// 0x0030 (0x0440 - 0x0410)
class ABP_Projectile_PileBunker_C final : public ABP_Projectile_Fixed_Base_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_Projectile_PileBunker_C;         // 0x0410(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	float                                         OverlapHeight;                                     // 0x0418(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41C[0x4];                                      // 0x041C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         BoxOverlappedActors;                               // 0x0420(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	TArray<struct FLOverlapResult>                SphereOverlappedActors;                            // 0x0430(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)

public:
	void ExecuteUbergraph_BP_Projectile_PileBunker(int32 EntryPoint);
	void UpdateOverlapEvents(float DeltaTime);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Projectile_PileBunker_C">();
	}
	static class ABP_Projectile_PileBunker_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Projectile_PileBunker_C>();
	}
};
static_assert(alignof(ABP_Projectile_PileBunker_C) == 0x000010, "Wrong alignment on ABP_Projectile_PileBunker_C");
static_assert(sizeof(ABP_Projectile_PileBunker_C) == 0x000440, "Wrong size on ABP_Projectile_PileBunker_C");
static_assert(offsetof(ABP_Projectile_PileBunker_C, UberGraphFrame_BP_Projectile_PileBunker_C) == 0x000410, "Member 'ABP_Projectile_PileBunker_C::UberGraphFrame_BP_Projectile_PileBunker_C' has a wrong offset!");
static_assert(offsetof(ABP_Projectile_PileBunker_C, OverlapHeight) == 0x000418, "Member 'ABP_Projectile_PileBunker_C::OverlapHeight' has a wrong offset!");
static_assert(offsetof(ABP_Projectile_PileBunker_C, BoxOverlappedActors) == 0x000420, "Member 'ABP_Projectile_PileBunker_C::BoxOverlappedActors' has a wrong offset!");
static_assert(offsetof(ABP_Projectile_PileBunker_C, SphereOverlappedActors) == 0x000430, "Member 'ABP_Projectile_PileBunker_C::SphereOverlappedActors' has a wrong offset!");

}


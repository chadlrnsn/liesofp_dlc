#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_QuickStep

#include "Basic.hpp"

#include "ProjectP_structs.hpp"
#include "ProjectP_classes.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_QuickStep.BP_QuickStep_C
// 0x0030 (0x0288 - 0x0258)
class UBP_QuickStep_C final : public ULAction_LoopAnim
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0258(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FLGameObjectHandle                     RootMotionScalingHandle_Freeze;                    // 0x0260(0x0004)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	struct FLGameObjectHandle                     TfModifierHandle_SideMove;                         // 0x0264(0x0004)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	float                                         Cached_LeverAngle;                                 // 0x0268(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Cached_Lever;                                      // 0x026C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Option_RotationTime;                               // 0x0278(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Temp_StartLocation;                                // 0x027C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_QuickStep(int32 EntryPoint);
	void OnStart();
	void OnStop(class ULActBase* ReasonAction, class FName Reason);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_QuickStep_C">();
	}
	static class UBP_QuickStep_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_QuickStep_C>();
	}
};
static_assert(alignof(UBP_QuickStep_C) == 0x000008, "Wrong alignment on UBP_QuickStep_C");
static_assert(sizeof(UBP_QuickStep_C) == 0x000288, "Wrong size on UBP_QuickStep_C");
static_assert(offsetof(UBP_QuickStep_C, UberGraphFrame) == 0x000258, "Member 'UBP_QuickStep_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_QuickStep_C, RootMotionScalingHandle_Freeze) == 0x000260, "Member 'UBP_QuickStep_C::RootMotionScalingHandle_Freeze' has a wrong offset!");
static_assert(offsetof(UBP_QuickStep_C, TfModifierHandle_SideMove) == 0x000264, "Member 'UBP_QuickStep_C::TfModifierHandle_SideMove' has a wrong offset!");
static_assert(offsetof(UBP_QuickStep_C, Cached_LeverAngle) == 0x000268, "Member 'UBP_QuickStep_C::Cached_LeverAngle' has a wrong offset!");
static_assert(offsetof(UBP_QuickStep_C, Cached_Lever) == 0x00026C, "Member 'UBP_QuickStep_C::Cached_Lever' has a wrong offset!");
static_assert(offsetof(UBP_QuickStep_C, Option_RotationTime) == 0x000278, "Member 'UBP_QuickStep_C::Option_RotationTime' has a wrong offset!");
static_assert(offsetof(UBP_QuickStep_C, Temp_StartLocation) == 0x00027C, "Member 'UBP_QuickStep_C::Temp_StartLocation' has a wrong offset!");

}


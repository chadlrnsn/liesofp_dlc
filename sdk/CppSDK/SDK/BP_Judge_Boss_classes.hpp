#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Judge_Boss

#include "Basic.hpp"

#include "ProjectP_structs.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "LNPCCharacterBP_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Judge_Boss.BP_Judge_Boss_C
// 0x0080 (0x1540 - 0x14C0)
class ABP_Judge_Boss_C final : public ALNPCCharacterBP_C
{
public:
	uint8                                         Pad_14B5[0x3];                                     // 0x14B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_Judge_Boss_C;                    // 0x14B8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class ULCharacterBlockCapsuleComponent*       LCharacterBlockCapsule_Hip;                        // 0x14C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class ULCharacterBlockCapsuleComponent*       CharBlockCapsule_Body_RArm;                        // 0x14C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class ULCharacterBlockCapsuleComponent*       CharBlockCapsule_Body_LArm;                        // 0x14D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class ULCharacterBlockCapsuleComponent*       CharBlockCapsule_Body_RLeg;                        // 0x14D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class ULCharacterBlockCapsuleComponent*       CharBlockCapsule_Body_LLeg;                        // 0x14E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class ULCharacterBlockCapsuleComponent*       CharBlockCapsule_BodyUpper;                        // 0x14E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      Coil_Spark_Back;                                   // 0x14F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      Coil_Spark;                                        // 0x14F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class FName                                   IK_Socket_Left;                                    // 0x1500(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   IK_Socket_Right;                                   // 0x1508(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         IK_CapsuleHalfHeight;                              // 0x1510(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         IK_TraceDistance;                                  // 0x1514(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         IK_FeetInterpSpeed;                                // 0x1518(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         IK_AdjustOffset;                                   // 0x151C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         IK_DeltaSeconds;                                   // 0x1520(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         IK_Limit;                                          // 0x1524(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                IK_Foot_Size_Left;                                 // 0x1528(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                IK_Foot_Size_Right;                                // 0x1534(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_Judge_Boss(int32 EntryPoint);
	void ReceiveBeginPlay();
	void OnRespawnBP();
	void OnPostDead();
	void UserConstructionScript();
	void IK_Trace(float TraceDistance, class FName SocketName, const struct FVector& FootSize, bool Moving, float* Offest, struct FRotator* Impact, bool* BlockHitBool);
	void IK_UpdateFootOffset_(float TargetValue, float& EffectorVar, float InterpSpeed, float* EffectorValue);
	void IK_UpdateFootRotation(const struct FRotator& TargetValue, struct FRotator& RotationVar, float InterpSpeed, struct FRotator* RotatorValue);
	void IK_AllUpdate(float InterpSpeed, bool Moving, float* ReturnLeftOffset, float* ReturnRightOffset, struct FRotator* ReturnLeftRotator, struct FRotator* ReturnRightRotator, float* ReturnHipsOffset);
	bool OnCanHitOccurDecoMesh(class AActor* Attacker, class AActor* Victim, const struct FHitResult& HitResult);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Judge_Boss_C">();
	}
	static class ABP_Judge_Boss_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Judge_Boss_C>();
	}
};
static_assert(alignof(ABP_Judge_Boss_C) == 0x000010, "Wrong alignment on ABP_Judge_Boss_C");
static_assert(sizeof(ABP_Judge_Boss_C) == 0x001540, "Wrong size on ABP_Judge_Boss_C");
static_assert(offsetof(ABP_Judge_Boss_C, UberGraphFrame_BP_Judge_Boss_C) == 0x0014B8, "Member 'ABP_Judge_Boss_C::UberGraphFrame_BP_Judge_Boss_C' has a wrong offset!");
static_assert(offsetof(ABP_Judge_Boss_C, LCharacterBlockCapsule_Hip) == 0x0014C0, "Member 'ABP_Judge_Boss_C::LCharacterBlockCapsule_Hip' has a wrong offset!");
static_assert(offsetof(ABP_Judge_Boss_C, CharBlockCapsule_Body_RArm) == 0x0014C8, "Member 'ABP_Judge_Boss_C::CharBlockCapsule_Body_RArm' has a wrong offset!");
static_assert(offsetof(ABP_Judge_Boss_C, CharBlockCapsule_Body_LArm) == 0x0014D0, "Member 'ABP_Judge_Boss_C::CharBlockCapsule_Body_LArm' has a wrong offset!");
static_assert(offsetof(ABP_Judge_Boss_C, CharBlockCapsule_Body_RLeg) == 0x0014D8, "Member 'ABP_Judge_Boss_C::CharBlockCapsule_Body_RLeg' has a wrong offset!");
static_assert(offsetof(ABP_Judge_Boss_C, CharBlockCapsule_Body_LLeg) == 0x0014E0, "Member 'ABP_Judge_Boss_C::CharBlockCapsule_Body_LLeg' has a wrong offset!");
static_assert(offsetof(ABP_Judge_Boss_C, CharBlockCapsule_BodyUpper) == 0x0014E8, "Member 'ABP_Judge_Boss_C::CharBlockCapsule_BodyUpper' has a wrong offset!");
static_assert(offsetof(ABP_Judge_Boss_C, Coil_Spark_Back) == 0x0014F0, "Member 'ABP_Judge_Boss_C::Coil_Spark_Back' has a wrong offset!");
static_assert(offsetof(ABP_Judge_Boss_C, Coil_Spark) == 0x0014F8, "Member 'ABP_Judge_Boss_C::Coil_Spark' has a wrong offset!");
static_assert(offsetof(ABP_Judge_Boss_C, IK_Socket_Left) == 0x001500, "Member 'ABP_Judge_Boss_C::IK_Socket_Left' has a wrong offset!");
static_assert(offsetof(ABP_Judge_Boss_C, IK_Socket_Right) == 0x001508, "Member 'ABP_Judge_Boss_C::IK_Socket_Right' has a wrong offset!");
static_assert(offsetof(ABP_Judge_Boss_C, IK_CapsuleHalfHeight) == 0x001510, "Member 'ABP_Judge_Boss_C::IK_CapsuleHalfHeight' has a wrong offset!");
static_assert(offsetof(ABP_Judge_Boss_C, IK_TraceDistance) == 0x001514, "Member 'ABP_Judge_Boss_C::IK_TraceDistance' has a wrong offset!");
static_assert(offsetof(ABP_Judge_Boss_C, IK_FeetInterpSpeed) == 0x001518, "Member 'ABP_Judge_Boss_C::IK_FeetInterpSpeed' has a wrong offset!");
static_assert(offsetof(ABP_Judge_Boss_C, IK_AdjustOffset) == 0x00151C, "Member 'ABP_Judge_Boss_C::IK_AdjustOffset' has a wrong offset!");
static_assert(offsetof(ABP_Judge_Boss_C, IK_DeltaSeconds) == 0x001520, "Member 'ABP_Judge_Boss_C::IK_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(ABP_Judge_Boss_C, IK_Limit) == 0x001524, "Member 'ABP_Judge_Boss_C::IK_Limit' has a wrong offset!");
static_assert(offsetof(ABP_Judge_Boss_C, IK_Foot_Size_Left) == 0x001528, "Member 'ABP_Judge_Boss_C::IK_Foot_Size_Left' has a wrong offset!");
static_assert(offsetof(ABP_Judge_Boss_C, IK_Foot_Size_Right) == 0x001534, "Member 'ABP_Judge_Boss_C::IK_Foot_Size_Right' has a wrong offset!");

}


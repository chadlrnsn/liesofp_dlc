#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: FXSystemDataBP

#include "Basic.hpp"

#include "ProjectP_structs.hpp"
#include "ProjectP_classes.hpp"
#include "Engine_structs.hpp"
#include "ProjectPContentInfo_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass FXSystemDataBP.FXSystemDataBP_C
// 0x0218 (0x0410 - 0x01F8)
class AFXSystemDataBP_C final : public ALFXSystemData
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x01F8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class ULFXComponent*                          LFX;                                               // 0x0200(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPostProcessComponent*                  PostProcess;                                       // 0x0208(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0210(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         Disappear_MaterialEffect_StartTime;                // 0x0218(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Disappear_SystemEffect_StartTime;                  // 0x021C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Disappear_SoundEffect_StartTime;                   // 0x0220(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_224[0x4];                                      // 0x0224(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<ELNpcDisappearType, class UNiagaraSystem*> Disappear_SystemEffect;                            // 0x0228(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<ELNpcDisappearType, class USoundCue*>    Disappear_SoundEffect;                             // 0x0278(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UMaterialInstanceDynamic*               TorsionCoilPostProcess;                            // 0x02C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TorsionCoilPostProcessDurationTimeStart;           // 0x02D0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TorsionCoilPostProcessDurationTimeEnd;             // 0x02D4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             FuryAttackSound;                                   // 0x02D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         FuryAttackParticle;                                // 0x02E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ALCharacter*                            Cached_GainFrenzyVictim;                           // 0x02E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        SplashBloodFX_Trail;                               // 0x02F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         SplashBloodFX_Particle;                            // 0x02F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SplashBloodFX_TrailTime;                           // 0x0300(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_304[0x4];                                      // 0x0304(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UNiagaraComponent*                      SplashBloodFX_ParticleInstance;                    // 0x0308(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SplatterFX_Duration;                               // 0x0310(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_314[0x4];                                      // 0x0314(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             PulseRechargeSound;                                // 0x0318(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<class FName, struct FLFatalIndicatorFx>  ActiveFatalIndicatorMap;                           // 0x0320(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	class UNiagaraSystem*                         FatalEnableIndicator_Attach_FX;                    // 0x0370(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             FatalEnableIndicator_Attach_Sound;                 // 0x0378(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         FatalLocationIndicator_Active_FX;                  // 0x0380(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             FatalLocationIndicator_Active_Sound;               // 0x0388(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         FatalLocationIndicator_Active_InRange_FX;          // 0x0390(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             FatalLocationIndicator_Active_InRange_Sound;       // 0x0398(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         FatalLocationIndicator_Success_FX;                 // 0x03A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             FatalLocationIndicator_Success_Sound;              // 0x03A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FadeOutDuration;                                   // 0x03B0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         VignetteIntensity_Default;                         // 0x03B4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         VignetteIntensity_Talk;                            // 0x03B8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3BC[0x4];                                      // 0x03BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class FName, class UNiagaraSystem*>      WeaponElementFXs;                                  // 0x03C0(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void ExecuteUbergraph_FXSystemDataBP(int32 EntryPoint);
	void SetBloodOnOff(bool bOnOff);
	void PlaySocketTracerHitEffect_SFX(class FName EventName, const struct FTransform& HitTransform, ELPhysicalSurfaceType AttackerPhysicalSurface, ELPhysicalSurfaceType GroundPhysicalSurface);
	void PlaySocketTracerHitEffect_FX(class FName EventName, const struct FTransform& HitTransform, ELPhysicalSurfaceType AttackerPhysicalSurface, ELPhysicalSurfaceType GroundPhysicalSurface);
	void OnEndTalk();
	void OnBeginTalk();
	void SetFatalIndicatorState(class FName IndicatorKey, class ALCharacter* TargetActor, ELFatalIndicatorState PrevState, ELFatalIndicatorState CurrentState, const struct FTransform& FxTransform);
	void OnPulseRecharged();
	void OnParalyzationOcurred(class AActor* Victim);
	void OnTorsionCoilPostProcess();
	void OnDisappear(class ALCharacter* Character);
	void ReceiveTick(float DeltaSeconds);
	void ReceiveBeginPlay();
	void UserConstructionScript();
	struct FLAttachedEffectSet OnBuffEffect(class AActor* Actor, class FName EventName, ELPhysicalSurfaceType PhysicalSurface, class FName AttachedSocketName);
	struct FLAttachedEffectSet ActiveFuryAttack(class ALNPCCharacter* InTarget, bool bActive, float InVolumeModifier);
	void StartGainFrenzyMaterialFXByFuryAttack();
	void ClearGainFrenzyMaterialFXByFuryAttack();
	void SetFatalIndicatorState_Inner(class FName Key, const struct FLFatalIndicatorFx& FxData, ELFatalIndicatorState PrevState, ELFatalIndicatorState CurrentState);
	TSoftObjectPtr<class ULMaterialVarying> GetWeaponMaterialVarying(class FName MaterialFxCodename);
	class UNiagaraSystem* GetWeaponTrailElementFX(class FName ElementFXCodename);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"FXSystemDataBP_C">();
	}
	static class AFXSystemDataBP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AFXSystemDataBP_C>();
	}
};
static_assert(alignof(AFXSystemDataBP_C) == 0x000008, "Wrong alignment on AFXSystemDataBP_C");
static_assert(sizeof(AFXSystemDataBP_C) == 0x000410, "Wrong size on AFXSystemDataBP_C");
static_assert(offsetof(AFXSystemDataBP_C, UberGraphFrame) == 0x0001F8, "Member 'AFXSystemDataBP_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AFXSystemDataBP_C, LFX) == 0x000200, "Member 'AFXSystemDataBP_C::LFX' has a wrong offset!");
static_assert(offsetof(AFXSystemDataBP_C, PostProcess) == 0x000208, "Member 'AFXSystemDataBP_C::PostProcess' has a wrong offset!");
static_assert(offsetof(AFXSystemDataBP_C, DefaultSceneRoot) == 0x000210, "Member 'AFXSystemDataBP_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(AFXSystemDataBP_C, Disappear_MaterialEffect_StartTime) == 0x000218, "Member 'AFXSystemDataBP_C::Disappear_MaterialEffect_StartTime' has a wrong offset!");
static_assert(offsetof(AFXSystemDataBP_C, Disappear_SystemEffect_StartTime) == 0x00021C, "Member 'AFXSystemDataBP_C::Disappear_SystemEffect_StartTime' has a wrong offset!");
static_assert(offsetof(AFXSystemDataBP_C, Disappear_SoundEffect_StartTime) == 0x000220, "Member 'AFXSystemDataBP_C::Disappear_SoundEffect_StartTime' has a wrong offset!");
static_assert(offsetof(AFXSystemDataBP_C, Disappear_SystemEffect) == 0x000228, "Member 'AFXSystemDataBP_C::Disappear_SystemEffect' has a wrong offset!");
static_assert(offsetof(AFXSystemDataBP_C, Disappear_SoundEffect) == 0x000278, "Member 'AFXSystemDataBP_C::Disappear_SoundEffect' has a wrong offset!");
static_assert(offsetof(AFXSystemDataBP_C, TorsionCoilPostProcess) == 0x0002C8, "Member 'AFXSystemDataBP_C::TorsionCoilPostProcess' has a wrong offset!");
static_assert(offsetof(AFXSystemDataBP_C, TorsionCoilPostProcessDurationTimeStart) == 0x0002D0, "Member 'AFXSystemDataBP_C::TorsionCoilPostProcessDurationTimeStart' has a wrong offset!");
static_assert(offsetof(AFXSystemDataBP_C, TorsionCoilPostProcessDurationTimeEnd) == 0x0002D4, "Member 'AFXSystemDataBP_C::TorsionCoilPostProcessDurationTimeEnd' has a wrong offset!");
static_assert(offsetof(AFXSystemDataBP_C, FuryAttackSound) == 0x0002D8, "Member 'AFXSystemDataBP_C::FuryAttackSound' has a wrong offset!");
static_assert(offsetof(AFXSystemDataBP_C, FuryAttackParticle) == 0x0002E0, "Member 'AFXSystemDataBP_C::FuryAttackParticle' has a wrong offset!");
static_assert(offsetof(AFXSystemDataBP_C, Cached_GainFrenzyVictim) == 0x0002E8, "Member 'AFXSystemDataBP_C::Cached_GainFrenzyVictim' has a wrong offset!");
static_assert(offsetof(AFXSystemDataBP_C, SplashBloodFX_Trail) == 0x0002F0, "Member 'AFXSystemDataBP_C::SplashBloodFX_Trail' has a wrong offset!");
static_assert(offsetof(AFXSystemDataBP_C, SplashBloodFX_Particle) == 0x0002F8, "Member 'AFXSystemDataBP_C::SplashBloodFX_Particle' has a wrong offset!");
static_assert(offsetof(AFXSystemDataBP_C, SplashBloodFX_TrailTime) == 0x000300, "Member 'AFXSystemDataBP_C::SplashBloodFX_TrailTime' has a wrong offset!");
static_assert(offsetof(AFXSystemDataBP_C, SplashBloodFX_ParticleInstance) == 0x000308, "Member 'AFXSystemDataBP_C::SplashBloodFX_ParticleInstance' has a wrong offset!");
static_assert(offsetof(AFXSystemDataBP_C, SplatterFX_Duration) == 0x000310, "Member 'AFXSystemDataBP_C::SplatterFX_Duration' has a wrong offset!");
static_assert(offsetof(AFXSystemDataBP_C, PulseRechargeSound) == 0x000318, "Member 'AFXSystemDataBP_C::PulseRechargeSound' has a wrong offset!");
static_assert(offsetof(AFXSystemDataBP_C, ActiveFatalIndicatorMap) == 0x000320, "Member 'AFXSystemDataBP_C::ActiveFatalIndicatorMap' has a wrong offset!");
static_assert(offsetof(AFXSystemDataBP_C, FatalEnableIndicator_Attach_FX) == 0x000370, "Member 'AFXSystemDataBP_C::FatalEnableIndicator_Attach_FX' has a wrong offset!");
static_assert(offsetof(AFXSystemDataBP_C, FatalEnableIndicator_Attach_Sound) == 0x000378, "Member 'AFXSystemDataBP_C::FatalEnableIndicator_Attach_Sound' has a wrong offset!");
static_assert(offsetof(AFXSystemDataBP_C, FatalLocationIndicator_Active_FX) == 0x000380, "Member 'AFXSystemDataBP_C::FatalLocationIndicator_Active_FX' has a wrong offset!");
static_assert(offsetof(AFXSystemDataBP_C, FatalLocationIndicator_Active_Sound) == 0x000388, "Member 'AFXSystemDataBP_C::FatalLocationIndicator_Active_Sound' has a wrong offset!");
static_assert(offsetof(AFXSystemDataBP_C, FatalLocationIndicator_Active_InRange_FX) == 0x000390, "Member 'AFXSystemDataBP_C::FatalLocationIndicator_Active_InRange_FX' has a wrong offset!");
static_assert(offsetof(AFXSystemDataBP_C, FatalLocationIndicator_Active_InRange_Sound) == 0x000398, "Member 'AFXSystemDataBP_C::FatalLocationIndicator_Active_InRange_Sound' has a wrong offset!");
static_assert(offsetof(AFXSystemDataBP_C, FatalLocationIndicator_Success_FX) == 0x0003A0, "Member 'AFXSystemDataBP_C::FatalLocationIndicator_Success_FX' has a wrong offset!");
static_assert(offsetof(AFXSystemDataBP_C, FatalLocationIndicator_Success_Sound) == 0x0003A8, "Member 'AFXSystemDataBP_C::FatalLocationIndicator_Success_Sound' has a wrong offset!");
static_assert(offsetof(AFXSystemDataBP_C, FadeOutDuration) == 0x0003B0, "Member 'AFXSystemDataBP_C::FadeOutDuration' has a wrong offset!");
static_assert(offsetof(AFXSystemDataBP_C, VignetteIntensity_Default) == 0x0003B4, "Member 'AFXSystemDataBP_C::VignetteIntensity_Default' has a wrong offset!");
static_assert(offsetof(AFXSystemDataBP_C, VignetteIntensity_Talk) == 0x0003B8, "Member 'AFXSystemDataBP_C::VignetteIntensity_Talk' has a wrong offset!");
static_assert(offsetof(AFXSystemDataBP_C, WeaponElementFXs) == 0x0003C0, "Member 'AFXSystemDataBP_C::WeaponElementFXs' has a wrong offset!");

}


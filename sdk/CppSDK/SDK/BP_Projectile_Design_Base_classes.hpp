#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Projectile_Design_Base

#include "Basic.hpp"

#include "ProjectP_structs.hpp"
#include "ProjectP_classes.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Projectile_Design_Base.BP_Projectile_Design_Base_C
// 0x00B0 (0x0328 - 0x0278)
class ABP_Projectile_Design_Base_C : public ALProjectileDesign
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0278(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UStaticMeshComponent*                   Mesh;                                              // 0x0280(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        MeshScene;                                         // 0x0288(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        Sound_Start;                                       // 0x0290(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      Fx_Start;                                          // 0x0298(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        Sound_Disappear;                                   // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      Fx_Disappear;                                      // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        Sound_Bounce;                                      // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      Fx_Bounce;                                         // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        Sound_Explode;                                     // 0x02C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        Sound_Move;                                        // 0x02C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      Fx_Explode;                                        // 0x02D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      Fx_Move;                                           // 0x02D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x02E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               RotatePerSecond;                                   // 0x02E8(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         TimePlayDestoryFX;                                 // 0x02F4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CollisionRadius;                                   // 0x02F8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MaxDistance;                                       // 0x02FC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Lifetime;                                          // 0x0300(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CollisionProfile;                                  // 0x0304(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MaxBounceCount;                                    // 0x030C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Move_FadeOutDuration;                              // 0x0310(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAudioFaderCurve                              Move_FadeOutCurveType;                             // 0x0314(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          RotateChildMesh;                                   // 0x0315(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_316[0x2];                                      // 0x0316(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class ULDecalComponent*                       SpawnedDecalComponent;                             // 0x0318(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           Timer_DestroyAfterFxFinish;                        // 0x0320(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_Projectile_Design_Base(int32 EntryPoint);
	void EndProjectileDesign();
	void OnBounce();
	void ReserveDestroy();
	void OnDisappear(ELProjectileDestroyReason Reason, const struct FHitResult& HitResult);
	void OnExplode(ELProjectileDestroyReason Reason, const struct FHitResult& HitResult);
	void InitProjectile();
	void ReceiveTick(float DeltaSeconds);
	void ReceiveBeginPlay();
	void RotateMesh(float DeltaTime);
	void GetWireCable(class UCableComponent** Cable);
	void DeactiveMoveFX();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Projectile_Design_Base_C">();
	}
	static class ABP_Projectile_Design_Base_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Projectile_Design_Base_C>();
	}
};
static_assert(alignof(ABP_Projectile_Design_Base_C) == 0x000008, "Wrong alignment on ABP_Projectile_Design_Base_C");
static_assert(sizeof(ABP_Projectile_Design_Base_C) == 0x000328, "Wrong size on ABP_Projectile_Design_Base_C");
static_assert(offsetof(ABP_Projectile_Design_Base_C, UberGraphFrame) == 0x000278, "Member 'ABP_Projectile_Design_Base_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_Projectile_Design_Base_C, Mesh) == 0x000280, "Member 'ABP_Projectile_Design_Base_C::Mesh' has a wrong offset!");
static_assert(offsetof(ABP_Projectile_Design_Base_C, MeshScene) == 0x000288, "Member 'ABP_Projectile_Design_Base_C::MeshScene' has a wrong offset!");
static_assert(offsetof(ABP_Projectile_Design_Base_C, Sound_Start) == 0x000290, "Member 'ABP_Projectile_Design_Base_C::Sound_Start' has a wrong offset!");
static_assert(offsetof(ABP_Projectile_Design_Base_C, Fx_Start) == 0x000298, "Member 'ABP_Projectile_Design_Base_C::Fx_Start' has a wrong offset!");
static_assert(offsetof(ABP_Projectile_Design_Base_C, Sound_Disappear) == 0x0002A0, "Member 'ABP_Projectile_Design_Base_C::Sound_Disappear' has a wrong offset!");
static_assert(offsetof(ABP_Projectile_Design_Base_C, Fx_Disappear) == 0x0002A8, "Member 'ABP_Projectile_Design_Base_C::Fx_Disappear' has a wrong offset!");
static_assert(offsetof(ABP_Projectile_Design_Base_C, Sound_Bounce) == 0x0002B0, "Member 'ABP_Projectile_Design_Base_C::Sound_Bounce' has a wrong offset!");
static_assert(offsetof(ABP_Projectile_Design_Base_C, Fx_Bounce) == 0x0002B8, "Member 'ABP_Projectile_Design_Base_C::Fx_Bounce' has a wrong offset!");
static_assert(offsetof(ABP_Projectile_Design_Base_C, Sound_Explode) == 0x0002C0, "Member 'ABP_Projectile_Design_Base_C::Sound_Explode' has a wrong offset!");
static_assert(offsetof(ABP_Projectile_Design_Base_C, Sound_Move) == 0x0002C8, "Member 'ABP_Projectile_Design_Base_C::Sound_Move' has a wrong offset!");
static_assert(offsetof(ABP_Projectile_Design_Base_C, Fx_Explode) == 0x0002D0, "Member 'ABP_Projectile_Design_Base_C::Fx_Explode' has a wrong offset!");
static_assert(offsetof(ABP_Projectile_Design_Base_C, Fx_Move) == 0x0002D8, "Member 'ABP_Projectile_Design_Base_C::Fx_Move' has a wrong offset!");
static_assert(offsetof(ABP_Projectile_Design_Base_C, DefaultSceneRoot) == 0x0002E0, "Member 'ABP_Projectile_Design_Base_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_Projectile_Design_Base_C, RotatePerSecond) == 0x0002E8, "Member 'ABP_Projectile_Design_Base_C::RotatePerSecond' has a wrong offset!");
static_assert(offsetof(ABP_Projectile_Design_Base_C, TimePlayDestoryFX) == 0x0002F4, "Member 'ABP_Projectile_Design_Base_C::TimePlayDestoryFX' has a wrong offset!");
static_assert(offsetof(ABP_Projectile_Design_Base_C, CollisionRadius) == 0x0002F8, "Member 'ABP_Projectile_Design_Base_C::CollisionRadius' has a wrong offset!");
static_assert(offsetof(ABP_Projectile_Design_Base_C, MaxDistance) == 0x0002FC, "Member 'ABP_Projectile_Design_Base_C::MaxDistance' has a wrong offset!");
static_assert(offsetof(ABP_Projectile_Design_Base_C, Lifetime) == 0x000300, "Member 'ABP_Projectile_Design_Base_C::Lifetime' has a wrong offset!");
static_assert(offsetof(ABP_Projectile_Design_Base_C, CollisionProfile) == 0x000304, "Member 'ABP_Projectile_Design_Base_C::CollisionProfile' has a wrong offset!");
static_assert(offsetof(ABP_Projectile_Design_Base_C, MaxBounceCount) == 0x00030C, "Member 'ABP_Projectile_Design_Base_C::MaxBounceCount' has a wrong offset!");
static_assert(offsetof(ABP_Projectile_Design_Base_C, Move_FadeOutDuration) == 0x000310, "Member 'ABP_Projectile_Design_Base_C::Move_FadeOutDuration' has a wrong offset!");
static_assert(offsetof(ABP_Projectile_Design_Base_C, Move_FadeOutCurveType) == 0x000314, "Member 'ABP_Projectile_Design_Base_C::Move_FadeOutCurveType' has a wrong offset!");
static_assert(offsetof(ABP_Projectile_Design_Base_C, RotateChildMesh) == 0x000315, "Member 'ABP_Projectile_Design_Base_C::RotateChildMesh' has a wrong offset!");
static_assert(offsetof(ABP_Projectile_Design_Base_C, SpawnedDecalComponent) == 0x000318, "Member 'ABP_Projectile_Design_Base_C::SpawnedDecalComponent' has a wrong offset!");
static_assert(offsetof(ABP_Projectile_Design_Base_C, Timer_DestroyAfterFxFinish) == 0x000320, "Member 'ABP_Projectile_Design_Base_C::Timer_DestroyAfterFxFinish' has a wrong offset!");

}


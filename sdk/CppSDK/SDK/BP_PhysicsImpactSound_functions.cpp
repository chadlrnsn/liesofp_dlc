#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PhysicsImpactSound

#include "Basic.hpp"

#include "BP_PhysicsImpactSound_classes.hpp"
#include "BP_PhysicsImpactSound_parameters.hpp"


namespace SDK
{

// Function BP_PhysicsImpactSound.BP_PhysicsImpactSound_C.ExecuteUbergraph_BP_PhysicsImpactSound
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PhysicsImpactSound_C::ExecuteUbergraph_BP_PhysicsImpactSound(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PhysicsImpactSound_C", "ExecuteUbergraph_BP_PhysicsImpactSound");

	Params::BP_PhysicsImpactSound_C_ExecuteUbergraph_BP_PhysicsImpactSound Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PhysicsImpactSound.BP_PhysicsImpactSound_C.DeActivateImpactSound
// (BlueprintCallable, BlueprintEvent)

void UBP_PhysicsImpactSound_C::DeActivateImpactSound()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PhysicsImpactSound_C", "DeActivateImpactSound");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PhysicsImpactSound.BP_PhysicsImpactSound_C.OnDisableEvent
// (BlueprintCallable, BlueprintEvent)

void UBP_PhysicsImpactSound_C::OnDisableEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PhysicsImpactSound_C", "OnDisableEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PhysicsImpactSound.BP_PhysicsImpactSound_C.HitEvent
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           SelfActor                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          NormalImpulse                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FHitResult                       Hit                                                    (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void UBP_PhysicsImpactSound_C::HitEvent(class AActor* SelfActor, class AActor* OtherActor, const struct FVector& NormalImpulse, const struct FHitResult& Hit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PhysicsImpactSound_C", "HitEvent");

	Params::BP_PhysicsImpactSound_C_HitEvent Parms{};

	Parms.SelfActor = SelfActor;
	Parms.OtherActor = OtherActor;
	Parms.NormalImpulse = std::move(NormalImpulse);
	Parms.Hit = std::move(Hit);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PhysicsImpactSound.BP_PhysicsImpactSound_C.ActivateImpactSound
// (BlueprintCallable, BlueprintEvent)

void UBP_PhysicsImpactSound_C::ActivateImpactSound()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PhysicsImpactSound_C", "ActivateImpactSound");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PhysicsImpactSound.BP_PhysicsImpactSound_C.SetEventTimer
// (BlueprintCallable, BlueprintEvent)

void UBP_PhysicsImpactSound_C::SetEventTimer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PhysicsImpactSound_C", "SetEventTimer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PhysicsImpactSound.BP_PhysicsImpactSound_C.AllClearEvent
// (BlueprintCallable, BlueprintEvent)

void UBP_PhysicsImpactSound_C::AllClearEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PhysicsImpactSound_C", "AllClearEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PhysicsImpactSound.BP_PhysicsImpactSound_C.ResetTime
// (BlueprintCallable, BlueprintEvent)

void UBP_PhysicsImpactSound_C::ResetTime()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PhysicsImpactSound_C", "ResetTime");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PhysicsImpactSound.BP_PhysicsImpactSound_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PhysicsImpactSound_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PhysicsImpactSound_C", "ReceiveTick");

	Params::BP_PhysicsImpactSound_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PhysicsImpactSound.BP_PhysicsImpactSound_C.ReceiveBeginPlay
// (Event, Public, BlueprintEvent)

void UBP_PhysicsImpactSound_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PhysicsImpactSound_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PhysicsImpactSound.BP_PhysicsImpactSound_C.CollectComponent
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class USceneComponent*>          ComponentList                                          (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
// class UClass*                           ComponentClass                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           InActor                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PhysicsImpactSound_C::CollectComponent(TArray<class USceneComponent*>& ComponentList, class UClass* ComponentClass, class AActor* InActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PhysicsImpactSound_C", "CollectComponent");

	Params::BP_PhysicsImpactSound_C_CollectComponent Parms{};

	Parms.ComponentList = std::move(ComponentList);
	Parms.ComponentClass = ComponentClass;
	Parms.InActor = InActor;

	UObject::ProcessEvent(Func, &Parms);

	ComponentList = std::move(Parms.ComponentList);
}


// Function BP_PhysicsImpactSound.BP_PhysicsImpactSound_C.AddActor
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           InActor                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PhysicsImpactSound_C::AddActor(class AActor* InActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PhysicsImpactSound_C", "AddActor");

	Params::BP_PhysicsImpactSound_C_AddActor Parms{};

	Parms.InActor = InActor;

	UObject::ProcessEvent(Func, &Parms);
}

}


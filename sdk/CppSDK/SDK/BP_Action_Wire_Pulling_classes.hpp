#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Action_Wire_Pulling

#include "Basic.hpp"

#include "ProjectP_structs.hpp"
#include "BP_Action_HitBase_classes.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Action_Wire_Pulling.BP_Action_Wire_Pulling_C
// 0x0080 (0x04A0 - 0x0420)
class UBP_Action_Wire_Pulling_C final : public UBP_Action_HitBase_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_Action_Wire_Pulling_C;           // 0x0420(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class FName                                   CommonAnimCodeName;                                // 0x0428(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsWireAttached;                                    // 0x0430(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsHitAnimEnd;                                      // 0x0431(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_432[0x6];                                      // 0x0432(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Cached_TargetAttacker;                             // 0x0438(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Cached_StartLocation;                              // 0x0440(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Cached_EndLocation;                                // 0x044C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Cached_PullingTime;                                // 0x0458(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PullingDistance;                                   // 0x045C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                PullingDirection;                                  // 0x0460(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ElaspedTime;                                       // 0x046C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Cached_Velocity;                                   // 0x0470(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Cached_Angle;                                      // 0x047C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           Timer_HitMotionDuration;                           // 0x0480(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	float                                         Speed;                                             // 0x0488(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Gravity;                                           // 0x048C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CachedAlignRot;                                    // 0x0490(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          CachedDoNotRotate;                                 // 0x049C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_BP_Action_Wire_Pulling(int32 EntryPoint);
	void HitDurationExpired();
	void OnPullingTargetStop();
	void OnTick(float DeltaTime);
	void OnWireAttached(class AActor* Attacker, const struct FVector& StartLocation, const struct FVector& EndLocation, float PullingTime);
	void OnCurrMontageEnded(class UAnimMontage* Montage, bool bInterrupted, int32 MontageInstanceID);
	void OnStop(class ULActBase* ReasonAction, class FName Reason);
	void OnStart();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Action_Wire_Pulling_C">();
	}
	static class UBP_Action_Wire_Pulling_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_Action_Wire_Pulling_C>();
	}
};
static_assert(alignof(UBP_Action_Wire_Pulling_C) == 0x000008, "Wrong alignment on UBP_Action_Wire_Pulling_C");
static_assert(sizeof(UBP_Action_Wire_Pulling_C) == 0x0004A0, "Wrong size on UBP_Action_Wire_Pulling_C");
static_assert(offsetof(UBP_Action_Wire_Pulling_C, UberGraphFrame_BP_Action_Wire_Pulling_C) == 0x000420, "Member 'UBP_Action_Wire_Pulling_C::UberGraphFrame_BP_Action_Wire_Pulling_C' has a wrong offset!");
static_assert(offsetof(UBP_Action_Wire_Pulling_C, CommonAnimCodeName) == 0x000428, "Member 'UBP_Action_Wire_Pulling_C::CommonAnimCodeName' has a wrong offset!");
static_assert(offsetof(UBP_Action_Wire_Pulling_C, IsWireAttached) == 0x000430, "Member 'UBP_Action_Wire_Pulling_C::IsWireAttached' has a wrong offset!");
static_assert(offsetof(UBP_Action_Wire_Pulling_C, IsHitAnimEnd) == 0x000431, "Member 'UBP_Action_Wire_Pulling_C::IsHitAnimEnd' has a wrong offset!");
static_assert(offsetof(UBP_Action_Wire_Pulling_C, Cached_TargetAttacker) == 0x000438, "Member 'UBP_Action_Wire_Pulling_C::Cached_TargetAttacker' has a wrong offset!");
static_assert(offsetof(UBP_Action_Wire_Pulling_C, Cached_StartLocation) == 0x000440, "Member 'UBP_Action_Wire_Pulling_C::Cached_StartLocation' has a wrong offset!");
static_assert(offsetof(UBP_Action_Wire_Pulling_C, Cached_EndLocation) == 0x00044C, "Member 'UBP_Action_Wire_Pulling_C::Cached_EndLocation' has a wrong offset!");
static_assert(offsetof(UBP_Action_Wire_Pulling_C, Cached_PullingTime) == 0x000458, "Member 'UBP_Action_Wire_Pulling_C::Cached_PullingTime' has a wrong offset!");
static_assert(offsetof(UBP_Action_Wire_Pulling_C, PullingDistance) == 0x00045C, "Member 'UBP_Action_Wire_Pulling_C::PullingDistance' has a wrong offset!");
static_assert(offsetof(UBP_Action_Wire_Pulling_C, PullingDirection) == 0x000460, "Member 'UBP_Action_Wire_Pulling_C::PullingDirection' has a wrong offset!");
static_assert(offsetof(UBP_Action_Wire_Pulling_C, ElaspedTime) == 0x00046C, "Member 'UBP_Action_Wire_Pulling_C::ElaspedTime' has a wrong offset!");
static_assert(offsetof(UBP_Action_Wire_Pulling_C, Cached_Velocity) == 0x000470, "Member 'UBP_Action_Wire_Pulling_C::Cached_Velocity' has a wrong offset!");
static_assert(offsetof(UBP_Action_Wire_Pulling_C, Cached_Angle) == 0x00047C, "Member 'UBP_Action_Wire_Pulling_C::Cached_Angle' has a wrong offset!");
static_assert(offsetof(UBP_Action_Wire_Pulling_C, Timer_HitMotionDuration) == 0x000480, "Member 'UBP_Action_Wire_Pulling_C::Timer_HitMotionDuration' has a wrong offset!");
static_assert(offsetof(UBP_Action_Wire_Pulling_C, Speed) == 0x000488, "Member 'UBP_Action_Wire_Pulling_C::Speed' has a wrong offset!");
static_assert(offsetof(UBP_Action_Wire_Pulling_C, Gravity) == 0x00048C, "Member 'UBP_Action_Wire_Pulling_C::Gravity' has a wrong offset!");
static_assert(offsetof(UBP_Action_Wire_Pulling_C, CachedAlignRot) == 0x000490, "Member 'UBP_Action_Wire_Pulling_C::CachedAlignRot' has a wrong offset!");
static_assert(offsetof(UBP_Action_Wire_Pulling_C, CachedDoNotRotate) == 0x00049C, "Member 'UBP_Action_Wire_Pulling_C::CachedDoNotRotate' has a wrong offset!");

}


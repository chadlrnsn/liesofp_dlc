#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Action_WireAction

#include "Basic.hpp"

#include "ProjectP_structs.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "BP_Action_SlaveArm_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Action_WireAction.BP_Action_WireAction_C
// 0x0068 (0x02F8 - 0x0290)
class UBP_Action_WireAction_C final : public UBP_Action_SlaveArm_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_Action_WireAction_C;             // 0x0290(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	float                                         TEST_RopeBlendTimeElapsed;                         // 0x0298(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TEST_RopeBlendTimeDuration;                        // 0x029C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ValidMontageInst;                                  // 0x02A0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          DestructionPowerUp;                                // 0x02A1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          FollowingOn;                                       // 0x02A2(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          FailRecovery;                                      // 0x02A3(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          JumpSmashEnable;                                   // 0x02A4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          DashEnable;                                        // 0x02A5(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          HitSubstitution;                                   // 0x02A6(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A7[0x1];                                      // 0x02A7(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         MaxDistance;                                       // 0x02A8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsFollowing;                                       // 0x02AC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2AD[0x3];                                      // 0x02AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Cached_TargetLocation;                             // 0x02B0(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Pending_PullingAttack;                             // 0x02BC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsDashing;                                         // 0x02BD(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2BE[0x2];                                      // 0x02BE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         StartMontageID;                                    // 0x02C0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         DashMontageID;                                     // 0x02C4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DashInputEnableTimer;                              // 0x02C8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Cached_Lever;                                      // 0x02CC(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Cached_LeverAngle;                                 // 0x02D8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         OptionRotationTime;                                // 0x02DC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           Timer_DashInputEnableOver;                         // 0x02E0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          bReservedDashInput;                                // 0x02E8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E9[0x3];                                      // 0x02E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         FailMontageID;                                     // 0x02EC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         PullingMontageID;                                  // 0x02F0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_Action_WireAction(int32 EntryPoint);
	void OnDashInputEnableOver();
	void OnAttached();
	void OnDash();
	void OnCommandOccured(class ULActMgrComponent* ActMgrComponent, class AActor* TargetActor, class FName Command, const struct FVector& Lever, bool SkipCommandPrerequisitiesCheck);
	void OnFollowing();
	void OnTick(float DeltaTime);
	void OnFail();
	void OnCurrMontageEnded(class UAnimMontage* Montage, bool bInterrupted, int32 MontageInstanceID);
	void On_Pulling();
	void OnStop(class ULActBase* ReasonAction, class FName Reason);
	void OnStart();
	void SetReinforcedVariableValue(class FName VariableName, class FName Value);
	void ClearReinforcedVariableValues();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Action_WireAction_C">();
	}
	static class UBP_Action_WireAction_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_Action_WireAction_C>();
	}
};
static_assert(alignof(UBP_Action_WireAction_C) == 0x000008, "Wrong alignment on UBP_Action_WireAction_C");
static_assert(sizeof(UBP_Action_WireAction_C) == 0x0002F8, "Wrong size on UBP_Action_WireAction_C");
static_assert(offsetof(UBP_Action_WireAction_C, UberGraphFrame_BP_Action_WireAction_C) == 0x000290, "Member 'UBP_Action_WireAction_C::UberGraphFrame_BP_Action_WireAction_C' has a wrong offset!");
static_assert(offsetof(UBP_Action_WireAction_C, TEST_RopeBlendTimeElapsed) == 0x000298, "Member 'UBP_Action_WireAction_C::TEST_RopeBlendTimeElapsed' has a wrong offset!");
static_assert(offsetof(UBP_Action_WireAction_C, TEST_RopeBlendTimeDuration) == 0x00029C, "Member 'UBP_Action_WireAction_C::TEST_RopeBlendTimeDuration' has a wrong offset!");
static_assert(offsetof(UBP_Action_WireAction_C, ValidMontageInst) == 0x0002A0, "Member 'UBP_Action_WireAction_C::ValidMontageInst' has a wrong offset!");
static_assert(offsetof(UBP_Action_WireAction_C, DestructionPowerUp) == 0x0002A1, "Member 'UBP_Action_WireAction_C::DestructionPowerUp' has a wrong offset!");
static_assert(offsetof(UBP_Action_WireAction_C, FollowingOn) == 0x0002A2, "Member 'UBP_Action_WireAction_C::FollowingOn' has a wrong offset!");
static_assert(offsetof(UBP_Action_WireAction_C, FailRecovery) == 0x0002A3, "Member 'UBP_Action_WireAction_C::FailRecovery' has a wrong offset!");
static_assert(offsetof(UBP_Action_WireAction_C, JumpSmashEnable) == 0x0002A4, "Member 'UBP_Action_WireAction_C::JumpSmashEnable' has a wrong offset!");
static_assert(offsetof(UBP_Action_WireAction_C, DashEnable) == 0x0002A5, "Member 'UBP_Action_WireAction_C::DashEnable' has a wrong offset!");
static_assert(offsetof(UBP_Action_WireAction_C, HitSubstitution) == 0x0002A6, "Member 'UBP_Action_WireAction_C::HitSubstitution' has a wrong offset!");
static_assert(offsetof(UBP_Action_WireAction_C, MaxDistance) == 0x0002A8, "Member 'UBP_Action_WireAction_C::MaxDistance' has a wrong offset!");
static_assert(offsetof(UBP_Action_WireAction_C, IsFollowing) == 0x0002AC, "Member 'UBP_Action_WireAction_C::IsFollowing' has a wrong offset!");
static_assert(offsetof(UBP_Action_WireAction_C, Cached_TargetLocation) == 0x0002B0, "Member 'UBP_Action_WireAction_C::Cached_TargetLocation' has a wrong offset!");
static_assert(offsetof(UBP_Action_WireAction_C, Pending_PullingAttack) == 0x0002BC, "Member 'UBP_Action_WireAction_C::Pending_PullingAttack' has a wrong offset!");
static_assert(offsetof(UBP_Action_WireAction_C, IsDashing) == 0x0002BD, "Member 'UBP_Action_WireAction_C::IsDashing' has a wrong offset!");
static_assert(offsetof(UBP_Action_WireAction_C, StartMontageID) == 0x0002C0, "Member 'UBP_Action_WireAction_C::StartMontageID' has a wrong offset!");
static_assert(offsetof(UBP_Action_WireAction_C, DashMontageID) == 0x0002C4, "Member 'UBP_Action_WireAction_C::DashMontageID' has a wrong offset!");
static_assert(offsetof(UBP_Action_WireAction_C, DashInputEnableTimer) == 0x0002C8, "Member 'UBP_Action_WireAction_C::DashInputEnableTimer' has a wrong offset!");
static_assert(offsetof(UBP_Action_WireAction_C, Cached_Lever) == 0x0002CC, "Member 'UBP_Action_WireAction_C::Cached_Lever' has a wrong offset!");
static_assert(offsetof(UBP_Action_WireAction_C, Cached_LeverAngle) == 0x0002D8, "Member 'UBP_Action_WireAction_C::Cached_LeverAngle' has a wrong offset!");
static_assert(offsetof(UBP_Action_WireAction_C, OptionRotationTime) == 0x0002DC, "Member 'UBP_Action_WireAction_C::OptionRotationTime' has a wrong offset!");
static_assert(offsetof(UBP_Action_WireAction_C, Timer_DashInputEnableOver) == 0x0002E0, "Member 'UBP_Action_WireAction_C::Timer_DashInputEnableOver' has a wrong offset!");
static_assert(offsetof(UBP_Action_WireAction_C, bReservedDashInput) == 0x0002E8, "Member 'UBP_Action_WireAction_C::bReservedDashInput' has a wrong offset!");
static_assert(offsetof(UBP_Action_WireAction_C, FailMontageID) == 0x0002EC, "Member 'UBP_Action_WireAction_C::FailMontageID' has a wrong offset!");
static_assert(offsetof(UBP_Action_WireAction_C, PullingMontageID) == 0x0002F0, "Member 'UBP_Action_WireAction_C::PullingMontageID' has a wrong offset!");

}


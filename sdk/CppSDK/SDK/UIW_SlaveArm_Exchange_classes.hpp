#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UIW_SlaveArm_Exchange

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UIW_Window_classes.hpp"
#include "ProjectPContentInfo_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass UIW_SlaveArm_Exchange.UIW_SlaveArm_Exchange_C
// 0x01B0 (0x0500 - 0x0350)
class UUIW_SlaveArm_Exchange_C final : public UUIW_Window_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_UIW_SlaveArm_Exchange_C;            // 0x0350(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UUIW_BG_Tab_C*                          BG_Tab;                                            // 0x0358(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUIW_Btn_Key_C*                         Btn_Back;                                          // 0x0360(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUIW_Btn_Key_C*                         Btn_Exchange;                                      // 0x0368(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUIW_Btn_Key_C*                         Btn_Tab_LeftKey;                                   // 0x0370(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUIW_Btn_Key_C*                         Btn_Tab_RightKey;                                  // 0x0378(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Deco_Line_2;                                       // 0x0380(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                Group_SoldOutUI;                                   // 0x0388(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Group_Title;                                       // 0x0390(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Img_ArmIcon;                                       // 0x0398(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Img_movie;                                         // 0x03A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUIW_ListItem_Stat_Simple_C*            Item_Advance;                                      // 0x03A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUIW_ListItem_Stat_Simple_C*            Item_Motivity;                                     // 0x03B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUIW_ListItem_Stat_Simple_C*            Item_Technique;                                    // 0x03B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class ULListView*                             List_Abilities;                                    // 0x03C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class ULListView*                             List_Tab;                                          // 0x03C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUIW_ListItem_SlaveArm_ReinforceInfo_C* ListItem_0;                                        // 0x03D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUIW_ListItem_SlaveArm_ReinforceInfo_C* ListItem_1;                                        // 0x03D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUIW_ListItem_SlaveArm_ReinforceInfo_C* ListItem_2;                                        // 0x03E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUIW_ListItem_SlaveArm_ReinforceInfo_C* ListItem_3;                                        // 0x03E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUIW_ListItem_ResourceListBar_C*        Resource_Item;                                     // 0x03F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUIW_SlaveArm_ReinforceSlot_C*          Slot_0;                                            // 0x03F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUIW_SlaveArm_ReinforceSlot_C*          Slot_1;                                            // 0x0400(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUIW_SlaveArm_ReinforceSlot_C*          Slot_2;                                            // 0x0408(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUIW_SlaveArm_ReinforceSlot_C*          Slot_3;                                            // 0x0410(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUIW_SubTitle_C*                        SubTitle_AttackAbility;                            // 0x0418(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Text_Skill_Info;                                   // 0x0420(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Text_Skill_Name;                                   // 0x0428(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Text_SlaveArm_Name;                                // 0x0430(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Text_SoldOut;                                      // 0x0438(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Text_SubTitle_2;                                   // 0x0440(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           Tree;                                              // 0x0448(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUIW_BG_Title_C*                        UIW_BG_Title;                                      // 0x0450(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUIW_ProfileItem_Ergo_C*                UIW_ProfileItem_Ergo;                              // 0x0458(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	TArray<class UUIW_ListItem_SlaveArm_ReinforceInfo_C*> ListItem;                                          // 0x0460(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	class UBinkMediaPlayer*                       BinkPlayer;                                        // 0x0470(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUIW_ListItem_SlaveArm_ReinforceInfo_C* CurrentSlot;                                       // 0x0478(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULSlaveArmPage*                         CurrentPage;                                       // 0x0480(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULSlaveArmTree*                         CurrentSlotData;                                   // 0x0488(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULProduct*                              CurrentProduct;                                    // 0x0490(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UUIW_SlaveArm_ReinforceSlot_C*>  SlotList;                                          // 0x0498(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TArray<class ULSlaveArmTree*>                 SlaveArmTree;                                      // 0x04A8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class ULProduct*>                      ItemList;                                          // 0x04B8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FName                                   ShopCodeName;                                      // 0x04C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULProductSpecialShop*                   Shop;                                              // 0x04D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MaxCount;                                          // 0x04D8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4DC[0x4];                                      // 0x04DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUIW_Popup_C*                           CurrentPopup;                                      // 0x04E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UListView*                              CurrentResourceList;                               // 0x04E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUIW_Spinner_C*                         CurrentSpinner;                                    // 0x04F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SelectedCount;                                     // 0x04F8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SelectedTabIndex;                                  // 0x04FC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_UIW_SlaveArm_Exchange(int32 EntryPoint);
	void Destruct();
	void BndEvt__UIW_SlaveArm_Exchange_List_Tab_K2Node_ComponentBoundEvent_2_OnListItemSelectionChangedDynamic__DelegateSignature(class UObject* Item, bool bIsSelected);
	void BndEvt__UIW_SlaveArm_Exchange_Btn_Exchange_K2Node_ComponentBoundEvent_1_OnActive__DelegateSignature(class UUIW_Btn_Key_C* BtnKey);
	void BndEvt__UIW_SlaveArm_Exchange_Btn_Back_K2Node_ComponentBoundEvent_0_OnActive__DelegateSignature(class UUIW_Btn_Key_C* BtnKey);
	void Construct();
	void OnReady();
	void AddEventBinding();
	void ClearEventBinding();
	void MoveLeftTab(class UUIW_Btn_Key_C* BtnKey);
	void MoveRightTab(class UUIW_Btn_Key_C* BtnKey);
	void Refresh_Tab();
	void RefreshTree();
	void ChangeTab(class UObject* Item, bool bIsSelected);
	void OnFocusedSlot(class UUIW_ListItem_SlaveArm_ReinforceInfo_C* Slot_0);
	void MakeResourceList(class UObject* Outer_0, bool NeedCalcCount, TArray<class UUIBP_ListData_Resource_C*>* ResourceList);
	struct FEventReply FocusManage(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);
	void OnActive();
	void OnSpinnerUp(class UUIW_Spinner_C* Spinner);
	void OnSpinnerDown(class UUIW_Spinner_C* Spinner);
	void CallbackExchange(class UUIW_Popup_C* Popup, class UUIW_Btn_Key_C* BtnKey);
	void CheckCanBuy(class ULProduct* Product, bool* CanBuy, class FText* ErrMsg);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"UIW_SlaveArm_Exchange_C">();
	}
	static class UUIW_SlaveArm_Exchange_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUIW_SlaveArm_Exchange_C>();
	}
};
static_assert(alignof(UUIW_SlaveArm_Exchange_C) == 0x000008, "Wrong alignment on UUIW_SlaveArm_Exchange_C");
static_assert(sizeof(UUIW_SlaveArm_Exchange_C) == 0x000500, "Wrong size on UUIW_SlaveArm_Exchange_C");
static_assert(offsetof(UUIW_SlaveArm_Exchange_C, UberGraphFrame_UIW_SlaveArm_Exchange_C) == 0x000350, "Member 'UUIW_SlaveArm_Exchange_C::UberGraphFrame_UIW_SlaveArm_Exchange_C' has a wrong offset!");
static_assert(offsetof(UUIW_SlaveArm_Exchange_C, BG_Tab) == 0x000358, "Member 'UUIW_SlaveArm_Exchange_C::BG_Tab' has a wrong offset!");
static_assert(offsetof(UUIW_SlaveArm_Exchange_C, Btn_Back) == 0x000360, "Member 'UUIW_SlaveArm_Exchange_C::Btn_Back' has a wrong offset!");
static_assert(offsetof(UUIW_SlaveArm_Exchange_C, Btn_Exchange) == 0x000368, "Member 'UUIW_SlaveArm_Exchange_C::Btn_Exchange' has a wrong offset!");
static_assert(offsetof(UUIW_SlaveArm_Exchange_C, Btn_Tab_LeftKey) == 0x000370, "Member 'UUIW_SlaveArm_Exchange_C::Btn_Tab_LeftKey' has a wrong offset!");
static_assert(offsetof(UUIW_SlaveArm_Exchange_C, Btn_Tab_RightKey) == 0x000378, "Member 'UUIW_SlaveArm_Exchange_C::Btn_Tab_RightKey' has a wrong offset!");
static_assert(offsetof(UUIW_SlaveArm_Exchange_C, Deco_Line_2) == 0x000380, "Member 'UUIW_SlaveArm_Exchange_C::Deco_Line_2' has a wrong offset!");
static_assert(offsetof(UUIW_SlaveArm_Exchange_C, Group_SoldOutUI) == 0x000388, "Member 'UUIW_SlaveArm_Exchange_C::Group_SoldOutUI' has a wrong offset!");
static_assert(offsetof(UUIW_SlaveArm_Exchange_C, Group_Title) == 0x000390, "Member 'UUIW_SlaveArm_Exchange_C::Group_Title' has a wrong offset!");
static_assert(offsetof(UUIW_SlaveArm_Exchange_C, Img_ArmIcon) == 0x000398, "Member 'UUIW_SlaveArm_Exchange_C::Img_ArmIcon' has a wrong offset!");
static_assert(offsetof(UUIW_SlaveArm_Exchange_C, Img_movie) == 0x0003A0, "Member 'UUIW_SlaveArm_Exchange_C::Img_movie' has a wrong offset!");
static_assert(offsetof(UUIW_SlaveArm_Exchange_C, Item_Advance) == 0x0003A8, "Member 'UUIW_SlaveArm_Exchange_C::Item_Advance' has a wrong offset!");
static_assert(offsetof(UUIW_SlaveArm_Exchange_C, Item_Motivity) == 0x0003B0, "Member 'UUIW_SlaveArm_Exchange_C::Item_Motivity' has a wrong offset!");
static_assert(offsetof(UUIW_SlaveArm_Exchange_C, Item_Technique) == 0x0003B8, "Member 'UUIW_SlaveArm_Exchange_C::Item_Technique' has a wrong offset!");
static_assert(offsetof(UUIW_SlaveArm_Exchange_C, List_Abilities) == 0x0003C0, "Member 'UUIW_SlaveArm_Exchange_C::List_Abilities' has a wrong offset!");
static_assert(offsetof(UUIW_SlaveArm_Exchange_C, List_Tab) == 0x0003C8, "Member 'UUIW_SlaveArm_Exchange_C::List_Tab' has a wrong offset!");
static_assert(offsetof(UUIW_SlaveArm_Exchange_C, ListItem_0) == 0x0003D0, "Member 'UUIW_SlaveArm_Exchange_C::ListItem_0' has a wrong offset!");
static_assert(offsetof(UUIW_SlaveArm_Exchange_C, ListItem_1) == 0x0003D8, "Member 'UUIW_SlaveArm_Exchange_C::ListItem_1' has a wrong offset!");
static_assert(offsetof(UUIW_SlaveArm_Exchange_C, ListItem_2) == 0x0003E0, "Member 'UUIW_SlaveArm_Exchange_C::ListItem_2' has a wrong offset!");
static_assert(offsetof(UUIW_SlaveArm_Exchange_C, ListItem_3) == 0x0003E8, "Member 'UUIW_SlaveArm_Exchange_C::ListItem_3' has a wrong offset!");
static_assert(offsetof(UUIW_SlaveArm_Exchange_C, Resource_Item) == 0x0003F0, "Member 'UUIW_SlaveArm_Exchange_C::Resource_Item' has a wrong offset!");
static_assert(offsetof(UUIW_SlaveArm_Exchange_C, Slot_0) == 0x0003F8, "Member 'UUIW_SlaveArm_Exchange_C::Slot_0' has a wrong offset!");
static_assert(offsetof(UUIW_SlaveArm_Exchange_C, Slot_1) == 0x000400, "Member 'UUIW_SlaveArm_Exchange_C::Slot_1' has a wrong offset!");
static_assert(offsetof(UUIW_SlaveArm_Exchange_C, Slot_2) == 0x000408, "Member 'UUIW_SlaveArm_Exchange_C::Slot_2' has a wrong offset!");
static_assert(offsetof(UUIW_SlaveArm_Exchange_C, Slot_3) == 0x000410, "Member 'UUIW_SlaveArm_Exchange_C::Slot_3' has a wrong offset!");
static_assert(offsetof(UUIW_SlaveArm_Exchange_C, SubTitle_AttackAbility) == 0x000418, "Member 'UUIW_SlaveArm_Exchange_C::SubTitle_AttackAbility' has a wrong offset!");
static_assert(offsetof(UUIW_SlaveArm_Exchange_C, Text_Skill_Info) == 0x000420, "Member 'UUIW_SlaveArm_Exchange_C::Text_Skill_Info' has a wrong offset!");
static_assert(offsetof(UUIW_SlaveArm_Exchange_C, Text_Skill_Name) == 0x000428, "Member 'UUIW_SlaveArm_Exchange_C::Text_Skill_Name' has a wrong offset!");
static_assert(offsetof(UUIW_SlaveArm_Exchange_C, Text_SlaveArm_Name) == 0x000430, "Member 'UUIW_SlaveArm_Exchange_C::Text_SlaveArm_Name' has a wrong offset!");
static_assert(offsetof(UUIW_SlaveArm_Exchange_C, Text_SoldOut) == 0x000438, "Member 'UUIW_SlaveArm_Exchange_C::Text_SoldOut' has a wrong offset!");
static_assert(offsetof(UUIW_SlaveArm_Exchange_C, Text_SubTitle_2) == 0x000440, "Member 'UUIW_SlaveArm_Exchange_C::Text_SubTitle_2' has a wrong offset!");
static_assert(offsetof(UUIW_SlaveArm_Exchange_C, Tree) == 0x000448, "Member 'UUIW_SlaveArm_Exchange_C::Tree' has a wrong offset!");
static_assert(offsetof(UUIW_SlaveArm_Exchange_C, UIW_BG_Title) == 0x000450, "Member 'UUIW_SlaveArm_Exchange_C::UIW_BG_Title' has a wrong offset!");
static_assert(offsetof(UUIW_SlaveArm_Exchange_C, UIW_ProfileItem_Ergo) == 0x000458, "Member 'UUIW_SlaveArm_Exchange_C::UIW_ProfileItem_Ergo' has a wrong offset!");
static_assert(offsetof(UUIW_SlaveArm_Exchange_C, ListItem) == 0x000460, "Member 'UUIW_SlaveArm_Exchange_C::ListItem' has a wrong offset!");
static_assert(offsetof(UUIW_SlaveArm_Exchange_C, BinkPlayer) == 0x000470, "Member 'UUIW_SlaveArm_Exchange_C::BinkPlayer' has a wrong offset!");
static_assert(offsetof(UUIW_SlaveArm_Exchange_C, CurrentSlot) == 0x000478, "Member 'UUIW_SlaveArm_Exchange_C::CurrentSlot' has a wrong offset!");
static_assert(offsetof(UUIW_SlaveArm_Exchange_C, CurrentPage) == 0x000480, "Member 'UUIW_SlaveArm_Exchange_C::CurrentPage' has a wrong offset!");
static_assert(offsetof(UUIW_SlaveArm_Exchange_C, CurrentSlotData) == 0x000488, "Member 'UUIW_SlaveArm_Exchange_C::CurrentSlotData' has a wrong offset!");
static_assert(offsetof(UUIW_SlaveArm_Exchange_C, CurrentProduct) == 0x000490, "Member 'UUIW_SlaveArm_Exchange_C::CurrentProduct' has a wrong offset!");
static_assert(offsetof(UUIW_SlaveArm_Exchange_C, SlotList) == 0x000498, "Member 'UUIW_SlaveArm_Exchange_C::SlotList' has a wrong offset!");
static_assert(offsetof(UUIW_SlaveArm_Exchange_C, SlaveArmTree) == 0x0004A8, "Member 'UUIW_SlaveArm_Exchange_C::SlaveArmTree' has a wrong offset!");
static_assert(offsetof(UUIW_SlaveArm_Exchange_C, ItemList) == 0x0004B8, "Member 'UUIW_SlaveArm_Exchange_C::ItemList' has a wrong offset!");
static_assert(offsetof(UUIW_SlaveArm_Exchange_C, ShopCodeName) == 0x0004C8, "Member 'UUIW_SlaveArm_Exchange_C::ShopCodeName' has a wrong offset!");
static_assert(offsetof(UUIW_SlaveArm_Exchange_C, Shop) == 0x0004D0, "Member 'UUIW_SlaveArm_Exchange_C::Shop' has a wrong offset!");
static_assert(offsetof(UUIW_SlaveArm_Exchange_C, MaxCount) == 0x0004D8, "Member 'UUIW_SlaveArm_Exchange_C::MaxCount' has a wrong offset!");
static_assert(offsetof(UUIW_SlaveArm_Exchange_C, CurrentPopup) == 0x0004E0, "Member 'UUIW_SlaveArm_Exchange_C::CurrentPopup' has a wrong offset!");
static_assert(offsetof(UUIW_SlaveArm_Exchange_C, CurrentResourceList) == 0x0004E8, "Member 'UUIW_SlaveArm_Exchange_C::CurrentResourceList' has a wrong offset!");
static_assert(offsetof(UUIW_SlaveArm_Exchange_C, CurrentSpinner) == 0x0004F0, "Member 'UUIW_SlaveArm_Exchange_C::CurrentSpinner' has a wrong offset!");
static_assert(offsetof(UUIW_SlaveArm_Exchange_C, SelectedCount) == 0x0004F8, "Member 'UUIW_SlaveArm_Exchange_C::SelectedCount' has a wrong offset!");
static_assert(offsetof(UUIW_SlaveArm_Exchange_C, SelectedTabIndex) == 0x0004FC, "Member 'UUIW_SlaveArm_Exchange_C::SelectedTabIndex' has a wrong offset!");

}


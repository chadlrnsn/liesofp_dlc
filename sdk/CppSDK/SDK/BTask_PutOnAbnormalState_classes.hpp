#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BTask_PutOnAbnormalState

#include "Basic.hpp"

#include "ProjectP_classes.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BTask_PutOnAbnormalState.BTask_PutOnAbnormalState_C
// 0x0020 (0x00D0 - 0x00B0)
class UBTask_PutOnAbnormalState_C final : public ULBTask_BlueprintBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x00B0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	bool                                          bSelf;                                             // 0x00B8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B9[0x3];                                       // 0x00B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   NPCCode_Name;                                      // 0x00BC(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Around_Distance;                                   // 0x00C4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   AbnormalStateCodeName;                             // 0x00C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BTask_PutOnAbnormalState(int32 EntryPoint);
	void ReceiveExecuteAI(class AAIController* OwnerController, class APawn* ControlledPawn);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BTask_PutOnAbnormalState_C">();
	}
	static class UBTask_PutOnAbnormalState_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBTask_PutOnAbnormalState_C>();
	}
};
static_assert(alignof(UBTask_PutOnAbnormalState_C) == 0x000008, "Wrong alignment on UBTask_PutOnAbnormalState_C");
static_assert(sizeof(UBTask_PutOnAbnormalState_C) == 0x0000D0, "Wrong size on UBTask_PutOnAbnormalState_C");
static_assert(offsetof(UBTask_PutOnAbnormalState_C, UberGraphFrame) == 0x0000B0, "Member 'UBTask_PutOnAbnormalState_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBTask_PutOnAbnormalState_C, bSelf) == 0x0000B8, "Member 'UBTask_PutOnAbnormalState_C::bSelf' has a wrong offset!");
static_assert(offsetof(UBTask_PutOnAbnormalState_C, NPCCode_Name) == 0x0000BC, "Member 'UBTask_PutOnAbnormalState_C::NPCCode_Name' has a wrong offset!");
static_assert(offsetof(UBTask_PutOnAbnormalState_C, Around_Distance) == 0x0000C4, "Member 'UBTask_PutOnAbnormalState_C::Around_Distance' has a wrong offset!");
static_assert(offsetof(UBTask_PutOnAbnormalState_C, AbnormalStateCodeName) == 0x0000C8, "Member 'UBTask_PutOnAbnormalState_C::AbnormalStateCodeName' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UIW_Window

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "ProjectP_structs.hpp"


namespace SDK::Params
{

// Function UIW_Window.UIW_Window_C.ExecuteUbergraph_UIW_Window
// 0x0030 (0x0030 - 0x0000)
struct UIW_Window_C_ExecuteUbergraph_UIW_Window final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUIW_Main_C*                            CallFunc_GetMainWidget_MainWidget;                 // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTweenEase                             K2Node_MakeStruct_TweenEase;                       // 0x0010(0x000C)(NoDestructor)
	struct FTweenEase                             K2Node_MakeStruct_TweenEase_1;                     // 0x001C(0x000C)(NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UIW_Window_C_ExecuteUbergraph_UIW_Window) == 0x000008, "Wrong alignment on UIW_Window_C_ExecuteUbergraph_UIW_Window");
static_assert(sizeof(UIW_Window_C_ExecuteUbergraph_UIW_Window) == 0x000030, "Wrong size on UIW_Window_C_ExecuteUbergraph_UIW_Window");
static_assert(offsetof(UIW_Window_C_ExecuteUbergraph_UIW_Window, EntryPoint) == 0x000000, "Member 'UIW_Window_C_ExecuteUbergraph_UIW_Window::EntryPoint' has a wrong offset!");
static_assert(offsetof(UIW_Window_C_ExecuteUbergraph_UIW_Window, CallFunc_GetMainWidget_MainWidget) == 0x000008, "Member 'UIW_Window_C_ExecuteUbergraph_UIW_Window::CallFunc_GetMainWidget_MainWidget' has a wrong offset!");
static_assert(offsetof(UIW_Window_C_ExecuteUbergraph_UIW_Window, K2Node_MakeStruct_TweenEase) == 0x000010, "Member 'UIW_Window_C_ExecuteUbergraph_UIW_Window::K2Node_MakeStruct_TweenEase' has a wrong offset!");
static_assert(offsetof(UIW_Window_C_ExecuteUbergraph_UIW_Window, K2Node_MakeStruct_TweenEase_1) == 0x00001C, "Member 'UIW_Window_C_ExecuteUbergraph_UIW_Window::K2Node_MakeStruct_TweenEase_1' has a wrong offset!");
static_assert(offsetof(UIW_Window_C_ExecuteUbergraph_UIW_Window, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'UIW_Window_C_ExecuteUbergraph_UIW_Window::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function UIW_Window.UIW_Window_C.SetEnabledWindow
// 0x0030 (0x0030 - 0x0000)
struct UIW_Window_C_SetEnabledWindow final
{
public:
	bool                                          IsEnabled;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              CallFunc_GetVisibility_ReturnValue;                // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E[0x2];                                       // 0x001E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UUIW_Btn_Key_C*                         K2Node_DynamicCast_AsUIW_Btn_Key;                  // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UIW_Window_C_SetEnabledWindow) == 0x000008, "Wrong alignment on UIW_Window_C_SetEnabledWindow");
static_assert(sizeof(UIW_Window_C_SetEnabledWindow) == 0x000030, "Wrong size on UIW_Window_C_SetEnabledWindow");
static_assert(offsetof(UIW_Window_C_SetEnabledWindow, IsEnabled) == 0x000000, "Member 'UIW_Window_C_SetEnabledWindow::IsEnabled' has a wrong offset!");
static_assert(offsetof(UIW_Window_C_SetEnabledWindow, Temp_int_Array_Index_Variable) == 0x000004, "Member 'UIW_Window_C_SetEnabledWindow::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(UIW_Window_C_SetEnabledWindow, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'UIW_Window_C_SetEnabledWindow::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(UIW_Window_C_SetEnabledWindow, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'UIW_Window_C_SetEnabledWindow::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Window_C_SetEnabledWindow, CallFunc_Array_Get_Item) == 0x000010, "Member 'UIW_Window_C_SetEnabledWindow::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(UIW_Window_C_SetEnabledWindow, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'UIW_Window_C_SetEnabledWindow::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Window_C_SetEnabledWindow, CallFunc_Less_IntInt_ReturnValue) == 0x00001C, "Member 'UIW_Window_C_SetEnabledWindow::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Window_C_SetEnabledWindow, CallFunc_GetVisibility_ReturnValue) == 0x00001D, "Member 'UIW_Window_C_SetEnabledWindow::CallFunc_GetVisibility_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Window_C_SetEnabledWindow, K2Node_DynamicCast_AsUIW_Btn_Key) == 0x000020, "Member 'UIW_Window_C_SetEnabledWindow::K2Node_DynamicCast_AsUIW_Btn_Key' has a wrong offset!");
static_assert(offsetof(UIW_Window_C_SetEnabledWindow, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'UIW_Window_C_SetEnabledWindow::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(UIW_Window_C_SetEnabledWindow, K2Node_SwitchEnum_CmpSuccess) == 0x000029, "Member 'UIW_Window_C_SetEnabledWindow::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(UIW_Window_C_SetEnabledWindow, K2Node_SwitchEnum_CmpSuccess_1) == 0x00002A, "Member 'UIW_Window_C_SetEnabledWindow::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");

// Function UIW_Window.UIW_Window_C.FocusManage
// 0x0218 (0x0218 - 0x0000)
struct UIW_Window_C_FocusManage final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0070)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FEventReply                            ReturnValue;                                       // 0x00A8(0x00B8)(Parm, OutParm, ReturnParm)
	struct FEventReply                            K2Node_MakeStruct_EventReply;                      // 0x0160(0x00B8)()
};
static_assert(alignof(UIW_Window_C_FocusManage) == 0x000008, "Wrong alignment on UIW_Window_C_FocusManage");
static_assert(sizeof(UIW_Window_C_FocusManage) == 0x000218, "Wrong size on UIW_Window_C_FocusManage");
static_assert(offsetof(UIW_Window_C_FocusManage, MyGeometry) == 0x000000, "Member 'UIW_Window_C_FocusManage::MyGeometry' has a wrong offset!");
static_assert(offsetof(UIW_Window_C_FocusManage, MouseEvent) == 0x000038, "Member 'UIW_Window_C_FocusManage::MouseEvent' has a wrong offset!");
static_assert(offsetof(UIW_Window_C_FocusManage, ReturnValue) == 0x0000A8, "Member 'UIW_Window_C_FocusManage::ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Window_C_FocusManage, K2Node_MakeStruct_EventReply) == 0x000160, "Member 'UIW_Window_C_FocusManage::K2Node_MakeStruct_EventReply' has a wrong offset!");

// Function UIW_Window.UIW_Window_C.OnMouseButtonDown
// 0x0218 (0x0218 - 0x0000)
struct UIW_Window_C_OnMouseButtonDown final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0070)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FEventReply                            ReturnValue;                                       // 0x00A8(0x00B8)(Parm, OutParm, ReturnParm)
	struct FEventReply                            CallFunc_FocusManage_ReturnValue;                  // 0x0160(0x00B8)()
};
static_assert(alignof(UIW_Window_C_OnMouseButtonDown) == 0x000008, "Wrong alignment on UIW_Window_C_OnMouseButtonDown");
static_assert(sizeof(UIW_Window_C_OnMouseButtonDown) == 0x000218, "Wrong size on UIW_Window_C_OnMouseButtonDown");
static_assert(offsetof(UIW_Window_C_OnMouseButtonDown, MyGeometry) == 0x000000, "Member 'UIW_Window_C_OnMouseButtonDown::MyGeometry' has a wrong offset!");
static_assert(offsetof(UIW_Window_C_OnMouseButtonDown, MouseEvent) == 0x000038, "Member 'UIW_Window_C_OnMouseButtonDown::MouseEvent' has a wrong offset!");
static_assert(offsetof(UIW_Window_C_OnMouseButtonDown, ReturnValue) == 0x0000A8, "Member 'UIW_Window_C_OnMouseButtonDown::ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Window_C_OnMouseButtonDown, CallFunc_FocusManage_ReturnValue) == 0x000160, "Member 'UIW_Window_C_OnMouseButtonDown::CallFunc_FocusManage_ReturnValue' has a wrong offset!");

// Function UIW_Window.UIW_Window_C.OnFocusReceived
// 0x02D8 (0x02D8 - 0x0000)
struct UIW_Window_C_OnFocusReceived final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FFocusEvent                            InFocusEvent;                                      // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FEventReply                            ReturnValue;                                       // 0x0040(0x00B8)(Parm, OutParm, ReturnParm)
	struct FPointerEvent                          K2Node_MakeStruct_PointerEvent;                    // 0x00F8(0x0070)()
	struct FEventReply                            CallFunc_FocusManage_ReturnValue;                  // 0x0168(0x00B8)()
	struct FEventReply                            K2Node_MakeStruct_EventReply;                      // 0x0220(0x00B8)()
};
static_assert(alignof(UIW_Window_C_OnFocusReceived) == 0x000008, "Wrong alignment on UIW_Window_C_OnFocusReceived");
static_assert(sizeof(UIW_Window_C_OnFocusReceived) == 0x0002D8, "Wrong size on UIW_Window_C_OnFocusReceived");
static_assert(offsetof(UIW_Window_C_OnFocusReceived, MyGeometry) == 0x000000, "Member 'UIW_Window_C_OnFocusReceived::MyGeometry' has a wrong offset!");
static_assert(offsetof(UIW_Window_C_OnFocusReceived, InFocusEvent) == 0x000038, "Member 'UIW_Window_C_OnFocusReceived::InFocusEvent' has a wrong offset!");
static_assert(offsetof(UIW_Window_C_OnFocusReceived, ReturnValue) == 0x000040, "Member 'UIW_Window_C_OnFocusReceived::ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Window_C_OnFocusReceived, K2Node_MakeStruct_PointerEvent) == 0x0000F8, "Member 'UIW_Window_C_OnFocusReceived::K2Node_MakeStruct_PointerEvent' has a wrong offset!");
static_assert(offsetof(UIW_Window_C_OnFocusReceived, CallFunc_FocusManage_ReturnValue) == 0x000168, "Member 'UIW_Window_C_OnFocusReceived::CallFunc_FocusManage_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Window_C_OnFocusReceived, K2Node_MakeStruct_EventReply) == 0x000220, "Member 'UIW_Window_C_OnFocusReceived::K2Node_MakeStruct_EventReply' has a wrong offset!");

// Function UIW_Window.UIW_Window_C.RequestCloseWindow
// 0x0018 (0x0018 - 0x0000)
struct UIW_Window_C_RequestCloseWindow final
{
public:
	class UUIW_Main_C*                            CallFunc_GetMainWidget_MainWidget;                 // 0x0000(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUIW_Main_C*                            CallFunc_GetMainWidget_MainWidget_1;               // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UIW_Window_C_RequestCloseWindow) == 0x000008, "Wrong alignment on UIW_Window_C_RequestCloseWindow");
static_assert(sizeof(UIW_Window_C_RequestCloseWindow) == 0x000018, "Wrong size on UIW_Window_C_RequestCloseWindow");
static_assert(offsetof(UIW_Window_C_RequestCloseWindow, CallFunc_GetMainWidget_MainWidget) == 0x000000, "Member 'UIW_Window_C_RequestCloseWindow::CallFunc_GetMainWidget_MainWidget' has a wrong offset!");
static_assert(offsetof(UIW_Window_C_RequestCloseWindow, CallFunc_GetMainWidget_MainWidget_1) == 0x000008, "Member 'UIW_Window_C_RequestCloseWindow::CallFunc_GetMainWidget_MainWidget_1' has a wrong offset!");
static_assert(offsetof(UIW_Window_C_RequestCloseWindow, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'UIW_Window_C_RequestCloseWindow::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function UIW_Window.UIW_Window_C.Request Open Context Menu
// 0x0030 (0x0030 - 0x0000)
struct UIW_Window_C_Request_Open_Context_Menu final
{
public:
	struct FVector2D                              Position;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Map_Length_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UUIW_Main_C*                            CallFunc_GetMainWidget_MainWidget;                 // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUserWidget*                            CallFunc_AddWidget_Widget;                         // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUIW_ContextMenu_C*                     K2Node_DynamicCast_AsUIW_Context_Menu;             // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UIW_Window_C_Request_Open_Context_Menu) == 0x000008, "Wrong alignment on UIW_Window_C_Request_Open_Context_Menu");
static_assert(sizeof(UIW_Window_C_Request_Open_Context_Menu) == 0x000030, "Wrong size on UIW_Window_C_Request_Open_Context_Menu");
static_assert(offsetof(UIW_Window_C_Request_Open_Context_Menu, Position) == 0x000000, "Member 'UIW_Window_C_Request_Open_Context_Menu::Position' has a wrong offset!");
static_assert(offsetof(UIW_Window_C_Request_Open_Context_Menu, CallFunc_Map_Length_ReturnValue) == 0x000008, "Member 'UIW_Window_C_Request_Open_Context_Menu::CallFunc_Map_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Window_C_Request_Open_Context_Menu, CallFunc_Greater_IntInt_ReturnValue) == 0x00000C, "Member 'UIW_Window_C_Request_Open_Context_Menu::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Window_C_Request_Open_Context_Menu, CallFunc_GetMainWidget_MainWidget) == 0x000010, "Member 'UIW_Window_C_Request_Open_Context_Menu::CallFunc_GetMainWidget_MainWidget' has a wrong offset!");
static_assert(offsetof(UIW_Window_C_Request_Open_Context_Menu, CallFunc_AddWidget_Widget) == 0x000018, "Member 'UIW_Window_C_Request_Open_Context_Menu::CallFunc_AddWidget_Widget' has a wrong offset!");
static_assert(offsetof(UIW_Window_C_Request_Open_Context_Menu, K2Node_DynamicCast_AsUIW_Context_Menu) == 0x000020, "Member 'UIW_Window_C_Request_Open_Context_Menu::K2Node_DynamicCast_AsUIW_Context_Menu' has a wrong offset!");
static_assert(offsetof(UIW_Window_C_Request_Open_Context_Menu, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'UIW_Window_C_Request_Open_Context_Menu::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function UIW_Window.UIW_Window_C.CallbackContextMenu
// 0x0008 (0x0008 - 0x0000)
struct UIW_Window_C_CallbackContextMenu final
{
public:
	class FName                                   EventName;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UIW_Window_C_CallbackContextMenu) == 0x000004, "Wrong alignment on UIW_Window_C_CallbackContextMenu");
static_assert(sizeof(UIW_Window_C_CallbackContextMenu) == 0x000008, "Wrong size on UIW_Window_C_CallbackContextMenu");
static_assert(offsetof(UIW_Window_C_CallbackContextMenu, EventName) == 0x000000, "Member 'UIW_Window_C_CallbackContextMenu::EventName' has a wrong offset!");

// Function UIW_Window.UIW_Window_C.AddEventBinding
// 0x0010 (0x0010 - 0x0000)
struct UIW_Window_C_AddEventBinding final
{
public:
	TDelegate<void(class FName CategoryName)>     K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(UIW_Window_C_AddEventBinding) == 0x000004, "Wrong alignment on UIW_Window_C_AddEventBinding");
static_assert(sizeof(UIW_Window_C_AddEventBinding) == 0x000010, "Wrong size on UIW_Window_C_AddEventBinding");
static_assert(offsetof(UIW_Window_C_AddEventBinding, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'UIW_Window_C_AddEventBinding::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");

// Function UIW_Window.UIW_Window_C.ClearEventBinding
// 0x0010 (0x0010 - 0x0000)
struct UIW_Window_C_ClearEventBinding final
{
public:
	TDelegate<void(class FName CategoryName)>     K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(UIW_Window_C_ClearEventBinding) == 0x000004, "Wrong alignment on UIW_Window_C_ClearEventBinding");
static_assert(sizeof(UIW_Window_C_ClearEventBinding) == 0x000010, "Wrong size on UIW_Window_C_ClearEventBinding");
static_assert(offsetof(UIW_Window_C_ClearEventBinding, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'UIW_Window_C_ClearEventBinding::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");

// Function UIW_Window.UIW_Window_C.OnCompleteTweenEvent
// 0x0008 (0x0008 - 0x0000)
struct UIW_Window_C_OnCompleteTweenEvent final
{
public:
	class FName                                   Name_0;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UIW_Window_C_OnCompleteTweenEvent) == 0x000004, "Wrong alignment on UIW_Window_C_OnCompleteTweenEvent");
static_assert(sizeof(UIW_Window_C_OnCompleteTweenEvent) == 0x000008, "Wrong size on UIW_Window_C_OnCompleteTweenEvent");
static_assert(offsetof(UIW_Window_C_OnCompleteTweenEvent, Name_0) == 0x000000, "Member 'UIW_Window_C_OnCompleteTweenEvent::Name_0' has a wrong offset!");

// Function UIW_Window.UIW_Window_C.OnMouseButtonUp
// 0x0218 (0x0218 - 0x0000)
struct UIW_Window_C_OnMouseButtonUp final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0070)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FEventReply                            ReturnValue;                                       // 0x00A8(0x00B8)(Parm, OutParm, ReturnParm)
	struct FEventReply                            CallFunc_OnMouseButtonUp_ReturnValue;              // 0x0160(0x00B8)()
};
static_assert(alignof(UIW_Window_C_OnMouseButtonUp) == 0x000008, "Wrong alignment on UIW_Window_C_OnMouseButtonUp");
static_assert(sizeof(UIW_Window_C_OnMouseButtonUp) == 0x000218, "Wrong size on UIW_Window_C_OnMouseButtonUp");
static_assert(offsetof(UIW_Window_C_OnMouseButtonUp, MyGeometry) == 0x000000, "Member 'UIW_Window_C_OnMouseButtonUp::MyGeometry' has a wrong offset!");
static_assert(offsetof(UIW_Window_C_OnMouseButtonUp, MouseEvent) == 0x000038, "Member 'UIW_Window_C_OnMouseButtonUp::MouseEvent' has a wrong offset!");
static_assert(offsetof(UIW_Window_C_OnMouseButtonUp, ReturnValue) == 0x0000A8, "Member 'UIW_Window_C_OnMouseButtonUp::ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Window_C_OnMouseButtonUp, CallFunc_OnMouseButtonUp_ReturnValue) == 0x000160, "Member 'UIW_Window_C_OnMouseButtonUp::CallFunc_OnMouseButtonUp_ReturnValue' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BTask_MoveToBackRandom

#include "Basic.hpp"

#include "ProjectP_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BTask_MoveToBackRandom.BTask_MoveToBackRandom_C.ExecuteUbergraph_BTask_MoveToBackRandom
// 0x0150 (0x0150 - 0x0000)
struct BTask_MoveToBackRandom_C_ExecuteUbergraph_BTask_MoveToBackRandom final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTimeSeconds_ReturnValue;               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0008(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTimeSeconds_ReturnValue_1;             // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A[0x2];                                       // 0x001A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsRunningMoveBehavior_ReturnValue;        // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLAIObjective                          CallFunc_ObjectiveAsType_ReturnValue;              // 0x0024(0x0024)(NoDestructor)
	struct FVector                                CallFunc_ObjectiveGetLocation_ReturnValue;         // 0x0048(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLAILocationSampler                    K2Node_MakeStruct_LAILocationSampler;              // 0x0058(0x0030)()
	struct FVector                                CallFunc_GetRandomLocation_Location;               // 0x0088(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetRandomLocation_ReturnValue;            // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SampleLocations_ReturnValue;              // 0x0095(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_96[0x2];                                       // 0x0096(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLAIMovementGoal                       CallFunc_GoalAsLocation_ReturnValue;               // 0x0098(0x002C)(NoDestructor)
	uint8                                         Pad_C4[0x4];                                       // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AAIController*                          K2Node_Event_OwnerController;                      // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_ControlledPawn;                       // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLAIMoveBehaviorID                     CallFunc_MoveToPosition_ReturnValue;               // 0x00D8(0x0004)(NoDestructor)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x00DC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_2;        // 0x00E8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x00F4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_Conv_VectorToRotator_ReturnValue;         // 0x0100(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetRandomLocationCriterionDistanceAngle_Location; // 0x010C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetRandomLocationCriterionDistanceAngle_ReturnValue; // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_119[0x3];                                      // 0x0119(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLAIMovementGoal                       CallFunc_GoalAsLocation_ReturnValue_1;             // 0x011C(0x002C)(NoDestructor)
	struct FLAIMoveBehaviorID                     CallFunc_MoveToPosition_ReturnValue_1;             // 0x0148(0x0004)(NoDestructor)
};
static_assert(alignof(BTask_MoveToBackRandom_C_ExecuteUbergraph_BTask_MoveToBackRandom) == 0x000008, "Wrong alignment on BTask_MoveToBackRandom_C_ExecuteUbergraph_BTask_MoveToBackRandom");
static_assert(sizeof(BTask_MoveToBackRandom_C_ExecuteUbergraph_BTask_MoveToBackRandom) == 0x000150, "Wrong size on BTask_MoveToBackRandom_C_ExecuteUbergraph_BTask_MoveToBackRandom");
static_assert(offsetof(BTask_MoveToBackRandom_C_ExecuteUbergraph_BTask_MoveToBackRandom, EntryPoint) == 0x000000, "Member 'BTask_MoveToBackRandom_C_ExecuteUbergraph_BTask_MoveToBackRandom::EntryPoint' has a wrong offset!");
static_assert(offsetof(BTask_MoveToBackRandom_C_ExecuteUbergraph_BTask_MoveToBackRandom, CallFunc_GetTimeSeconds_ReturnValue) == 0x000004, "Member 'BTask_MoveToBackRandom_C_ExecuteUbergraph_BTask_MoveToBackRandom::CallFunc_GetTimeSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTask_MoveToBackRandom_C_ExecuteUbergraph_BTask_MoveToBackRandom, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000008, "Member 'BTask_MoveToBackRandom_C_ExecuteUbergraph_BTask_MoveToBackRandom::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTask_MoveToBackRandom_C_ExecuteUbergraph_BTask_MoveToBackRandom, CallFunc_GetTimeSeconds_ReturnValue_1) == 0x000014, "Member 'BTask_MoveToBackRandom_C_ExecuteUbergraph_BTask_MoveToBackRandom::CallFunc_GetTimeSeconds_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BTask_MoveToBackRandom_C_ExecuteUbergraph_BTask_MoveToBackRandom, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000018, "Member 'BTask_MoveToBackRandom_C_ExecuteUbergraph_BTask_MoveToBackRandom::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTask_MoveToBackRandom_C_ExecuteUbergraph_BTask_MoveToBackRandom, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x000019, "Member 'BTask_MoveToBackRandom_C_ExecuteUbergraph_BTask_MoveToBackRandom::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BTask_MoveToBackRandom_C_ExecuteUbergraph_BTask_MoveToBackRandom, CallFunc_Add_FloatFloat_ReturnValue) == 0x00001C, "Member 'BTask_MoveToBackRandom_C_ExecuteUbergraph_BTask_MoveToBackRandom::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTask_MoveToBackRandom_C_ExecuteUbergraph_BTask_MoveToBackRandom, CallFunc_IsRunningMoveBehavior_ReturnValue) == 0x000020, "Member 'BTask_MoveToBackRandom_C_ExecuteUbergraph_BTask_MoveToBackRandom::CallFunc_IsRunningMoveBehavior_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTask_MoveToBackRandom_C_ExecuteUbergraph_BTask_MoveToBackRandom, CallFunc_ObjectiveAsType_ReturnValue) == 0x000024, "Member 'BTask_MoveToBackRandom_C_ExecuteUbergraph_BTask_MoveToBackRandom::CallFunc_ObjectiveAsType_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTask_MoveToBackRandom_C_ExecuteUbergraph_BTask_MoveToBackRandom, CallFunc_ObjectiveGetLocation_ReturnValue) == 0x000048, "Member 'BTask_MoveToBackRandom_C_ExecuteUbergraph_BTask_MoveToBackRandom::CallFunc_ObjectiveGetLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTask_MoveToBackRandom_C_ExecuteUbergraph_BTask_MoveToBackRandom, K2Node_MakeStruct_LAILocationSampler) == 0x000058, "Member 'BTask_MoveToBackRandom_C_ExecuteUbergraph_BTask_MoveToBackRandom::K2Node_MakeStruct_LAILocationSampler' has a wrong offset!");
static_assert(offsetof(BTask_MoveToBackRandom_C_ExecuteUbergraph_BTask_MoveToBackRandom, CallFunc_GetRandomLocation_Location) == 0x000088, "Member 'BTask_MoveToBackRandom_C_ExecuteUbergraph_BTask_MoveToBackRandom::CallFunc_GetRandomLocation_Location' has a wrong offset!");
static_assert(offsetof(BTask_MoveToBackRandom_C_ExecuteUbergraph_BTask_MoveToBackRandom, CallFunc_GetRandomLocation_ReturnValue) == 0x000094, "Member 'BTask_MoveToBackRandom_C_ExecuteUbergraph_BTask_MoveToBackRandom::CallFunc_GetRandomLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTask_MoveToBackRandom_C_ExecuteUbergraph_BTask_MoveToBackRandom, CallFunc_SampleLocations_ReturnValue) == 0x000095, "Member 'BTask_MoveToBackRandom_C_ExecuteUbergraph_BTask_MoveToBackRandom::CallFunc_SampleLocations_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTask_MoveToBackRandom_C_ExecuteUbergraph_BTask_MoveToBackRandom, CallFunc_GoalAsLocation_ReturnValue) == 0x000098, "Member 'BTask_MoveToBackRandom_C_ExecuteUbergraph_BTask_MoveToBackRandom::CallFunc_GoalAsLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTask_MoveToBackRandom_C_ExecuteUbergraph_BTask_MoveToBackRandom, K2Node_Event_OwnerController) == 0x0000C8, "Member 'BTask_MoveToBackRandom_C_ExecuteUbergraph_BTask_MoveToBackRandom::K2Node_Event_OwnerController' has a wrong offset!");
static_assert(offsetof(BTask_MoveToBackRandom_C_ExecuteUbergraph_BTask_MoveToBackRandom, K2Node_Event_ControlledPawn) == 0x0000D0, "Member 'BTask_MoveToBackRandom_C_ExecuteUbergraph_BTask_MoveToBackRandom::K2Node_Event_ControlledPawn' has a wrong offset!");
static_assert(offsetof(BTask_MoveToBackRandom_C_ExecuteUbergraph_BTask_MoveToBackRandom, CallFunc_MoveToPosition_ReturnValue) == 0x0000D8, "Member 'BTask_MoveToBackRandom_C_ExecuteUbergraph_BTask_MoveToBackRandom::CallFunc_MoveToPosition_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTask_MoveToBackRandom_C_ExecuteUbergraph_BTask_MoveToBackRandom, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x0000DC, "Member 'BTask_MoveToBackRandom_C_ExecuteUbergraph_BTask_MoveToBackRandom::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BTask_MoveToBackRandom_C_ExecuteUbergraph_BTask_MoveToBackRandom, CallFunc_K2_GetActorLocation_ReturnValue_2) == 0x0000E8, "Member 'BTask_MoveToBackRandom_C_ExecuteUbergraph_BTask_MoveToBackRandom::CallFunc_K2_GetActorLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BTask_MoveToBackRandom_C_ExecuteUbergraph_BTask_MoveToBackRandom, CallFunc_Subtract_VectorVector_ReturnValue) == 0x0000F4, "Member 'BTask_MoveToBackRandom_C_ExecuteUbergraph_BTask_MoveToBackRandom::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTask_MoveToBackRandom_C_ExecuteUbergraph_BTask_MoveToBackRandom, CallFunc_Conv_VectorToRotator_ReturnValue) == 0x000100, "Member 'BTask_MoveToBackRandom_C_ExecuteUbergraph_BTask_MoveToBackRandom::CallFunc_Conv_VectorToRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTask_MoveToBackRandom_C_ExecuteUbergraph_BTask_MoveToBackRandom, CallFunc_GetRandomLocationCriterionDistanceAngle_Location) == 0x00010C, "Member 'BTask_MoveToBackRandom_C_ExecuteUbergraph_BTask_MoveToBackRandom::CallFunc_GetRandomLocationCriterionDistanceAngle_Location' has a wrong offset!");
static_assert(offsetof(BTask_MoveToBackRandom_C_ExecuteUbergraph_BTask_MoveToBackRandom, CallFunc_GetRandomLocationCriterionDistanceAngle_ReturnValue) == 0x000118, "Member 'BTask_MoveToBackRandom_C_ExecuteUbergraph_BTask_MoveToBackRandom::CallFunc_GetRandomLocationCriterionDistanceAngle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTask_MoveToBackRandom_C_ExecuteUbergraph_BTask_MoveToBackRandom, CallFunc_GoalAsLocation_ReturnValue_1) == 0x00011C, "Member 'BTask_MoveToBackRandom_C_ExecuteUbergraph_BTask_MoveToBackRandom::CallFunc_GoalAsLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BTask_MoveToBackRandom_C_ExecuteUbergraph_BTask_MoveToBackRandom, CallFunc_MoveToPosition_ReturnValue_1) == 0x000148, "Member 'BTask_MoveToBackRandom_C_ExecuteUbergraph_BTask_MoveToBackRandom::CallFunc_MoveToPosition_ReturnValue_1' has a wrong offset!");

// Function BTask_MoveToBackRandom.BTask_MoveToBackRandom_C.ReceiveExecuteAI
// 0x0010 (0x0010 - 0x0000)
struct BTask_MoveToBackRandom_C_ReceiveExecuteAI final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTask_MoveToBackRandom_C_ReceiveExecuteAI) == 0x000008, "Wrong alignment on BTask_MoveToBackRandom_C_ReceiveExecuteAI");
static_assert(sizeof(BTask_MoveToBackRandom_C_ReceiveExecuteAI) == 0x000010, "Wrong size on BTask_MoveToBackRandom_C_ReceiveExecuteAI");
static_assert(offsetof(BTask_MoveToBackRandom_C_ReceiveExecuteAI, OwnerController) == 0x000000, "Member 'BTask_MoveToBackRandom_C_ReceiveExecuteAI::OwnerController' has a wrong offset!");
static_assert(offsetof(BTask_MoveToBackRandom_C_ReceiveExecuteAI, ControlledPawn) == 0x000008, "Member 'BTask_MoveToBackRandom_C_ReceiveExecuteAI::ControlledPawn' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_CH_PC_Pino

#include "Basic.hpp"

#include "ProjectP_structs.hpp"
#include "ProjectP_classes.hpp"
#include "Engine_structs.hpp"
#include "AnimGraphRuntime_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "KawaiiPhysics_structs.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass ABP_CH_PC_Pino.ABP_CH_PC_Pino_C
// 0xDCF0 (0xE3E0 - 0x06F0)
class UABP_CH_PC_Pino_C final : public ULPCAnimInstance
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x06F0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_5;                  // 0x06F8(0x00C0)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_4;                  // 0x07B8(0x00C0)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_25;                    // 0x0878(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_24;                    // 0x08A0(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_23;                    // 0x08C8(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_22;                    // 0x08F0(0x0028)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_3;                   // 0x0918(0x00A0)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_LinkedInputPose_4;                   // 0x09B8(0x0118)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_LinkedInputPose_3;                   // 0x0AD0(0x0118)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_12;                   // 0x0BE8(0x0158)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_11;                   // 0x0D40(0x0158)()
	struct FAnimNode_Root                         AnimGraphNode_Root_4;                              // 0x0E98(0x0030)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_LinkedInputPose_2;                   // 0x0EC8(0x0118)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_3;                    // 0x0FE0(0x0080)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_2;                   // 0x1060(0x00A0)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_10;                   // 0x1100(0x0158)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_21;                    // 0x1258(0x0028)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive_2;                     // 0x1280(0x00C8)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_20;                    // 0x1348(0x0028)()
	struct FAnimNode_Root                         AnimGraphNode_Root_3;                              // 0x1370(0x0030)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_LinkedInputPose_1;                   // 0x13A0(0x0118)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_5;             // 0x14B8(0x0020)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_5;             // 0x14D8(0x0020)()
	struct FAnimNode_Root                         AnimGraphNode_Root_2;                              // 0x14F8(0x0030)()
	uint8                                         Pad_1528[0x8];                                     // 0x1528(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimNode_AnimDynamics                 AnimGraphNode_AnimDynamics_1;                      // 0x1530(0x0440)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_12;                       // 0x1970(0x0108)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_11;                       // 0x1A78(0x0108)()
	struct FAnimNode_AnimDynamics                 AnimGraphNode_AnimDynamics;                        // 0x1B80(0x0440)()
	struct FAnimNode_Root                         AnimGraphNode_Root_1;                              // 0x1FC0(0x0030)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_4;             // 0x1FF0(0x0020)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_4;             // 0x2010(0x0020)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_10;                       // 0x2030(0x0108)()
	uint8                                         Pad_2138[0x8];                                     // 0x2138(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimNode_TwoBoneIK                    AnimGraphNode_TwoBoneIK_1;                         // 0x2140(0x01E0)()
	struct FAnimNode_TwoBoneIK                    AnimGraphNode_TwoBoneIK;                           // 0x2320(0x01E0)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_9;                        // 0x2500(0x0108)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_8;                        // 0x2608(0x0108)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_LinkedInputPose;                     // 0x2710(0x0118)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x2828(0x0030)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_14;                 // 0x2858(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_13;                 // 0x2880(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_12;                 // 0x28A8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_11;                 // 0x28D0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_10;                 // 0x28F8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_9;                  // 0x2920(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_8;                  // 0x2948(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_7;                  // 0x2970(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_6;                  // 0x2998(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_5;                  // 0x29C0(0x0028)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_5;                  // 0x29E8(0x00E8)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_7;                       // 0x2AD0(0x0030)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_4;                  // 0x2B00(0x0028)()
	struct FAnimNode_RandomPlayer                 AnimGraphNode_RandomPlayer;                        // 0x2B28(0x0078)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive_1;                     // 0x2BA0(0x00C8)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_2;                    // 0x2C68(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_6;                       // 0x2CE8(0x0030)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_4;                  // 0x2D18(0x00E8)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_5;                       // 0x2E00(0x0030)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_3;                  // 0x2E30(0x00E8)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_4;                       // 0x2F18(0x0030)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_2;                  // 0x2F48(0x00E8)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_3;                       // 0x3030(0x0030)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_1;                      // 0x3060(0x00B0)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_9;                    // 0x3110(0x0158)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_19;                    // 0x3268(0x0028)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_8;                    // 0x3290(0x0158)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_7;                    // 0x33E8(0x0158)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_6;                    // 0x3540(0x0158)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_7;                        // 0x3698(0x0108)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_18;                    // 0x37A0(0x0028)()
	struct FAnimNode_LinkedAnimLayer              AnimGraphNode_LinkedAnimLayer_1;                   // 0x37C8(0x00B0)()
	struct FAnimNode_ApplyMeshSpaceAdditive       AnimGraphNode_ApplyMeshSpaceAdditive;              // 0x3878(0x00D0)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_2;                              // 0x3948(0x0048)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_6;                        // 0x3990(0x0108)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_3;             // 0x3A98(0x0020)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_5;                        // 0x3AB8(0x0108)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_17;                    // 0x3BC0(0x0028)()
	struct FAnimNode_BlendListByInt               AnimGraphNode_BlendListByInt;                      // 0x3BE8(0x00A0)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_4;                        // 0x3C88(0x0108)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_16;                    // 0x3D90(0x0028)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_2;             // 0x3DB8(0x0020)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_3;             // 0x3DD8(0x0020)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_3;                        // 0x3DF8(0x0108)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_1;             // 0x3F00(0x0020)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_2;             // 0x3F20(0x0020)()
	struct FAnimNode_KawaiiPhysics                AnimGraphNode_KawaiiPhysics_15;                    // 0x3F40(0x08A0)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_15;                    // 0x47E0(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_14;                    // 0x4808(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_13;                    // 0x4830(0x0028)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_2;                        // 0x4858(0x0108)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_1;                        // 0x4960(0x0108)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace;               // 0x4A68(0x0020)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_3;                  // 0x4A88(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_2;                  // 0x4AB0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_1;                  // 0x4AD8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult;                    // 0x4B00(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x4B28(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_2;                       // 0x4BA8(0x0030)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_1;                  // 0x4BD8(0x00E8)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_1;                       // 0x4CC0(0x0030)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer;                    // 0x4CF0(0x00E8)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x4DD8(0x0030)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x4E08(0x00B0)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_5;                    // 0x4EB8(0x0158)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_12;                    // 0x5010(0x0028)()
	uint8                                         Pad_5038[0x8];                                     // 0x5038(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimNode_KawaiiPhysics                AnimGraphNode_KawaiiPhysics_14;                    // 0x5040(0x08A0)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_1;             // 0x58E0(0x0020)()
	struct FAnimNode_KawaiiPhysics                AnimGraphNode_KawaiiPhysics_13;                    // 0x5900(0x08A0)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace;               // 0x61A0(0x0020)()
	struct FAnimNode_KawaiiPhysics                AnimGraphNode_KawaiiPhysics_12;                    // 0x61C0(0x08A0)()
	struct FAnimNode_KawaiiPhysics                AnimGraphNode_KawaiiPhysics_11;                    // 0x6A60(0x08A0)()
	struct FAnimNode_KawaiiPhysics                AnimGraphNode_KawaiiPhysics_10;                    // 0x7300(0x08A0)()
	struct FAnimNode_KawaiiPhysics                AnimGraphNode_KawaiiPhysics_9;                     // 0x7BA0(0x08A0)()
	struct FAnimNode_KawaiiPhysics                AnimGraphNode_KawaiiPhysics_8;                     // 0x8440(0x08A0)()
	struct FAnimNode_KawaiiPhysics                AnimGraphNode_KawaiiPhysics_7;                     // 0x8CE0(0x08A0)()
	struct FAnimNode_KawaiiPhysics                AnimGraphNode_KawaiiPhysics_6;                     // 0x9580(0x08A0)()
	struct FAnimNode_KawaiiPhysics                AnimGraphNode_KawaiiPhysics_5;                     // 0x9E20(0x08A0)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_4;                    // 0xA6C0(0x0158)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_11;                    // 0xA818(0x0028)()
	struct FAnimNode_KawaiiPhysics                AnimGraphNode_KawaiiPhysics_4;                     // 0xA840(0x08A0)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_3;                  // 0xB0E0(0x00C0)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_10;                    // 0xB1A0(0x0028)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_1;                              // 0xB1C8(0x0048)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_3;                    // 0xB210(0x0158)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_9;                     // 0xB368(0x0028)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_2;                  // 0xB390(0x00C0)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_8;                     // 0xB450(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_7;                     // 0xB478(0x0028)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_1;                   // 0xB4A0(0x00A0)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive;                       // 0xB540(0x00C8)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0xB608(0x0080)()
	uint8                                         Pad_B688[0x8];                                     // 0xB688(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimNode_KawaiiPhysics                AnimGraphNode_KawaiiPhysics_3;                     // 0xB690(0x08A0)()
	struct FAnimNode_LinkedAnimLayer              AnimGraphNode_LinkedAnimLayer;                     // 0xBF30(0x00B0)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_2;                    // 0xBFE0(0x0158)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_6;                     // 0xC138(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_5;                     // 0xC160(0x0028)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone;                          // 0xC188(0x0108)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot;                                // 0xC290(0x0048)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool;                     // 0xC2D8(0x00A0)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_1;                    // 0xC378(0x0158)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_4;                     // 0xC4D0(0x0028)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_1;                  // 0xC4F8(0x00C0)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_3;                     // 0xC5B8(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_2;                     // 0xC5E0(0x0028)()
	uint8                                         Pad_C608[0x8];                                     // 0xC608(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimNode_KawaiiPhysics                AnimGraphNode_KawaiiPhysics_2;                     // 0xC610(0x08A0)()
	struct FAnimNode_KawaiiPhysics                AnimGraphNode_KawaiiPhysics_1;                     // 0xCEB0(0x08A0)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose;                      // 0xD750(0x0158)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend;                    // 0xD8A8(0x00C0)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_1;                     // 0xD968(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose;                       // 0xD990(0x0028)()
	uint8                                         Pad_D9B8[0x8];                                     // 0xD9B8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimNode_KawaiiPhysics                AnimGraphNode_KawaiiPhysics;                       // 0xD9C0(0x08A0)()
	bool                                          bHasWeapon;                                        // 0xE260(0x0001)(BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E261[0x7];                                     // 0xE261(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLInverseKinemetic                     IK_Main;                                           // 0xE268(0x0040)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FRotator                               TEST_RopeLookAt;                                   // 0xE2A8(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         TEST_RopeLookAtAlpha;                              // 0xE2B4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKawaiiPhysicsSettings                 KP_Robe_Default;                                   // 0xE2B8(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	struct FKawaiiPhysicsSettings                 KP_Frill_Default;                                  // 0xE2D0(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	struct FKawaiiPhysicsSettings                 KP_Hair;                                           // 0xE2E8(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	struct FKawaiiPhysicsSettings                 KP_ACC_Default;                                    // 0xE300(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	struct FKawaiiPhysicsSettings                 KP_Frill_02;                                       // 0xE318(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	struct FKawaiiPhysicsSettings                 KP_Cloth_01;                                       // 0xE330(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	struct FKawaiiPhysicsSettings                 KP_Frill_03;                                       // 0xE348(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	struct FKawaiiPhysicsSettings                 KP_ACC_01;                                         // 0xE360(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	bool                                          Cached_IsGuarding;                                 // 0xE378(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E379[0x3];                                     // 0xE379(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Cached_SlaveArm_Additive_Alpha;                    // 0xE37C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequenceBase*                      Cached_SlaveArm_Additive_Anim;                     // 0xE380(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Cached_UseFullBody;                                // 0xE388(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E389[0x3];                                     // 0xE389(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKawaiiPhysicsSettings                 KP_Hair_Long;                                      // 0xE38C(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	struct FVector                                IK_PelvisOffset;                                   // 0xE3A4(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                IK_LocationOffsetInverseZ_L;                       // 0xE3B0(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                IK_LocationOffsetInverseZ_R;                       // 0xE3BC(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               IK_RotationOffset_L;                               // 0xE3C8(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FRotator                               IK_RotationOffset_R;                               // 0xE3D4(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_ABP_CH_PC_Pino(int32 EntryPoint);
	void BlueprintUpdateAnimation(float DeltaTimeX);
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_CH_PC_Pino_AnimGraphNode_TransitionResult_12E39D1049B0EF6BA978F5A63C15CBD8();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_CH_PC_Pino_AnimGraphNode_TransitionResult_19A15E0149AE84CA2DF78BB8912E9B05();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_CH_PC_Pino_AnimGraphNode_TransitionResult_07C22EFA4152056D36AFF5BF43F32115();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_CH_PC_Pino_AnimGraphNode_TransitionResult_7A27D0B24672D55D3CE228AF4B6A12A8();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_CH_PC_Pino_AnimGraphNode_TransitionResult_4F525922469ACCD361EBC1BB20163F40();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_CH_PC_Pino_AnimGraphNode_TransitionResult_1FB7A974443CEC0C7BDB51AC53283BB3();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_CH_PC_Pino_AnimGraphNode_TransitionResult_BFFB5EA8485347A6D86AA2B9E2535265();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_CH_PC_Pino_AnimGraphNode_TransitionResult_60B504C6438F4A9048B319972437CAB5();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_CH_PC_Pino_AnimGraphNode_TransitionResult_6918B3EB42B7CA5EAB7BDE933BA88B3A();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_CH_PC_Pino_AnimGraphNode_TransitionResult_A7454846436D9190E79C36878F41F45D();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_CH_PC_Pino_AnimGraphNode_TransitionResult_94755DEE4C937A66A93EE3911D587629();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_CH_PC_Pino_AnimGraphNode_TransitionResult_A3FD0C3641132795028F25A5DA5BAE74();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_CH_PC_Pino_AnimGraphNode_BlendListByBool_C4BAFBE64701C0F4787338842154666D();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_CH_PC_Pino_AnimGraphNode_ModifyBone_8D3B132440CFB50EE11B6F80DD781D39();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_CH_PC_Pino_AnimGraphNode_ModifyBone_54D35E1B44BEA577AB0647AA76103C1C();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_CH_PC_Pino_AnimGraphNode_ModifyBone_37FEDD00407794D0C763C480358BFCB1();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_CH_PC_Pino_AnimGraphNode_ModifyBone_CDAE21034E66909958DF5D9C23A13C6A();
	void AnimGraph(struct FPoseLink* AnimGraph_0);
	void AnimLayer_FootIK(const struct FPoseLink& InPose, struct FPoseLink* AnimLayer_FootIK_0);
	void AnimLayer_Accessory(const struct FPoseLink& InPose_0, struct FPoseLink* AnimLayer_Accessory_0);
	void AnimLayer_HasWeapon(const struct FPoseLink& HasWeaponPose, bool bHasWeapon_0, struct FPoseLink* AnimLayer_HasWeapon_0);
	void AnimLayer_Additive(const struct FPoseLink& MainStateBasePose, const struct FPoseLink& AdditivePose, struct FPoseLink* AnimLayer_Additive_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ABP_CH_PC_Pino_C">();
	}
	static class UABP_CH_PC_Pino_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UABP_CH_PC_Pino_C>();
	}
};
static_assert(alignof(UABP_CH_PC_Pino_C) == 0x000010, "Wrong alignment on UABP_CH_PC_Pino_C");
static_assert(sizeof(UABP_CH_PC_Pino_C) == 0x00E3E0, "Wrong size on UABP_CH_PC_Pino_C");
static_assert(offsetof(UABP_CH_PC_Pino_C, UberGraphFrame) == 0x0006F0, "Member 'UABP_CH_PC_Pino_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UABP_CH_PC_Pino_C, AnimGraphNode_LayeredBoneBlend_5) == 0x0006F8, "Member 'UABP_CH_PC_Pino_C::AnimGraphNode_LayeredBoneBlend_5' has a wrong offset!");
static_assert(offsetof(UABP_CH_PC_Pino_C, AnimGraphNode_LayeredBoneBlend_4) == 0x0007B8, "Member 'UABP_CH_PC_Pino_C::AnimGraphNode_LayeredBoneBlend_4' has a wrong offset!");
static_assert(offsetof(UABP_CH_PC_Pino_C, AnimGraphNode_UseCachedPose_25) == 0x000878, "Member 'UABP_CH_PC_Pino_C::AnimGraphNode_UseCachedPose_25' has a wrong offset!");
static_assert(offsetof(UABP_CH_PC_Pino_C, AnimGraphNode_UseCachedPose_24) == 0x0008A0, "Member 'UABP_CH_PC_Pino_C::AnimGraphNode_UseCachedPose_24' has a wrong offset!");
static_assert(offsetof(UABP_CH_PC_Pino_C, AnimGraphNode_UseCachedPose_23) == 0x0008C8, "Member 'UABP_CH_PC_Pino_C::AnimGraphNode_UseCachedPose_23' has a wrong offset!");
static_assert(offsetof(UABP_CH_PC_Pino_C, AnimGraphNode_UseCachedPose_22) == 0x0008F0, "Member 'UABP_CH_PC_Pino_C::AnimGraphNode_UseCachedPose_22' has a wrong offset!");
static_assert(offsetof(UABP_CH_PC_Pino_C, AnimGraphNode_BlendListByBool_3) == 0x000918, "Member 'UABP_CH_PC_Pino_C::AnimGraphNode_BlendListByBool_3' has a wrong offset!");
static_assert(offsetof(UABP_CH_PC_Pino_C, AnimGraphNode_LinkedInputPose_4) == 0x0009B8, "Member 'UABP_CH_PC_Pino_C::AnimGraphNode_LinkedInputPose_4' has a wrong offset!");
static_assert(offsetof(UABP_CH_PC_Pino_C, AnimGraphNode_LinkedInputPose_3) == 0x000AD0, "Member 'UABP_CH_PC_Pino_C::AnimGraphNode_LinkedInputPose_3' has a wrong offset!");
static_assert(offsetof(UABP_CH_PC_Pino_C, AnimGraphNode_SaveCachedPose_12) == 0x000BE8, "Member 'UABP_CH_PC_Pino_C::AnimGraphNode_SaveCachedPose_12' has a wrong offset!");
static_assert(offsetof(UABP_CH_PC_Pino_C, AnimGraphNode_SaveCachedPose_11) == 0x000D40, "Member 'UABP_CH_PC_Pino_C::AnimGraphNode_SaveCachedPose_11' has a wrong offset!");
static_assert(offsetof(UABP_CH_PC_Pino_C, AnimGraphNode_Root_4) == 0x000E98, "Member 'UABP_CH_PC_Pino_C::AnimGraphNode_Root_4' has a wrong offset!");
static_assert(offsetof(UABP_CH_PC_Pino_C, AnimGraphNode_LinkedInputPose_2) == 0x000EC8, "Member 'UABP_CH_PC_Pino_C::AnimGraphNode_LinkedInputPose_2' has a wrong offset!");
static_assert(offsetof(UABP_CH_PC_Pino_C, AnimGraphNode_SequencePlayer_3) == 0x000FE0, "Member 'UABP_CH_PC_Pino_C::AnimGraphNode_SequencePlayer_3' has a wrong offset!");
static_assert(offsetof(UABP_CH_PC_Pino_C, AnimGraphNode_BlendListByBool_2) == 0x001060, "Member 'UABP_CH_PC_Pino_C::AnimGraphNode_BlendListByBool_2' has a wrong offset!");
static_assert(offsetof(UABP_CH_PC_Pino_C, AnimGraphNode_SaveCachedPose_10) == 0x001100, "Member 'UABP_CH_PC_Pino_C::AnimGraphNode_SaveCachedPose_10' has a wrong offset!");
static_assert(offsetof(UABP_CH_PC_Pino_C, AnimGraphNode_UseCachedPose_21) == 0x001258, "Member 'UABP_CH_PC_Pino_C::AnimGraphNode_UseCachedPose_21' has a wrong offset!");
static_assert(offsetof(UABP_CH_PC_Pino_C, AnimGraphNode_ApplyAdditive_2) == 0x001280, "Member 'UABP_CH_PC_Pino_C::AnimGraphNode_ApplyAdditive_2' has a wrong offset!");
static_assert(offsetof(UABP_CH_PC_Pino_C, AnimGraphNode_UseCachedPose_20) == 0x001348, "Member 'UABP_CH_PC_Pino_C::AnimGraphNode_UseCachedPose_20' has a wrong offset!");
static_assert(offsetof(UABP_CH_PC_Pino_C, AnimGraphNode_Root_3) == 0x001370, "Member 'UABP_CH_PC_Pino_C::AnimGraphNode_Root_3' has a wrong offset!");
static_assert(offsetof(UABP_CH_PC_Pino_C, AnimGraphNode_LinkedInputPose_1) == 0x0013A0, "Member 'UABP_CH_PC_Pino_C::AnimGraphNode_LinkedInputPose_1' has a wrong offset!");
static_assert(offsetof(UABP_CH_PC_Pino_C, AnimGraphNode_LocalToComponentSpace_5) == 0x0014B8, "Member 'UABP_CH_PC_Pino_C::AnimGraphNode_LocalToComponentSpace_5' has a wrong offset!");
static_assert(offsetof(UABP_CH_PC_Pino_C, AnimGraphNode_ComponentToLocalSpace_5) == 0x0014D8, "Member 'UABP_CH_PC_Pino_C::AnimGraphNode_ComponentToLocalSpace_5' has a wrong offset!");
static_assert(offsetof(UABP_CH_PC_Pino_C, AnimGraphNode_Root_2) == 0x0014F8, "Member 'UABP_CH_PC_Pino_C::AnimGraphNode_Root_2' has a wrong offset!");
static_assert(offsetof(UABP_CH_PC_Pino_C, AnimGraphNode_AnimDynamics_1) == 0x001530, "Member 'UABP_CH_PC_Pino_C::AnimGraphNode_AnimDynamics_1' has a wrong offset!");
static_assert(offsetof(UABP_CH_PC_Pino_C, AnimGraphNode_ModifyBone_12) == 0x001970, "Member 'UABP_CH_PC_Pino_C::AnimGraphNode_ModifyBone_12' has a wrong offset!");
static_assert(offsetof(UABP_CH_PC_Pino_C, AnimGraphNode_ModifyBone_11) == 0x001A78, "Member 'UABP_CH_PC_Pino_C::AnimGraphNode_ModifyBone_11' has a wrong offset!");
static_assert(offsetof(UABP_CH_PC_Pino_C, AnimGraphNode_AnimDynamics) == 0x001B80, "Member 'UABP_CH_PC_Pino_C::AnimGraphNode_AnimDynamics' has a wrong offset!");
static_assert(offsetof(UABP_CH_PC_Pino_C, AnimGraphNode_Root_1) == 0x001FC0, "Member 'UABP_CH_PC_Pino_C::AnimGraphNode_Root_1' has a wrong offset!");
static_assert(offsetof(UABP_CH_PC_Pino_C, AnimGraphNode_LocalToComponentSpace_4) == 0x001FF0, "Member 'UABP_CH_PC_Pino_C::AnimGraphNode_LocalToComponentSpace_4' has a wrong offset!");
static_assert(offsetof(UABP_CH_PC_Pino_C, AnimGraphNode_ComponentToLocalSpace_4) == 0x002010, "Member 'UABP_CH_PC_Pino_C::AnimGraphNode_ComponentToLocalSpace_4' has a wrong offset!");
static_assert(offsetof(UABP_CH_PC_Pino_C, AnimGraphNode_ModifyBone_10) == 0x002030, "Member 'UABP_CH_PC_Pino_C::AnimGraphNode_ModifyBone_10' has a wrong offset!");
static_assert(offsetof(UABP_CH_PC_Pino_C, AnimGraphNode_TwoBoneIK_1) == 0x002140, "Member 'UABP_CH_PC_Pino_C::AnimGraphNode_TwoBoneIK_1' has a wrong offset!");
static_assert(offsetof(UABP_CH_PC_Pino_C, AnimGraphNode_TwoBoneIK) == 0x002320, "Member 'UABP_CH_PC_Pino_C::AnimGraphNode_TwoBoneIK' has a wrong offset!");
static_assert(offsetof(UABP_CH_PC_Pino_C, AnimGraphNode_ModifyBone_9) == 0x002500, "Member 'UABP_CH_PC_Pino_C::AnimGraphNode_ModifyBone_9' has a wrong offset!");
static_assert(offsetof(UABP_CH_PC_Pino_C, AnimGraphNode_ModifyBone_8) == 0x002608, "Member 'UABP_CH_PC_Pino_C::AnimGraphNode_ModifyBone_8' has a wrong offset!");
static_assert(offsetof(UABP_CH_PC_Pino_C, AnimGraphNode_LinkedInputPose) == 0x002710, "Member 'UABP_CH_PC_Pino_C::AnimGraphNode_LinkedInputPose' has a wrong offset!");
static_assert(offsetof(UABP_CH_PC_Pino_C, AnimGraphNode_Root) == 0x002828, "Member 'UABP_CH_PC_Pino_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UABP_CH_PC_Pino_C, AnimGraphNode_TransitionResult_14) == 0x002858, "Member 'UABP_CH_PC_Pino_C::AnimGraphNode_TransitionResult_14' has a wrong offset!");
static_assert(offsetof(UABP_CH_PC_Pino_C, AnimGraphNode_TransitionResult_13) == 0x002880, "Member 'UABP_CH_PC_Pino_C::AnimGraphNode_TransitionResult_13' has a wrong offset!");
static_assert(offsetof(UABP_CH_PC_Pino_C, AnimGraphNode_TransitionResult_12) == 0x0028A8, "Member 'UABP_CH_PC_Pino_C::AnimGraphNode_TransitionResult_12' has a wrong offset!");
static_assert(offsetof(UABP_CH_PC_Pino_C, AnimGraphNode_TransitionResult_11) == 0x0028D0, "Member 'UABP_CH_PC_Pino_C::AnimGraphNode_TransitionResult_11' has a wrong offset!");
static_assert(offsetof(UABP_CH_PC_Pino_C, AnimGraphNode_TransitionResult_10) == 0x0028F8, "Member 'UABP_CH_PC_Pino_C::AnimGraphNode_TransitionResult_10' has a wrong offset!");
static_assert(offsetof(UABP_CH_PC_Pino_C, AnimGraphNode_TransitionResult_9) == 0x002920, "Member 'UABP_CH_PC_Pino_C::AnimGraphNode_TransitionResult_9' has a wrong offset!");
static_assert(offsetof(UABP_CH_PC_Pino_C, AnimGraphNode_TransitionResult_8) == 0x002948, "Member 'UABP_CH_PC_Pino_C::AnimGraphNode_TransitionResult_8' has a wrong offset!");
static_assert(offsetof(UABP_CH_PC_Pino_C, AnimGraphNode_TransitionResult_7) == 0x002970, "Member 'UABP_CH_PC_Pino_C::AnimGraphNode_TransitionResult_7' has a wrong offset!");
static_assert(offsetof(UABP_CH_PC_Pino_C, AnimGraphNode_TransitionResult_6) == 0x002998, "Member 'UABP_CH_PC_Pino_C::AnimGraphNode_TransitionResult_6' has a wrong offset!");
static_assert(offsetof(UABP_CH_PC_Pino_C, AnimGraphNode_TransitionResult_5) == 0x0029C0, "Member 'UABP_CH_PC_Pino_C::AnimGraphNode_TransitionResult_5' has a wrong offset!");
static_assert(offsetof(UABP_CH_PC_Pino_C, AnimGraphNode_BlendSpacePlayer_5) == 0x0029E8, "Member 'UABP_CH_PC_Pino_C::AnimGraphNode_BlendSpacePlayer_5' has a wrong offset!");
static_assert(offsetof(UABP_CH_PC_Pino_C, AnimGraphNode_StateResult_7) == 0x002AD0, "Member 'UABP_CH_PC_Pino_C::AnimGraphNode_StateResult_7' has a wrong offset!");
static_assert(offsetof(UABP_CH_PC_Pino_C, AnimGraphNode_TransitionResult_4) == 0x002B00, "Member 'UABP_CH_PC_Pino_C::AnimGraphNode_TransitionResult_4' has a wrong offset!");
static_assert(offsetof(UABP_CH_PC_Pino_C, AnimGraphNode_RandomPlayer) == 0x002B28, "Member 'UABP_CH_PC_Pino_C::AnimGraphNode_RandomPlayer' has a wrong offset!");
static_assert(offsetof(UABP_CH_PC_Pino_C, AnimGraphNode_ApplyAdditive_1) == 0x002BA0, "Member 'UABP_CH_PC_Pino_C::AnimGraphNode_ApplyAdditive_1' has a wrong offset!");
static_assert(offsetof(UABP_CH_PC_Pino_C, AnimGraphNode_SequencePlayer_2) == 0x002C68, "Member 'UABP_CH_PC_Pino_C::AnimGraphNode_SequencePlayer_2' has a wrong offset!");
static_assert(offsetof(UABP_CH_PC_Pino_C, AnimGraphNode_StateResult_6) == 0x002CE8, "Member 'UABP_CH_PC_Pino_C::AnimGraphNode_StateResult_6' has a wrong offset!");
static_assert(offsetof(UABP_CH_PC_Pino_C, AnimGraphNode_BlendSpacePlayer_4) == 0x002D18, "Member 'UABP_CH_PC_Pino_C::AnimGraphNode_BlendSpacePlayer_4' has a wrong offset!");
static_assert(offsetof(UABP_CH_PC_Pino_C, AnimGraphNode_StateResult_5) == 0x002E00, "Member 'UABP_CH_PC_Pino_C::AnimGraphNode_StateResult_5' has a wrong offset!");
static_assert(offsetof(UABP_CH_PC_Pino_C, AnimGraphNode_BlendSpacePlayer_3) == 0x002E30, "Member 'UABP_CH_PC_Pino_C::AnimGraphNode_BlendSpacePlayer_3' has a wrong offset!");
static_assert(offsetof(UABP_CH_PC_Pino_C, AnimGraphNode_StateResult_4) == 0x002F18, "Member 'UABP_CH_PC_Pino_C::AnimGraphNode_StateResult_4' has a wrong offset!");
static_assert(offsetof(UABP_CH_PC_Pino_C, AnimGraphNode_BlendSpacePlayer_2) == 0x002F48, "Member 'UABP_CH_PC_Pino_C::AnimGraphNode_BlendSpacePlayer_2' has a wrong offset!");
static_assert(offsetof(UABP_CH_PC_Pino_C, AnimGraphNode_StateResult_3) == 0x003030, "Member 'UABP_CH_PC_Pino_C::AnimGraphNode_StateResult_3' has a wrong offset!");
static_assert(offsetof(UABP_CH_PC_Pino_C, AnimGraphNode_StateMachine_1) == 0x003060, "Member 'UABP_CH_PC_Pino_C::AnimGraphNode_StateMachine_1' has a wrong offset!");
static_assert(offsetof(UABP_CH_PC_Pino_C, AnimGraphNode_SaveCachedPose_9) == 0x003110, "Member 'UABP_CH_PC_Pino_C::AnimGraphNode_SaveCachedPose_9' has a wrong offset!");
static_assert(offsetof(UABP_CH_PC_Pino_C, AnimGraphNode_UseCachedPose_19) == 0x003268, "Member 'UABP_CH_PC_Pino_C::AnimGraphNode_UseCachedPose_19' has a wrong offset!");
static_assert(offsetof(UABP_CH_PC_Pino_C, AnimGraphNode_SaveCachedPose_8) == 0x003290, "Member 'UABP_CH_PC_Pino_C::AnimGraphNode_SaveCachedPose_8' has a wrong offset!");
static_assert(offsetof(UABP_CH_PC_Pino_C, AnimGraphNode_SaveCachedPose_7) == 0x0033E8, "Member 'UABP_CH_PC_Pino_C::AnimGraphNode_SaveCachedPose_7' has a wrong offset!");
static_assert(offsetof(UABP_CH_PC_Pino_C, AnimGraphNode_SaveCachedPose_6) == 0x003540, "Member 'UABP_CH_PC_Pino_C::AnimGraphNode_SaveCachedPose_6' has a wrong offset!");
static_assert(offsetof(UABP_CH_PC_Pino_C, AnimGraphNode_ModifyBone_7) == 0x003698, "Member 'UABP_CH_PC_Pino_C::AnimGraphNode_ModifyBone_7' has a wrong offset!");
static_assert(offsetof(UABP_CH_PC_Pino_C, AnimGraphNode_UseCachedPose_18) == 0x0037A0, "Member 'UABP_CH_PC_Pino_C::AnimGraphNode_UseCachedPose_18' has a wrong offset!");
static_assert(offsetof(UABP_CH_PC_Pino_C, AnimGraphNode_LinkedAnimLayer_1) == 0x0037C8, "Member 'UABP_CH_PC_Pino_C::AnimGraphNode_LinkedAnimLayer_1' has a wrong offset!");
static_assert(offsetof(UABP_CH_PC_Pino_C, AnimGraphNode_ApplyMeshSpaceAdditive) == 0x003878, "Member 'UABP_CH_PC_Pino_C::AnimGraphNode_ApplyMeshSpaceAdditive' has a wrong offset!");
static_assert(offsetof(UABP_CH_PC_Pino_C, AnimGraphNode_Slot_2) == 0x003948, "Member 'UABP_CH_PC_Pino_C::AnimGraphNode_Slot_2' has a wrong offset!");
static_assert(offsetof(UABP_CH_PC_Pino_C, AnimGraphNode_ModifyBone_6) == 0x003990, "Member 'UABP_CH_PC_Pino_C::AnimGraphNode_ModifyBone_6' has a wrong offset!");
static_assert(offsetof(UABP_CH_PC_Pino_C, AnimGraphNode_LocalToComponentSpace_3) == 0x003A98, "Member 'UABP_CH_PC_Pino_C::AnimGraphNode_LocalToComponentSpace_3' has a wrong offset!");
static_assert(offsetof(UABP_CH_PC_Pino_C, AnimGraphNode_ModifyBone_5) == 0x003AB8, "Member 'UABP_CH_PC_Pino_C::AnimGraphNode_ModifyBone_5' has a wrong offset!");
static_assert(offsetof(UABP_CH_PC_Pino_C, AnimGraphNode_UseCachedPose_17) == 0x003BC0, "Member 'UABP_CH_PC_Pino_C::AnimGraphNode_UseCachedPose_17' has a wrong offset!");
static_assert(offsetof(UABP_CH_PC_Pino_C, AnimGraphNode_BlendListByInt) == 0x003BE8, "Member 'UABP_CH_PC_Pino_C::AnimGraphNode_BlendListByInt' has a wrong offset!");
static_assert(offsetof(UABP_CH_PC_Pino_C, AnimGraphNode_ModifyBone_4) == 0x003C88, "Member 'UABP_CH_PC_Pino_C::AnimGraphNode_ModifyBone_4' has a wrong offset!");
static_assert(offsetof(UABP_CH_PC_Pino_C, AnimGraphNode_UseCachedPose_16) == 0x003D90, "Member 'UABP_CH_PC_Pino_C::AnimGraphNode_UseCachedPose_16' has a wrong offset!");
static_assert(offsetof(UABP_CH_PC_Pino_C, AnimGraphNode_LocalToComponentSpace_2) == 0x003DB8, "Member 'UABP_CH_PC_Pino_C::AnimGraphNode_LocalToComponentSpace_2' has a wrong offset!");
static_assert(offsetof(UABP_CH_PC_Pino_C, AnimGraphNode_ComponentToLocalSpace_3) == 0x003DD8, "Member 'UABP_CH_PC_Pino_C::AnimGraphNode_ComponentToLocalSpace_3' has a wrong offset!");
static_assert(offsetof(UABP_CH_PC_Pino_C, AnimGraphNode_ModifyBone_3) == 0x003DF8, "Member 'UABP_CH_PC_Pino_C::AnimGraphNode_ModifyBone_3' has a wrong offset!");
static_assert(offsetof(UABP_CH_PC_Pino_C, AnimGraphNode_LocalToComponentSpace_1) == 0x003F00, "Member 'UABP_CH_PC_Pino_C::AnimGraphNode_LocalToComponentSpace_1' has a wrong offset!");
static_assert(offsetof(UABP_CH_PC_Pino_C, AnimGraphNode_ComponentToLocalSpace_2) == 0x003F20, "Member 'UABP_CH_PC_Pino_C::AnimGraphNode_ComponentToLocalSpace_2' has a wrong offset!");
static_assert(offsetof(UABP_CH_PC_Pino_C, AnimGraphNode_KawaiiPhysics_15) == 0x003F40, "Member 'UABP_CH_PC_Pino_C::AnimGraphNode_KawaiiPhysics_15' has a wrong offset!");
static_assert(offsetof(UABP_CH_PC_Pino_C, AnimGraphNode_UseCachedPose_15) == 0x0047E0, "Member 'UABP_CH_PC_Pino_C::AnimGraphNode_UseCachedPose_15' has a wrong offset!");
static_assert(offsetof(UABP_CH_PC_Pino_C, AnimGraphNode_UseCachedPose_14) == 0x004808, "Member 'UABP_CH_PC_Pino_C::AnimGraphNode_UseCachedPose_14' has a wrong offset!");
static_assert(offsetof(UABP_CH_PC_Pino_C, AnimGraphNode_UseCachedPose_13) == 0x004830, "Member 'UABP_CH_PC_Pino_C::AnimGraphNode_UseCachedPose_13' has a wrong offset!");
static_assert(offsetof(UABP_CH_PC_Pino_C, AnimGraphNode_ModifyBone_2) == 0x004858, "Member 'UABP_CH_PC_Pino_C::AnimGraphNode_ModifyBone_2' has a wrong offset!");
static_assert(offsetof(UABP_CH_PC_Pino_C, AnimGraphNode_ModifyBone_1) == 0x004960, "Member 'UABP_CH_PC_Pino_C::AnimGraphNode_ModifyBone_1' has a wrong offset!");
static_assert(offsetof(UABP_CH_PC_Pino_C, AnimGraphNode_LocalToComponentSpace) == 0x004A68, "Member 'UABP_CH_PC_Pino_C::AnimGraphNode_LocalToComponentSpace' has a wrong offset!");
static_assert(offsetof(UABP_CH_PC_Pino_C, AnimGraphNode_TransitionResult_3) == 0x004A88, "Member 'UABP_CH_PC_Pino_C::AnimGraphNode_TransitionResult_3' has a wrong offset!");
static_assert(offsetof(UABP_CH_PC_Pino_C, AnimGraphNode_TransitionResult_2) == 0x004AB0, "Member 'UABP_CH_PC_Pino_C::AnimGraphNode_TransitionResult_2' has a wrong offset!");
static_assert(offsetof(UABP_CH_PC_Pino_C, AnimGraphNode_TransitionResult_1) == 0x004AD8, "Member 'UABP_CH_PC_Pino_C::AnimGraphNode_TransitionResult_1' has a wrong offset!");
static_assert(offsetof(UABP_CH_PC_Pino_C, AnimGraphNode_TransitionResult) == 0x004B00, "Member 'UABP_CH_PC_Pino_C::AnimGraphNode_TransitionResult' has a wrong offset!");
static_assert(offsetof(UABP_CH_PC_Pino_C, AnimGraphNode_SequencePlayer_1) == 0x004B28, "Member 'UABP_CH_PC_Pino_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UABP_CH_PC_Pino_C, AnimGraphNode_StateResult_2) == 0x004BA8, "Member 'UABP_CH_PC_Pino_C::AnimGraphNode_StateResult_2' has a wrong offset!");
static_assert(offsetof(UABP_CH_PC_Pino_C, AnimGraphNode_BlendSpacePlayer_1) == 0x004BD8, "Member 'UABP_CH_PC_Pino_C::AnimGraphNode_BlendSpacePlayer_1' has a wrong offset!");
static_assert(offsetof(UABP_CH_PC_Pino_C, AnimGraphNode_StateResult_1) == 0x004CC0, "Member 'UABP_CH_PC_Pino_C::AnimGraphNode_StateResult_1' has a wrong offset!");
static_assert(offsetof(UABP_CH_PC_Pino_C, AnimGraphNode_BlendSpacePlayer) == 0x004CF0, "Member 'UABP_CH_PC_Pino_C::AnimGraphNode_BlendSpacePlayer' has a wrong offset!");
static_assert(offsetof(UABP_CH_PC_Pino_C, AnimGraphNode_StateResult) == 0x004DD8, "Member 'UABP_CH_PC_Pino_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(UABP_CH_PC_Pino_C, AnimGraphNode_StateMachine) == 0x004E08, "Member 'UABP_CH_PC_Pino_C::AnimGraphNode_StateMachine' has a wrong offset!");
static_assert(offsetof(UABP_CH_PC_Pino_C, AnimGraphNode_SaveCachedPose_5) == 0x004EB8, "Member 'UABP_CH_PC_Pino_C::AnimGraphNode_SaveCachedPose_5' has a wrong offset!");
static_assert(offsetof(UABP_CH_PC_Pino_C, AnimGraphNode_UseCachedPose_12) == 0x005010, "Member 'UABP_CH_PC_Pino_C::AnimGraphNode_UseCachedPose_12' has a wrong offset!");
static_assert(offsetof(UABP_CH_PC_Pino_C, AnimGraphNode_KawaiiPhysics_14) == 0x005040, "Member 'UABP_CH_PC_Pino_C::AnimGraphNode_KawaiiPhysics_14' has a wrong offset!");
static_assert(offsetof(UABP_CH_PC_Pino_C, AnimGraphNode_ComponentToLocalSpace_1) == 0x0058E0, "Member 'UABP_CH_PC_Pino_C::AnimGraphNode_ComponentToLocalSpace_1' has a wrong offset!");
static_assert(offsetof(UABP_CH_PC_Pino_C, AnimGraphNode_KawaiiPhysics_13) == 0x005900, "Member 'UABP_CH_PC_Pino_C::AnimGraphNode_KawaiiPhysics_13' has a wrong offset!");
static_assert(offsetof(UABP_CH_PC_Pino_C, AnimGraphNode_ComponentToLocalSpace) == 0x0061A0, "Member 'UABP_CH_PC_Pino_C::AnimGraphNode_ComponentToLocalSpace' has a wrong offset!");
static_assert(offsetof(UABP_CH_PC_Pino_C, AnimGraphNode_KawaiiPhysics_12) == 0x0061C0, "Member 'UABP_CH_PC_Pino_C::AnimGraphNode_KawaiiPhysics_12' has a wrong offset!");
static_assert(offsetof(UABP_CH_PC_Pino_C, AnimGraphNode_KawaiiPhysics_11) == 0x006A60, "Member 'UABP_CH_PC_Pino_C::AnimGraphNode_KawaiiPhysics_11' has a wrong offset!");
static_assert(offsetof(UABP_CH_PC_Pino_C, AnimGraphNode_KawaiiPhysics_10) == 0x007300, "Member 'UABP_CH_PC_Pino_C::AnimGraphNode_KawaiiPhysics_10' has a wrong offset!");
static_assert(offsetof(UABP_CH_PC_Pino_C, AnimGraphNode_KawaiiPhysics_9) == 0x007BA0, "Member 'UABP_CH_PC_Pino_C::AnimGraphNode_KawaiiPhysics_9' has a wrong offset!");
static_assert(offsetof(UABP_CH_PC_Pino_C, AnimGraphNode_KawaiiPhysics_8) == 0x008440, "Member 'UABP_CH_PC_Pino_C::AnimGraphNode_KawaiiPhysics_8' has a wrong offset!");
static_assert(offsetof(UABP_CH_PC_Pino_C, AnimGraphNode_KawaiiPhysics_7) == 0x008CE0, "Member 'UABP_CH_PC_Pino_C::AnimGraphNode_KawaiiPhysics_7' has a wrong offset!");
static_assert(offsetof(UABP_CH_PC_Pino_C, AnimGraphNode_KawaiiPhysics_6) == 0x009580, "Member 'UABP_CH_PC_Pino_C::AnimGraphNode_KawaiiPhysics_6' has a wrong offset!");
static_assert(offsetof(UABP_CH_PC_Pino_C, AnimGraphNode_KawaiiPhysics_5) == 0x009E20, "Member 'UABP_CH_PC_Pino_C::AnimGraphNode_KawaiiPhysics_5' has a wrong offset!");
static_assert(offsetof(UABP_CH_PC_Pino_C, AnimGraphNode_SaveCachedPose_4) == 0x00A6C0, "Member 'UABP_CH_PC_Pino_C::AnimGraphNode_SaveCachedPose_4' has a wrong offset!");
static_assert(offsetof(UABP_CH_PC_Pino_C, AnimGraphNode_UseCachedPose_11) == 0x00A818, "Member 'UABP_CH_PC_Pino_C::AnimGraphNode_UseCachedPose_11' has a wrong offset!");
static_assert(offsetof(UABP_CH_PC_Pino_C, AnimGraphNode_KawaiiPhysics_4) == 0x00A840, "Member 'UABP_CH_PC_Pino_C::AnimGraphNode_KawaiiPhysics_4' has a wrong offset!");
static_assert(offsetof(UABP_CH_PC_Pino_C, AnimGraphNode_LayeredBoneBlend_3) == 0x00B0E0, "Member 'UABP_CH_PC_Pino_C::AnimGraphNode_LayeredBoneBlend_3' has a wrong offset!");
static_assert(offsetof(UABP_CH_PC_Pino_C, AnimGraphNode_UseCachedPose_10) == 0x00B1A0, "Member 'UABP_CH_PC_Pino_C::AnimGraphNode_UseCachedPose_10' has a wrong offset!");
static_assert(offsetof(UABP_CH_PC_Pino_C, AnimGraphNode_Slot_1) == 0x00B1C8, "Member 'UABP_CH_PC_Pino_C::AnimGraphNode_Slot_1' has a wrong offset!");
static_assert(offsetof(UABP_CH_PC_Pino_C, AnimGraphNode_SaveCachedPose_3) == 0x00B210, "Member 'UABP_CH_PC_Pino_C::AnimGraphNode_SaveCachedPose_3' has a wrong offset!");
static_assert(offsetof(UABP_CH_PC_Pino_C, AnimGraphNode_UseCachedPose_9) == 0x00B368, "Member 'UABP_CH_PC_Pino_C::AnimGraphNode_UseCachedPose_9' has a wrong offset!");
static_assert(offsetof(UABP_CH_PC_Pino_C, AnimGraphNode_LayeredBoneBlend_2) == 0x00B390, "Member 'UABP_CH_PC_Pino_C::AnimGraphNode_LayeredBoneBlend_2' has a wrong offset!");
static_assert(offsetof(UABP_CH_PC_Pino_C, AnimGraphNode_UseCachedPose_8) == 0x00B450, "Member 'UABP_CH_PC_Pino_C::AnimGraphNode_UseCachedPose_8' has a wrong offset!");
static_assert(offsetof(UABP_CH_PC_Pino_C, AnimGraphNode_UseCachedPose_7) == 0x00B478, "Member 'UABP_CH_PC_Pino_C::AnimGraphNode_UseCachedPose_7' has a wrong offset!");
static_assert(offsetof(UABP_CH_PC_Pino_C, AnimGraphNode_BlendListByBool_1) == 0x00B4A0, "Member 'UABP_CH_PC_Pino_C::AnimGraphNode_BlendListByBool_1' has a wrong offset!");
static_assert(offsetof(UABP_CH_PC_Pino_C, AnimGraphNode_ApplyAdditive) == 0x00B540, "Member 'UABP_CH_PC_Pino_C::AnimGraphNode_ApplyAdditive' has a wrong offset!");
static_assert(offsetof(UABP_CH_PC_Pino_C, AnimGraphNode_SequencePlayer) == 0x00B608, "Member 'UABP_CH_PC_Pino_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UABP_CH_PC_Pino_C, AnimGraphNode_KawaiiPhysics_3) == 0x00B690, "Member 'UABP_CH_PC_Pino_C::AnimGraphNode_KawaiiPhysics_3' has a wrong offset!");
static_assert(offsetof(UABP_CH_PC_Pino_C, AnimGraphNode_LinkedAnimLayer) == 0x00BF30, "Member 'UABP_CH_PC_Pino_C::AnimGraphNode_LinkedAnimLayer' has a wrong offset!");
static_assert(offsetof(UABP_CH_PC_Pino_C, AnimGraphNode_SaveCachedPose_2) == 0x00BFE0, "Member 'UABP_CH_PC_Pino_C::AnimGraphNode_SaveCachedPose_2' has a wrong offset!");
static_assert(offsetof(UABP_CH_PC_Pino_C, AnimGraphNode_UseCachedPose_6) == 0x00C138, "Member 'UABP_CH_PC_Pino_C::AnimGraphNode_UseCachedPose_6' has a wrong offset!");
static_assert(offsetof(UABP_CH_PC_Pino_C, AnimGraphNode_UseCachedPose_5) == 0x00C160, "Member 'UABP_CH_PC_Pino_C::AnimGraphNode_UseCachedPose_5' has a wrong offset!");
static_assert(offsetof(UABP_CH_PC_Pino_C, AnimGraphNode_ModifyBone) == 0x00C188, "Member 'UABP_CH_PC_Pino_C::AnimGraphNode_ModifyBone' has a wrong offset!");
static_assert(offsetof(UABP_CH_PC_Pino_C, AnimGraphNode_Slot) == 0x00C290, "Member 'UABP_CH_PC_Pino_C::AnimGraphNode_Slot' has a wrong offset!");
static_assert(offsetof(UABP_CH_PC_Pino_C, AnimGraphNode_BlendListByBool) == 0x00C2D8, "Member 'UABP_CH_PC_Pino_C::AnimGraphNode_BlendListByBool' has a wrong offset!");
static_assert(offsetof(UABP_CH_PC_Pino_C, AnimGraphNode_SaveCachedPose_1) == 0x00C378, "Member 'UABP_CH_PC_Pino_C::AnimGraphNode_SaveCachedPose_1' has a wrong offset!");
static_assert(offsetof(UABP_CH_PC_Pino_C, AnimGraphNode_UseCachedPose_4) == 0x00C4D0, "Member 'UABP_CH_PC_Pino_C::AnimGraphNode_UseCachedPose_4' has a wrong offset!");
static_assert(offsetof(UABP_CH_PC_Pino_C, AnimGraphNode_LayeredBoneBlend_1) == 0x00C4F8, "Member 'UABP_CH_PC_Pino_C::AnimGraphNode_LayeredBoneBlend_1' has a wrong offset!");
static_assert(offsetof(UABP_CH_PC_Pino_C, AnimGraphNode_UseCachedPose_3) == 0x00C5B8, "Member 'UABP_CH_PC_Pino_C::AnimGraphNode_UseCachedPose_3' has a wrong offset!");
static_assert(offsetof(UABP_CH_PC_Pino_C, AnimGraphNode_UseCachedPose_2) == 0x00C5E0, "Member 'UABP_CH_PC_Pino_C::AnimGraphNode_UseCachedPose_2' has a wrong offset!");
static_assert(offsetof(UABP_CH_PC_Pino_C, AnimGraphNode_KawaiiPhysics_2) == 0x00C610, "Member 'UABP_CH_PC_Pino_C::AnimGraphNode_KawaiiPhysics_2' has a wrong offset!");
static_assert(offsetof(UABP_CH_PC_Pino_C, AnimGraphNode_KawaiiPhysics_1) == 0x00CEB0, "Member 'UABP_CH_PC_Pino_C::AnimGraphNode_KawaiiPhysics_1' has a wrong offset!");
static_assert(offsetof(UABP_CH_PC_Pino_C, AnimGraphNode_SaveCachedPose) == 0x00D750, "Member 'UABP_CH_PC_Pino_C::AnimGraphNode_SaveCachedPose' has a wrong offset!");
static_assert(offsetof(UABP_CH_PC_Pino_C, AnimGraphNode_LayeredBoneBlend) == 0x00D8A8, "Member 'UABP_CH_PC_Pino_C::AnimGraphNode_LayeredBoneBlend' has a wrong offset!");
static_assert(offsetof(UABP_CH_PC_Pino_C, AnimGraphNode_UseCachedPose_1) == 0x00D968, "Member 'UABP_CH_PC_Pino_C::AnimGraphNode_UseCachedPose_1' has a wrong offset!");
static_assert(offsetof(UABP_CH_PC_Pino_C, AnimGraphNode_UseCachedPose) == 0x00D990, "Member 'UABP_CH_PC_Pino_C::AnimGraphNode_UseCachedPose' has a wrong offset!");
static_assert(offsetof(UABP_CH_PC_Pino_C, AnimGraphNode_KawaiiPhysics) == 0x00D9C0, "Member 'UABP_CH_PC_Pino_C::AnimGraphNode_KawaiiPhysics' has a wrong offset!");
static_assert(offsetof(UABP_CH_PC_Pino_C, bHasWeapon) == 0x00E260, "Member 'UABP_CH_PC_Pino_C::bHasWeapon' has a wrong offset!");
static_assert(offsetof(UABP_CH_PC_Pino_C, IK_Main) == 0x00E268, "Member 'UABP_CH_PC_Pino_C::IK_Main' has a wrong offset!");
static_assert(offsetof(UABP_CH_PC_Pino_C, TEST_RopeLookAt) == 0x00E2A8, "Member 'UABP_CH_PC_Pino_C::TEST_RopeLookAt' has a wrong offset!");
static_assert(offsetof(UABP_CH_PC_Pino_C, TEST_RopeLookAtAlpha) == 0x00E2B4, "Member 'UABP_CH_PC_Pino_C::TEST_RopeLookAtAlpha' has a wrong offset!");
static_assert(offsetof(UABP_CH_PC_Pino_C, KP_Robe_Default) == 0x00E2B8, "Member 'UABP_CH_PC_Pino_C::KP_Robe_Default' has a wrong offset!");
static_assert(offsetof(UABP_CH_PC_Pino_C, KP_Frill_Default) == 0x00E2D0, "Member 'UABP_CH_PC_Pino_C::KP_Frill_Default' has a wrong offset!");
static_assert(offsetof(UABP_CH_PC_Pino_C, KP_Hair) == 0x00E2E8, "Member 'UABP_CH_PC_Pino_C::KP_Hair' has a wrong offset!");
static_assert(offsetof(UABP_CH_PC_Pino_C, KP_ACC_Default) == 0x00E300, "Member 'UABP_CH_PC_Pino_C::KP_ACC_Default' has a wrong offset!");
static_assert(offsetof(UABP_CH_PC_Pino_C, KP_Frill_02) == 0x00E318, "Member 'UABP_CH_PC_Pino_C::KP_Frill_02' has a wrong offset!");
static_assert(offsetof(UABP_CH_PC_Pino_C, KP_Cloth_01) == 0x00E330, "Member 'UABP_CH_PC_Pino_C::KP_Cloth_01' has a wrong offset!");
static_assert(offsetof(UABP_CH_PC_Pino_C, KP_Frill_03) == 0x00E348, "Member 'UABP_CH_PC_Pino_C::KP_Frill_03' has a wrong offset!");
static_assert(offsetof(UABP_CH_PC_Pino_C, KP_ACC_01) == 0x00E360, "Member 'UABP_CH_PC_Pino_C::KP_ACC_01' has a wrong offset!");
static_assert(offsetof(UABP_CH_PC_Pino_C, Cached_IsGuarding) == 0x00E378, "Member 'UABP_CH_PC_Pino_C::Cached_IsGuarding' has a wrong offset!");
static_assert(offsetof(UABP_CH_PC_Pino_C, Cached_SlaveArm_Additive_Alpha) == 0x00E37C, "Member 'UABP_CH_PC_Pino_C::Cached_SlaveArm_Additive_Alpha' has a wrong offset!");
static_assert(offsetof(UABP_CH_PC_Pino_C, Cached_SlaveArm_Additive_Anim) == 0x00E380, "Member 'UABP_CH_PC_Pino_C::Cached_SlaveArm_Additive_Anim' has a wrong offset!");
static_assert(offsetof(UABP_CH_PC_Pino_C, Cached_UseFullBody) == 0x00E388, "Member 'UABP_CH_PC_Pino_C::Cached_UseFullBody' has a wrong offset!");
static_assert(offsetof(UABP_CH_PC_Pino_C, KP_Hair_Long) == 0x00E38C, "Member 'UABP_CH_PC_Pino_C::KP_Hair_Long' has a wrong offset!");
static_assert(offsetof(UABP_CH_PC_Pino_C, IK_PelvisOffset) == 0x00E3A4, "Member 'UABP_CH_PC_Pino_C::IK_PelvisOffset' has a wrong offset!");
static_assert(offsetof(UABP_CH_PC_Pino_C, IK_LocationOffsetInverseZ_L) == 0x00E3B0, "Member 'UABP_CH_PC_Pino_C::IK_LocationOffsetInverseZ_L' has a wrong offset!");
static_assert(offsetof(UABP_CH_PC_Pino_C, IK_LocationOffsetInverseZ_R) == 0x00E3BC, "Member 'UABP_CH_PC_Pino_C::IK_LocationOffsetInverseZ_R' has a wrong offset!");
static_assert(offsetof(UABP_CH_PC_Pino_C, IK_RotationOffset_L) == 0x00E3C8, "Member 'UABP_CH_PC_Pino_C::IK_RotationOffset_L' has a wrong offset!");
static_assert(offsetof(UABP_CH_PC_Pino_C, IK_RotationOffset_R) == 0x00E3D4, "Member 'UABP_CH_PC_Pino_C::IK_RotationOffset_R' has a wrong offset!");

}


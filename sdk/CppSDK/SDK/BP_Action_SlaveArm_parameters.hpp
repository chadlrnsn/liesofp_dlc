#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Action_SlaveArm

#include "Basic.hpp"

#include "ProjectP_structs.hpp"
#include "ProjectPContentInfo_structs.hpp"


namespace SDK::Params
{

// Function BP_Action_SlaveArm.BP_Action_SlaveArm_C.ExecuteUbergraph_BP_Action_SlaveArm
// 0x0040 (0x0040 - 0x0000)
struct BP_Action_SlaveArm_C_ExecuteUbergraph_BP_Action_SlaveArm final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ULEventDispatcherSystem*                CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           K2Node_Event_Montage;                              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bInterrupted;                         // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_MontageInstanceID;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Stop_ReturnValue;                         // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaTime;                            // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULActBase*                              K2Node_Event_ReasonAction;                         // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Event_Reason;                               // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULEventDispatcherSystem*                CallFunc_GetGameInstanceSubsystem_ReturnValue_1;   // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Action_SlaveArm_C_ExecuteUbergraph_BP_Action_SlaveArm) == 0x000008, "Wrong alignment on BP_Action_SlaveArm_C_ExecuteUbergraph_BP_Action_SlaveArm");
static_assert(sizeof(BP_Action_SlaveArm_C_ExecuteUbergraph_BP_Action_SlaveArm) == 0x000040, "Wrong size on BP_Action_SlaveArm_C_ExecuteUbergraph_BP_Action_SlaveArm");
static_assert(offsetof(BP_Action_SlaveArm_C_ExecuteUbergraph_BP_Action_SlaveArm, EntryPoint) == 0x000000, "Member 'BP_Action_SlaveArm_C_ExecuteUbergraph_BP_Action_SlaveArm::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_Action_SlaveArm_C_ExecuteUbergraph_BP_Action_SlaveArm, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000008, "Member 'BP_Action_SlaveArm_C_ExecuteUbergraph_BP_Action_SlaveArm::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Action_SlaveArm_C_ExecuteUbergraph_BP_Action_SlaveArm, K2Node_Event_Montage) == 0x000010, "Member 'BP_Action_SlaveArm_C_ExecuteUbergraph_BP_Action_SlaveArm::K2Node_Event_Montage' has a wrong offset!");
static_assert(offsetof(BP_Action_SlaveArm_C_ExecuteUbergraph_BP_Action_SlaveArm, K2Node_Event_bInterrupted) == 0x000018, "Member 'BP_Action_SlaveArm_C_ExecuteUbergraph_BP_Action_SlaveArm::K2Node_Event_bInterrupted' has a wrong offset!");
static_assert(offsetof(BP_Action_SlaveArm_C_ExecuteUbergraph_BP_Action_SlaveArm, K2Node_Event_MontageInstanceID) == 0x00001C, "Member 'BP_Action_SlaveArm_C_ExecuteUbergraph_BP_Action_SlaveArm::K2Node_Event_MontageInstanceID' has a wrong offset!");
static_assert(offsetof(BP_Action_SlaveArm_C_ExecuteUbergraph_BP_Action_SlaveArm, CallFunc_Stop_ReturnValue) == 0x000020, "Member 'BP_Action_SlaveArm_C_ExecuteUbergraph_BP_Action_SlaveArm::CallFunc_Stop_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Action_SlaveArm_C_ExecuteUbergraph_BP_Action_SlaveArm, K2Node_Event_DeltaTime) == 0x000024, "Member 'BP_Action_SlaveArm_C_ExecuteUbergraph_BP_Action_SlaveArm::K2Node_Event_DeltaTime' has a wrong offset!");
static_assert(offsetof(BP_Action_SlaveArm_C_ExecuteUbergraph_BP_Action_SlaveArm, K2Node_Event_ReasonAction) == 0x000028, "Member 'BP_Action_SlaveArm_C_ExecuteUbergraph_BP_Action_SlaveArm::K2Node_Event_ReasonAction' has a wrong offset!");
static_assert(offsetof(BP_Action_SlaveArm_C_ExecuteUbergraph_BP_Action_SlaveArm, K2Node_Event_Reason) == 0x000030, "Member 'BP_Action_SlaveArm_C_ExecuteUbergraph_BP_Action_SlaveArm::K2Node_Event_Reason' has a wrong offset!");
static_assert(offsetof(BP_Action_SlaveArm_C_ExecuteUbergraph_BP_Action_SlaveArm, CallFunc_GetGameInstanceSubsystem_ReturnValue_1) == 0x000038, "Member 'BP_Action_SlaveArm_C_ExecuteUbergraph_BP_Action_SlaveArm::CallFunc_GetGameInstanceSubsystem_ReturnValue_1' has a wrong offset!");

// Function BP_Action_SlaveArm.BP_Action_SlaveArm_C.OnStop
// 0x0010 (0x0010 - 0x0000)
struct BP_Action_SlaveArm_C_OnStop final
{
public:
	class ULActBase*                              ReasonAction;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Reason;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Action_SlaveArm_C_OnStop) == 0x000008, "Wrong alignment on BP_Action_SlaveArm_C_OnStop");
static_assert(sizeof(BP_Action_SlaveArm_C_OnStop) == 0x000010, "Wrong size on BP_Action_SlaveArm_C_OnStop");
static_assert(offsetof(BP_Action_SlaveArm_C_OnStop, ReasonAction) == 0x000000, "Member 'BP_Action_SlaveArm_C_OnStop::ReasonAction' has a wrong offset!");
static_assert(offsetof(BP_Action_SlaveArm_C_OnStop, Reason) == 0x000008, "Member 'BP_Action_SlaveArm_C_OnStop::Reason' has a wrong offset!");

// Function BP_Action_SlaveArm.BP_Action_SlaveArm_C.OnTick
// 0x0004 (0x0004 - 0x0000)
struct BP_Action_SlaveArm_C_OnTick final
{
public:
	float                                         DeltaTime;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Action_SlaveArm_C_OnTick) == 0x000004, "Wrong alignment on BP_Action_SlaveArm_C_OnTick");
static_assert(sizeof(BP_Action_SlaveArm_C_OnTick) == 0x000004, "Wrong size on BP_Action_SlaveArm_C_OnTick");
static_assert(offsetof(BP_Action_SlaveArm_C_OnTick, DeltaTime) == 0x000000, "Member 'BP_Action_SlaveArm_C_OnTick::DeltaTime' has a wrong offset!");

// Function BP_Action_SlaveArm.BP_Action_SlaveArm_C.OnCurrMontageEnded
// 0x0010 (0x0010 - 0x0000)
struct BP_Action_SlaveArm_C_OnCurrMontageEnded final
{
public:
	class UAnimMontage*                           Montage;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bInterrupted;                                      // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         MontageInstanceID;                                 // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Action_SlaveArm_C_OnCurrMontageEnded) == 0x000008, "Wrong alignment on BP_Action_SlaveArm_C_OnCurrMontageEnded");
static_assert(sizeof(BP_Action_SlaveArm_C_OnCurrMontageEnded) == 0x000010, "Wrong size on BP_Action_SlaveArm_C_OnCurrMontageEnded");
static_assert(offsetof(BP_Action_SlaveArm_C_OnCurrMontageEnded, Montage) == 0x000000, "Member 'BP_Action_SlaveArm_C_OnCurrMontageEnded::Montage' has a wrong offset!");
static_assert(offsetof(BP_Action_SlaveArm_C_OnCurrMontageEnded, bInterrupted) == 0x000008, "Member 'BP_Action_SlaveArm_C_OnCurrMontageEnded::bInterrupted' has a wrong offset!");
static_assert(offsetof(BP_Action_SlaveArm_C_OnCurrMontageEnded, MontageInstanceID) == 0x00000C, "Member 'BP_Action_SlaveArm_C_OnCurrMontageEnded::MontageInstanceID' has a wrong offset!");

// Function BP_Action_SlaveArm.BP_Action_SlaveArm_C.PlaySlaveArmMontage
// 0x0040 (0x0040 - 0x0000)
struct BP_Action_SlaveArm_C_PlaySlaveArmMontage final
{
public:
	class ULSlaveArmReinforcementSystem*          CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EExecutePin                                   CallFunc_GetActiveSlaveArmItemBP_Branches;         // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ULItem*                                 CallFunc_GetActiveSlaveArmItemBP_ReturnValue;      // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetCodeName_ReturnValue;                  // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequenceBase*                      CallFunc_GetSkillAnim_ReturnValue;                 // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetSlaveArmSkillCodeName_ReturnValue;     // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequenceBase*                      CallFunc_GetSkillAnim_ReturnValue_1;               // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_PlayTargetAnim_ReturnValue;               // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Action_SlaveArm_C_PlaySlaveArmMontage) == 0x000008, "Wrong alignment on BP_Action_SlaveArm_C_PlaySlaveArmMontage");
static_assert(sizeof(BP_Action_SlaveArm_C_PlaySlaveArmMontage) == 0x000040, "Wrong size on BP_Action_SlaveArm_C_PlaySlaveArmMontage");
static_assert(offsetof(BP_Action_SlaveArm_C_PlaySlaveArmMontage, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000000, "Member 'BP_Action_SlaveArm_C_PlaySlaveArmMontage::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Action_SlaveArm_C_PlaySlaveArmMontage, CallFunc_GetActiveSlaveArmItemBP_Branches) == 0x000008, "Member 'BP_Action_SlaveArm_C_PlaySlaveArmMontage::CallFunc_GetActiveSlaveArmItemBP_Branches' has a wrong offset!");
static_assert(offsetof(BP_Action_SlaveArm_C_PlaySlaveArmMontage, CallFunc_GetActiveSlaveArmItemBP_ReturnValue) == 0x000010, "Member 'BP_Action_SlaveArm_C_PlaySlaveArmMontage::CallFunc_GetActiveSlaveArmItemBP_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Action_SlaveArm_C_PlaySlaveArmMontage, CallFunc_GetCodeName_ReturnValue) == 0x000018, "Member 'BP_Action_SlaveArm_C_PlaySlaveArmMontage::CallFunc_GetCodeName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Action_SlaveArm_C_PlaySlaveArmMontage, CallFunc_GetSkillAnim_ReturnValue) == 0x000020, "Member 'BP_Action_SlaveArm_C_PlaySlaveArmMontage::CallFunc_GetSkillAnim_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Action_SlaveArm_C_PlaySlaveArmMontage, CallFunc_GetSlaveArmSkillCodeName_ReturnValue) == 0x000028, "Member 'BP_Action_SlaveArm_C_PlaySlaveArmMontage::CallFunc_GetSlaveArmSkillCodeName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Action_SlaveArm_C_PlaySlaveArmMontage, CallFunc_GetSkillAnim_ReturnValue_1) == 0x000030, "Member 'BP_Action_SlaveArm_C_PlaySlaveArmMontage::CallFunc_GetSkillAnim_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Action_SlaveArm_C_PlaySlaveArmMontage, K2Node_SwitchEnum_CmpSuccess) == 0x000038, "Member 'BP_Action_SlaveArm_C_PlaySlaveArmMontage::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_Action_SlaveArm_C_PlaySlaveArmMontage, CallFunc_PlayTargetAnim_ReturnValue) == 0x00003C, "Member 'BP_Action_SlaveArm_C_PlaySlaveArmMontage::CallFunc_PlayTargetAnim_ReturnValue' has a wrong offset!");

// Function BP_Action_SlaveArm.BP_Action_SlaveArm_C.JumpToNextSection
// 0x0018 (0x0018 - 0x0000)
struct BP_Action_SlaveArm_C_JumpToNextSection final
{
public:
	class FName                                   NextSection;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimInstance*                          CallFunc_GetAnimInst_ReturnValue;                  // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           CallFunc_GetCurrentActiveMontage_ReturnValue;      // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Action_SlaveArm_C_JumpToNextSection) == 0x000008, "Wrong alignment on BP_Action_SlaveArm_C_JumpToNextSection");
static_assert(sizeof(BP_Action_SlaveArm_C_JumpToNextSection) == 0x000018, "Wrong size on BP_Action_SlaveArm_C_JumpToNextSection");
static_assert(offsetof(BP_Action_SlaveArm_C_JumpToNextSection, NextSection) == 0x000000, "Member 'BP_Action_SlaveArm_C_JumpToNextSection::NextSection' has a wrong offset!");
static_assert(offsetof(BP_Action_SlaveArm_C_JumpToNextSection, CallFunc_GetAnimInst_ReturnValue) == 0x000008, "Member 'BP_Action_SlaveArm_C_JumpToNextSection::CallFunc_GetAnimInst_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Action_SlaveArm_C_JumpToNextSection, CallFunc_GetCurrentActiveMontage_ReturnValue) == 0x000010, "Member 'BP_Action_SlaveArm_C_JumpToNextSection::CallFunc_GetCurrentActiveMontage_ReturnValue' has a wrong offset!");

// Function BP_Action_SlaveArm.BP_Action_SlaveArm_C.CheckCurrectSection
// 0x0050 (0x0050 - 0x0000)
struct BP_Action_SlaveArm_C_CheckCurrectSection final
{
public:
	TArray<class FName>                           SectionNameList;                                   // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FName                                   CurrentSectionName;                                // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsPlayingSectionInList;                            // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0024(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimInstance*                          CallFunc_GetAnimInst_ReturnValue;                  // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EExecutePin                                   CallFunc_GetMontage_CurrentSectionBP_Branches;     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetMontage_CurrentSectionBP_ReturnValue;  // 0x0044(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x004D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Action_SlaveArm_C_CheckCurrectSection) == 0x000008, "Wrong alignment on BP_Action_SlaveArm_C_CheckCurrectSection");
static_assert(sizeof(BP_Action_SlaveArm_C_CheckCurrectSection) == 0x000050, "Wrong size on BP_Action_SlaveArm_C_CheckCurrectSection");
static_assert(offsetof(BP_Action_SlaveArm_C_CheckCurrectSection, SectionNameList) == 0x000000, "Member 'BP_Action_SlaveArm_C_CheckCurrectSection::SectionNameList' has a wrong offset!");
static_assert(offsetof(BP_Action_SlaveArm_C_CheckCurrectSection, CurrentSectionName) == 0x000010, "Member 'BP_Action_SlaveArm_C_CheckCurrectSection::CurrentSectionName' has a wrong offset!");
static_assert(offsetof(BP_Action_SlaveArm_C_CheckCurrectSection, IsPlayingSectionInList) == 0x000018, "Member 'BP_Action_SlaveArm_C_CheckCurrectSection::IsPlayingSectionInList' has a wrong offset!");
static_assert(offsetof(BP_Action_SlaveArm_C_CheckCurrectSection, Temp_int_Array_Index_Variable) == 0x00001C, "Member 'BP_Action_SlaveArm_C_CheckCurrectSection::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Action_SlaveArm_C_CheckCurrectSection, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'BP_Action_SlaveArm_C_CheckCurrectSection::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Action_SlaveArm_C_CheckCurrectSection, CallFunc_Array_Get_Item) == 0x000024, "Member 'BP_Action_SlaveArm_C_CheckCurrectSection::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Action_SlaveArm_C_CheckCurrectSection, Temp_int_Loop_Counter_Variable) == 0x00002C, "Member 'BP_Action_SlaveArm_C_CheckCurrectSection::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Action_SlaveArm_C_CheckCurrectSection, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'BP_Action_SlaveArm_C_CheckCurrectSection::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Action_SlaveArm_C_CheckCurrectSection, CallFunc_Add_IntInt_ReturnValue) == 0x000034, "Member 'BP_Action_SlaveArm_C_CheckCurrectSection::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Action_SlaveArm_C_CheckCurrectSection, CallFunc_GetAnimInst_ReturnValue) == 0x000038, "Member 'BP_Action_SlaveArm_C_CheckCurrectSection::CallFunc_GetAnimInst_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Action_SlaveArm_C_CheckCurrectSection, CallFunc_GetMontage_CurrentSectionBP_Branches) == 0x000040, "Member 'BP_Action_SlaveArm_C_CheckCurrectSection::CallFunc_GetMontage_CurrentSectionBP_Branches' has a wrong offset!");
static_assert(offsetof(BP_Action_SlaveArm_C_CheckCurrectSection, CallFunc_GetMontage_CurrentSectionBP_ReturnValue) == 0x000044, "Member 'BP_Action_SlaveArm_C_CheckCurrectSection::CallFunc_GetMontage_CurrentSectionBP_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Action_SlaveArm_C_CheckCurrectSection, K2Node_SwitchEnum_CmpSuccess) == 0x00004C, "Member 'BP_Action_SlaveArm_C_CheckCurrectSection::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_Action_SlaveArm_C_CheckCurrectSection, CallFunc_EqualEqual_NameName_ReturnValue) == 0x00004D, "Member 'BP_Action_SlaveArm_C_CheckCurrectSection::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");

// Function BP_Action_SlaveArm.BP_Action_SlaveArm_C.CheckIfSectionChanged
// 0x0018 (0x0018 - 0x0000)
struct BP_Action_SlaveArm_C_CheckIfSectionChanged final
{
public:
	class UAnimInstance*                          CallFunc_GetAnimInst_ReturnValue;                  // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EExecutePin                                   CallFunc_GetMontage_CurrentSectionBP_Branches;     // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetMontage_CurrentSectionBP_ReturnValue;  // 0x000C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue;            // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Action_SlaveArm_C_CheckIfSectionChanged) == 0x000008, "Wrong alignment on BP_Action_SlaveArm_C_CheckIfSectionChanged");
static_assert(sizeof(BP_Action_SlaveArm_C_CheckIfSectionChanged) == 0x000018, "Wrong size on BP_Action_SlaveArm_C_CheckIfSectionChanged");
static_assert(offsetof(BP_Action_SlaveArm_C_CheckIfSectionChanged, CallFunc_GetAnimInst_ReturnValue) == 0x000000, "Member 'BP_Action_SlaveArm_C_CheckIfSectionChanged::CallFunc_GetAnimInst_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Action_SlaveArm_C_CheckIfSectionChanged, CallFunc_GetMontage_CurrentSectionBP_Branches) == 0x000008, "Member 'BP_Action_SlaveArm_C_CheckIfSectionChanged::CallFunc_GetMontage_CurrentSectionBP_Branches' has a wrong offset!");
static_assert(offsetof(BP_Action_SlaveArm_C_CheckIfSectionChanged, CallFunc_GetMontage_CurrentSectionBP_ReturnValue) == 0x00000C, "Member 'BP_Action_SlaveArm_C_CheckIfSectionChanged::CallFunc_GetMontage_CurrentSectionBP_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Action_SlaveArm_C_CheckIfSectionChanged, K2Node_SwitchEnum_CmpSuccess) == 0x000014, "Member 'BP_Action_SlaveArm_C_CheckIfSectionChanged::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_Action_SlaveArm_C_CheckIfSectionChanged, CallFunc_NotEqual_NameName_ReturnValue) == 0x000015, "Member 'BP_Action_SlaveArm_C_CheckIfSectionChanged::CallFunc_NotEqual_NameName_ReturnValue' has a wrong offset!");

// Function BP_Action_SlaveArm.BP_Action_SlaveArm_C.ApplySectionReinforcement
// 0x0100 (0x0100 - 0x0000)
struct BP_Action_SlaveArm_C_ApplySectionReinforcement final
{
public:
	class FName                                   SectionName;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EExecutePin                                   CallFunc_GetActiveSlaveArmItemBP_Branches;         // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ULItem*                                 CallFunc_GetActiveSlaveArmItemBP_ReturnValue;      // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetCodeName_ReturnValue;                  // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInst_ReturnValue;                  // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           CallFunc_GetCurrentActiveMontage_ReturnValue;      // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULSlaveArmReinforcementSystem*          CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULSpecialBuffSystem*                    CallFunc_GetGameInstanceSubsystem_ReturnValue_1;   // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ULSlaveArmTree*>                 CallFunc_GetSlaveArmTreeListBySlaveArmCodeName_ReturnValue; // 0x0058(0x0010)(ReferenceParm)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ULSlaveArmTree*                         CallFunc_Array_Get_Item;                           // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x3];                                       // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetReinforcementCodeName_ReturnValue;     // 0x007C(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ULSlaveArmReinforcementSystem*          CallFunc_GetGameInstanceSubsystem_ReturnValue_2;   // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FSlaveArmReinforcementInfoPtr>  CallFunc_GetReinforcementInfoList_ReturnValue;     // 0x00A0(0x0010)(ReferenceParm)
	struct FSlaveArmReinforcementInfoPtr          CallFunc_Array_Get_Item_1;                         // 0x00B0(0x0008)(NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPlayRate_ReturnValue;                  // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C1[0x3];                                       // 0x00C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetChangeSection_ReturnValue;             // 0x00C8(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetSpecialBuffCodeName_ReturnValue;       // 0x00D0(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetSectionToChange_ReturnValue;           // 0x00DC(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetChangePlayRateSection_ReturnValue;     // 0x00E4(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x00EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue_1;        // 0x00ED(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_EE[0x2];                                       // 0x00EE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetSpecialBuffSection_ReturnValue;        // 0x00F0(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue_2;        // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue_3;        // 0x00F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x00FA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Action_SlaveArm_C_ApplySectionReinforcement) == 0x000008, "Wrong alignment on BP_Action_SlaveArm_C_ApplySectionReinforcement");
static_assert(sizeof(BP_Action_SlaveArm_C_ApplySectionReinforcement) == 0x000100, "Wrong size on BP_Action_SlaveArm_C_ApplySectionReinforcement");
static_assert(offsetof(BP_Action_SlaveArm_C_ApplySectionReinforcement, SectionName) == 0x000000, "Member 'BP_Action_SlaveArm_C_ApplySectionReinforcement::SectionName' has a wrong offset!");
static_assert(offsetof(BP_Action_SlaveArm_C_ApplySectionReinforcement, Temp_int_Array_Index_Variable) == 0x000008, "Member 'BP_Action_SlaveArm_C_ApplySectionReinforcement::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Action_SlaveArm_C_ApplySectionReinforcement, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'BP_Action_SlaveArm_C_ApplySectionReinforcement::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Action_SlaveArm_C_ApplySectionReinforcement, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'BP_Action_SlaveArm_C_ApplySectionReinforcement::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Action_SlaveArm_C_ApplySectionReinforcement, Temp_int_Array_Index_Variable_1) == 0x000014, "Member 'BP_Action_SlaveArm_C_ApplySectionReinforcement::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Action_SlaveArm_C_ApplySectionReinforcement, CallFunc_GetActiveSlaveArmItemBP_Branches) == 0x000018, "Member 'BP_Action_SlaveArm_C_ApplySectionReinforcement::CallFunc_GetActiveSlaveArmItemBP_Branches' has a wrong offset!");
static_assert(offsetof(BP_Action_SlaveArm_C_ApplySectionReinforcement, CallFunc_GetActiveSlaveArmItemBP_ReturnValue) == 0x000020, "Member 'BP_Action_SlaveArm_C_ApplySectionReinforcement::CallFunc_GetActiveSlaveArmItemBP_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Action_SlaveArm_C_ApplySectionReinforcement, CallFunc_GetCodeName_ReturnValue) == 0x000028, "Member 'BP_Action_SlaveArm_C_ApplySectionReinforcement::CallFunc_GetCodeName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Action_SlaveArm_C_ApplySectionReinforcement, K2Node_SwitchEnum_CmpSuccess) == 0x000030, "Member 'BP_Action_SlaveArm_C_ApplySectionReinforcement::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_Action_SlaveArm_C_ApplySectionReinforcement, CallFunc_GetAnimInst_ReturnValue) == 0x000038, "Member 'BP_Action_SlaveArm_C_ApplySectionReinforcement::CallFunc_GetAnimInst_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Action_SlaveArm_C_ApplySectionReinforcement, CallFunc_GetCurrentActiveMontage_ReturnValue) == 0x000040, "Member 'BP_Action_SlaveArm_C_ApplySectionReinforcement::CallFunc_GetCurrentActiveMontage_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Action_SlaveArm_C_ApplySectionReinforcement, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000048, "Member 'BP_Action_SlaveArm_C_ApplySectionReinforcement::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Action_SlaveArm_C_ApplySectionReinforcement, CallFunc_GetGameInstanceSubsystem_ReturnValue_1) == 0x000050, "Member 'BP_Action_SlaveArm_C_ApplySectionReinforcement::CallFunc_GetGameInstanceSubsystem_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Action_SlaveArm_C_ApplySectionReinforcement, CallFunc_GetSlaveArmTreeListBySlaveArmCodeName_ReturnValue) == 0x000058, "Member 'BP_Action_SlaveArm_C_ApplySectionReinforcement::CallFunc_GetSlaveArmTreeListBySlaveArmCodeName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Action_SlaveArm_C_ApplySectionReinforcement, Temp_int_Loop_Counter_Variable_1) == 0x000068, "Member 'BP_Action_SlaveArm_C_ApplySectionReinforcement::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Action_SlaveArm_C_ApplySectionReinforcement, CallFunc_Array_Get_Item) == 0x000070, "Member 'BP_Action_SlaveArm_C_ApplySectionReinforcement::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Action_SlaveArm_C_ApplySectionReinforcement, CallFunc_IsValid_ReturnValue) == 0x000078, "Member 'BP_Action_SlaveArm_C_ApplySectionReinforcement::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Action_SlaveArm_C_ApplySectionReinforcement, CallFunc_GetReinforcementCodeName_ReturnValue) == 0x00007C, "Member 'BP_Action_SlaveArm_C_ApplySectionReinforcement::CallFunc_GetReinforcementCodeName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Action_SlaveArm_C_ApplySectionReinforcement, CallFunc_Add_IntInt_ReturnValue_1) == 0x000084, "Member 'BP_Action_SlaveArm_C_ApplySectionReinforcement::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Action_SlaveArm_C_ApplySectionReinforcement, CallFunc_Array_Length_ReturnValue) == 0x000088, "Member 'BP_Action_SlaveArm_C_ApplySectionReinforcement::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Action_SlaveArm_C_ApplySectionReinforcement, CallFunc_GetGameInstanceSubsystem_ReturnValue_2) == 0x000090, "Member 'BP_Action_SlaveArm_C_ApplySectionReinforcement::CallFunc_GetGameInstanceSubsystem_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Action_SlaveArm_C_ApplySectionReinforcement, CallFunc_Less_IntInt_ReturnValue) == 0x000098, "Member 'BP_Action_SlaveArm_C_ApplySectionReinforcement::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Action_SlaveArm_C_ApplySectionReinforcement, CallFunc_GetReinforcementInfoList_ReturnValue) == 0x0000A0, "Member 'BP_Action_SlaveArm_C_ApplySectionReinforcement::CallFunc_GetReinforcementInfoList_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Action_SlaveArm_C_ApplySectionReinforcement, CallFunc_Array_Get_Item_1) == 0x0000B0, "Member 'BP_Action_SlaveArm_C_ApplySectionReinforcement::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_Action_SlaveArm_C_ApplySectionReinforcement, CallFunc_Array_Length_ReturnValue_1) == 0x0000B8, "Member 'BP_Action_SlaveArm_C_ApplySectionReinforcement::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Action_SlaveArm_C_ApplySectionReinforcement, CallFunc_GetPlayRate_ReturnValue) == 0x0000BC, "Member 'BP_Action_SlaveArm_C_ApplySectionReinforcement::CallFunc_GetPlayRate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Action_SlaveArm_C_ApplySectionReinforcement, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000C0, "Member 'BP_Action_SlaveArm_C_ApplySectionReinforcement::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Action_SlaveArm_C_ApplySectionReinforcement, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0000C4, "Member 'BP_Action_SlaveArm_C_ApplySectionReinforcement::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Action_SlaveArm_C_ApplySectionReinforcement, CallFunc_GetChangeSection_ReturnValue) == 0x0000C8, "Member 'BP_Action_SlaveArm_C_ApplySectionReinforcement::CallFunc_GetChangeSection_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Action_SlaveArm_C_ApplySectionReinforcement, CallFunc_GetSpecialBuffCodeName_ReturnValue) == 0x0000D0, "Member 'BP_Action_SlaveArm_C_ApplySectionReinforcement::CallFunc_GetSpecialBuffCodeName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Action_SlaveArm_C_ApplySectionReinforcement, CallFunc_Array_Add_ReturnValue) == 0x0000D8, "Member 'BP_Action_SlaveArm_C_ApplySectionReinforcement::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Action_SlaveArm_C_ApplySectionReinforcement, CallFunc_GetSectionToChange_ReturnValue) == 0x0000DC, "Member 'BP_Action_SlaveArm_C_ApplySectionReinforcement::CallFunc_GetSectionToChange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Action_SlaveArm_C_ApplySectionReinforcement, CallFunc_GetChangePlayRateSection_ReturnValue) == 0x0000E4, "Member 'BP_Action_SlaveArm_C_ApplySectionReinforcement::CallFunc_GetChangePlayRateSection_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Action_SlaveArm_C_ApplySectionReinforcement, CallFunc_EqualEqual_NameName_ReturnValue) == 0x0000EC, "Member 'BP_Action_SlaveArm_C_ApplySectionReinforcement::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Action_SlaveArm_C_ApplySectionReinforcement, CallFunc_EqualEqual_NameName_ReturnValue_1) == 0x0000ED, "Member 'BP_Action_SlaveArm_C_ApplySectionReinforcement::CallFunc_EqualEqual_NameName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Action_SlaveArm_C_ApplySectionReinforcement, CallFunc_GetSpecialBuffSection_ReturnValue) == 0x0000F0, "Member 'BP_Action_SlaveArm_C_ApplySectionReinforcement::CallFunc_GetSpecialBuffSection_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Action_SlaveArm_C_ApplySectionReinforcement, CallFunc_EqualEqual_NameName_ReturnValue_2) == 0x0000F8, "Member 'BP_Action_SlaveArm_C_ApplySectionReinforcement::CallFunc_EqualEqual_NameName_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Action_SlaveArm_C_ApplySectionReinforcement, CallFunc_EqualEqual_NameName_ReturnValue_3) == 0x0000F9, "Member 'BP_Action_SlaveArm_C_ApplySectionReinforcement::CallFunc_EqualEqual_NameName_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Action_SlaveArm_C_ApplySectionReinforcement, CallFunc_BooleanOR_ReturnValue) == 0x0000FA, "Member 'BP_Action_SlaveArm_C_ApplySectionReinforcement::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function BP_Action_SlaveArm.BP_Action_SlaveArm_C.ClearSectionReinforcement
// 0x0038 (0x0038 - 0x0000)
struct BP_Action_SlaveArm_C_ClearSectionReinforcement final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInst_ReturnValue;                  // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           CallFunc_GetCurrentActiveMontage_ReturnValue;      // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULSpecialBuffSystem*                    CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x002C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Action_SlaveArm_C_ClearSectionReinforcement) == 0x000008, "Wrong alignment on BP_Action_SlaveArm_C_ClearSectionReinforcement");
static_assert(sizeof(BP_Action_SlaveArm_C_ClearSectionReinforcement) == 0x000038, "Wrong size on BP_Action_SlaveArm_C_ClearSectionReinforcement");
static_assert(offsetof(BP_Action_SlaveArm_C_ClearSectionReinforcement, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_Action_SlaveArm_C_ClearSectionReinforcement::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Action_SlaveArm_C_ClearSectionReinforcement, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_Action_SlaveArm_C_ClearSectionReinforcement::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Action_SlaveArm_C_ClearSectionReinforcement, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_Action_SlaveArm_C_ClearSectionReinforcement::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Action_SlaveArm_C_ClearSectionReinforcement, CallFunc_GetAnimInst_ReturnValue) == 0x000010, "Member 'BP_Action_SlaveArm_C_ClearSectionReinforcement::CallFunc_GetAnimInst_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Action_SlaveArm_C_ClearSectionReinforcement, CallFunc_GetCurrentActiveMontage_ReturnValue) == 0x000018, "Member 'BP_Action_SlaveArm_C_ClearSectionReinforcement::CallFunc_GetCurrentActiveMontage_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Action_SlaveArm_C_ClearSectionReinforcement, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000020, "Member 'BP_Action_SlaveArm_C_ClearSectionReinforcement::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Action_SlaveArm_C_ClearSectionReinforcement, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'BP_Action_SlaveArm_C_ClearSectionReinforcement::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Action_SlaveArm_C_ClearSectionReinforcement, CallFunc_Array_Get_Item) == 0x00002C, "Member 'BP_Action_SlaveArm_C_ClearSectionReinforcement::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Action_SlaveArm_C_ClearSectionReinforcement, CallFunc_Less_IntInt_ReturnValue) == 0x000034, "Member 'BP_Action_SlaveArm_C_ClearSectionReinforcement::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_Action_SlaveArm.BP_Action_SlaveArm_C.ApplyAllTimeReinforcement
// 0x00E8 (0x00E8 - 0x0000)
struct BP_Action_SlaveArm_C_ApplyAllTimeReinforcement final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EExecutePin                                   CallFunc_GetActiveSlaveArmItemBP_Branches;         // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ULItem*                                 CallFunc_GetActiveSlaveArmItemBP_ReturnValue;      // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetCodeName_ReturnValue;                  // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ULSlaveArmReinforcementSystem*          CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimInstance*                          CallFunc_GetAnimInst_ReturnValue;                  // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ULSlaveArmTree*>                 CallFunc_GetSlaveArmTreeListBySlaveArmCodeName_ReturnValue; // 0x0040(0x0010)(ReferenceParm)
	class UAnimMontage*                           CallFunc_GetCurrentActiveMontage_ReturnValue;      // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULSlaveArmTree*                         CallFunc_Array_Get_Item;                           // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0065(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_66[0x2];                                       // 0x0066(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetReinforcementCodeName_ReturnValue;     // 0x0068(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULSpecialBuffSystem*                    CallFunc_GetGameInstanceSubsystem_ReturnValue_1;   // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ULSlaveArmReinforcementSystem*          CallFunc_GetGameInstanceSubsystem_ReturnValue_2;   // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FSlaveArmReinforcementInfoPtr>  CallFunc_GetReinforcementInfoList_ReturnValue;     // 0x0088(0x0010)(ReferenceParm)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9C[0x4];                                       // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlaveArmReinforcementInfoPtr          CallFunc_Array_Get_Item_1;                         // 0x00A0(0x0008)(NoDestructor)
	float                                         CallFunc_GetPlayRate_ReturnValue;                  // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetSpecialBuffCodeName_ReturnValue;       // 0x00AC(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetVariableValue_ReturnValue;             // 0x00B8(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetVariableToChange_ReturnValue;          // 0x00C0(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetChangePlayRateSection_ReturnValue;     // 0x00C8(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D1[0x3];                                       // 0x00D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetSpecialBuffSection_ReturnValue;        // 0x00D4(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue_1;        // 0x00DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_DD[0x3];                                       // 0x00DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Action_SlaveArm_C_ApplyAllTimeReinforcement) == 0x000008, "Wrong alignment on BP_Action_SlaveArm_C_ApplyAllTimeReinforcement");
static_assert(sizeof(BP_Action_SlaveArm_C_ApplyAllTimeReinforcement) == 0x0000E8, "Wrong size on BP_Action_SlaveArm_C_ApplyAllTimeReinforcement");
static_assert(offsetof(BP_Action_SlaveArm_C_ApplyAllTimeReinforcement, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_Action_SlaveArm_C_ApplyAllTimeReinforcement::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Action_SlaveArm_C_ApplyAllTimeReinforcement, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_Action_SlaveArm_C_ApplyAllTimeReinforcement::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Action_SlaveArm_C_ApplyAllTimeReinforcement, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_Action_SlaveArm_C_ApplyAllTimeReinforcement::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Action_SlaveArm_C_ApplyAllTimeReinforcement, Temp_int_Array_Index_Variable_1) == 0x00000C, "Member 'BP_Action_SlaveArm_C_ApplyAllTimeReinforcement::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Action_SlaveArm_C_ApplyAllTimeReinforcement, CallFunc_GetActiveSlaveArmItemBP_Branches) == 0x000010, "Member 'BP_Action_SlaveArm_C_ApplyAllTimeReinforcement::CallFunc_GetActiveSlaveArmItemBP_Branches' has a wrong offset!");
static_assert(offsetof(BP_Action_SlaveArm_C_ApplyAllTimeReinforcement, CallFunc_GetActiveSlaveArmItemBP_ReturnValue) == 0x000018, "Member 'BP_Action_SlaveArm_C_ApplyAllTimeReinforcement::CallFunc_GetActiveSlaveArmItemBP_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Action_SlaveArm_C_ApplyAllTimeReinforcement, CallFunc_GetCodeName_ReturnValue) == 0x000020, "Member 'BP_Action_SlaveArm_C_ApplyAllTimeReinforcement::CallFunc_GetCodeName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Action_SlaveArm_C_ApplyAllTimeReinforcement, K2Node_SwitchEnum_CmpSuccess) == 0x000028, "Member 'BP_Action_SlaveArm_C_ApplyAllTimeReinforcement::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_Action_SlaveArm_C_ApplyAllTimeReinforcement, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000030, "Member 'BP_Action_SlaveArm_C_ApplyAllTimeReinforcement::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Action_SlaveArm_C_ApplyAllTimeReinforcement, CallFunc_GetAnimInst_ReturnValue) == 0x000038, "Member 'BP_Action_SlaveArm_C_ApplyAllTimeReinforcement::CallFunc_GetAnimInst_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Action_SlaveArm_C_ApplyAllTimeReinforcement, CallFunc_GetSlaveArmTreeListBySlaveArmCodeName_ReturnValue) == 0x000040, "Member 'BP_Action_SlaveArm_C_ApplyAllTimeReinforcement::CallFunc_GetSlaveArmTreeListBySlaveArmCodeName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Action_SlaveArm_C_ApplyAllTimeReinforcement, CallFunc_GetCurrentActiveMontage_ReturnValue) == 0x000050, "Member 'BP_Action_SlaveArm_C_ApplyAllTimeReinforcement::CallFunc_GetCurrentActiveMontage_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Action_SlaveArm_C_ApplyAllTimeReinforcement, CallFunc_Array_Get_Item) == 0x000058, "Member 'BP_Action_SlaveArm_C_ApplyAllTimeReinforcement::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Action_SlaveArm_C_ApplyAllTimeReinforcement, CallFunc_Array_Length_ReturnValue) == 0x000060, "Member 'BP_Action_SlaveArm_C_ApplyAllTimeReinforcement::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Action_SlaveArm_C_ApplyAllTimeReinforcement, CallFunc_IsValid_ReturnValue) == 0x000064, "Member 'BP_Action_SlaveArm_C_ApplyAllTimeReinforcement::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Action_SlaveArm_C_ApplyAllTimeReinforcement, CallFunc_Less_IntInt_ReturnValue) == 0x000065, "Member 'BP_Action_SlaveArm_C_ApplyAllTimeReinforcement::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Action_SlaveArm_C_ApplyAllTimeReinforcement, CallFunc_GetReinforcementCodeName_ReturnValue) == 0x000068, "Member 'BP_Action_SlaveArm_C_ApplyAllTimeReinforcement::CallFunc_GetReinforcementCodeName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Action_SlaveArm_C_ApplyAllTimeReinforcement, CallFunc_GetGameInstanceSubsystem_ReturnValue_1) == 0x000070, "Member 'BP_Action_SlaveArm_C_ApplyAllTimeReinforcement::CallFunc_GetGameInstanceSubsystem_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Action_SlaveArm_C_ApplyAllTimeReinforcement, Temp_int_Loop_Counter_Variable_1) == 0x000078, "Member 'BP_Action_SlaveArm_C_ApplyAllTimeReinforcement::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Action_SlaveArm_C_ApplyAllTimeReinforcement, CallFunc_GetGameInstanceSubsystem_ReturnValue_2) == 0x000080, "Member 'BP_Action_SlaveArm_C_ApplyAllTimeReinforcement::CallFunc_GetGameInstanceSubsystem_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Action_SlaveArm_C_ApplyAllTimeReinforcement, CallFunc_GetReinforcementInfoList_ReturnValue) == 0x000088, "Member 'BP_Action_SlaveArm_C_ApplyAllTimeReinforcement::CallFunc_GetReinforcementInfoList_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Action_SlaveArm_C_ApplyAllTimeReinforcement, CallFunc_Add_IntInt_ReturnValue_1) == 0x000098, "Member 'BP_Action_SlaveArm_C_ApplyAllTimeReinforcement::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Action_SlaveArm_C_ApplyAllTimeReinforcement, CallFunc_Array_Get_Item_1) == 0x0000A0, "Member 'BP_Action_SlaveArm_C_ApplyAllTimeReinforcement::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_Action_SlaveArm_C_ApplyAllTimeReinforcement, CallFunc_GetPlayRate_ReturnValue) == 0x0000A8, "Member 'BP_Action_SlaveArm_C_ApplyAllTimeReinforcement::CallFunc_GetPlayRate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Action_SlaveArm_C_ApplyAllTimeReinforcement, CallFunc_GetSpecialBuffCodeName_ReturnValue) == 0x0000AC, "Member 'BP_Action_SlaveArm_C_ApplyAllTimeReinforcement::CallFunc_GetSpecialBuffCodeName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Action_SlaveArm_C_ApplyAllTimeReinforcement, CallFunc_Array_Add_ReturnValue) == 0x0000B4, "Member 'BP_Action_SlaveArm_C_ApplyAllTimeReinforcement::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Action_SlaveArm_C_ApplyAllTimeReinforcement, CallFunc_GetVariableValue_ReturnValue) == 0x0000B8, "Member 'BP_Action_SlaveArm_C_ApplyAllTimeReinforcement::CallFunc_GetVariableValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Action_SlaveArm_C_ApplyAllTimeReinforcement, CallFunc_GetVariableToChange_ReturnValue) == 0x0000C0, "Member 'BP_Action_SlaveArm_C_ApplyAllTimeReinforcement::CallFunc_GetVariableToChange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Action_SlaveArm_C_ApplyAllTimeReinforcement, CallFunc_GetChangePlayRateSection_ReturnValue) == 0x0000C8, "Member 'BP_Action_SlaveArm_C_ApplyAllTimeReinforcement::CallFunc_GetChangePlayRateSection_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Action_SlaveArm_C_ApplyAllTimeReinforcement, CallFunc_EqualEqual_NameName_ReturnValue) == 0x0000D0, "Member 'BP_Action_SlaveArm_C_ApplyAllTimeReinforcement::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Action_SlaveArm_C_ApplyAllTimeReinforcement, CallFunc_GetSpecialBuffSection_ReturnValue) == 0x0000D4, "Member 'BP_Action_SlaveArm_C_ApplyAllTimeReinforcement::CallFunc_GetSpecialBuffSection_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Action_SlaveArm_C_ApplyAllTimeReinforcement, CallFunc_EqualEqual_NameName_ReturnValue_1) == 0x0000DC, "Member 'BP_Action_SlaveArm_C_ApplyAllTimeReinforcement::CallFunc_EqualEqual_NameName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Action_SlaveArm_C_ApplyAllTimeReinforcement, CallFunc_Array_Length_ReturnValue_1) == 0x0000E0, "Member 'BP_Action_SlaveArm_C_ApplyAllTimeReinforcement::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Action_SlaveArm_C_ApplyAllTimeReinforcement, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000E4, "Member 'BP_Action_SlaveArm_C_ApplyAllTimeReinforcement::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");

// Function BP_Action_SlaveArm.BP_Action_SlaveArm_C.ClearAllTimeReinforcement
// 0x0038 (0x0038 - 0x0000)
struct BP_Action_SlaveArm_C_ClearAllTimeReinforcement final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x000C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimInstance*                          CallFunc_GetAnimInst_ReturnValue;                  // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           CallFunc_GetCurrentActiveMontage_ReturnValue;      // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULSpecialBuffSystem*                    CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Action_SlaveArm_C_ClearAllTimeReinforcement) == 0x000008, "Wrong alignment on BP_Action_SlaveArm_C_ClearAllTimeReinforcement");
static_assert(sizeof(BP_Action_SlaveArm_C_ClearAllTimeReinforcement) == 0x000038, "Wrong size on BP_Action_SlaveArm_C_ClearAllTimeReinforcement");
static_assert(offsetof(BP_Action_SlaveArm_C_ClearAllTimeReinforcement, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_Action_SlaveArm_C_ClearAllTimeReinforcement::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Action_SlaveArm_C_ClearAllTimeReinforcement, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_Action_SlaveArm_C_ClearAllTimeReinforcement::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Action_SlaveArm_C_ClearAllTimeReinforcement, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_Action_SlaveArm_C_ClearAllTimeReinforcement::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Action_SlaveArm_C_ClearAllTimeReinforcement, CallFunc_Array_Get_Item) == 0x00000C, "Member 'BP_Action_SlaveArm_C_ClearAllTimeReinforcement::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Action_SlaveArm_C_ClearAllTimeReinforcement, CallFunc_Array_Length_ReturnValue) == 0x000014, "Member 'BP_Action_SlaveArm_C_ClearAllTimeReinforcement::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Action_SlaveArm_C_ClearAllTimeReinforcement, CallFunc_GetAnimInst_ReturnValue) == 0x000018, "Member 'BP_Action_SlaveArm_C_ClearAllTimeReinforcement::CallFunc_GetAnimInst_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Action_SlaveArm_C_ClearAllTimeReinforcement, CallFunc_Less_IntInt_ReturnValue) == 0x000020, "Member 'BP_Action_SlaveArm_C_ClearAllTimeReinforcement::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Action_SlaveArm_C_ClearAllTimeReinforcement, CallFunc_GetCurrentActiveMontage_ReturnValue) == 0x000028, "Member 'BP_Action_SlaveArm_C_ClearAllTimeReinforcement::CallFunc_GetCurrentActiveMontage_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Action_SlaveArm_C_ClearAllTimeReinforcement, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000030, "Member 'BP_Action_SlaveArm_C_ClearAllTimeReinforcement::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");

// Function BP_Action_SlaveArm.BP_Action_SlaveArm_C.SetReinforcedVariableValue
// 0x0010 (0x0010 - 0x0000)
struct BP_Action_SlaveArm_C_SetReinforcedVariableValue final
{
public:
	class FName                                   VariableName;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Value;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Action_SlaveArm_C_SetReinforcedVariableValue) == 0x000004, "Wrong alignment on BP_Action_SlaveArm_C_SetReinforcedVariableValue");
static_assert(sizeof(BP_Action_SlaveArm_C_SetReinforcedVariableValue) == 0x000010, "Wrong size on BP_Action_SlaveArm_C_SetReinforcedVariableValue");
static_assert(offsetof(BP_Action_SlaveArm_C_SetReinforcedVariableValue, VariableName) == 0x000000, "Member 'BP_Action_SlaveArm_C_SetReinforcedVariableValue::VariableName' has a wrong offset!");
static_assert(offsetof(BP_Action_SlaveArm_C_SetReinforcedVariableValue, Value) == 0x000008, "Member 'BP_Action_SlaveArm_C_SetReinforcedVariableValue::Value' has a wrong offset!");

}


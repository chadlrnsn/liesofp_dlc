#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UIW_Shop

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UIW_Window_classes.hpp"
#include "SlateCore_structs.hpp"
#include "ProjectPContentInfo_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass UIW_Shop.UIW_Shop_C
// 0x0118 (0x0468 - 0x0350)
class UUIW_Shop_C final : public UUIW_Window_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_UIW_Shop_C;                         // 0x0350(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UUIW_BG_Tab_C*                          BG_Tab;                                            // 0x0358(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUIW_Btn_Key_C*                         Btn_Back;                                          // 0x0360(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUIW_Btn_Key_C*                         Btn_ItemInfo;                                      // 0x0368(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUIW_Btn_Key_C*                         Btn_Scroll;                                        // 0x0370(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUIW_Btn_Key_C*                         Btn_Select;                                        // 0x0378(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUIW_Btn_Key_C*                         Btn_Tab_LeftKey;                                   // 0x0380(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUIW_Btn_Key_C*                         Btn_Tab_RightKey;                                  // 0x0388(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUIW_HasItem_Counter_C*                 HasItem_Counter;                                   // 0x0390(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUIW_ItemInfo_C*                        ItemInfo;                                          // 0x0398(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UScrollBox*                             List_Item_Group;                                   // 0x03A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class ULTileView*                             List_Item_Inven_Buy;                               // 0x03A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUIW_SubTitle_C*                        List_Item_Inven_Buy_SubTitle;                      // 0x03B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class ULTileView*                             List_Item_Locker;                                  // 0x03B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUIW_SubTitle_C*                        List_Item_Locker_SubTitle;                         // 0x03C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class ULListView*                             List_Tab;                                          // 0x03C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class FName                                   ShopCodeName;                                      // 0x03D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULProductBuyShop*                       BuyShop;                                           // 0x03D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULProduct*                              SelectedBuyItem;                                   // 0x03E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULProductSellShop*                      SellShop;                                          // 0x03E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULItem*                                 SelectedSellItem;                                  // 0x03F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ULProduct*>                      BuyItemList;                                       // 0x03F8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class ULItem*>                         SellItemList;                                      // 0x0408(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class ULItem*>                         SellItemListLocker;                                // 0x0418(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	int32                                         SelectedCount;                                     // 0x0428(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MaxCount;                                          // 0x042C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUIW_Popup_C*                           CurrentPopup;                                      // 0x0430(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUIW_Spinner_C*                         CurrentSpinner;                                    // 0x0438(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UListView*                              CurrentResourceList;                               // 0x0440(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PrevScrollBoxOffset;                               // 0x0448(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44C[0x4];                                      // 0x044C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ULTileView*                             SelectedList;                                      // 0x0450(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         PrevListSelectedIndex;                             // 0x0458(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ColumnCount;                                       // 0x045C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           ListPendingTimer;                                  // 0x0460(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_UIW_Shop(int32 EntryPoint);
	void Destruct();
	void BndEvt__UIW_Shop_List_Item_Locker_K2Node_ComponentBoundEvent_4_OnListItemSelectionChangedDynamic__DelegateSignature(class UObject* Item, bool bIsSelected);
	void BndEvt__UIW_Shop_List_Item_Inven_K2Node_ComponentBoundEvent_3_OnListItemSelectionChangedDynamic__DelegateSignature(class UObject* Item, bool bIsSelected);
	void BndEvt__UIW_Shop_Btn_Select_K2Node_ComponentBoundEvent_1_OnActive__DelegateSignature(class UUIW_Btn_Key_C* BtnKey);
	void BndEvt__UIW_Shop_Btn_Back_K2Node_ComponentBoundEvent_0_OnActive__DelegateSignature(class UUIW_Btn_Key_C* BtnKey);
	void Construct();
	void OnReady();
	void MoveLeftTab(class UUIW_Btn_Key_C* BtnKey);
	void MoveRightTab(class UUIW_Btn_Key_C* BtnKey);
	void RefreshTab();
	void ChangeTab(class UObject* Item, bool bIsSelected);
	struct FEventReply FocusManage(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);
	void SetSelectedItem(class UObject* Item, bool bIsSelected);
	void DoubleClickListItem(class UObject* Item);
	void CallbackBuy(class UUIW_Popup_C* Popup, class UUIW_Btn_Key_C* BtnKey);
	void CallbackSell(class UUIW_Popup_C* Popup, class UUIW_Btn_Key_C* BtnKey);
	void OnBuySpinnerUp(class UUIW_Spinner_C* Spinner);
	void OnBuySpinnerDown(class UUIW_Spinner_C* Spinner);
	void OnSellSpinnerUp(class UUIW_Spinner_C* Spinner);
	void OnSellSpinnerDown(class UUIW_Spinner_C* Spinner);
	void CallbackContextMenu(class FName EventName);
	void OnActive();
	void OnSellRepeatDecrease(class UUIW_Btn_Key_C* BtnKey);
	void OnSellRepeatIncrease(class UUIW_Btn_Key_C* BtnKey);
	void OnBuyRepeatDecrease(class UUIW_Btn_Key_C* BtnKey);
	void OnBuyRepeatIncrease(class UUIW_Btn_Key_C* BtnKey);
	void BindRepeatOnPopupBuy(class UUIW_Popup_C* CurrentPopup_0);
	void BindRepeatOnPopupSell(class UUIW_Popup_C* CurrentPopup_0);
	void HideFocusOnScroll(float CurerntOffset);
	void SetSelectedList(class ULTileView* ListView);
	void HideAllList();
	void SetListItem(class UListView* ListView, TArray<class UObject*>& ListData, int32* PrevSelectedIndex);
	void AddListEmptyFill(TArray<class UObject*>& DataArr, int32 ColumnCnt, class UClass* DataClass);
	class UWidget* NavToTop(EUINavigation Navigation_0);
	class UWidget* NavToSmall1(EUINavigation Navigation_0);
	class UWidget* NavToSmall2(EUINavigation Navigation_0);
	class UWidget* NavToBottom(EUINavigation Navigation_0);
	struct FEventReply OnMouseButtonUp(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);
	int32 GetBuyCountWithLimit(class ULProduct* Product, bool* IsOverBuyLimit);
	int32 GetBuyCountTotal(class ULProduct* Product, bool* LackOfStock, bool* BuyLimited);
	void ListPendingCheck();
	void GetBottomList(class UTileView** AsTile_View);
	class UWidget* NavToLRLoop(EUINavigation Navigation_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"UIW_Shop_C">();
	}
	static class UUIW_Shop_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUIW_Shop_C>();
	}
};
static_assert(alignof(UUIW_Shop_C) == 0x000008, "Wrong alignment on UUIW_Shop_C");
static_assert(sizeof(UUIW_Shop_C) == 0x000468, "Wrong size on UUIW_Shop_C");
static_assert(offsetof(UUIW_Shop_C, UberGraphFrame_UIW_Shop_C) == 0x000350, "Member 'UUIW_Shop_C::UberGraphFrame_UIW_Shop_C' has a wrong offset!");
static_assert(offsetof(UUIW_Shop_C, BG_Tab) == 0x000358, "Member 'UUIW_Shop_C::BG_Tab' has a wrong offset!");
static_assert(offsetof(UUIW_Shop_C, Btn_Back) == 0x000360, "Member 'UUIW_Shop_C::Btn_Back' has a wrong offset!");
static_assert(offsetof(UUIW_Shop_C, Btn_ItemInfo) == 0x000368, "Member 'UUIW_Shop_C::Btn_ItemInfo' has a wrong offset!");
static_assert(offsetof(UUIW_Shop_C, Btn_Scroll) == 0x000370, "Member 'UUIW_Shop_C::Btn_Scroll' has a wrong offset!");
static_assert(offsetof(UUIW_Shop_C, Btn_Select) == 0x000378, "Member 'UUIW_Shop_C::Btn_Select' has a wrong offset!");
static_assert(offsetof(UUIW_Shop_C, Btn_Tab_LeftKey) == 0x000380, "Member 'UUIW_Shop_C::Btn_Tab_LeftKey' has a wrong offset!");
static_assert(offsetof(UUIW_Shop_C, Btn_Tab_RightKey) == 0x000388, "Member 'UUIW_Shop_C::Btn_Tab_RightKey' has a wrong offset!");
static_assert(offsetof(UUIW_Shop_C, HasItem_Counter) == 0x000390, "Member 'UUIW_Shop_C::HasItem_Counter' has a wrong offset!");
static_assert(offsetof(UUIW_Shop_C, ItemInfo) == 0x000398, "Member 'UUIW_Shop_C::ItemInfo' has a wrong offset!");
static_assert(offsetof(UUIW_Shop_C, List_Item_Group) == 0x0003A0, "Member 'UUIW_Shop_C::List_Item_Group' has a wrong offset!");
static_assert(offsetof(UUIW_Shop_C, List_Item_Inven_Buy) == 0x0003A8, "Member 'UUIW_Shop_C::List_Item_Inven_Buy' has a wrong offset!");
static_assert(offsetof(UUIW_Shop_C, List_Item_Inven_Buy_SubTitle) == 0x0003B0, "Member 'UUIW_Shop_C::List_Item_Inven_Buy_SubTitle' has a wrong offset!");
static_assert(offsetof(UUIW_Shop_C, List_Item_Locker) == 0x0003B8, "Member 'UUIW_Shop_C::List_Item_Locker' has a wrong offset!");
static_assert(offsetof(UUIW_Shop_C, List_Item_Locker_SubTitle) == 0x0003C0, "Member 'UUIW_Shop_C::List_Item_Locker_SubTitle' has a wrong offset!");
static_assert(offsetof(UUIW_Shop_C, List_Tab) == 0x0003C8, "Member 'UUIW_Shop_C::List_Tab' has a wrong offset!");
static_assert(offsetof(UUIW_Shop_C, ShopCodeName) == 0x0003D0, "Member 'UUIW_Shop_C::ShopCodeName' has a wrong offset!");
static_assert(offsetof(UUIW_Shop_C, BuyShop) == 0x0003D8, "Member 'UUIW_Shop_C::BuyShop' has a wrong offset!");
static_assert(offsetof(UUIW_Shop_C, SelectedBuyItem) == 0x0003E0, "Member 'UUIW_Shop_C::SelectedBuyItem' has a wrong offset!");
static_assert(offsetof(UUIW_Shop_C, SellShop) == 0x0003E8, "Member 'UUIW_Shop_C::SellShop' has a wrong offset!");
static_assert(offsetof(UUIW_Shop_C, SelectedSellItem) == 0x0003F0, "Member 'UUIW_Shop_C::SelectedSellItem' has a wrong offset!");
static_assert(offsetof(UUIW_Shop_C, BuyItemList) == 0x0003F8, "Member 'UUIW_Shop_C::BuyItemList' has a wrong offset!");
static_assert(offsetof(UUIW_Shop_C, SellItemList) == 0x000408, "Member 'UUIW_Shop_C::SellItemList' has a wrong offset!");
static_assert(offsetof(UUIW_Shop_C, SellItemListLocker) == 0x000418, "Member 'UUIW_Shop_C::SellItemListLocker' has a wrong offset!");
static_assert(offsetof(UUIW_Shop_C, SelectedCount) == 0x000428, "Member 'UUIW_Shop_C::SelectedCount' has a wrong offset!");
static_assert(offsetof(UUIW_Shop_C, MaxCount) == 0x00042C, "Member 'UUIW_Shop_C::MaxCount' has a wrong offset!");
static_assert(offsetof(UUIW_Shop_C, CurrentPopup) == 0x000430, "Member 'UUIW_Shop_C::CurrentPopup' has a wrong offset!");
static_assert(offsetof(UUIW_Shop_C, CurrentSpinner) == 0x000438, "Member 'UUIW_Shop_C::CurrentSpinner' has a wrong offset!");
static_assert(offsetof(UUIW_Shop_C, CurrentResourceList) == 0x000440, "Member 'UUIW_Shop_C::CurrentResourceList' has a wrong offset!");
static_assert(offsetof(UUIW_Shop_C, PrevScrollBoxOffset) == 0x000448, "Member 'UUIW_Shop_C::PrevScrollBoxOffset' has a wrong offset!");
static_assert(offsetof(UUIW_Shop_C, SelectedList) == 0x000450, "Member 'UUIW_Shop_C::SelectedList' has a wrong offset!");
static_assert(offsetof(UUIW_Shop_C, PrevListSelectedIndex) == 0x000458, "Member 'UUIW_Shop_C::PrevListSelectedIndex' has a wrong offset!");
static_assert(offsetof(UUIW_Shop_C, ColumnCount) == 0x00045C, "Member 'UUIW_Shop_C::ColumnCount' has a wrong offset!");
static_assert(offsetof(UUIW_Shop_C, ListPendingTimer) == 0x000460, "Member 'UUIW_Shop_C::ListPendingTimer' has a wrong offset!");

}


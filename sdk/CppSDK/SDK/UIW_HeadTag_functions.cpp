#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UIW_HeadTag

#include "Basic.hpp"

#include "UIW_HeadTag_classes.hpp"
#include "UIW_HeadTag_parameters.hpp"


namespace SDK
{

// Function UIW_HeadTag.UIW_HeadTag_C.ExecuteUbergraph_UIW_HeadTag
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUIW_HeadTag_C::ExecuteUbergraph_UIW_HeadTag(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIW_HeadTag_C", "ExecuteUbergraph_UIW_HeadTag");

	Params::UIW_HeadTag_C_ExecuteUbergraph_UIW_HeadTag Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UIW_HeadTag.UIW_HeadTag_C.RefreshHeadTagVisibleTimer
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    InVisible                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UUIW_HeadTag_C::RefreshHeadTagVisibleTimer(bool InVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIW_HeadTag_C", "RefreshHeadTagVisibleTimer");

	Params::UIW_HeadTag_C_RefreshHeadTagVisibleTimer Parms{};

	Parms.InVisible = InVisible;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UIW_HeadTag.UIW_HeadTag_C.OnInitialized
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UUIW_HeadTag_C::OnInitialized()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIW_HeadTag_C", "OnInitialized");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UIW_HeadTag.UIW_HeadTag_C.OnDetachFromActor
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UUIW_HeadTag_C::OnDetachFromActor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIW_HeadTag_C", "OnDetachFromActor");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UIW_HeadTag.UIW_HeadTag_C.OnAttachToActor
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UUIW_HeadTag_C::OnAttachToActor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIW_HeadTag_C", "OnAttachToActor");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UIW_HeadTag.UIW_HeadTag_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UUIW_HeadTag_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIW_HeadTag_C", "PreConstruct");

	Params::UIW_HeadTag_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UIW_HeadTag.UIW_HeadTag_C.Destruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UUIW_HeadTag_C::Destruct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIW_HeadTag_C", "Destruct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UIW_HeadTag.UIW_HeadTag_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UUIW_HeadTag_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIW_HeadTag_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UIW_HeadTag.UIW_HeadTag_C.SetOwnerNpc
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ALNPCCharacter*                   InNpc                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUIW_HeadTag_C::SetOwnerNpc(class ALNPCCharacter* InNpc)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIW_HeadTag_C", "SetOwnerNpc");

	Params::UIW_HeadTag_C_SetOwnerNpc Parms{};

	Parms.InNpc = InNpc;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UIW_HeadTag.UIW_HeadTag_C.CompleteTween
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             CategoryName                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUIW_HeadTag_C::CompleteTween(class FName CategoryName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIW_HeadTag_C", "CompleteTween");

	Params::UIW_HeadTag_C_CompleteTween Parms{};

	Parms.CategoryName = CategoryName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UIW_HeadTag.UIW_HeadTag_C.InitHeadTag
// (Private, BlueprintCallable, BlueprintEvent)

void UUIW_HeadTag_C::InitHeadTag()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIW_HeadTag_C", "InitHeadTag");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UIW_HeadTag.UIW_HeadTag_C.OwnerNpcDelegate
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Add                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UUIW_HeadTag_C::OwnerNpcDelegate(bool Add)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIW_HeadTag_C", "OwnerNpcDelegate");

	Params::UIW_HeadTag_C_OwnerNpcDelegate Parms{};

	Parms.Add = Add;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UIW_HeadTag.UIW_HeadTag_C.StartLockOn
// (Private, BlueprintCallable, BlueprintEvent)

void UUIW_HeadTag_C::StartLockOn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIW_HeadTag_C", "StartLockOn");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UIW_HeadTag.UIW_HeadTag_C.FinishLockOn
// (Private, BlueprintCallable, BlueprintEvent)

void UUIW_HeadTag_C::FinishLockOn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIW_HeadTag_C", "FinishLockOn");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UIW_HeadTag.UIW_HeadTag_C.RefreshHP
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void UUIW_HeadTag_C::RefreshHP()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIW_HeadTag_C", "RefreshHP");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UIW_HeadTag.UIW_HeadTag_C.SetHP
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   HPPrecent                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUIW_HeadTag_C::SetHP(float HPPrecent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIW_HeadTag_C", "SetHP");

	Params::UIW_HeadTag_C_SetHP Parms{};

	Parms.HPPrecent = HPPrecent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UIW_HeadTag.UIW_HeadTag_C.ShowAll
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void UUIW_HeadTag_C::ShowAll()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIW_HeadTag_C", "ShowAll");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UIW_HeadTag.UIW_HeadTag_C.HideAll
// (Private, BlueprintCallable, BlueprintEvent)

void UUIW_HeadTag_C::HideAll()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIW_HeadTag_C", "HideAll");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UIW_HeadTag.UIW_HeadTag_C.ShowDamage
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// ELElementDamageType                     ElementDamageType                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUIW_HeadTag_C::ShowDamage(int32 Value, ELElementDamageType ElementDamageType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIW_HeadTag_C", "ShowDamage");

	Params::UIW_HeadTag_C_ShowDamage Parms{};

	Parms.Value = Value;
	Parms.ElementDamageType = ElementDamageType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UIW_HeadTag.UIW_HeadTag_C.HideDamage
// (Private, BlueprintCallable, BlueprintEvent)

void UUIW_HeadTag_C::HideDamage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIW_HeadTag_C", "HideDamage");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UIW_HeadTag.UIW_HeadTag_C.SetLockOn
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsLockOn_0                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UUIW_HeadTag_C::SetLockOn(bool IsLockOn_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIW_HeadTag_C", "SetLockOn");

	Params::UIW_HeadTag_C_SetLockOn Parms{};

	Parms.IsLockOn_0 = IsLockOn_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UIW_HeadTag.UIW_HeadTag_C.OnParalyzeEnable
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsAbleParalyze                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UUIW_HeadTag_C::OnParalyzeEnable(bool IsAbleParalyze)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIW_HeadTag_C", "OnParalyzeEnable");

	Params::UIW_HeadTag_C_OnParalyzeEnable Parms{};

	Parms.IsAbleParalyze = IsAbleParalyze;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UIW_HeadTag.UIW_HeadTag_C.OnGroggy
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsStarted                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UUIW_HeadTag_C::OnGroggy(bool IsStarted)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIW_HeadTag_C", "OnGroggy");

	Params::UIW_HeadTag_C_OnGroggy Parms{};

	Parms.IsStarted = IsStarted;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UIW_HeadTag.UIW_HeadTag_C.CheckNpcDelegate
// (Private, BlueprintCallable, BlueprintEvent)

void UUIW_HeadTag_C::CheckNpcDelegate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIW_HeadTag_C", "CheckNpcDelegate");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UIW_HeadTag.UIW_HeadTag_C.DisplayInfo
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           InputString                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void UUIW_HeadTag_C::DisplayInfo(const class FString& InputString)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIW_HeadTag_C", "DisplayInfo");

	Params::UIW_HeadTag_C_DisplayInfo Parms{};

	Parms.InputString = std::move(InputString);

	UObject::ProcessEvent(Func, &Parms);
}


// Function UIW_HeadTag.UIW_HeadTag_C.CheckHUD
// (Private, BlueprintCallable, BlueprintEvent)

void UUIW_HeadTag_C::CheckHUD()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIW_HeadTag_C", "CheckHUD");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UIW_HeadTag.UIW_HeadTag_C.OnChangeCombatState
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsInCombatState                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UUIW_HeadTag_C::OnChangeCombatState(bool IsInCombatState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIW_HeadTag_C", "OnChangeCombatState");

	Params::UIW_HeadTag_C_OnChangeCombatState Parms{};

	Parms.IsInCombatState = IsInCombatState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UIW_HeadTag.UIW_HeadTag_C.SetVisible
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bVisible                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UUIW_HeadTag_C::SetVisible(bool bVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIW_HeadTag_C", "SetVisible");

	Params::UIW_HeadTag_C_SetVisible Parms{};

	Parms.bVisible = bVisible;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UIW_HeadTag.UIW_HeadTag_C.On Abnormal State
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             AbnormalName                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int64                                   AbnormalUniqueId                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Visible                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UUIW_HeadTag_C::On_Abnormal_State(class FName AbnormalName, int64 AbnormalUniqueId, bool Visible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIW_HeadTag_C", "On Abnormal State");

	Params::UIW_HeadTag_C_On_Abnormal_State Parms{};

	Parms.AbnormalName = AbnormalName;
	Parms.AbnormalUniqueId = AbnormalUniqueId;
	Parms.Visible = Visible;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UIW_HeadTag.UIW_HeadTag_C.AddAbnormal
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             Name_0                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int64                                   ID                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Visible                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// ELAbnormalAbstateClass                  State                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUIW_HeadTag_C::AddAbnormal(class FName Name_0, int64 ID, bool Visible, ELAbnormalAbstateClass State)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIW_HeadTag_C", "AddAbnormal");

	Params::UIW_HeadTag_C_AddAbnormal Parms{};

	Parms.Name_0 = Name_0;
	Parms.ID = ID;
	Parms.Visible = Visible;
	Parms.State = State;

	UObject::ProcessEvent(Func, &Parms);
}

}


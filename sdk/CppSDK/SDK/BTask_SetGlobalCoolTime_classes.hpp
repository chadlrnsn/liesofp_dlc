#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BTask_SetGlobalCoolTime

#include "Basic.hpp"

#include "ProjectP_classes.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BTask_SetGlobalCoolTime.BTask_SetGlobalCoolTime_C
// 0x0010 (0x00C0 - 0x00B0)
class UBTask_SetGlobalCoolTime_C final : public ULBTask_BlueprintBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x00B0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	float                                         Min;                                               // 0x00B8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Max;                                               // 0x00BC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BTask_SetGlobalCoolTime(int32 EntryPoint);
	void ReceiveExecuteAI(class AAIController* OwnerController, class APawn* ControlledPawn);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BTask_SetGlobalCoolTime_C">();
	}
	static class UBTask_SetGlobalCoolTime_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBTask_SetGlobalCoolTime_C>();
	}
};
static_assert(alignof(UBTask_SetGlobalCoolTime_C) == 0x000008, "Wrong alignment on UBTask_SetGlobalCoolTime_C");
static_assert(sizeof(UBTask_SetGlobalCoolTime_C) == 0x0000C0, "Wrong size on UBTask_SetGlobalCoolTime_C");
static_assert(offsetof(UBTask_SetGlobalCoolTime_C, UberGraphFrame) == 0x0000B0, "Member 'UBTask_SetGlobalCoolTime_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBTask_SetGlobalCoolTime_C, Min) == 0x0000B8, "Member 'UBTask_SetGlobalCoolTime_C::Min' has a wrong offset!");
static_assert(offsetof(UBTask_SetGlobalCoolTime_C, Max) == 0x0000BC, "Member 'UBTask_SetGlobalCoolTime_C::Max' has a wrong offset!");

}


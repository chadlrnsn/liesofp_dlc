#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Action_JumpSkill_Vertical

#include "Basic.hpp"

#include "ProjectP_structs.hpp"
#include "ProjectP_classes.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Action_JumpSkill_Vertical.BP_Action_JumpSkill_Vertical_C
// 0x00A0 (0x0310 - 0x0270)
class UBP_Action_JumpSkill_Vertical_C final : public ULAction_MultiAnim
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0270(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	float                                         Option_MoveMeshStartBlend_Jump_Common;             // 0x0278(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Option_MoveMeshEndBlend_Jump_Common;               // 0x027C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Cached_MoveDistance;                               // 0x0280(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLGameObjectHandle                     Cached_GameHandle_Move;                            // 0x028C(0x0004)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	struct FLGameObjectHandle                     Cached_GameHandle_Rot;                             // 0x0290(0x0004)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	struct FLGameObjectHandle                     Cached_GameHandle_RootMotion;                      // 0x0294(0x0004)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	struct FTimerHandle                           Cached_TimerHandle_OnJumpStart;                    // 0x0298(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           Cached_TimerHandle_MeshMove;                       // 0x02A0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	float                                         Cached_MeshMoveStartTime;                          // 0x02A8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Cached_MeshMove_Move_Offset;                       // 0x02AC(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Cached_MeshMove_Original;                          // 0x02B8(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Cached_Move_Duration;                              // 0x02C4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Cached_AirLoopRotateDuration;                      // 0x02C8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Cached_MeshMove_Activated;                         // 0x02CC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	ELLandPositionSelectType                      Cached_LandPositionSelectType;                     // 0x02CD(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2CE[0x2];                                      // 0x02CE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Cached_LandPositionSelectTypeOffset;               // 0x02D0(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Cached_DestLocation;                               // 0x02DC(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCurveVector*                           Cached_MoveCurve;                                  // 0x02E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Cached_StartLocation;                              // 0x02F0(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Cached_DropVelocity;                               // 0x02FC(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Cached_UseDropVelocity;                            // 0x0308(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_BP_Action_JumpSkill_Vertical(int32 EntryPoint);
	void ReseveMoveMesh(float MoveDelayTime);
	void StopMoveMesh();
	void MoveMesh();
	void RecoverMesh();
	void OnTick(float DeltaTime);
	void OnCurrMontageBlendOutStarted(class UAnimMontage* Montage, bool bInterrupted, int32 MontageInstanceID);
	void CustomEvent();
	void OnCurrMontageEnded(class UAnimMontage* Montage, bool bInterrupted, int32 MontageInstanceID);
	void OnStart();
	void OnNewAnimPlayed();
	void OnStop(class ULActBase* ReasonAction, class FName Reason);
	bool OnLanded(class ACharacter* LandingChar, const struct FHitResult& Hit);
	bool OnMoveBlockedBy(class ACharacter* BlockedChar, const struct FHitResult& Hit);
	int32 OnSelectNextAnim(class UAnimMontage* Montage, bool bInterrupted, int32 CurrentAnimIndex);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Action_JumpSkill_Vertical_C">();
	}
	static class UBP_Action_JumpSkill_Vertical_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_Action_JumpSkill_Vertical_C>();
	}
};
static_assert(alignof(UBP_Action_JumpSkill_Vertical_C) == 0x000008, "Wrong alignment on UBP_Action_JumpSkill_Vertical_C");
static_assert(sizeof(UBP_Action_JumpSkill_Vertical_C) == 0x000310, "Wrong size on UBP_Action_JumpSkill_Vertical_C");
static_assert(offsetof(UBP_Action_JumpSkill_Vertical_C, UberGraphFrame) == 0x000270, "Member 'UBP_Action_JumpSkill_Vertical_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_Action_JumpSkill_Vertical_C, Option_MoveMeshStartBlend_Jump_Common) == 0x000278, "Member 'UBP_Action_JumpSkill_Vertical_C::Option_MoveMeshStartBlend_Jump_Common' has a wrong offset!");
static_assert(offsetof(UBP_Action_JumpSkill_Vertical_C, Option_MoveMeshEndBlend_Jump_Common) == 0x00027C, "Member 'UBP_Action_JumpSkill_Vertical_C::Option_MoveMeshEndBlend_Jump_Common' has a wrong offset!");
static_assert(offsetof(UBP_Action_JumpSkill_Vertical_C, Cached_MoveDistance) == 0x000280, "Member 'UBP_Action_JumpSkill_Vertical_C::Cached_MoveDistance' has a wrong offset!");
static_assert(offsetof(UBP_Action_JumpSkill_Vertical_C, Cached_GameHandle_Move) == 0x00028C, "Member 'UBP_Action_JumpSkill_Vertical_C::Cached_GameHandle_Move' has a wrong offset!");
static_assert(offsetof(UBP_Action_JumpSkill_Vertical_C, Cached_GameHandle_Rot) == 0x000290, "Member 'UBP_Action_JumpSkill_Vertical_C::Cached_GameHandle_Rot' has a wrong offset!");
static_assert(offsetof(UBP_Action_JumpSkill_Vertical_C, Cached_GameHandle_RootMotion) == 0x000294, "Member 'UBP_Action_JumpSkill_Vertical_C::Cached_GameHandle_RootMotion' has a wrong offset!");
static_assert(offsetof(UBP_Action_JumpSkill_Vertical_C, Cached_TimerHandle_OnJumpStart) == 0x000298, "Member 'UBP_Action_JumpSkill_Vertical_C::Cached_TimerHandle_OnJumpStart' has a wrong offset!");
static_assert(offsetof(UBP_Action_JumpSkill_Vertical_C, Cached_TimerHandle_MeshMove) == 0x0002A0, "Member 'UBP_Action_JumpSkill_Vertical_C::Cached_TimerHandle_MeshMove' has a wrong offset!");
static_assert(offsetof(UBP_Action_JumpSkill_Vertical_C, Cached_MeshMoveStartTime) == 0x0002A8, "Member 'UBP_Action_JumpSkill_Vertical_C::Cached_MeshMoveStartTime' has a wrong offset!");
static_assert(offsetof(UBP_Action_JumpSkill_Vertical_C, Cached_MeshMove_Move_Offset) == 0x0002AC, "Member 'UBP_Action_JumpSkill_Vertical_C::Cached_MeshMove_Move_Offset' has a wrong offset!");
static_assert(offsetof(UBP_Action_JumpSkill_Vertical_C, Cached_MeshMove_Original) == 0x0002B8, "Member 'UBP_Action_JumpSkill_Vertical_C::Cached_MeshMove_Original' has a wrong offset!");
static_assert(offsetof(UBP_Action_JumpSkill_Vertical_C, Cached_Move_Duration) == 0x0002C4, "Member 'UBP_Action_JumpSkill_Vertical_C::Cached_Move_Duration' has a wrong offset!");
static_assert(offsetof(UBP_Action_JumpSkill_Vertical_C, Cached_AirLoopRotateDuration) == 0x0002C8, "Member 'UBP_Action_JumpSkill_Vertical_C::Cached_AirLoopRotateDuration' has a wrong offset!");
static_assert(offsetof(UBP_Action_JumpSkill_Vertical_C, Cached_MeshMove_Activated) == 0x0002CC, "Member 'UBP_Action_JumpSkill_Vertical_C::Cached_MeshMove_Activated' has a wrong offset!");
static_assert(offsetof(UBP_Action_JumpSkill_Vertical_C, Cached_LandPositionSelectType) == 0x0002CD, "Member 'UBP_Action_JumpSkill_Vertical_C::Cached_LandPositionSelectType' has a wrong offset!");
static_assert(offsetof(UBP_Action_JumpSkill_Vertical_C, Cached_LandPositionSelectTypeOffset) == 0x0002D0, "Member 'UBP_Action_JumpSkill_Vertical_C::Cached_LandPositionSelectTypeOffset' has a wrong offset!");
static_assert(offsetof(UBP_Action_JumpSkill_Vertical_C, Cached_DestLocation) == 0x0002DC, "Member 'UBP_Action_JumpSkill_Vertical_C::Cached_DestLocation' has a wrong offset!");
static_assert(offsetof(UBP_Action_JumpSkill_Vertical_C, Cached_MoveCurve) == 0x0002E8, "Member 'UBP_Action_JumpSkill_Vertical_C::Cached_MoveCurve' has a wrong offset!");
static_assert(offsetof(UBP_Action_JumpSkill_Vertical_C, Cached_StartLocation) == 0x0002F0, "Member 'UBP_Action_JumpSkill_Vertical_C::Cached_StartLocation' has a wrong offset!");
static_assert(offsetof(UBP_Action_JumpSkill_Vertical_C, Cached_DropVelocity) == 0x0002FC, "Member 'UBP_Action_JumpSkill_Vertical_C::Cached_DropVelocity' has a wrong offset!");
static_assert(offsetof(UBP_Action_JumpSkill_Vertical_C, Cached_UseDropVelocity) == 0x000308, "Member 'UBP_Action_JumpSkill_Vertical_C::Cached_UseDropVelocity' has a wrong offset!");

}


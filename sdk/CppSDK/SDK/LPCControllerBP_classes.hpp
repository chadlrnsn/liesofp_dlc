#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: LPCControllerBP

#include "Basic.hpp"

#include "ProjectP_structs.hpp"
#include "ProjectP_classes.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass LPCControllerBP.LPCControllerBP_C
// 0x0040 (0x0628 - 0x05E8)
class ALPCControllerBP_C final : public ALPCController
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x05E8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FTimerHandle                           OrbTimerHandle;                                    // 0x05F0(0x0008)(Edit, BlueprintVisible, Transient, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           DashTimerHandle;                                   // 0x05F8(0x0008)(Edit, BlueprintVisible, Transient, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	float                                         SprintEndTime;                                     // 0x0600(0x0004)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          GuardCmdRaised;                                    // 0x0604(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          ChargeCmdRaised;                                   // 0x0605(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          StartOrbSkillCharging;                             // 0x0606(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          ReservedChargeCheck;                               // 0x0607(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          ClimbingState;                                     // 0x0608(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          HoldingBtnDown;                                    // 0x0609(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_60A[0x6];                                      // 0x060A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           AssistUseUITimerHandle;                            // 0x0610(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          Cheat_Ready_SpecialLeft;                           // 0x0618(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Cheat_Ready_SpecialRight;                          // 0x0619(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Cheat_Ready_Command;                               // 0x061A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61B[0x1];                                      // 0x061B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Cheat_Ready_Time;                                  // 0x061C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Cached_Ladder_ForwardAxisValue;                    // 0x0620(0x0004)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Cached_Ladder_MoveFast;                            // 0x0624(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_LPCControllerBP(int32 EntryPoint);
	void OnControllerCommand(const class FString& Command, const TArray<class FString>& Args);
	void ReceiveTick(float DeltaSeconds);
	void Cheat_Ready_Clear();
	void ___t___0();
	void DashCancel();
	void InpAxisEvt_Look_Up_K2Node_InputAxisEvent_3(float AxisValue);
	void InpAxisEvt_Turn_K2Node_InputAxisEvent_2(float AxisValue);
	void InpAxisEvt_MoveRight_K2Node_InputAxisEvent_1(float AxisValue);
	void InpAxisEvt_MoveForward_K2Node_InputAxisEvent_0(float AxisValue);
	void InpActEvt_WheelDown_K2Node_InputActionEvent_0(const struct FKey& Key);
	void InpActEvt_ArrowDown_K2Node_InputActionEvent_1(const struct FKey& Key);
	void InpActEvt_WheelUp_K2Node_InputActionEvent_2(const struct FKey& Key);
	void InpActEvt_ArrowUp_K2Node_InputActionEvent_3(const struct FKey& Key);
	void InpActEvt_ButtonDown_K2Node_InputActionEvent_4(const struct FKey& Key);
	void InpActEvt_ButtonDown_K2Node_InputActionEvent_5(const struct FKey& Key);
	void InpActEvt_LeftShoulder_K2Node_InputActionEvent_6(const struct FKey& Key);
	void InpActEvt_DPadDown_K2Node_InputActionEvent_7(const struct FKey& Key);
	void InpActEvt_DPadUp_K2Node_InputActionEvent_8(const struct FKey& Key);
	void InpActEvt_ButtonDown_K2Node_InputActionEvent_9(const struct FKey& Key);
	void InpActEvt_ButtonRight_K2Node_InputActionEvent_10(const struct FKey& Key);
	void InpActEvt_ButtonRight_K2Node_InputActionEvent_11(const struct FKey& Key);
	void InpActEvt_LockOn_K2Node_InputActionEvent_12(const struct FKey& Key);
	void CameraInvertPitch();
	void LadderClimbing(float AxisValue);
	void LadderFastDown(bool ButtonActive);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"LPCControllerBP_C">();
	}
	static class ALPCControllerBP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ALPCControllerBP_C>();
	}
};
static_assert(alignof(ALPCControllerBP_C) == 0x000008, "Wrong alignment on ALPCControllerBP_C");
static_assert(sizeof(ALPCControllerBP_C) == 0x000628, "Wrong size on ALPCControllerBP_C");
static_assert(offsetof(ALPCControllerBP_C, UberGraphFrame) == 0x0005E8, "Member 'ALPCControllerBP_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ALPCControllerBP_C, OrbTimerHandle) == 0x0005F0, "Member 'ALPCControllerBP_C::OrbTimerHandle' has a wrong offset!");
static_assert(offsetof(ALPCControllerBP_C, DashTimerHandle) == 0x0005F8, "Member 'ALPCControllerBP_C::DashTimerHandle' has a wrong offset!");
static_assert(offsetof(ALPCControllerBP_C, SprintEndTime) == 0x000600, "Member 'ALPCControllerBP_C::SprintEndTime' has a wrong offset!");
static_assert(offsetof(ALPCControllerBP_C, GuardCmdRaised) == 0x000604, "Member 'ALPCControllerBP_C::GuardCmdRaised' has a wrong offset!");
static_assert(offsetof(ALPCControllerBP_C, ChargeCmdRaised) == 0x000605, "Member 'ALPCControllerBP_C::ChargeCmdRaised' has a wrong offset!");
static_assert(offsetof(ALPCControllerBP_C, StartOrbSkillCharging) == 0x000606, "Member 'ALPCControllerBP_C::StartOrbSkillCharging' has a wrong offset!");
static_assert(offsetof(ALPCControllerBP_C, ReservedChargeCheck) == 0x000607, "Member 'ALPCControllerBP_C::ReservedChargeCheck' has a wrong offset!");
static_assert(offsetof(ALPCControllerBP_C, ClimbingState) == 0x000608, "Member 'ALPCControllerBP_C::ClimbingState' has a wrong offset!");
static_assert(offsetof(ALPCControllerBP_C, HoldingBtnDown) == 0x000609, "Member 'ALPCControllerBP_C::HoldingBtnDown' has a wrong offset!");
static_assert(offsetof(ALPCControllerBP_C, AssistUseUITimerHandle) == 0x000610, "Member 'ALPCControllerBP_C::AssistUseUITimerHandle' has a wrong offset!");
static_assert(offsetof(ALPCControllerBP_C, Cheat_Ready_SpecialLeft) == 0x000618, "Member 'ALPCControllerBP_C::Cheat_Ready_SpecialLeft' has a wrong offset!");
static_assert(offsetof(ALPCControllerBP_C, Cheat_Ready_SpecialRight) == 0x000619, "Member 'ALPCControllerBP_C::Cheat_Ready_SpecialRight' has a wrong offset!");
static_assert(offsetof(ALPCControllerBP_C, Cheat_Ready_Command) == 0x00061A, "Member 'ALPCControllerBP_C::Cheat_Ready_Command' has a wrong offset!");
static_assert(offsetof(ALPCControllerBP_C, Cheat_Ready_Time) == 0x00061C, "Member 'ALPCControllerBP_C::Cheat_Ready_Time' has a wrong offset!");
static_assert(offsetof(ALPCControllerBP_C, Cached_Ladder_ForwardAxisValue) == 0x000620, "Member 'ALPCControllerBP_C::Cached_Ladder_ForwardAxisValue' has a wrong offset!");
static_assert(offsetof(ALPCControllerBP_C, Cached_Ladder_MoveFast) == 0x000624, "Member 'ALPCControllerBP_C::Cached_Ladder_MoveFast' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: LNPCCharacterBP

#include "Basic.hpp"

#include "ProjectP_structs.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function LNPCCharacterBP.LNPCCharacterBP_C.ExecuteUbergraph_LNPCCharacterBP
// 0x00F0 (0x00F0 - 0x0000)
struct LNPCCharacterBP_C_ExecuteUbergraph_LNPCCharacterBP final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GameObject_RegisterStateManagedComponent_ReturnValue; // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bCombatState;                         // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EEndPlayReason                                K2Node_Event_EndPlayReason;                        // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7[0x1];                                        // 0x0007(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_GetUserWidgetObject_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULHeadTagWidget*                        K2Node_DynamicCast_AsLHead_Tag_Widget;             // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ULObjectPoolSystem*                     CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class ALObjectPoolSystemData*           CallFunc_GetSystemData_ReturnValue;                // 0x0030(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AObjectPoolSystemDataBp_C*              K2Node_DynamicCast_AsObject_Pool_System_Data_Bp;   // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_GetHeadtagWidget_OutHeadtagWidget;        // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUserWidget*                            CallFunc_GetUserWidgetObject_ReturnValue_1;        // 0x0050(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULHeadTagWidget*                        K2Node_DynamicCast_AsLHead_Tag_Widget_1;           // 0x0058(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_62[0x6];                                       // 0x0062(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ULSoundSystem*                          CallFunc_GetGameInstanceSubsystem_ReturnValue_1;   // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULSoundSystem*                          CallFunc_GetGameInstanceSubsystem_ReturnValue_2;   // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetPlayBgm_ReturnValue;                   // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlayingBGM_ReturnValue;                 // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7A[0x2];                                       // 0x007A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetNpcBGM_BGMCodeName;                    // 0x007C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ULObjectPoolSystem*                     CallFunc_GetGameInstanceSubsystem_ReturnValue_3;   // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetNpcBGM_BGMCodeName_1;                  // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class ALObjectPoolSystemData*           CallFunc_GetSystemData_ReturnValue_1;              // 0x0098(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AObjectPoolSystemDataBp_C*              K2Node_DynamicCast_AsObject_Pool_System_Data_Bp_1; // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A9[0x3];                                       // 0x00A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetCodeName_ReturnValue;                  // 0x00AC(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Cut;                            // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B5[0x3];                                       // 0x00B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue;            // 0x00B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x00C4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_PlayState;                      // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E9[0x3];                                       // 0x00E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(LNPCCharacterBP_C_ExecuteUbergraph_LNPCCharacterBP) == 0x000008, "Wrong alignment on LNPCCharacterBP_C_ExecuteUbergraph_LNPCCharacterBP");
static_assert(sizeof(LNPCCharacterBP_C_ExecuteUbergraph_LNPCCharacterBP) == 0x0000F0, "Wrong size on LNPCCharacterBP_C_ExecuteUbergraph_LNPCCharacterBP");
static_assert(offsetof(LNPCCharacterBP_C_ExecuteUbergraph_LNPCCharacterBP, EntryPoint) == 0x000000, "Member 'LNPCCharacterBP_C_ExecuteUbergraph_LNPCCharacterBP::EntryPoint' has a wrong offset!");
static_assert(offsetof(LNPCCharacterBP_C_ExecuteUbergraph_LNPCCharacterBP, CallFunc_GameObject_RegisterStateManagedComponent_ReturnValue) == 0x000004, "Member 'LNPCCharacterBP_C_ExecuteUbergraph_LNPCCharacterBP::CallFunc_GameObject_RegisterStateManagedComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(LNPCCharacterBP_C_ExecuteUbergraph_LNPCCharacterBP, K2Node_Event_bCombatState) == 0x000005, "Member 'LNPCCharacterBP_C_ExecuteUbergraph_LNPCCharacterBP::K2Node_Event_bCombatState' has a wrong offset!");
static_assert(offsetof(LNPCCharacterBP_C_ExecuteUbergraph_LNPCCharacterBP, K2Node_Event_EndPlayReason) == 0x000006, "Member 'LNPCCharacterBP_C_ExecuteUbergraph_LNPCCharacterBP::K2Node_Event_EndPlayReason' has a wrong offset!");
static_assert(offsetof(LNPCCharacterBP_C_ExecuteUbergraph_LNPCCharacterBP, CallFunc_GetUserWidgetObject_ReturnValue) == 0x000008, "Member 'LNPCCharacterBP_C_ExecuteUbergraph_LNPCCharacterBP::CallFunc_GetUserWidgetObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(LNPCCharacterBP_C_ExecuteUbergraph_LNPCCharacterBP, K2Node_DynamicCast_AsLHead_Tag_Widget) == 0x000010, "Member 'LNPCCharacterBP_C_ExecuteUbergraph_LNPCCharacterBP::K2Node_DynamicCast_AsLHead_Tag_Widget' has a wrong offset!");
static_assert(offsetof(LNPCCharacterBP_C_ExecuteUbergraph_LNPCCharacterBP, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'LNPCCharacterBP_C_ExecuteUbergraph_LNPCCharacterBP::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(LNPCCharacterBP_C_ExecuteUbergraph_LNPCCharacterBP, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000020, "Member 'LNPCCharacterBP_C_ExecuteUbergraph_LNPCCharacterBP::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(LNPCCharacterBP_C_ExecuteUbergraph_LNPCCharacterBP, K2Node_Event_DeltaSeconds) == 0x000028, "Member 'LNPCCharacterBP_C_ExecuteUbergraph_LNPCCharacterBP::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(LNPCCharacterBP_C_ExecuteUbergraph_LNPCCharacterBP, CallFunc_GetSystemData_ReturnValue) == 0x000030, "Member 'LNPCCharacterBP_C_ExecuteUbergraph_LNPCCharacterBP::CallFunc_GetSystemData_ReturnValue' has a wrong offset!");
static_assert(offsetof(LNPCCharacterBP_C_ExecuteUbergraph_LNPCCharacterBP, K2Node_DynamicCast_AsObject_Pool_System_Data_Bp) == 0x000038, "Member 'LNPCCharacterBP_C_ExecuteUbergraph_LNPCCharacterBP::K2Node_DynamicCast_AsObject_Pool_System_Data_Bp' has a wrong offset!");
static_assert(offsetof(LNPCCharacterBP_C_ExecuteUbergraph_LNPCCharacterBP, K2Node_DynamicCast_bSuccess_1) == 0x000040, "Member 'LNPCCharacterBP_C_ExecuteUbergraph_LNPCCharacterBP::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(LNPCCharacterBP_C_ExecuteUbergraph_LNPCCharacterBP, CallFunc_GetHeadtagWidget_OutHeadtagWidget) == 0x000048, "Member 'LNPCCharacterBP_C_ExecuteUbergraph_LNPCCharacterBP::CallFunc_GetHeadtagWidget_OutHeadtagWidget' has a wrong offset!");
static_assert(offsetof(LNPCCharacterBP_C_ExecuteUbergraph_LNPCCharacterBP, CallFunc_GetUserWidgetObject_ReturnValue_1) == 0x000050, "Member 'LNPCCharacterBP_C_ExecuteUbergraph_LNPCCharacterBP::CallFunc_GetUserWidgetObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(LNPCCharacterBP_C_ExecuteUbergraph_LNPCCharacterBP, K2Node_DynamicCast_AsLHead_Tag_Widget_1) == 0x000058, "Member 'LNPCCharacterBP_C_ExecuteUbergraph_LNPCCharacterBP::K2Node_DynamicCast_AsLHead_Tag_Widget_1' has a wrong offset!");
static_assert(offsetof(LNPCCharacterBP_C_ExecuteUbergraph_LNPCCharacterBP, K2Node_DynamicCast_bSuccess_2) == 0x000060, "Member 'LNPCCharacterBP_C_ExecuteUbergraph_LNPCCharacterBP::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(LNPCCharacterBP_C_ExecuteUbergraph_LNPCCharacterBP, CallFunc_IsValid_ReturnValue) == 0x000061, "Member 'LNPCCharacterBP_C_ExecuteUbergraph_LNPCCharacterBP::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(LNPCCharacterBP_C_ExecuteUbergraph_LNPCCharacterBP, CallFunc_GetGameInstanceSubsystem_ReturnValue_1) == 0x000068, "Member 'LNPCCharacterBP_C_ExecuteUbergraph_LNPCCharacterBP::CallFunc_GetGameInstanceSubsystem_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(LNPCCharacterBP_C_ExecuteUbergraph_LNPCCharacterBP, CallFunc_GetGameInstanceSubsystem_ReturnValue_2) == 0x000070, "Member 'LNPCCharacterBP_C_ExecuteUbergraph_LNPCCharacterBP::CallFunc_GetGameInstanceSubsystem_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(LNPCCharacterBP_C_ExecuteUbergraph_LNPCCharacterBP, CallFunc_GetPlayBgm_ReturnValue) == 0x000078, "Member 'LNPCCharacterBP_C_ExecuteUbergraph_LNPCCharacterBP::CallFunc_GetPlayBgm_ReturnValue' has a wrong offset!");
static_assert(offsetof(LNPCCharacterBP_C_ExecuteUbergraph_LNPCCharacterBP, CallFunc_IsPlayingBGM_ReturnValue) == 0x000079, "Member 'LNPCCharacterBP_C_ExecuteUbergraph_LNPCCharacterBP::CallFunc_IsPlayingBGM_ReturnValue' has a wrong offset!");
static_assert(offsetof(LNPCCharacterBP_C_ExecuteUbergraph_LNPCCharacterBP, CallFunc_GetNpcBGM_BGMCodeName) == 0x00007C, "Member 'LNPCCharacterBP_C_ExecuteUbergraph_LNPCCharacterBP::CallFunc_GetNpcBGM_BGMCodeName' has a wrong offset!");
static_assert(offsetof(LNPCCharacterBP_C_ExecuteUbergraph_LNPCCharacterBP, CallFunc_GetGameInstanceSubsystem_ReturnValue_3) == 0x000088, "Member 'LNPCCharacterBP_C_ExecuteUbergraph_LNPCCharacterBP::CallFunc_GetGameInstanceSubsystem_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(LNPCCharacterBP_C_ExecuteUbergraph_LNPCCharacterBP, CallFunc_GetNpcBGM_BGMCodeName_1) == 0x000090, "Member 'LNPCCharacterBP_C_ExecuteUbergraph_LNPCCharacterBP::CallFunc_GetNpcBGM_BGMCodeName_1' has a wrong offset!");
static_assert(offsetof(LNPCCharacterBP_C_ExecuteUbergraph_LNPCCharacterBP, CallFunc_GetSystemData_ReturnValue_1) == 0x000098, "Member 'LNPCCharacterBP_C_ExecuteUbergraph_LNPCCharacterBP::CallFunc_GetSystemData_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(LNPCCharacterBP_C_ExecuteUbergraph_LNPCCharacterBP, K2Node_DynamicCast_AsObject_Pool_System_Data_Bp_1) == 0x0000A0, "Member 'LNPCCharacterBP_C_ExecuteUbergraph_LNPCCharacterBP::K2Node_DynamicCast_AsObject_Pool_System_Data_Bp_1' has a wrong offset!");
static_assert(offsetof(LNPCCharacterBP_C_ExecuteUbergraph_LNPCCharacterBP, K2Node_DynamicCast_bSuccess_3) == 0x0000A8, "Member 'LNPCCharacterBP_C_ExecuteUbergraph_LNPCCharacterBP::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(LNPCCharacterBP_C_ExecuteUbergraph_LNPCCharacterBP, CallFunc_GetCodeName_ReturnValue) == 0x0000AC, "Member 'LNPCCharacterBP_C_ExecuteUbergraph_LNPCCharacterBP::CallFunc_GetCodeName_ReturnValue' has a wrong offset!");
static_assert(offsetof(LNPCCharacterBP_C_ExecuteUbergraph_LNPCCharacterBP, K2Node_CustomEvent_Cut) == 0x0000B4, "Member 'LNPCCharacterBP_C_ExecuteUbergraph_LNPCCharacterBP::K2Node_CustomEvent_Cut' has a wrong offset!");
static_assert(offsetof(LNPCCharacterBP_C_ExecuteUbergraph_LNPCCharacterBP, CallFunc_GetSocketLocation_ReturnValue) == 0x0000B8, "Member 'LNPCCharacterBP_C_ExecuteUbergraph_LNPCCharacterBP::CallFunc_GetSocketLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(LNPCCharacterBP_C_ExecuteUbergraph_LNPCCharacterBP, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x0000C4, "Member 'LNPCCharacterBP_C_ExecuteUbergraph_LNPCCharacterBP::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(LNPCCharacterBP_C_ExecuteUbergraph_LNPCCharacterBP, CallFunc_BreakVector_X) == 0x0000D0, "Member 'LNPCCharacterBP_C_ExecuteUbergraph_LNPCCharacterBP::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(LNPCCharacterBP_C_ExecuteUbergraph_LNPCCharacterBP, CallFunc_BreakVector_Y) == 0x0000D4, "Member 'LNPCCharacterBP_C_ExecuteUbergraph_LNPCCharacterBP::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(LNPCCharacterBP_C_ExecuteUbergraph_LNPCCharacterBP, CallFunc_BreakVector_Z) == 0x0000D8, "Member 'LNPCCharacterBP_C_ExecuteUbergraph_LNPCCharacterBP::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(LNPCCharacterBP_C_ExecuteUbergraph_LNPCCharacterBP, CallFunc_BreakVector_X_1) == 0x0000DC, "Member 'LNPCCharacterBP_C_ExecuteUbergraph_LNPCCharacterBP::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(LNPCCharacterBP_C_ExecuteUbergraph_LNPCCharacterBP, CallFunc_BreakVector_Y_1) == 0x0000E0, "Member 'LNPCCharacterBP_C_ExecuteUbergraph_LNPCCharacterBP::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(LNPCCharacterBP_C_ExecuteUbergraph_LNPCCharacterBP, CallFunc_BreakVector_Z_1) == 0x0000E4, "Member 'LNPCCharacterBP_C_ExecuteUbergraph_LNPCCharacterBP::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(LNPCCharacterBP_C_ExecuteUbergraph_LNPCCharacterBP, K2Node_CustomEvent_PlayState) == 0x0000E8, "Member 'LNPCCharacterBP_C_ExecuteUbergraph_LNPCCharacterBP::K2Node_CustomEvent_PlayState' has a wrong offset!");
static_assert(offsetof(LNPCCharacterBP_C_ExecuteUbergraph_LNPCCharacterBP, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x0000EC, "Member 'LNPCCharacterBP_C_ExecuteUbergraph_LNPCCharacterBP::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");

// Function LNPCCharacterBP.LNPCCharacterBP_C.BGM_fromNpc
// 0x0001 (0x0001 - 0x0000)
struct LNPCCharacterBP_C_BGM_fromNpc final
{
public:
	bool                                          PlayState;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(LNPCCharacterBP_C_BGM_fromNpc) == 0x000001, "Wrong alignment on LNPCCharacterBP_C_BGM_fromNpc");
static_assert(sizeof(LNPCCharacterBP_C_BGM_fromNpc) == 0x000001, "Wrong size on LNPCCharacterBP_C_BGM_fromNpc");
static_assert(offsetof(LNPCCharacterBP_C_BGM_fromNpc, PlayState) == 0x000000, "Member 'LNPCCharacterBP_C_BGM_fromNpc::PlayState' has a wrong offset!");

// Function LNPCCharacterBP.LNPCCharacterBP_C.OnExplostionDead
// 0x0001 (0x0001 - 0x0000)
struct LNPCCharacterBP_C_OnExplostionDead final
{
public:
	bool                                          Cut;                                               // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(LNPCCharacterBP_C_OnExplostionDead) == 0x000001, "Wrong alignment on LNPCCharacterBP_C_OnExplostionDead");
static_assert(sizeof(LNPCCharacterBP_C_OnExplostionDead) == 0x000001, "Wrong size on LNPCCharacterBP_C_OnExplostionDead");
static_assert(offsetof(LNPCCharacterBP_C_OnExplostionDead, Cut) == 0x000000, "Member 'LNPCCharacterBP_C_OnExplostionDead::Cut' has a wrong offset!");

// Function LNPCCharacterBP.LNPCCharacterBP_C.ReceiveEndPlay
// 0x0001 (0x0001 - 0x0000)
struct LNPCCharacterBP_C_ReceiveEndPlay final
{
public:
	EEndPlayReason                                EndPlayReason;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(LNPCCharacterBP_C_ReceiveEndPlay) == 0x000001, "Wrong alignment on LNPCCharacterBP_C_ReceiveEndPlay");
static_assert(sizeof(LNPCCharacterBP_C_ReceiveEndPlay) == 0x000001, "Wrong size on LNPCCharacterBP_C_ReceiveEndPlay");
static_assert(offsetof(LNPCCharacterBP_C_ReceiveEndPlay, EndPlayReason) == 0x000000, "Member 'LNPCCharacterBP_C_ReceiveEndPlay::EndPlayReason' has a wrong offset!");

// Function LNPCCharacterBP.LNPCCharacterBP_C.SetCombatStateBP
// 0x0001 (0x0001 - 0x0000)
struct LNPCCharacterBP_C_SetCombatStateBP final
{
public:
	bool                                          bCombatState;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(LNPCCharacterBP_C_SetCombatStateBP) == 0x000001, "Wrong alignment on LNPCCharacterBP_C_SetCombatStateBP");
static_assert(sizeof(LNPCCharacterBP_C_SetCombatStateBP) == 0x000001, "Wrong size on LNPCCharacterBP_C_SetCombatStateBP");
static_assert(offsetof(LNPCCharacterBP_C_SetCombatStateBP, bCombatState) == 0x000000, "Member 'LNPCCharacterBP_C_SetCombatStateBP::bCombatState' has a wrong offset!");

// Function LNPCCharacterBP.LNPCCharacterBP_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct LNPCCharacterBP_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(LNPCCharacterBP_C_ReceiveTick) == 0x000004, "Wrong alignment on LNPCCharacterBP_C_ReceiveTick");
static_assert(sizeof(LNPCCharacterBP_C_ReceiveTick) == 0x000004, "Wrong size on LNPCCharacterBP_C_ReceiveTick");
static_assert(offsetof(LNPCCharacterBP_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'LNPCCharacterBP_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function LNPCCharacterBP.LNPCCharacterBP_C.UserConstructionScript
// 0x0001 (0x0001 - 0x0000)
struct LNPCCharacterBP_C_UserConstructionScript final
{
public:
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue;         // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(LNPCCharacterBP_C_UserConstructionScript) == 0x000001, "Wrong alignment on LNPCCharacterBP_C_UserConstructionScript");
static_assert(sizeof(LNPCCharacterBP_C_UserConstructionScript) == 0x000001, "Wrong size on LNPCCharacterBP_C_UserConstructionScript");
static_assert(offsetof(LNPCCharacterBP_C_UserConstructionScript, CallFunc_K2_AttachToComponent_ReturnValue) == 0x000000, "Member 'LNPCCharacterBP_C_UserConstructionScript::CallFunc_K2_AttachToComponent_ReturnValue' has a wrong offset!");

// Function LNPCCharacterBP.LNPCCharacterBP_C.Dead_Physics
// 0x0018 (0x0018 - 0x0000)
struct LNPCCharacterBP_C_Dead_Physics final
{
public:
	bool                                          PhysicsOn;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         DeltaSec;                                          // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         InterpValue;                                       // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PhysicalValue;                                     // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   BoneName;                                          // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(LNPCCharacterBP_C_Dead_Physics) == 0x000004, "Wrong alignment on LNPCCharacterBP_C_Dead_Physics");
static_assert(sizeof(LNPCCharacterBP_C_Dead_Physics) == 0x000018, "Wrong size on LNPCCharacterBP_C_Dead_Physics");
static_assert(offsetof(LNPCCharacterBP_C_Dead_Physics, PhysicsOn) == 0x000000, "Member 'LNPCCharacterBP_C_Dead_Physics::PhysicsOn' has a wrong offset!");
static_assert(offsetof(LNPCCharacterBP_C_Dead_Physics, DeltaSec) == 0x000004, "Member 'LNPCCharacterBP_C_Dead_Physics::DeltaSec' has a wrong offset!");
static_assert(offsetof(LNPCCharacterBP_C_Dead_Physics, InterpValue) == 0x000008, "Member 'LNPCCharacterBP_C_Dead_Physics::InterpValue' has a wrong offset!");
static_assert(offsetof(LNPCCharacterBP_C_Dead_Physics, PhysicalValue) == 0x00000C, "Member 'LNPCCharacterBP_C_Dead_Physics::PhysicalValue' has a wrong offset!");
static_assert(offsetof(LNPCCharacterBP_C_Dead_Physics, BoneName) == 0x000010, "Member 'LNPCCharacterBP_C_Dead_Physics::BoneName' has a wrong offset!");

// Function LNPCCharacterBP.LNPCCharacterBP_C.LNPC_EyeFlash
// 0x0030 (0x0030 - 0x0000)
struct LNPCCharacterBP_C_LNPC_EyeFlash final
{
public:
	class UMeshComponent*                         MeshComp;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          OFF;                                               // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   ParamName;                                         // 0x000C(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          On_Random;                                         // 0x0014(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ParamValueON_Default;                              // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ParamValueON_RandomMax;                            // 0x001C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ParamValueOFF;                                     // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(LNPCCharacterBP_C_LNPC_EyeFlash) == 0x000008, "Wrong alignment on LNPCCharacterBP_C_LNPC_EyeFlash");
static_assert(sizeof(LNPCCharacterBP_C_LNPC_EyeFlash) == 0x000030, "Wrong size on LNPCCharacterBP_C_LNPC_EyeFlash");
static_assert(offsetof(LNPCCharacterBP_C_LNPC_EyeFlash, MeshComp) == 0x000000, "Member 'LNPCCharacterBP_C_LNPC_EyeFlash::MeshComp' has a wrong offset!");
static_assert(offsetof(LNPCCharacterBP_C_LNPC_EyeFlash, OFF) == 0x000008, "Member 'LNPCCharacterBP_C_LNPC_EyeFlash::OFF' has a wrong offset!");
static_assert(offsetof(LNPCCharacterBP_C_LNPC_EyeFlash, ParamName) == 0x00000C, "Member 'LNPCCharacterBP_C_LNPC_EyeFlash::ParamName' has a wrong offset!");
static_assert(offsetof(LNPCCharacterBP_C_LNPC_EyeFlash, On_Random) == 0x000014, "Member 'LNPCCharacterBP_C_LNPC_EyeFlash::On_Random' has a wrong offset!");
static_assert(offsetof(LNPCCharacterBP_C_LNPC_EyeFlash, ParamValueON_Default) == 0x000018, "Member 'LNPCCharacterBP_C_LNPC_EyeFlash::ParamValueON_Default' has a wrong offset!");
static_assert(offsetof(LNPCCharacterBP_C_LNPC_EyeFlash, ParamValueON_RandomMax) == 0x00001C, "Member 'LNPCCharacterBP_C_LNPC_EyeFlash::ParamValueON_RandomMax' has a wrong offset!");
static_assert(offsetof(LNPCCharacterBP_C_LNPC_EyeFlash, ParamValueOFF) == 0x000020, "Member 'LNPCCharacterBP_C_LNPC_EyeFlash::ParamValueOFF' has a wrong offset!");
static_assert(offsetof(LNPCCharacterBP_C_LNPC_EyeFlash, CallFunc_IsValid_ReturnValue) == 0x000024, "Member 'LNPCCharacterBP_C_LNPC_EyeFlash::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(LNPCCharacterBP_C_LNPC_EyeFlash, CallFunc_RandomFloatInRange_ReturnValue) == 0x000028, "Member 'LNPCCharacterBP_C_LNPC_EyeFlash::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(LNPCCharacterBP_C_LNPC_EyeFlash, CallFunc_SelectFloat_ReturnValue) == 0x00002C, "Member 'LNPCCharacterBP_C_LNPC_EyeFlash::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");

// Function LNPCCharacterBP.LNPCCharacterBP_C.GetNpcBGM
// 0x00F8 (0x00F8 - 0x0000)
struct LNPCCharacterBP_C_GetNpcBGM final
{
public:
	class FName                                   BGMCodeName;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   FindBGM;                                           // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_True_if_break_was_hit_Variable_1;        // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22[0x6];                                       // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames;         // 0x0028(0x0010)(ReferenceParm)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLBGMTableRowType                      CallFunc_GetDataTableRowFromName_OutRow;           // 0x0048(0x0078)()
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C3[0x1];                                       // 0x00C3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C9[0x3];                                       // 0x00C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue;            // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D1[0x3];                                       // 0x00D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Array_Get_Item_1;                         // 0x00D4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetCodeName_ReturnValue;                  // 0x00E0(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x00EA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_EB[0x1];                                       // 0x00EB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetPlayBgm_ReturnValue;                   // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(LNPCCharacterBP_C_GetNpcBGM) == 0x000008, "Wrong alignment on LNPCCharacterBP_C_GetNpcBGM");
static_assert(sizeof(LNPCCharacterBP_C_GetNpcBGM) == 0x0000F8, "Wrong size on LNPCCharacterBP_C_GetNpcBGM");
static_assert(offsetof(LNPCCharacterBP_C_GetNpcBGM, BGMCodeName) == 0x000000, "Member 'LNPCCharacterBP_C_GetNpcBGM::BGMCodeName' has a wrong offset!");
static_assert(offsetof(LNPCCharacterBP_C_GetNpcBGM, FindBGM) == 0x000008, "Member 'LNPCCharacterBP_C_GetNpcBGM::FindBGM' has a wrong offset!");
static_assert(offsetof(LNPCCharacterBP_C_GetNpcBGM, Temp_int_Loop_Counter_Variable) == 0x000010, "Member 'LNPCCharacterBP_C_GetNpcBGM::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(LNPCCharacterBP_C_GetNpcBGM, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'LNPCCharacterBP_C_GetNpcBGM::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(LNPCCharacterBP_C_GetNpcBGM, Temp_bool_True_if_break_was_hit_Variable) == 0x000018, "Member 'LNPCCharacterBP_C_GetNpcBGM::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(LNPCCharacterBP_C_GetNpcBGM, Temp_int_Array_Index_Variable) == 0x00001C, "Member 'LNPCCharacterBP_C_GetNpcBGM::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(LNPCCharacterBP_C_GetNpcBGM, CallFunc_Not_PreBool_ReturnValue) == 0x000020, "Member 'LNPCCharacterBP_C_GetNpcBGM::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(LNPCCharacterBP_C_GetNpcBGM, Temp_bool_True_if_break_was_hit_Variable_1) == 0x000021, "Member 'LNPCCharacterBP_C_GetNpcBGM::Temp_bool_True_if_break_was_hit_Variable_1' has a wrong offset!");
static_assert(offsetof(LNPCCharacterBP_C_GetNpcBGM, CallFunc_GetDataTableRowNames_OutRowNames) == 0x000028, "Member 'LNPCCharacterBP_C_GetNpcBGM::CallFunc_GetDataTableRowNames_OutRowNames' has a wrong offset!");
static_assert(offsetof(LNPCCharacterBP_C_GetNpcBGM, CallFunc_Array_Get_Item) == 0x000038, "Member 'LNPCCharacterBP_C_GetNpcBGM::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(LNPCCharacterBP_C_GetNpcBGM, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'LNPCCharacterBP_C_GetNpcBGM::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(LNPCCharacterBP_C_GetNpcBGM, CallFunc_GetDataTableRowFromName_OutRow) == 0x000048, "Member 'LNPCCharacterBP_C_GetNpcBGM::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(LNPCCharacterBP_C_GetNpcBGM, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x0000C0, "Member 'LNPCCharacterBP_C_GetNpcBGM::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(LNPCCharacterBP_C_GetNpcBGM, CallFunc_Less_IntInt_ReturnValue) == 0x0000C1, "Member 'LNPCCharacterBP_C_GetNpcBGM::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(LNPCCharacterBP_C_GetNpcBGM, CallFunc_BooleanAND_ReturnValue) == 0x0000C2, "Member 'LNPCCharacterBP_C_GetNpcBGM::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(LNPCCharacterBP_C_GetNpcBGM, CallFunc_Array_Length_ReturnValue_1) == 0x0000C4, "Member 'LNPCCharacterBP_C_GetNpcBGM::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(LNPCCharacterBP_C_GetNpcBGM, CallFunc_Not_PreBool_ReturnValue_1) == 0x0000C8, "Member 'LNPCCharacterBP_C_GetNpcBGM::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(LNPCCharacterBP_C_GetNpcBGM, Temp_int_Array_Index_Variable_1) == 0x0000CC, "Member 'LNPCCharacterBP_C_GetNpcBGM::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(LNPCCharacterBP_C_GetNpcBGM, CallFunc_NotEqual_NameName_ReturnValue) == 0x0000D0, "Member 'LNPCCharacterBP_C_GetNpcBGM::CallFunc_NotEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(LNPCCharacterBP_C_GetNpcBGM, CallFunc_Array_Get_Item_1) == 0x0000D4, "Member 'LNPCCharacterBP_C_GetNpcBGM::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(LNPCCharacterBP_C_GetNpcBGM, Temp_int_Loop_Counter_Variable_1) == 0x0000DC, "Member 'LNPCCharacterBP_C_GetNpcBGM::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(LNPCCharacterBP_C_GetNpcBGM, CallFunc_GetCodeName_ReturnValue) == 0x0000E0, "Member 'LNPCCharacterBP_C_GetNpcBGM::CallFunc_GetCodeName_ReturnValue' has a wrong offset!");
static_assert(offsetof(LNPCCharacterBP_C_GetNpcBGM, CallFunc_EqualEqual_NameName_ReturnValue) == 0x0000E8, "Member 'LNPCCharacterBP_C_GetNpcBGM::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(LNPCCharacterBP_C_GetNpcBGM, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000E9, "Member 'LNPCCharacterBP_C_GetNpcBGM::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(LNPCCharacterBP_C_GetNpcBGM, CallFunc_BooleanAND_ReturnValue_1) == 0x0000EA, "Member 'LNPCCharacterBP_C_GetNpcBGM::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(LNPCCharacterBP_C_GetNpcBGM, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000EC, "Member 'LNPCCharacterBP_C_GetNpcBGM::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(LNPCCharacterBP_C_GetNpcBGM, CallFunc_GetPlayBgm_ReturnValue) == 0x0000F0, "Member 'LNPCCharacterBP_C_GetNpcBGM::CallFunc_GetPlayBgm_ReturnValue' has a wrong offset!");

// Function LNPCCharacterBP.LNPCCharacterBP_C.UpdateHeadTagPosition
// 0x0110 (0x0110 - 0x0000)
struct LNPCCharacterBP_C_UpdateHeadTagPosition final
{
public:
	struct FHitResult                             CallFunc_K2_SetWorldLocation_SweepHitResult;       // 0x0000(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0088(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_94[0xC];                                       // 0x0094(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetSocketTransform_ReturnValue;           // 0x00A0(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D1[0x3];                                       // 0x00D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x00D4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x00E0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x00EC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F9[0x3];                                       // 0x00F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00FC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(LNPCCharacterBP_C_UpdateHeadTagPosition) == 0x000010, "Wrong alignment on LNPCCharacterBP_C_UpdateHeadTagPosition");
static_assert(sizeof(LNPCCharacterBP_C_UpdateHeadTagPosition) == 0x000110, "Wrong size on LNPCCharacterBP_C_UpdateHeadTagPosition");
static_assert(offsetof(LNPCCharacterBP_C_UpdateHeadTagPosition, CallFunc_K2_SetWorldLocation_SweepHitResult) == 0x000000, "Member 'LNPCCharacterBP_C_UpdateHeadTagPosition::CallFunc_K2_SetWorldLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(LNPCCharacterBP_C_UpdateHeadTagPosition, CallFunc_MakeVector_ReturnValue) == 0x000088, "Member 'LNPCCharacterBP_C_UpdateHeadTagPosition::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(LNPCCharacterBP_C_UpdateHeadTagPosition, CallFunc_GetSocketTransform_ReturnValue) == 0x0000A0, "Member 'LNPCCharacterBP_C_UpdateHeadTagPosition::CallFunc_GetSocketTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(LNPCCharacterBP_C_UpdateHeadTagPosition, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000D0, "Member 'LNPCCharacterBP_C_UpdateHeadTagPosition::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(LNPCCharacterBP_C_UpdateHeadTagPosition, CallFunc_BreakTransform_Location) == 0x0000D4, "Member 'LNPCCharacterBP_C_UpdateHeadTagPosition::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(LNPCCharacterBP_C_UpdateHeadTagPosition, CallFunc_BreakTransform_Rotation) == 0x0000E0, "Member 'LNPCCharacterBP_C_UpdateHeadTagPosition::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(LNPCCharacterBP_C_UpdateHeadTagPosition, CallFunc_BreakTransform_Scale) == 0x0000EC, "Member 'LNPCCharacterBP_C_UpdateHeadTagPosition::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(LNPCCharacterBP_C_UpdateHeadTagPosition, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x0000F8, "Member 'LNPCCharacterBP_C_UpdateHeadTagPosition::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(LNPCCharacterBP_C_UpdateHeadTagPosition, CallFunc_Add_VectorVector_ReturnValue) == 0x0000FC, "Member 'LNPCCharacterBP_C_UpdateHeadTagPosition::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(LNPCCharacterBP_C_UpdateHeadTagPosition, CallFunc_BooleanOR_ReturnValue) == 0x000108, "Member 'LNPCCharacterBP_C_UpdateHeadTagPosition::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

}


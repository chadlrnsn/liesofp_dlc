#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BTask_MoveToStrafe

#include "Basic.hpp"

#include "ProjectP_structs.hpp"
#include "ProjectP_classes.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BTask_MoveToStrafe.BTask_MoveToStrafe_C
// 0x0048 (0x00F8 - 0x00B0)
class UBTask_MoveToStrafe_C final : public ULBTask_BlueprintBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x00B0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	int32                                         Left_DecisionPercent;                              // 0x00B8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLFloatInterval                        Left_DurationTime;                                 // 0x00BC(0x0008)(Edit, BlueprintVisible, NoDestructor)
	float                                         Left_MoveSpeed;                                    // 0x00C4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Right_DecisionPercent;                             // 0x00C8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLFloatInterval                        Right_DurationTime;                                // 0x00CC(0x0008)(Edit, BlueprintVisible, NoDestructor)
	float                                         Right_MoveSpeed;                                   // 0x00D4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Back_DecisionPercent;                              // 0x00D8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLFloatInterval                        Back_DurationTime;                                 // 0x00DC(0x0008)(Edit, BlueprintVisible, NoDestructor)
	float                                         Back_MoveSpeed;                                    // 0x00E4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SelectDirectionPercent;                            // 0x00E8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ELAIMoveDirection                             Move_Direction;                                    // 0x00EC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_ED[0x3];                                       // 0x00ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLAIMoveBehaviorID                     BehaviorID;                                        // 0x00F0(0x0004)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)

public:
	void ExecuteUbergraph_BTask_MoveToStrafe(int32 EntryPoint);
	void ReceiveExecuteAI(class AAIController* OwnerController, class APawn* ControlledPawn);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BTask_MoveToStrafe_C">();
	}
	static class UBTask_MoveToStrafe_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBTask_MoveToStrafe_C>();
	}
};
static_assert(alignof(UBTask_MoveToStrafe_C) == 0x000008, "Wrong alignment on UBTask_MoveToStrafe_C");
static_assert(sizeof(UBTask_MoveToStrafe_C) == 0x0000F8, "Wrong size on UBTask_MoveToStrafe_C");
static_assert(offsetof(UBTask_MoveToStrafe_C, UberGraphFrame) == 0x0000B0, "Member 'UBTask_MoveToStrafe_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBTask_MoveToStrafe_C, Left_DecisionPercent) == 0x0000B8, "Member 'UBTask_MoveToStrafe_C::Left_DecisionPercent' has a wrong offset!");
static_assert(offsetof(UBTask_MoveToStrafe_C, Left_DurationTime) == 0x0000BC, "Member 'UBTask_MoveToStrafe_C::Left_DurationTime' has a wrong offset!");
static_assert(offsetof(UBTask_MoveToStrafe_C, Left_MoveSpeed) == 0x0000C4, "Member 'UBTask_MoveToStrafe_C::Left_MoveSpeed' has a wrong offset!");
static_assert(offsetof(UBTask_MoveToStrafe_C, Right_DecisionPercent) == 0x0000C8, "Member 'UBTask_MoveToStrafe_C::Right_DecisionPercent' has a wrong offset!");
static_assert(offsetof(UBTask_MoveToStrafe_C, Right_DurationTime) == 0x0000CC, "Member 'UBTask_MoveToStrafe_C::Right_DurationTime' has a wrong offset!");
static_assert(offsetof(UBTask_MoveToStrafe_C, Right_MoveSpeed) == 0x0000D4, "Member 'UBTask_MoveToStrafe_C::Right_MoveSpeed' has a wrong offset!");
static_assert(offsetof(UBTask_MoveToStrafe_C, Back_DecisionPercent) == 0x0000D8, "Member 'UBTask_MoveToStrafe_C::Back_DecisionPercent' has a wrong offset!");
static_assert(offsetof(UBTask_MoveToStrafe_C, Back_DurationTime) == 0x0000DC, "Member 'UBTask_MoveToStrafe_C::Back_DurationTime' has a wrong offset!");
static_assert(offsetof(UBTask_MoveToStrafe_C, Back_MoveSpeed) == 0x0000E4, "Member 'UBTask_MoveToStrafe_C::Back_MoveSpeed' has a wrong offset!");
static_assert(offsetof(UBTask_MoveToStrafe_C, SelectDirectionPercent) == 0x0000E8, "Member 'UBTask_MoveToStrafe_C::SelectDirectionPercent' has a wrong offset!");
static_assert(offsetof(UBTask_MoveToStrafe_C, Move_Direction) == 0x0000EC, "Member 'UBTask_MoveToStrafe_C::Move_Direction' has a wrong offset!");
static_assert(offsetof(UBTask_MoveToStrafe_C, BehaviorID) == 0x0000F0, "Member 'UBTask_MoveToStrafe_C::BehaviorID' has a wrong offset!");

}


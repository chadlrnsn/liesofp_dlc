#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UIW_HUD_PileBunker

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass UIW_HUD_PileBunker.UIW_HUD_PileBunker_C
// 0x0060 (0x02C8 - 0x0268)
class UUIW_HUD_PileBunker_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0268(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UUIW_HUD_Gauge_PileBunker_C*            Gauge_Shot_1;                                      // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUIW_HUD_Gauge_PileBunker_C*            Gauge_Shot_2;                                      // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUIW_HUD_Gauge_PileBunker_C*            Gauge_Shot_3;                                      // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUIW_HUD_Gauge_PileBunker_C*            Gauge_Shot_4;                                      // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUIW_HUD_Gauge_PileBunker_C*            Gauge_Shot_5;                                      // 0x0290(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         Group_RegionShot;                                  // 0x0298(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	TArray<class UUIW_HUD_Gauge_PileBunker_C*>    GaugeArr;                                          // 0x02A0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	class UUIW_HUD_Gauge_PileBunker_C*            CurrentChargingGauge;                              // 0x02B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULSlaveArmItem*                         SlaveArm;                                          // 0x02B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CurrReloadTime;                                    // 0x02C0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MaxReloadTime;                                     // 0x02C4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_UIW_HUD_PileBunker(int32 EntryPoint);
	void Destruct();
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void Construct();
	void OnSlaveArmAmmoChange(int32 Current, int32 Max, float RemainReloadTime, float ReloadTime);
	void OnChooseSlaveArm(const struct FLEquipItemSlot& SlaveArmSlot);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"UIW_HUD_PileBunker_C">();
	}
	static class UUIW_HUD_PileBunker_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUIW_HUD_PileBunker_C>();
	}
};
static_assert(alignof(UUIW_HUD_PileBunker_C) == 0x000008, "Wrong alignment on UUIW_HUD_PileBunker_C");
static_assert(sizeof(UUIW_HUD_PileBunker_C) == 0x0002C8, "Wrong size on UUIW_HUD_PileBunker_C");
static_assert(offsetof(UUIW_HUD_PileBunker_C, UberGraphFrame) == 0x000268, "Member 'UUIW_HUD_PileBunker_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UUIW_HUD_PileBunker_C, Gauge_Shot_1) == 0x000270, "Member 'UUIW_HUD_PileBunker_C::Gauge_Shot_1' has a wrong offset!");
static_assert(offsetof(UUIW_HUD_PileBunker_C, Gauge_Shot_2) == 0x000278, "Member 'UUIW_HUD_PileBunker_C::Gauge_Shot_2' has a wrong offset!");
static_assert(offsetof(UUIW_HUD_PileBunker_C, Gauge_Shot_3) == 0x000280, "Member 'UUIW_HUD_PileBunker_C::Gauge_Shot_3' has a wrong offset!");
static_assert(offsetof(UUIW_HUD_PileBunker_C, Gauge_Shot_4) == 0x000288, "Member 'UUIW_HUD_PileBunker_C::Gauge_Shot_4' has a wrong offset!");
static_assert(offsetof(UUIW_HUD_PileBunker_C, Gauge_Shot_5) == 0x000290, "Member 'UUIW_HUD_PileBunker_C::Gauge_Shot_5' has a wrong offset!");
static_assert(offsetof(UUIW_HUD_PileBunker_C, Group_RegionShot) == 0x000298, "Member 'UUIW_HUD_PileBunker_C::Group_RegionShot' has a wrong offset!");
static_assert(offsetof(UUIW_HUD_PileBunker_C, GaugeArr) == 0x0002A0, "Member 'UUIW_HUD_PileBunker_C::GaugeArr' has a wrong offset!");
static_assert(offsetof(UUIW_HUD_PileBunker_C, CurrentChargingGauge) == 0x0002B0, "Member 'UUIW_HUD_PileBunker_C::CurrentChargingGauge' has a wrong offset!");
static_assert(offsetof(UUIW_HUD_PileBunker_C, SlaveArm) == 0x0002B8, "Member 'UUIW_HUD_PileBunker_C::SlaveArm' has a wrong offset!");
static_assert(offsetof(UUIW_HUD_PileBunker_C, CurrReloadTime) == 0x0002C0, "Member 'UUIW_HUD_PileBunker_C::CurrReloadTime' has a wrong offset!");
static_assert(offsetof(UUIW_HUD_PileBunker_C, MaxReloadTime) == 0x0002C4, "Member 'UUIW_HUD_PileBunker_C::MaxReloadTime' has a wrong offset!");

}


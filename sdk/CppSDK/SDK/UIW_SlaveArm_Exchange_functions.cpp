#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UIW_SlaveArm_Exchange

#include "Basic.hpp"

#include "UIW_SlaveArm_Exchange_classes.hpp"
#include "UIW_SlaveArm_Exchange_parameters.hpp"


namespace SDK
{

// Function UIW_SlaveArm_Exchange.UIW_SlaveArm_Exchange_C.ExecuteUbergraph_UIW_SlaveArm_Exchange
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUIW_SlaveArm_Exchange_C::ExecuteUbergraph_UIW_SlaveArm_Exchange(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIW_SlaveArm_Exchange_C", "ExecuteUbergraph_UIW_SlaveArm_Exchange");

	Params::UIW_SlaveArm_Exchange_C_ExecuteUbergraph_UIW_SlaveArm_Exchange Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UIW_SlaveArm_Exchange.UIW_SlaveArm_Exchange_C.Destruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UUIW_SlaveArm_Exchange_C::Destruct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIW_SlaveArm_Exchange_C", "Destruct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UIW_SlaveArm_Exchange.UIW_SlaveArm_Exchange_C.BndEvt__UIW_SlaveArm_Exchange_List_Tab_K2Node_ComponentBoundEvent_2_OnListItemSelectionChangedDynamic__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class UObject*                          Item                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bIsSelected                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UUIW_SlaveArm_Exchange_C::BndEvt__UIW_SlaveArm_Exchange_List_Tab_K2Node_ComponentBoundEvent_2_OnListItemSelectionChangedDynamic__DelegateSignature(class UObject* Item, bool bIsSelected)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIW_SlaveArm_Exchange_C", "BndEvt__UIW_SlaveArm_Exchange_List_Tab_K2Node_ComponentBoundEvent_2_OnListItemSelectionChangedDynamic__DelegateSignature");

	Params::UIW_SlaveArm_Exchange_C_BndEvt__UIW_SlaveArm_Exchange_List_Tab_K2Node_ComponentBoundEvent_2_OnListItemSelectionChangedDynamic__DelegateSignature Parms{};

	Parms.Item = Item;
	Parms.bIsSelected = bIsSelected;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UIW_SlaveArm_Exchange.UIW_SlaveArm_Exchange_C.BndEvt__UIW_SlaveArm_Exchange_Btn_Exchange_K2Node_ComponentBoundEvent_1_OnActive__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class UUIW_Btn_Key_C*                   BtnKey                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUIW_SlaveArm_Exchange_C::BndEvt__UIW_SlaveArm_Exchange_Btn_Exchange_K2Node_ComponentBoundEvent_1_OnActive__DelegateSignature(class UUIW_Btn_Key_C* BtnKey)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIW_SlaveArm_Exchange_C", "BndEvt__UIW_SlaveArm_Exchange_Btn_Exchange_K2Node_ComponentBoundEvent_1_OnActive__DelegateSignature");

	Params::UIW_SlaveArm_Exchange_C_BndEvt__UIW_SlaveArm_Exchange_Btn_Exchange_K2Node_ComponentBoundEvent_1_OnActive__DelegateSignature Parms{};

	Parms.BtnKey = BtnKey;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UIW_SlaveArm_Exchange.UIW_SlaveArm_Exchange_C.BndEvt__UIW_SlaveArm_Exchange_Btn_Back_K2Node_ComponentBoundEvent_0_OnActive__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class UUIW_Btn_Key_C*                   BtnKey                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUIW_SlaveArm_Exchange_C::BndEvt__UIW_SlaveArm_Exchange_Btn_Back_K2Node_ComponentBoundEvent_0_OnActive__DelegateSignature(class UUIW_Btn_Key_C* BtnKey)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIW_SlaveArm_Exchange_C", "BndEvt__UIW_SlaveArm_Exchange_Btn_Back_K2Node_ComponentBoundEvent_0_OnActive__DelegateSignature");

	Params::UIW_SlaveArm_Exchange_C_BndEvt__UIW_SlaveArm_Exchange_Btn_Back_K2Node_ComponentBoundEvent_0_OnActive__DelegateSignature Parms{};

	Parms.BtnKey = BtnKey;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UIW_SlaveArm_Exchange.UIW_SlaveArm_Exchange_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UUIW_SlaveArm_Exchange_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIW_SlaveArm_Exchange_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UIW_SlaveArm_Exchange.UIW_SlaveArm_Exchange_C.OnReady
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UUIW_SlaveArm_Exchange_C::OnReady()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIW_SlaveArm_Exchange_C", "OnReady");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UIW_SlaveArm_Exchange.UIW_SlaveArm_Exchange_C.AddEventBinding
// (Protected, BlueprintCallable, BlueprintEvent)

void UUIW_SlaveArm_Exchange_C::AddEventBinding()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIW_SlaveArm_Exchange_C", "AddEventBinding");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UIW_SlaveArm_Exchange.UIW_SlaveArm_Exchange_C.ClearEventBinding
// (Protected, BlueprintCallable, BlueprintEvent)

void UUIW_SlaveArm_Exchange_C::ClearEventBinding()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIW_SlaveArm_Exchange_C", "ClearEventBinding");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UIW_SlaveArm_Exchange.UIW_SlaveArm_Exchange_C.MoveLeftTab
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UUIW_Btn_Key_C*                   BtnKey                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUIW_SlaveArm_Exchange_C::MoveLeftTab(class UUIW_Btn_Key_C* BtnKey)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIW_SlaveArm_Exchange_C", "MoveLeftTab");

	Params::UIW_SlaveArm_Exchange_C_MoveLeftTab Parms{};

	Parms.BtnKey = BtnKey;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UIW_SlaveArm_Exchange.UIW_SlaveArm_Exchange_C.MoveRightTab
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UUIW_Btn_Key_C*                   BtnKey                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUIW_SlaveArm_Exchange_C::MoveRightTab(class UUIW_Btn_Key_C* BtnKey)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIW_SlaveArm_Exchange_C", "MoveRightTab");

	Params::UIW_SlaveArm_Exchange_C_MoveRightTab Parms{};

	Parms.BtnKey = BtnKey;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UIW_SlaveArm_Exchange.UIW_SlaveArm_Exchange_C.Refresh Tab
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void UUIW_SlaveArm_Exchange_C::Refresh_Tab()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIW_SlaveArm_Exchange_C", "Refresh Tab");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UIW_SlaveArm_Exchange.UIW_SlaveArm_Exchange_C.RefreshTree
// (Public, BlueprintCallable, BlueprintEvent)

void UUIW_SlaveArm_Exchange_C::RefreshTree()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIW_SlaveArm_Exchange_C", "RefreshTree");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UIW_SlaveArm_Exchange.UIW_SlaveArm_Exchange_C.ChangeTab
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Item                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bIsSelected                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UUIW_SlaveArm_Exchange_C::ChangeTab(class UObject* Item, bool bIsSelected)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIW_SlaveArm_Exchange_C", "ChangeTab");

	Params::UIW_SlaveArm_Exchange_C_ChangeTab Parms{};

	Parms.Item = Item;
	Parms.bIsSelected = bIsSelected;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UIW_SlaveArm_Exchange.UIW_SlaveArm_Exchange_C.OnFocusedSlot
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UUIW_ListItem_SlaveArm_ReinforceInfo_C*Slot_0                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUIW_SlaveArm_Exchange_C::OnFocusedSlot(class UUIW_ListItem_SlaveArm_ReinforceInfo_C* Slot_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIW_SlaveArm_Exchange_C", "OnFocusedSlot");

	Params::UIW_SlaveArm_Exchange_C_OnFocusedSlot Parms{};

	Parms.Slot_0 = Slot_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UIW_SlaveArm_Exchange.UIW_SlaveArm_Exchange_C.MakeResourceList
// (Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UObject*                          Outer_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    NeedCalcCount                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// TArray<class UUIBP_ListData_Resource_C*>ResourceList                                           (Parm, OutParm)

void UUIW_SlaveArm_Exchange_C::MakeResourceList(class UObject* Outer_0, bool NeedCalcCount, TArray<class UUIBP_ListData_Resource_C*>* ResourceList)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIW_SlaveArm_Exchange_C", "MakeResourceList");

	Params::UIW_SlaveArm_Exchange_C_MakeResourceList Parms{};

	Parms.Outer_0 = Outer_0;
	Parms.NeedCalcCount = NeedCalcCount;

	UObject::ProcessEvent(Func, &Parms);

	if (ResourceList != nullptr)
		*ResourceList = std::move(Parms.ResourceList);
}


// Function UIW_SlaveArm_Exchange.UIW_SlaveArm_Exchange_C.FocusManage
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// struct FPointerEvent                    MouseEvent                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FEventReply                      ReturnValue                                            (Parm, OutParm, ReturnParm)

struct FEventReply UUIW_SlaveArm_Exchange_C::FocusManage(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIW_SlaveArm_Exchange_C", "FocusManage");

	Params::UIW_SlaveArm_Exchange_C_FocusManage Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.MouseEvent = std::move(MouseEvent);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function UIW_SlaveArm_Exchange.UIW_SlaveArm_Exchange_C.OnActive
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void UUIW_SlaveArm_Exchange_C::OnActive()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIW_SlaveArm_Exchange_C", "OnActive");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UIW_SlaveArm_Exchange.UIW_SlaveArm_Exchange_C.OnSpinnerUp
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UUIW_Spinner_C*                   Spinner                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUIW_SlaveArm_Exchange_C::OnSpinnerUp(class UUIW_Spinner_C* Spinner)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIW_SlaveArm_Exchange_C", "OnSpinnerUp");

	Params::UIW_SlaveArm_Exchange_C_OnSpinnerUp Parms{};

	Parms.Spinner = Spinner;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UIW_SlaveArm_Exchange.UIW_SlaveArm_Exchange_C.OnSpinnerDown
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UUIW_Spinner_C*                   Spinner                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUIW_SlaveArm_Exchange_C::OnSpinnerDown(class UUIW_Spinner_C* Spinner)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIW_SlaveArm_Exchange_C", "OnSpinnerDown");

	Params::UIW_SlaveArm_Exchange_C_OnSpinnerDown Parms{};

	Parms.Spinner = Spinner;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UIW_SlaveArm_Exchange.UIW_SlaveArm_Exchange_C.CallbackExchange
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UUIW_Popup_C*                     Popup                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UUIW_Btn_Key_C*                   BtnKey                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUIW_SlaveArm_Exchange_C::CallbackExchange(class UUIW_Popup_C* Popup, class UUIW_Btn_Key_C* BtnKey)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIW_SlaveArm_Exchange_C", "CallbackExchange");

	Params::UIW_SlaveArm_Exchange_C_CallbackExchange Parms{};

	Parms.Popup = Popup;
	Parms.BtnKey = BtnKey;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UIW_SlaveArm_Exchange.UIW_SlaveArm_Exchange_C.CheckCanBuy
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ULProduct*                        Product                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CanBuy                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class FText                             ErrMsg                                                 (Parm, OutParm)

void UUIW_SlaveArm_Exchange_C::CheckCanBuy(class ULProduct* Product, bool* CanBuy, class FText* ErrMsg)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIW_SlaveArm_Exchange_C", "CheckCanBuy");

	Params::UIW_SlaveArm_Exchange_C_CheckCanBuy Parms{};

	Parms.Product = Product;

	UObject::ProcessEvent(Func, &Parms);

	if (CanBuy != nullptr)
		*CanBuy = Parms.CanBuy;

	if (ErrMsg != nullptr)
		*ErrMsg = std::move(Parms.ErrMsg);
}

}


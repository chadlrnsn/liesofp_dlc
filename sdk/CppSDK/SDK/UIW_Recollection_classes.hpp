#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UIW_Recollection

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "UIW_Window_classes.hpp"
#include "SlateCore_structs.hpp"
#include "ProjectPContentInfo_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass UIW_Recollection.UIW_Recollection_C
// 0x01D8 (0x0528 - 0x0350)
class UUIW_Recollection_C final : public UUIW_Window_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_UIW_Recollection_C;                 // 0x0350(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UImage*                                 Black;                                             // 0x0358(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUIW_Btn_Key_C*                         Btn_Back;                                          // 0x0360(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUIW_Btn_Key_C*                         Btn_Move;                                          // 0x0368(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUIW_Btn_Key_C*                         Btn_NextModel;                                     // 0x0370(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUIW_Btn_Key_C*                         Btn_PrevModel;                                     // 0x0378(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUIW_Btn_Key_C*                         Btn_Rotate_L;                                      // 0x0380(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUIW_Btn_Key_C*                         Btn_Rotate_R;                                      // 0x0388(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                Btn_RotateMouse;                                   // 0x0390(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUIW_Btn_Key_C*                         Btn_Select;                                        // 0x0398(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUIW_Btn_Key_C*                         Btn_Tab_LeftKey;                                   // 0x03A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUIW_Btn_Key_C*                         Btn_Tab_RightKey;                                  // 0x03A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUIW_Btn_Key_C*                         Btn_Zoom;                                          // 0x03B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         BtnGroup;                                          // 0x03B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           Group_Depth_1;                                     // 0x03C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UScrollBox*                             Group_Depth_1_Tab_3D;                              // 0x03C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class ULTileView*                             List_Character;                                    // 0x03D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class ULTileView*                             List_Creature;                                     // 0x03D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class ULTileView*                             List_SlaveArm;                                     // 0x03E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class ULListView*                             List_Tab;                                          // 0x03E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class ULTileView*                             List_Weapon;                                       // 0x03F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUIW_SubTitle_C*                        SubTitle_Character;                                // 0x03F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUIW_SubTitle_C*                        SubTitle_Creature;                                 // 0x0400(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUIW_SubTitle_C*                        SubTitle_SlaveArm;                                 // 0x0408(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUIW_SubTitle_C*                        SubTitle_Weapon;                                   // 0x0410(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Text_Name;                                         // 0x0418(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUIW_BG_Tab_C*                          UIW_BG_Tab;                                        // 0x0420(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class ACineCameraActor*                       CamDepth3;                                         // 0x0428(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AStaticMeshActor*                       ActorModel;                                        // 0x0430(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UUIBP_ListData_Recollection_C*>  DataArrCharacter;                                  // 0x0438(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UUIBP_ListData_Recollection_C*>  DataArrCreature;                                   // 0x0448(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UUIBP_ListData_Recollection_C*>  DataArrWeapon;                                     // 0x0458(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UUIBP_ListData_Recollection_C*>  DataArrSlaveArm;                                   // 0x0468(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UTileView*                              SelectedList;                                      // 0x0478(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ColumnCount;                                       // 0x0480(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         PrevListSelectedIndex;                             // 0x0484(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Depth;                                             // 0x0488(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ModelInfoDetailPageIndex;                          // 0x048C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUIBP_ActorController_C*                ActorController;                                   // 0x0490(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsGamePad;                                         // 0x0498(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_499[0x7];                                      // 0x0499(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CameraTimer;                                       // 0x04A0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               StartCharacterRotation;                            // 0x04A8(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	int32                                         CameraHorizontalValue;                             // 0x04B4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              StartMousePosition;                                // 0x04B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsCloseTweening;                                   // 0x04C0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4C1[0x3];                                      // 0x04C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CamDepth2_DefaultZ;                                // 0x04C4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CamDepth3_DefaultZ;                                // 0x04C8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4CC[0x4];                                      // 0x04CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           ListPendingTimer;                                  // 0x04D0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TArray<class ULightComponentBase*>            WorldLightList;                                    // 0x04D8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	bool                                          IsOpenTweenComplete;                               // 0x04E8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4E9[0x3];                                      // 0x04E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CurrentWidth;                                      // 0x04EC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CurrentHeight;                                     // 0x04F0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CameraDepth3DefaultLocation;                       // 0x04F4(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUIBP_ActorController_C*                Actor_Controller;                                  // 0x0500(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsSpawnModel;                                      // 0x0508(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsUpdateZoomIn;                                    // 0x0509(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsUpdateZoomOut;                                   // 0x050A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsRotateLPressed;                                  // 0x050B(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsRotateRPressed;                                  // 0x050C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsKeyboardPress_Left;                              // 0x050D(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsKeyboardPress_Right;                             // 0x050E(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsKeyboardPress_Up;                                // 0x050F(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsKeyboardPress_Down;                              // 0x0510(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_511[0x7];                                      // 0x0511(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           TimerWheelStop;                                    // 0x0518(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	float                                         Velocity;                                          // 0x0520(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_UIW_Recollection(int32 EntryPoint);
	void BndEvt__UIW_Recollection_Btn_Zoom_K2Node_ComponentBoundEvent_27_OnAxis__DelegateSignature(class UUIW_Btn_Key_C* BtnKey, float AxisX, float AxisY, float AxisXY, float Angle);
	void BndEvt__UIW_Recollection_Btn_Move_K2Node_ComponentBoundEvent_22_OnAxis__DelegateSignature(class UUIW_Btn_Key_C* BtnKey, float AxisX, float AxisY, float AxisXY, float Angle);
	void BndEvt__UIW_Recollection_List_SlaveArm_K2Node_ComponentBoundEvent_20_SimpleListItemEventDynamic__DelegateSignature(class UObject* Item);
	void BndEvt__UIW_Recollection_List_Weapon_K2Node_ComponentBoundEvent_9_SimpleListItemEventDynamic__DelegateSignature(class UObject* Item);
	void BndEvt__UIW_Recollection_List_Creature_K2Node_ComponentBoundEvent_7_SimpleListItemEventDynamic__DelegateSignature(class UObject* Item);
	void BndEvt__UIW_Recollection_List_Character_K2Node_ComponentBoundEvent_6_SimpleListItemEventDynamic__DelegateSignature(class UObject* Item);
	void BndEvt__UIW_Recollection_List_SlaveArm_K2Node_ComponentBoundEvent_5_OnListItemSelectionChangedDynamic__DelegateSignature(class UObject* Item, bool bIsSelected);
	void BndEvt__UIW_Recollection_List_Weapon_K2Node_ComponentBoundEvent_21_OnListItemSelectionChangedDynamic__DelegateSignature(class UObject* Item, bool bIsSelected);
	void OnTweenComplete(class FName CategoryName);
	void BndEvt__UIW_Recollection_Btn_RotateMouse_K2Node_ComponentBoundEvent_19_OnButtonReleasedEvent__DelegateSignature();
	void BndEvt__UIW_Recollection_Btn_RotateMouse_K2Node_ComponentBoundEvent_10_OnButtonPressedEvent__DelegateSignature();
	void OnInputChange(bool bGamePad);
	void BndEvt__UIW_Recollection_Btn_NextModel_K2Node_ComponentBoundEvent_13_OnActive__DelegateSignature(class UUIW_Btn_Key_C* BtnKey);
	void BndEvt__UIW_Recollection_Btn_PrevModel_K2Node_ComponentBoundEvent_12_OnActive__DelegateSignature(class UUIW_Btn_Key_C* BtnKey);
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void BndEvt__UIW_Recollection_Btn_Select_K2Node_ComponentBoundEvent_8_OnActive__DelegateSignature(class UUIW_Btn_Key_C* BtnKey);
	void BndEvt__UIW_Recollection_List_Creature_K2Node_ComponentBoundEvent_5_OnListItemSelectionChangedDynamic__DelegateSignature(class UObject* Item, bool bIsSelected);
	void BndEvt__UIW_Recollection_List_Character_K2Node_ComponentBoundEvent_4_OnListItemSelectionChangedDynamic__DelegateSignature(class UObject* Item, bool bIsSelected);
	void ShowDepth1Scene();
	void ShowListViewScene();
	void ChangeLevel_Recollection();
	void Destruct();
	void BndEvt__UIW_Recollection_List_Tab_K2Node_ComponentBoundEvent_3_OnListItemSelectionChangedDynamic__DelegateSignature(class UObject* Item, bool bIsSelected);
	void BndEvt__UIW_Recollection_Btn_Tab_RightKey_K2Node_ComponentBoundEvent_2_OnActive__DelegateSignature(class UUIW_Btn_Key_C* BtnKey);
	void BndEvt__UIW_Recollection_Btn_Tab_LeftKey_K2Node_ComponentBoundEvent_1_OnActive__DelegateSignature(class UUIW_Btn_Key_C* BtnKey);
	void Construct();
	void BndEvt__UIW_Recollection_Btn_Back_K2Node_ComponentBoundEvent_0_OnActive__DelegateSignature(class UUIW_Btn_Key_C* BtnKey);
	void OnReady();
	void RefreshData();
	void MoveLeftTab();
	void MoveRightTab();
	void SetViewWithDepth(int32 Depth_0);
	void SetModel(class UObject* SelectedData);
	void SetSelectedList(class UTileView* ListView, class UObject* Item);
	struct FEventReply FocusManage(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);
	class UWidget* NavToCharacter(EUINavigation Navigation_0);
	class UWidget* NavToCreature(EUINavigation Navigation_0);
	void AddListEmptyFill(TArray<class UObject*>& DataArr, int32 ColumnCnt);
	void FocusChange();
	class UWidget* NavToWeapon(EUINavigation Navigation_0);
	void Get_Model(class ALGalleryActor_C** GalleryActor);
	void GetValidIndex(bool IsNextOrNot, int32* Index_0);
	void SetbuttonVisibility(int32 Depth_0, bool IsGamePad_0);
	void SetCameraRotation();
	void FadeEffect(float Duration, class FName TweenName, bool IsInOrNot);
	void SetModelChangeBtn();
	class UWidget* NavToSlaveArm(EUINavigation Navigation_0);
	void ListPendingCheck();
	class UWidget* NavToLRLoop(EUINavigation Navigation_0);
	void CalcMaxMoveInfo(float CurrentZoom);
	void MoveCamera(float MoveWidth, float MoveHeight);
	void CalcMoveCameraWidth(float CalcParam, float* OutCalcParam);
	void CalcMoveCameraHeight(float CalcParam, float* OutCalcParam);
	void ResetCameraDefaultLocation();
	void OnSuccessSpawnModel(class AActor* InSpawnModel);
	void ZoomIn(float DeltaTime);
	void CalcZoomIn(float DeltaTime);
	void ZoomOut(float DeltaTime);
	void CalcZoomOut(float DeltaTime);
	void UpdateCameraLocation();
	void Rotate_LPress_Key();
	void RotateRPressKey();
	void RotateLReleaseKey();
	void RotateRReleaseKey();
	void OnNavForKeyboard(EUINavigation Navigation_0, EInputEvent EventType);
	struct FEventReply OnMouseWheel(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);
	void WheelStop();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"UIW_Recollection_C">();
	}
	static class UUIW_Recollection_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUIW_Recollection_C>();
	}
};
static_assert(alignof(UUIW_Recollection_C) == 0x000008, "Wrong alignment on UUIW_Recollection_C");
static_assert(sizeof(UUIW_Recollection_C) == 0x000528, "Wrong size on UUIW_Recollection_C");
static_assert(offsetof(UUIW_Recollection_C, UberGraphFrame_UIW_Recollection_C) == 0x000350, "Member 'UUIW_Recollection_C::UberGraphFrame_UIW_Recollection_C' has a wrong offset!");
static_assert(offsetof(UUIW_Recollection_C, Black) == 0x000358, "Member 'UUIW_Recollection_C::Black' has a wrong offset!");
static_assert(offsetof(UUIW_Recollection_C, Btn_Back) == 0x000360, "Member 'UUIW_Recollection_C::Btn_Back' has a wrong offset!");
static_assert(offsetof(UUIW_Recollection_C, Btn_Move) == 0x000368, "Member 'UUIW_Recollection_C::Btn_Move' has a wrong offset!");
static_assert(offsetof(UUIW_Recollection_C, Btn_NextModel) == 0x000370, "Member 'UUIW_Recollection_C::Btn_NextModel' has a wrong offset!");
static_assert(offsetof(UUIW_Recollection_C, Btn_PrevModel) == 0x000378, "Member 'UUIW_Recollection_C::Btn_PrevModel' has a wrong offset!");
static_assert(offsetof(UUIW_Recollection_C, Btn_Rotate_L) == 0x000380, "Member 'UUIW_Recollection_C::Btn_Rotate_L' has a wrong offset!");
static_assert(offsetof(UUIW_Recollection_C, Btn_Rotate_R) == 0x000388, "Member 'UUIW_Recollection_C::Btn_Rotate_R' has a wrong offset!");
static_assert(offsetof(UUIW_Recollection_C, Btn_RotateMouse) == 0x000390, "Member 'UUIW_Recollection_C::Btn_RotateMouse' has a wrong offset!");
static_assert(offsetof(UUIW_Recollection_C, Btn_Select) == 0x000398, "Member 'UUIW_Recollection_C::Btn_Select' has a wrong offset!");
static_assert(offsetof(UUIW_Recollection_C, Btn_Tab_LeftKey) == 0x0003A0, "Member 'UUIW_Recollection_C::Btn_Tab_LeftKey' has a wrong offset!");
static_assert(offsetof(UUIW_Recollection_C, Btn_Tab_RightKey) == 0x0003A8, "Member 'UUIW_Recollection_C::Btn_Tab_RightKey' has a wrong offset!");
static_assert(offsetof(UUIW_Recollection_C, Btn_Zoom) == 0x0003B0, "Member 'UUIW_Recollection_C::Btn_Zoom' has a wrong offset!");
static_assert(offsetof(UUIW_Recollection_C, BtnGroup) == 0x0003B8, "Member 'UUIW_Recollection_C::BtnGroup' has a wrong offset!");
static_assert(offsetof(UUIW_Recollection_C, Group_Depth_1) == 0x0003C0, "Member 'UUIW_Recollection_C::Group_Depth_1' has a wrong offset!");
static_assert(offsetof(UUIW_Recollection_C, Group_Depth_1_Tab_3D) == 0x0003C8, "Member 'UUIW_Recollection_C::Group_Depth_1_Tab_3D' has a wrong offset!");
static_assert(offsetof(UUIW_Recollection_C, List_Character) == 0x0003D0, "Member 'UUIW_Recollection_C::List_Character' has a wrong offset!");
static_assert(offsetof(UUIW_Recollection_C, List_Creature) == 0x0003D8, "Member 'UUIW_Recollection_C::List_Creature' has a wrong offset!");
static_assert(offsetof(UUIW_Recollection_C, List_SlaveArm) == 0x0003E0, "Member 'UUIW_Recollection_C::List_SlaveArm' has a wrong offset!");
static_assert(offsetof(UUIW_Recollection_C, List_Tab) == 0x0003E8, "Member 'UUIW_Recollection_C::List_Tab' has a wrong offset!");
static_assert(offsetof(UUIW_Recollection_C, List_Weapon) == 0x0003F0, "Member 'UUIW_Recollection_C::List_Weapon' has a wrong offset!");
static_assert(offsetof(UUIW_Recollection_C, SubTitle_Character) == 0x0003F8, "Member 'UUIW_Recollection_C::SubTitle_Character' has a wrong offset!");
static_assert(offsetof(UUIW_Recollection_C, SubTitle_Creature) == 0x000400, "Member 'UUIW_Recollection_C::SubTitle_Creature' has a wrong offset!");
static_assert(offsetof(UUIW_Recollection_C, SubTitle_SlaveArm) == 0x000408, "Member 'UUIW_Recollection_C::SubTitle_SlaveArm' has a wrong offset!");
static_assert(offsetof(UUIW_Recollection_C, SubTitle_Weapon) == 0x000410, "Member 'UUIW_Recollection_C::SubTitle_Weapon' has a wrong offset!");
static_assert(offsetof(UUIW_Recollection_C, Text_Name) == 0x000418, "Member 'UUIW_Recollection_C::Text_Name' has a wrong offset!");
static_assert(offsetof(UUIW_Recollection_C, UIW_BG_Tab) == 0x000420, "Member 'UUIW_Recollection_C::UIW_BG_Tab' has a wrong offset!");
static_assert(offsetof(UUIW_Recollection_C, CamDepth3) == 0x000428, "Member 'UUIW_Recollection_C::CamDepth3' has a wrong offset!");
static_assert(offsetof(UUIW_Recollection_C, ActorModel) == 0x000430, "Member 'UUIW_Recollection_C::ActorModel' has a wrong offset!");
static_assert(offsetof(UUIW_Recollection_C, DataArrCharacter) == 0x000438, "Member 'UUIW_Recollection_C::DataArrCharacter' has a wrong offset!");
static_assert(offsetof(UUIW_Recollection_C, DataArrCreature) == 0x000448, "Member 'UUIW_Recollection_C::DataArrCreature' has a wrong offset!");
static_assert(offsetof(UUIW_Recollection_C, DataArrWeapon) == 0x000458, "Member 'UUIW_Recollection_C::DataArrWeapon' has a wrong offset!");
static_assert(offsetof(UUIW_Recollection_C, DataArrSlaveArm) == 0x000468, "Member 'UUIW_Recollection_C::DataArrSlaveArm' has a wrong offset!");
static_assert(offsetof(UUIW_Recollection_C, SelectedList) == 0x000478, "Member 'UUIW_Recollection_C::SelectedList' has a wrong offset!");
static_assert(offsetof(UUIW_Recollection_C, ColumnCount) == 0x000480, "Member 'UUIW_Recollection_C::ColumnCount' has a wrong offset!");
static_assert(offsetof(UUIW_Recollection_C, PrevListSelectedIndex) == 0x000484, "Member 'UUIW_Recollection_C::PrevListSelectedIndex' has a wrong offset!");
static_assert(offsetof(UUIW_Recollection_C, Depth) == 0x000488, "Member 'UUIW_Recollection_C::Depth' has a wrong offset!");
static_assert(offsetof(UUIW_Recollection_C, ModelInfoDetailPageIndex) == 0x00048C, "Member 'UUIW_Recollection_C::ModelInfoDetailPageIndex' has a wrong offset!");
static_assert(offsetof(UUIW_Recollection_C, ActorController) == 0x000490, "Member 'UUIW_Recollection_C::ActorController' has a wrong offset!");
static_assert(offsetof(UUIW_Recollection_C, IsGamePad) == 0x000498, "Member 'UUIW_Recollection_C::IsGamePad' has a wrong offset!");
static_assert(offsetof(UUIW_Recollection_C, CameraTimer) == 0x0004A0, "Member 'UUIW_Recollection_C::CameraTimer' has a wrong offset!");
static_assert(offsetof(UUIW_Recollection_C, StartCharacterRotation) == 0x0004A8, "Member 'UUIW_Recollection_C::StartCharacterRotation' has a wrong offset!");
static_assert(offsetof(UUIW_Recollection_C, CameraHorizontalValue) == 0x0004B4, "Member 'UUIW_Recollection_C::CameraHorizontalValue' has a wrong offset!");
static_assert(offsetof(UUIW_Recollection_C, StartMousePosition) == 0x0004B8, "Member 'UUIW_Recollection_C::StartMousePosition' has a wrong offset!");
static_assert(offsetof(UUIW_Recollection_C, IsCloseTweening) == 0x0004C0, "Member 'UUIW_Recollection_C::IsCloseTweening' has a wrong offset!");
static_assert(offsetof(UUIW_Recollection_C, CamDepth2_DefaultZ) == 0x0004C4, "Member 'UUIW_Recollection_C::CamDepth2_DefaultZ' has a wrong offset!");
static_assert(offsetof(UUIW_Recollection_C, CamDepth3_DefaultZ) == 0x0004C8, "Member 'UUIW_Recollection_C::CamDepth3_DefaultZ' has a wrong offset!");
static_assert(offsetof(UUIW_Recollection_C, ListPendingTimer) == 0x0004D0, "Member 'UUIW_Recollection_C::ListPendingTimer' has a wrong offset!");
static_assert(offsetof(UUIW_Recollection_C, WorldLightList) == 0x0004D8, "Member 'UUIW_Recollection_C::WorldLightList' has a wrong offset!");
static_assert(offsetof(UUIW_Recollection_C, IsOpenTweenComplete) == 0x0004E8, "Member 'UUIW_Recollection_C::IsOpenTweenComplete' has a wrong offset!");
static_assert(offsetof(UUIW_Recollection_C, CurrentWidth) == 0x0004EC, "Member 'UUIW_Recollection_C::CurrentWidth' has a wrong offset!");
static_assert(offsetof(UUIW_Recollection_C, CurrentHeight) == 0x0004F0, "Member 'UUIW_Recollection_C::CurrentHeight' has a wrong offset!");
static_assert(offsetof(UUIW_Recollection_C, CameraDepth3DefaultLocation) == 0x0004F4, "Member 'UUIW_Recollection_C::CameraDepth3DefaultLocation' has a wrong offset!");
static_assert(offsetof(UUIW_Recollection_C, Actor_Controller) == 0x000500, "Member 'UUIW_Recollection_C::Actor_Controller' has a wrong offset!");
static_assert(offsetof(UUIW_Recollection_C, IsSpawnModel) == 0x000508, "Member 'UUIW_Recollection_C::IsSpawnModel' has a wrong offset!");
static_assert(offsetof(UUIW_Recollection_C, IsUpdateZoomIn) == 0x000509, "Member 'UUIW_Recollection_C::IsUpdateZoomIn' has a wrong offset!");
static_assert(offsetof(UUIW_Recollection_C, IsUpdateZoomOut) == 0x00050A, "Member 'UUIW_Recollection_C::IsUpdateZoomOut' has a wrong offset!");
static_assert(offsetof(UUIW_Recollection_C, IsRotateLPressed) == 0x00050B, "Member 'UUIW_Recollection_C::IsRotateLPressed' has a wrong offset!");
static_assert(offsetof(UUIW_Recollection_C, IsRotateRPressed) == 0x00050C, "Member 'UUIW_Recollection_C::IsRotateRPressed' has a wrong offset!");
static_assert(offsetof(UUIW_Recollection_C, IsKeyboardPress_Left) == 0x00050D, "Member 'UUIW_Recollection_C::IsKeyboardPress_Left' has a wrong offset!");
static_assert(offsetof(UUIW_Recollection_C, IsKeyboardPress_Right) == 0x00050E, "Member 'UUIW_Recollection_C::IsKeyboardPress_Right' has a wrong offset!");
static_assert(offsetof(UUIW_Recollection_C, IsKeyboardPress_Up) == 0x00050F, "Member 'UUIW_Recollection_C::IsKeyboardPress_Up' has a wrong offset!");
static_assert(offsetof(UUIW_Recollection_C, IsKeyboardPress_Down) == 0x000510, "Member 'UUIW_Recollection_C::IsKeyboardPress_Down' has a wrong offset!");
static_assert(offsetof(UUIW_Recollection_C, TimerWheelStop) == 0x000518, "Member 'UUIW_Recollection_C::TimerWheelStop' has a wrong offset!");
static_assert(offsetof(UUIW_Recollection_C, Velocity) == 0x000520, "Member 'UUIW_Recollection_C::Velocity' has a wrong offset!");

}


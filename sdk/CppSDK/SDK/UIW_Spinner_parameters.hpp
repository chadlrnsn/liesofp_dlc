#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UIW_Spinner

#include "Basic.hpp"

#include "ProjectP_structs.hpp"
#include "Engine_structs.hpp"
#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function UIW_Spinner.UIW_Spinner_C.OnSelected__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct UIW_Spinner_C_OnSelected__DelegateSignature final
{
public:
	class UUIW_Spinner_C*                         Spinner;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UIW_Spinner_C_OnSelected__DelegateSignature) == 0x000008, "Wrong alignment on UIW_Spinner_C_OnSelected__DelegateSignature");
static_assert(sizeof(UIW_Spinner_C_OnSelected__DelegateSignature) == 0x000008, "Wrong size on UIW_Spinner_C_OnSelected__DelegateSignature");
static_assert(offsetof(UIW_Spinner_C_OnSelected__DelegateSignature, Spinner) == 0x000000, "Member 'UIW_Spinner_C_OnSelected__DelegateSignature::Spinner' has a wrong offset!");

// Function UIW_Spinner.UIW_Spinner_C.OnHovered__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct UIW_Spinner_C_OnHovered__DelegateSignature final
{
public:
	class UUIW_Spinner_C*                         Spinner;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UIW_Spinner_C_OnHovered__DelegateSignature) == 0x000008, "Wrong alignment on UIW_Spinner_C_OnHovered__DelegateSignature");
static_assert(sizeof(UIW_Spinner_C_OnHovered__DelegateSignature) == 0x000008, "Wrong size on UIW_Spinner_C_OnHovered__DelegateSignature");
static_assert(offsetof(UIW_Spinner_C_OnHovered__DelegateSignature, Spinner) == 0x000000, "Member 'UIW_Spinner_C_OnHovered__DelegateSignature::Spinner' has a wrong offset!");

// Function UIW_Spinner.UIW_Spinner_C.OnUnhovered__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct UIW_Spinner_C_OnUnhovered__DelegateSignature final
{
public:
	class UUIW_Spinner_C*                         Spinner;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UIW_Spinner_C_OnUnhovered__DelegateSignature) == 0x000008, "Wrong alignment on UIW_Spinner_C_OnUnhovered__DelegateSignature");
static_assert(sizeof(UIW_Spinner_C_OnUnhovered__DelegateSignature) == 0x000008, "Wrong size on UIW_Spinner_C_OnUnhovered__DelegateSignature");
static_assert(offsetof(UIW_Spinner_C_OnUnhovered__DelegateSignature, Spinner) == 0x000000, "Member 'UIW_Spinner_C_OnUnhovered__DelegateSignature::Spinner' has a wrong offset!");

// Function UIW_Spinner.UIW_Spinner_C.OnReleaseUp__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct UIW_Spinner_C_OnReleaseUp__DelegateSignature final
{
public:
	class UUIW_Spinner_C*                         Spinner;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UIW_Spinner_C_OnReleaseUp__DelegateSignature) == 0x000008, "Wrong alignment on UIW_Spinner_C_OnReleaseUp__DelegateSignature");
static_assert(sizeof(UIW_Spinner_C_OnReleaseUp__DelegateSignature) == 0x000008, "Wrong size on UIW_Spinner_C_OnReleaseUp__DelegateSignature");
static_assert(offsetof(UIW_Spinner_C_OnReleaseUp__DelegateSignature, Spinner) == 0x000000, "Member 'UIW_Spinner_C_OnReleaseUp__DelegateSignature::Spinner' has a wrong offset!");

// Function UIW_Spinner.UIW_Spinner_C.OnReleaseDown__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct UIW_Spinner_C_OnReleaseDown__DelegateSignature final
{
public:
	class UUIW_Spinner_C*                         Spinner;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UIW_Spinner_C_OnReleaseDown__DelegateSignature) == 0x000008, "Wrong alignment on UIW_Spinner_C_OnReleaseDown__DelegateSignature");
static_assert(sizeof(UIW_Spinner_C_OnReleaseDown__DelegateSignature) == 0x000008, "Wrong size on UIW_Spinner_C_OnReleaseDown__DelegateSignature");
static_assert(offsetof(UIW_Spinner_C_OnReleaseDown__DelegateSignature, Spinner) == 0x000000, "Member 'UIW_Spinner_C_OnReleaseDown__DelegateSignature::Spinner' has a wrong offset!");

// Function UIW_Spinner.UIW_Spinner_C.ExecuteUbergraph_UIW_Spinner
// 0x0098 (0x0098 - 0x0000)
struct UIW_Spinner_C_ExecuteUbergraph_UIW_Spinner final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UUIW_Spinner_Number_C*>          K2Node_MakeArray_Array;                            // 0x0018(0x0010)(ReferenceParm, ContainsInstancedReference)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0028(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0038(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x0048(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_3;            // 0x0058(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_4;            // 0x0068(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_5;            // 0x0078(0x0010)(ZeroConstructor, NoDestructor)
	class UUIW_Spinner_Number_C*                  CallFunc_Array_Get_Item;                           // 0x0088(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0095(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UIW_Spinner_C_ExecuteUbergraph_UIW_Spinner) == 0x000008, "Wrong alignment on UIW_Spinner_C_ExecuteUbergraph_UIW_Spinner");
static_assert(sizeof(UIW_Spinner_C_ExecuteUbergraph_UIW_Spinner) == 0x000098, "Wrong size on UIW_Spinner_C_ExecuteUbergraph_UIW_Spinner");
static_assert(offsetof(UIW_Spinner_C_ExecuteUbergraph_UIW_Spinner, EntryPoint) == 0x000000, "Member 'UIW_Spinner_C_ExecuteUbergraph_UIW_Spinner::EntryPoint' has a wrong offset!");
static_assert(offsetof(UIW_Spinner_C_ExecuteUbergraph_UIW_Spinner, Temp_int_Array_Index_Variable) == 0x000004, "Member 'UIW_Spinner_C_ExecuteUbergraph_UIW_Spinner::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(UIW_Spinner_C_ExecuteUbergraph_UIW_Spinner, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'UIW_Spinner_C_ExecuteUbergraph_UIW_Spinner::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(UIW_Spinner_C_ExecuteUbergraph_UIW_Spinner, CallFunc_Less_IntInt_ReturnValue) == 0x00000C, "Member 'UIW_Spinner_C_ExecuteUbergraph_UIW_Spinner::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Spinner_C_ExecuteUbergraph_UIW_Spinner, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'UIW_Spinner_C_ExecuteUbergraph_UIW_Spinner::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Spinner_C_ExecuteUbergraph_UIW_Spinner, K2Node_Event_IsDesignTime) == 0x000014, "Member 'UIW_Spinner_C_ExecuteUbergraph_UIW_Spinner::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(UIW_Spinner_C_ExecuteUbergraph_UIW_Spinner, K2Node_MakeArray_Array) == 0x000018, "Member 'UIW_Spinner_C_ExecuteUbergraph_UIW_Spinner::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(UIW_Spinner_C_ExecuteUbergraph_UIW_Spinner, K2Node_CreateDelegate_OutputDelegate) == 0x000028, "Member 'UIW_Spinner_C_ExecuteUbergraph_UIW_Spinner::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(UIW_Spinner_C_ExecuteUbergraph_UIW_Spinner, K2Node_CreateDelegate_OutputDelegate_1) == 0x000038, "Member 'UIW_Spinner_C_ExecuteUbergraph_UIW_Spinner::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(UIW_Spinner_C_ExecuteUbergraph_UIW_Spinner, K2Node_CreateDelegate_OutputDelegate_2) == 0x000048, "Member 'UIW_Spinner_C_ExecuteUbergraph_UIW_Spinner::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(UIW_Spinner_C_ExecuteUbergraph_UIW_Spinner, K2Node_CreateDelegate_OutputDelegate_3) == 0x000058, "Member 'UIW_Spinner_C_ExecuteUbergraph_UIW_Spinner::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(UIW_Spinner_C_ExecuteUbergraph_UIW_Spinner, K2Node_CreateDelegate_OutputDelegate_4) == 0x000068, "Member 'UIW_Spinner_C_ExecuteUbergraph_UIW_Spinner::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(UIW_Spinner_C_ExecuteUbergraph_UIW_Spinner, K2Node_CreateDelegate_OutputDelegate_5) == 0x000078, "Member 'UIW_Spinner_C_ExecuteUbergraph_UIW_Spinner::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(UIW_Spinner_C_ExecuteUbergraph_UIW_Spinner, CallFunc_Array_Get_Item) == 0x000088, "Member 'UIW_Spinner_C_ExecuteUbergraph_UIW_Spinner::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(UIW_Spinner_C_ExecuteUbergraph_UIW_Spinner, CallFunc_Array_Length_ReturnValue) == 0x000090, "Member 'UIW_Spinner_C_ExecuteUbergraph_UIW_Spinner::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Spinner_C_ExecuteUbergraph_UIW_Spinner, CallFunc_Less_IntInt_ReturnValue_1) == 0x000094, "Member 'UIW_Spinner_C_ExecuteUbergraph_UIW_Spinner::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UIW_Spinner_C_ExecuteUbergraph_UIW_Spinner, K2Node_SwitchEnum_CmpSuccess) == 0x000095, "Member 'UIW_Spinner_C_ExecuteUbergraph_UIW_Spinner::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function UIW_Spinner.UIW_Spinner_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct UIW_Spinner_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UIW_Spinner_C_PreConstruct) == 0x000001, "Wrong alignment on UIW_Spinner_C_PreConstruct");
static_assert(sizeof(UIW_Spinner_C_PreConstruct) == 0x000001, "Wrong size on UIW_Spinner_C_PreConstruct");
static_assert(offsetof(UIW_Spinner_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'UIW_Spinner_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function UIW_Spinner.UIW_Spinner_C.SetValue
// 0x0068 (0x0068 - 0x0000)
struct UIW_Spinner_C_SetValue final
{
public:
	int32                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Init;                                              // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Reverse_ReturnValue;                      // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TArray<class FString>                         CallFunc_GetCharacterArrayFromString_ReturnValue;  // 0x0040(0x0010)(ReferenceParm)
	class UUIW_Spinner_Number_C*                  CallFunc_Array_Get_Item;                           // 0x0050(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_StringToInt_ReturnValue;             // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5D[0x3];                                       // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UIW_Spinner_C_SetValue) == 0x000008, "Wrong alignment on UIW_Spinner_C_SetValue");
static_assert(sizeof(UIW_Spinner_C_SetValue) == 0x000068, "Wrong size on UIW_Spinner_C_SetValue");
static_assert(offsetof(UIW_Spinner_C_SetValue, Value) == 0x000000, "Member 'UIW_Spinner_C_SetValue::Value' has a wrong offset!");
static_assert(offsetof(UIW_Spinner_C_SetValue, Init) == 0x000004, "Member 'UIW_Spinner_C_SetValue::Init' has a wrong offset!");
static_assert(offsetof(UIW_Spinner_C_SetValue, Temp_int_Array_Index_Variable) == 0x000008, "Member 'UIW_Spinner_C_SetValue::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(UIW_Spinner_C_SetValue, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'UIW_Spinner_C_SetValue::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(UIW_Spinner_C_SetValue, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'UIW_Spinner_C_SetValue::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Spinner_C_SetValue, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000014, "Member 'UIW_Spinner_C_SetValue::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Spinner_C_SetValue, CallFunc_Conv_IntToString_ReturnValue) == 0x000018, "Member 'UIW_Spinner_C_SetValue::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Spinner_C_SetValue, CallFunc_BooleanAND_ReturnValue) == 0x000028, "Member 'UIW_Spinner_C_SetValue::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Spinner_C_SetValue, CallFunc_Reverse_ReturnValue) == 0x000030, "Member 'UIW_Spinner_C_SetValue::CallFunc_Reverse_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Spinner_C_SetValue, CallFunc_GetCharacterArrayFromString_ReturnValue) == 0x000040, "Member 'UIW_Spinner_C_SetValue::CallFunc_GetCharacterArrayFromString_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Spinner_C_SetValue, CallFunc_Array_Get_Item) == 0x000050, "Member 'UIW_Spinner_C_SetValue::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(UIW_Spinner_C_SetValue, CallFunc_Conv_StringToInt_ReturnValue) == 0x000058, "Member 'UIW_Spinner_C_SetValue::CallFunc_Conv_StringToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Spinner_C_SetValue, CallFunc_Array_IsValidIndex_ReturnValue) == 0x00005C, "Member 'UIW_Spinner_C_SetValue::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Spinner_C_SetValue, CallFunc_Array_Length_ReturnValue) == 0x000060, "Member 'UIW_Spinner_C_SetValue::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Spinner_C_SetValue, CallFunc_Less_IntInt_ReturnValue) == 0x000064, "Member 'UIW_Spinner_C_SetValue::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function UIW_Spinner.UIW_Spinner_C.SetSelected
// 0x0030 (0x0030 - 0x0000)
struct UIW_Spinner_C_SetSelected final
{
public:
	bool                                          IsSelected_0;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	EOrientation                                  Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EOrientation                                  Temp_byte_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3[0x1];                                        // 0x0003(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTweenEase                             K2Node_MakeStruct_TweenEase;                       // 0x0004(0x000C)(NoDestructor)
	struct FTweenEase                             K2Node_MakeStruct_TweenEase_1;                     // 0x0010(0x000C)(NoDestructor)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                K2Node_Select_Default;                             // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UWidget*                                K2Node_Select_Default_1;                           // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
};
static_assert(alignof(UIW_Spinner_C_SetSelected) == 0x000008, "Wrong alignment on UIW_Spinner_C_SetSelected");
static_assert(sizeof(UIW_Spinner_C_SetSelected) == 0x000030, "Wrong size on UIW_Spinner_C_SetSelected");
static_assert(offsetof(UIW_Spinner_C_SetSelected, IsSelected_0) == 0x000000, "Member 'UIW_Spinner_C_SetSelected::IsSelected_0' has a wrong offset!");
static_assert(offsetof(UIW_Spinner_C_SetSelected, Temp_byte_Variable) == 0x000001, "Member 'UIW_Spinner_C_SetSelected::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(UIW_Spinner_C_SetSelected, Temp_byte_Variable_1) == 0x000002, "Member 'UIW_Spinner_C_SetSelected::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(UIW_Spinner_C_SetSelected, K2Node_MakeStruct_TweenEase) == 0x000004, "Member 'UIW_Spinner_C_SetSelected::K2Node_MakeStruct_TweenEase' has a wrong offset!");
static_assert(offsetof(UIW_Spinner_C_SetSelected, K2Node_MakeStruct_TweenEase_1) == 0x000010, "Member 'UIW_Spinner_C_SetSelected::K2Node_MakeStruct_TweenEase_1' has a wrong offset!");
static_assert(offsetof(UIW_Spinner_C_SetSelected, K2Node_Select_Default) == 0x000020, "Member 'UIW_Spinner_C_SetSelected::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(UIW_Spinner_C_SetSelected, K2Node_Select_Default_1) == 0x000028, "Member 'UIW_Spinner_C_SetSelected::K2Node_Select_Default_1' has a wrong offset!");

// Function UIW_Spinner.UIW_Spinner_C.GetInitValue
// 0x0004 (0x0004 - 0x0000)
struct UIW_Spinner_C_GetInitValue final
{
public:
	int32                                         Value;                                             // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UIW_Spinner_C_GetInitValue) == 0x000004, "Wrong alignment on UIW_Spinner_C_GetInitValue");
static_assert(sizeof(UIW_Spinner_C_GetInitValue) == 0x000004, "Wrong size on UIW_Spinner_C_GetInitValue");
static_assert(offsetof(UIW_Spinner_C_GetInitValue, Value) == 0x000000, "Member 'UIW_Spinner_C_GetInitValue::Value' has a wrong offset!");

// Function UIW_Spinner.UIW_Spinner_C.GetValue
// 0x0004 (0x0004 - 0x0000)
struct UIW_Spinner_C_GetValue final
{
public:
	int32                                         Value;                                             // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UIW_Spinner_C_GetValue) == 0x000004, "Wrong alignment on UIW_Spinner_C_GetValue");
static_assert(sizeof(UIW_Spinner_C_GetValue) == 0x000004, "Wrong size on UIW_Spinner_C_GetValue");
static_assert(offsetof(UIW_Spinner_C_GetValue, Value) == 0x000000, "Member 'UIW_Spinner_C_GetValue::Value' has a wrong offset!");

// Function UIW_Spinner.UIW_Spinner_C.GetSelected
// 0x0001 (0x0001 - 0x0000)
struct UIW_Spinner_C_GetSelected final
{
public:
	bool                                          IsSelected_0;                                      // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UIW_Spinner_C_GetSelected) == 0x000001, "Wrong alignment on UIW_Spinner_C_GetSelected");
static_assert(sizeof(UIW_Spinner_C_GetSelected) == 0x000001, "Wrong size on UIW_Spinner_C_GetSelected");
static_assert(offsetof(UIW_Spinner_C_GetSelected, IsSelected_0) == 0x000000, "Member 'UIW_Spinner_C_GetSelected::IsSelected_0' has a wrong offset!");

// Function UIW_Spinner.UIW_Spinner_C.OnMouseWheel
// 0x0220 (0x0220 - 0x0000)
struct UIW_Spinner_C_OnMouseWheel final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0070)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FEventReply                            ReturnValue;                                       // 0x00A8(0x00B8)(Parm, OutParm, ReturnParm)
	float                                         CallFunc_PointerEvent_GetWheelDelta_ReturnValue;   // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0164(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0165(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0166(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_167[0x1];                                      // 0x0167(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEventReply                            K2Node_MakeStruct_EventReply;                      // 0x0168(0x00B8)()
};
static_assert(alignof(UIW_Spinner_C_OnMouseWheel) == 0x000008, "Wrong alignment on UIW_Spinner_C_OnMouseWheel");
static_assert(sizeof(UIW_Spinner_C_OnMouseWheel) == 0x000220, "Wrong size on UIW_Spinner_C_OnMouseWheel");
static_assert(offsetof(UIW_Spinner_C_OnMouseWheel, MyGeometry) == 0x000000, "Member 'UIW_Spinner_C_OnMouseWheel::MyGeometry' has a wrong offset!");
static_assert(offsetof(UIW_Spinner_C_OnMouseWheel, MouseEvent) == 0x000038, "Member 'UIW_Spinner_C_OnMouseWheel::MouseEvent' has a wrong offset!");
static_assert(offsetof(UIW_Spinner_C_OnMouseWheel, ReturnValue) == 0x0000A8, "Member 'UIW_Spinner_C_OnMouseWheel::ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Spinner_C_OnMouseWheel, CallFunc_PointerEvent_GetWheelDelta_ReturnValue) == 0x000160, "Member 'UIW_Spinner_C_OnMouseWheel::CallFunc_PointerEvent_GetWheelDelta_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Spinner_C_OnMouseWheel, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000164, "Member 'UIW_Spinner_C_OnMouseWheel::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Spinner_C_OnMouseWheel, CallFunc_BooleanAND_ReturnValue) == 0x000165, "Member 'UIW_Spinner_C_OnMouseWheel::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Spinner_C_OnMouseWheel, CallFunc_BooleanAND_ReturnValue_1) == 0x000166, "Member 'UIW_Spinner_C_OnMouseWheel::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UIW_Spinner_C_OnMouseWheel, K2Node_MakeStruct_EventReply) == 0x000168, "Member 'UIW_Spinner_C_OnMouseWheel::K2Node_MakeStruct_EventReply' has a wrong offset!");

// Function UIW_Spinner.UIW_Spinner_C.PressUp
// 0x0018 (0x0018 - 0x0000)
struct UIW_Spinner_C_PressUp final
{
public:
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0010(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UIW_Spinner_C_PressUp) == 0x000008, "Wrong alignment on UIW_Spinner_C_PressUp");
static_assert(sizeof(UIW_Spinner_C_PressUp) == 0x000018, "Wrong size on UIW_Spinner_C_PressUp");
static_assert(offsetof(UIW_Spinner_C_PressUp, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'UIW_Spinner_C_PressUp::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(UIW_Spinner_C_PressUp, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000010, "Member 'UIW_Spinner_C_PressUp::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");

// Function UIW_Spinner.UIW_Spinner_C.PressDown
// 0x0018 (0x0018 - 0x0000)
struct UIW_Spinner_C_PressDown final
{
public:
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0010(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UIW_Spinner_C_PressDown) == 0x000008, "Wrong alignment on UIW_Spinner_C_PressDown");
static_assert(sizeof(UIW_Spinner_C_PressDown) == 0x000018, "Wrong size on UIW_Spinner_C_PressDown");
static_assert(offsetof(UIW_Spinner_C_PressDown, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'UIW_Spinner_C_PressDown::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(UIW_Spinner_C_PressDown, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000010, "Member 'UIW_Spinner_C_PressDown::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");

// Function UIW_Spinner.UIW_Spinner_C.SetEnabledUp
// 0x0001 (0x0001 - 0x0000)
struct UIW_Spinner_C_SetEnabledUp final
{
public:
	bool                                          Enabled;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UIW_Spinner_C_SetEnabledUp) == 0x000001, "Wrong alignment on UIW_Spinner_C_SetEnabledUp");
static_assert(sizeof(UIW_Spinner_C_SetEnabledUp) == 0x000001, "Wrong size on UIW_Spinner_C_SetEnabledUp");
static_assert(offsetof(UIW_Spinner_C_SetEnabledUp, Enabled) == 0x000000, "Member 'UIW_Spinner_C_SetEnabledUp::Enabled' has a wrong offset!");

// Function UIW_Spinner.UIW_Spinner_C.SetEnabledDown
// 0x0001 (0x0001 - 0x0000)
struct UIW_Spinner_C_SetEnabledDown final
{
public:
	bool                                          Enabled;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UIW_Spinner_C_SetEnabledDown) == 0x000001, "Wrong alignment on UIW_Spinner_C_SetEnabledDown");
static_assert(sizeof(UIW_Spinner_C_SetEnabledDown) == 0x000001, "Wrong size on UIW_Spinner_C_SetEnabledDown");
static_assert(offsetof(UIW_Spinner_C_SetEnabledDown, Enabled) == 0x000000, "Member 'UIW_Spinner_C_SetEnabledDown::Enabled' has a wrong offset!");

}


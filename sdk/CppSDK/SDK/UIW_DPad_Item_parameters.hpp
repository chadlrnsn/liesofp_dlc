#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UIW_DPad_Item

#include "Basic.hpp"

#include "InputCore_structs.hpp"
#include "Engine_structs.hpp"
#include "ProjectP_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "ProjectPContentInfo_structs.hpp"


namespace SDK::Params
{

// Function UIW_DPad_Item.UIW_DPad_Item_C.TransitionEnableDispatcher__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct UIW_DPad_Item_C_TransitionEnableDispatcher__DelegateSignature final
{
public:
	bool                                          IsEnabled;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UIW_DPad_Item_C_TransitionEnableDispatcher__DelegateSignature) == 0x000001, "Wrong alignment on UIW_DPad_Item_C_TransitionEnableDispatcher__DelegateSignature");
static_assert(sizeof(UIW_DPad_Item_C_TransitionEnableDispatcher__DelegateSignature) == 0x000001, "Wrong size on UIW_DPad_Item_C_TransitionEnableDispatcher__DelegateSignature");
static_assert(offsetof(UIW_DPad_Item_C_TransitionEnableDispatcher__DelegateSignature, IsEnabled) == 0x000000, "Member 'UIW_DPad_Item_C_TransitionEnableDispatcher__DelegateSignature::IsEnabled' has a wrong offset!");

// Function UIW_DPad_Item.UIW_DPad_Item_C.ExecuteUbergraph_UIW_DPad_Item
// 0x00C0 (0x00C0 - 0x0000)
struct UIW_DPad_Item_C_ExecuteUbergraph_UIW_DPad_Item final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName MainItemCodeName, class FName UnitItemCodeName)> K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(class ULItem* Item)>           K2Node_CreateDelegate_OutputDelegate_1;            // 0x0014(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ULItemSystem*                           CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULPlayerEquipment*                      CallFunc_GetPlayerEquipment_ReturnValue;           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue;           // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ALPCCharacter*                          K2Node_DynamicCast_AsLPCCharacter;                 // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchName_CmpSuccess;                      // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_52[0x6];                                       // 0x0052(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ULGameDataSystem*                       CallFunc_GetGameInstanceSubsystem_ReturnValue_1;   // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(bool bGamePad)>                K2Node_CreateDelegate_OutputDelegate_2;            // 0x0060(0x0010)(ZeroConstructor, NoDestructor)
	class ULCommonConstantValues*                 CallFunc_GetConstantValues_ReturnValue;            // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULPlayInputSystem*                      CallFunc_GetGameInstanceSubsystem_ReturnValue_2;   // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetPulseItemCodeName_ReturnValue;         // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULPlayInputSystem*                      CallFunc_GetGameInstanceSubsystem_ReturnValue_3;   // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsGamePadMode_ReturnValue;                // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_91[0x3];                                       // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(bool bGamePad)>                K2Node_CreateDelegate_OutputDelegate_3;            // 0x0094(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_A4[0x4];                                       // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ULPlayInputSystem*                      CallFunc_GetGameInstanceSubsystem_ReturnValue_4;   // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULItemSystem*                           CallFunc_GetGameInstanceSubsystem_ReturnValue_5;   // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULPlayerInventory*                      CallFunc_GetPlayerInventory_ReturnValue;           // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UIW_DPad_Item_C_ExecuteUbergraph_UIW_DPad_Item) == 0x000008, "Wrong alignment on UIW_DPad_Item_C_ExecuteUbergraph_UIW_DPad_Item");
static_assert(sizeof(UIW_DPad_Item_C_ExecuteUbergraph_UIW_DPad_Item) == 0x0000C0, "Wrong size on UIW_DPad_Item_C_ExecuteUbergraph_UIW_DPad_Item");
static_assert(offsetof(UIW_DPad_Item_C_ExecuteUbergraph_UIW_DPad_Item, EntryPoint) == 0x000000, "Member 'UIW_DPad_Item_C_ExecuteUbergraph_UIW_DPad_Item::EntryPoint' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Item_C_ExecuteUbergraph_UIW_DPad_Item, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'UIW_DPad_Item_C_ExecuteUbergraph_UIW_DPad_Item::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Item_C_ExecuteUbergraph_UIW_DPad_Item, K2Node_CreateDelegate_OutputDelegate_1) == 0x000014, "Member 'UIW_DPad_Item_C_ExecuteUbergraph_UIW_DPad_Item::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Item_C_ExecuteUbergraph_UIW_DPad_Item, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000028, "Member 'UIW_DPad_Item_C_ExecuteUbergraph_UIW_DPad_Item::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Item_C_ExecuteUbergraph_UIW_DPad_Item, CallFunc_GetPlayerEquipment_ReturnValue) == 0x000030, "Member 'UIW_DPad_Item_C_ExecuteUbergraph_UIW_DPad_Item::CallFunc_GetPlayerEquipment_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Item_C_ExecuteUbergraph_UIW_DPad_Item, CallFunc_GetPlayerCharacter_ReturnValue) == 0x000038, "Member 'UIW_DPad_Item_C_ExecuteUbergraph_UIW_DPad_Item::CallFunc_GetPlayerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Item_C_ExecuteUbergraph_UIW_DPad_Item, K2Node_Event_IsDesignTime) == 0x000040, "Member 'UIW_DPad_Item_C_ExecuteUbergraph_UIW_DPad_Item::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Item_C_ExecuteUbergraph_UIW_DPad_Item, K2Node_DynamicCast_AsLPCCharacter) == 0x000048, "Member 'UIW_DPad_Item_C_ExecuteUbergraph_UIW_DPad_Item::K2Node_DynamicCast_AsLPCCharacter' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Item_C_ExecuteUbergraph_UIW_DPad_Item, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'UIW_DPad_Item_C_ExecuteUbergraph_UIW_DPad_Item::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Item_C_ExecuteUbergraph_UIW_DPad_Item, K2Node_SwitchName_CmpSuccess) == 0x000051, "Member 'UIW_DPad_Item_C_ExecuteUbergraph_UIW_DPad_Item::K2Node_SwitchName_CmpSuccess' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Item_C_ExecuteUbergraph_UIW_DPad_Item, CallFunc_GetGameInstanceSubsystem_ReturnValue_1) == 0x000058, "Member 'UIW_DPad_Item_C_ExecuteUbergraph_UIW_DPad_Item::CallFunc_GetGameInstanceSubsystem_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Item_C_ExecuteUbergraph_UIW_DPad_Item, K2Node_CreateDelegate_OutputDelegate_2) == 0x000060, "Member 'UIW_DPad_Item_C_ExecuteUbergraph_UIW_DPad_Item::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Item_C_ExecuteUbergraph_UIW_DPad_Item, CallFunc_GetConstantValues_ReturnValue) == 0x000070, "Member 'UIW_DPad_Item_C_ExecuteUbergraph_UIW_DPad_Item::CallFunc_GetConstantValues_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Item_C_ExecuteUbergraph_UIW_DPad_Item, CallFunc_GetGameInstanceSubsystem_ReturnValue_2) == 0x000078, "Member 'UIW_DPad_Item_C_ExecuteUbergraph_UIW_DPad_Item::CallFunc_GetGameInstanceSubsystem_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Item_C_ExecuteUbergraph_UIW_DPad_Item, CallFunc_GetPulseItemCodeName_ReturnValue) == 0x000080, "Member 'UIW_DPad_Item_C_ExecuteUbergraph_UIW_DPad_Item::CallFunc_GetPulseItemCodeName_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Item_C_ExecuteUbergraph_UIW_DPad_Item, CallFunc_GetGameInstanceSubsystem_ReturnValue_3) == 0x000088, "Member 'UIW_DPad_Item_C_ExecuteUbergraph_UIW_DPad_Item::CallFunc_GetGameInstanceSubsystem_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Item_C_ExecuteUbergraph_UIW_DPad_Item, CallFunc_IsGamePadMode_ReturnValue) == 0x000090, "Member 'UIW_DPad_Item_C_ExecuteUbergraph_UIW_DPad_Item::CallFunc_IsGamePadMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Item_C_ExecuteUbergraph_UIW_DPad_Item, K2Node_CreateDelegate_OutputDelegate_3) == 0x000094, "Member 'UIW_DPad_Item_C_ExecuteUbergraph_UIW_DPad_Item::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Item_C_ExecuteUbergraph_UIW_DPad_Item, CallFunc_GetGameInstanceSubsystem_ReturnValue_4) == 0x0000A8, "Member 'UIW_DPad_Item_C_ExecuteUbergraph_UIW_DPad_Item::CallFunc_GetGameInstanceSubsystem_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Item_C_ExecuteUbergraph_UIW_DPad_Item, CallFunc_GetGameInstanceSubsystem_ReturnValue_5) == 0x0000B0, "Member 'UIW_DPad_Item_C_ExecuteUbergraph_UIW_DPad_Item::CallFunc_GetGameInstanceSubsystem_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Item_C_ExecuteUbergraph_UIW_DPad_Item, CallFunc_GetPlayerInventory_ReturnValue) == 0x0000B8, "Member 'UIW_DPad_Item_C_ExecuteUbergraph_UIW_DPad_Item::CallFunc_GetPlayerInventory_ReturnValue' has a wrong offset!");

// Function UIW_DPad_Item.UIW_DPad_Item_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct UIW_DPad_Item_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UIW_DPad_Item_C_PreConstruct) == 0x000001, "Wrong alignment on UIW_DPad_Item_C_PreConstruct");
static_assert(sizeof(UIW_DPad_Item_C_PreConstruct) == 0x000001, "Wrong size on UIW_DPad_Item_C_PreConstruct");
static_assert(offsetof(UIW_DPad_Item_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'UIW_DPad_Item_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function UIW_DPad_Item.UIW_DPad_Item_C.SetItem
// 0x0200 (0x0200 - 0x0000)
struct UIW_DPad_Item_C_SetItem final
{
public:
	class FName                                   CodeName;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsInit;                                            // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ULItem*                                 LocalItem;                                         // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FItemConsumeInfoPtr                    LocalConsumeInfo;                                  // 0x0018(0x0008)(Edit, BlueprintVisible, NoDestructor)
	struct FItemCommonInfoPtr                     LocalCommonInfo;                                   // 0x0020(0x0008)(Edit, BlueprintVisible, NoDestructor)
	int32                                         LocalCount;                                        // 0x0028(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ULItemSystem*                           CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULPlayerInventory*                      CallFunc_GetPlayerInventory_ReturnValue;           // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ELItemComplexType                             CallFunc_GetComplexType_ReturnValue;               // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0043(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UObject>                 CallFunc_GetImageResource_ReturnValue;             // 0x0048(0x0028)(ConstParm, UObjectWrapper, HasGetValueTypeHash)
	class ULItemSystem*                           CallFunc_GetGameInstanceSubsystem_ReturnValue_1;   // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetPulseRechargeable_ReturnValue;         // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ULItem*                                 CallFunc_GetComplexItem_Unit_ReturnValue;          // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetUnconsumable_ReturnValue;              // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8A[0x2];                                       // 0x008A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0098(0x0018)()
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x00C0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetCharacterStat_ReturnValue;             // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetCharacterStat_ReturnValue_1;           // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue;            // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x00DC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E4[0x4];                                       // 0x00E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue_1;             // 0x00E8(0x0018)()
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue;                  // 0x0100(0x0008)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetItemTotalCountByCodeName_ReturnValue;  // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10C[0x4];                                      // 0x010C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue_2;             // 0x0110(0x0018)()
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue_1;        // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_129[0x7];                                      // 0x0129(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ULItemSystem*                           CallFunc_GetGameInstanceSubsystem_ReturnValue_2;   // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULPlayerInventory*                      CallFunc_GetPlayerInventory_ReturnValue_1;         // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetItemTotalCountByCodeName_ReturnValue_1; // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue_2;        // 0x0144(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue;            // 0x0145(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ELItemUnitUseType                             CallFunc_GetUnitUseType_ReturnValue;               // 0x0146(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0147(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_GetCount_ReturnValue;                     // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetCount_ReturnValue_1;                   // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_151[0x7];                                      // 0x0151(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ULItemSystem*                           CallFunc_GetGameInstanceSubsystem_ReturnValue_3;   // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULPlayerInventory*                      CallFunc_GetPlayerInventory_ReturnValue_2;         // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULItem*                                 CallFunc_FindItemByCodeName_ReturnValue;           // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_171[0x7];                                      // 0x0171(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ULItemSystem*                           CallFunc_GetGameInstanceSubsystem_ReturnValue_4;   // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UObject>                 CallFunc_GetItemToggleImageResource_ReturnValue;   // 0x0180(0x0028)(UObjectWrapper, HasGetValueTypeHash)
	struct FItemConsumeInfoPtr                    CallFunc_FindItemConsumeInfoByNameBP_ReturnValue;  // 0x01A8(0x0008)(NoDestructor)
	ELItemFirstCategory                           CallFunc_GetFirstCategory_ReturnValue;             // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x01B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B2[0x6];                                      // 0x01B2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FItemCommonInfoPtr                     CallFunc_GetCommonInfo_ReturnValue;                // 0x01B8(0x0008)(NoDestructor)
	TSoftObjectPtr<class UObject>                 CallFunc_GetImageResource_ReturnValue_1;           // 0x01C0(0x0028)(ConstParm, UObjectWrapper, HasGetValueTypeHash)
	bool                                          CallFunc_GetUnconsumable_ReturnValue_1;            // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E9[0x7];                                      // 0x01E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FItemCommonInfoPtr                     CallFunc_FindItemCommonInfoByNameBP_ReturnValue;   // 0x01F0(0x0008)(NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue_3;        // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue_1;          // 0x01F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UIW_DPad_Item_C_SetItem) == 0x000008, "Wrong alignment on UIW_DPad_Item_C_SetItem");
static_assert(sizeof(UIW_DPad_Item_C_SetItem) == 0x000200, "Wrong size on UIW_DPad_Item_C_SetItem");
static_assert(offsetof(UIW_DPad_Item_C_SetItem, CodeName) == 0x000000, "Member 'UIW_DPad_Item_C_SetItem::CodeName' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Item_C_SetItem, IsInit) == 0x000008, "Member 'UIW_DPad_Item_C_SetItem::IsInit' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Item_C_SetItem, LocalItem) == 0x000010, "Member 'UIW_DPad_Item_C_SetItem::LocalItem' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Item_C_SetItem, LocalConsumeInfo) == 0x000018, "Member 'UIW_DPad_Item_C_SetItem::LocalConsumeInfo' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Item_C_SetItem, LocalCommonInfo) == 0x000020, "Member 'UIW_DPad_Item_C_SetItem::LocalCommonInfo' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Item_C_SetItem, LocalCount) == 0x000028, "Member 'UIW_DPad_Item_C_SetItem::LocalCount' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Item_C_SetItem, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000030, "Member 'UIW_DPad_Item_C_SetItem::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Item_C_SetItem, CallFunc_GetPlayerInventory_ReturnValue) == 0x000038, "Member 'UIW_DPad_Item_C_SetItem::CallFunc_GetPlayerInventory_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Item_C_SetItem, CallFunc_IsValid_ReturnValue) == 0x000040, "Member 'UIW_DPad_Item_C_SetItem::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Item_C_SetItem, CallFunc_GetComplexType_ReturnValue) == 0x000041, "Member 'UIW_DPad_Item_C_SetItem::CallFunc_GetComplexType_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Item_C_SetItem, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000042, "Member 'UIW_DPad_Item_C_SetItem::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Item_C_SetItem, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000043, "Member 'UIW_DPad_Item_C_SetItem::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Item_C_SetItem, CallFunc_GetImageResource_ReturnValue) == 0x000048, "Member 'UIW_DPad_Item_C_SetItem::CallFunc_GetImageResource_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Item_C_SetItem, CallFunc_GetGameInstanceSubsystem_ReturnValue_1) == 0x000070, "Member 'UIW_DPad_Item_C_SetItem::CallFunc_GetGameInstanceSubsystem_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Item_C_SetItem, CallFunc_GetPulseRechargeable_ReturnValue) == 0x000078, "Member 'UIW_DPad_Item_C_SetItem::CallFunc_GetPulseRechargeable_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Item_C_SetItem, CallFunc_GetComplexItem_Unit_ReturnValue) == 0x000080, "Member 'UIW_DPad_Item_C_SetItem::CallFunc_GetComplexItem_Unit_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Item_C_SetItem, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000088, "Member 'UIW_DPad_Item_C_SetItem::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Item_C_SetItem, CallFunc_GetUnconsumable_ReturnValue) == 0x000089, "Member 'UIW_DPad_Item_C_SetItem::CallFunc_GetUnconsumable_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Item_C_SetItem, CallFunc_Conv_IntToFloat_ReturnValue) == 0x00008C, "Member 'UIW_DPad_Item_C_SetItem::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Item_C_SetItem, CallFunc_Greater_IntInt_ReturnValue) == 0x000090, "Member 'UIW_DPad_Item_C_SetItem::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Item_C_SetItem, CallFunc_Conv_IntToText_ReturnValue) == 0x000098, "Member 'UIW_DPad_Item_C_SetItem::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Item_C_SetItem, CallFunc_PlayAnimation_ReturnValue) == 0x0000B0, "Member 'UIW_DPad_Item_C_SetItem::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Item_C_SetItem, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0000B8, "Member 'UIW_DPad_Item_C_SetItem::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Item_C_SetItem, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x0000C0, "Member 'UIW_DPad_Item_C_SetItem::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Item_C_SetItem, CallFunc_GetCharacterStat_ReturnValue) == 0x0000C8, "Member 'UIW_DPad_Item_C_SetItem::CallFunc_GetCharacterStat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Item_C_SetItem, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x0000CC, "Member 'UIW_DPad_Item_C_SetItem::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Item_C_SetItem, CallFunc_GetCharacterStat_ReturnValue_1) == 0x0000D0, "Member 'UIW_DPad_Item_C_SetItem::CallFunc_GetCharacterStat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Item_C_SetItem, CallFunc_Divide_FloatFloat_ReturnValue) == 0x0000D4, "Member 'UIW_DPad_Item_C_SetItem::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Item_C_SetItem, CallFunc_Multiply_IntFloat_ReturnValue) == 0x0000D8, "Member 'UIW_DPad_Item_C_SetItem::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Item_C_SetItem, CallFunc_MakeVector2D_ReturnValue) == 0x0000DC, "Member 'UIW_DPad_Item_C_SetItem::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Item_C_SetItem, CallFunc_Conv_IntToText_ReturnValue_1) == 0x0000E8, "Member 'UIW_DPad_Item_C_SetItem::CallFunc_Conv_IntToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Item_C_SetItem, CallFunc_K2_SetTimer_ReturnValue) == 0x000100, "Member 'UIW_DPad_Item_C_SetItem::CallFunc_K2_SetTimer_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Item_C_SetItem, CallFunc_GetItemTotalCountByCodeName_ReturnValue) == 0x000108, "Member 'UIW_DPad_Item_C_SetItem::CallFunc_GetItemTotalCountByCodeName_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Item_C_SetItem, CallFunc_Conv_IntToText_ReturnValue_2) == 0x000110, "Member 'UIW_DPad_Item_C_SetItem::CallFunc_Conv_IntToText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Item_C_SetItem, CallFunc_EqualEqual_NameName_ReturnValue_1) == 0x000128, "Member 'UIW_DPad_Item_C_SetItem::CallFunc_EqualEqual_NameName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Item_C_SetItem, CallFunc_GetGameInstanceSubsystem_ReturnValue_2) == 0x000130, "Member 'UIW_DPad_Item_C_SetItem::CallFunc_GetGameInstanceSubsystem_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Item_C_SetItem, CallFunc_GetPlayerInventory_ReturnValue_1) == 0x000138, "Member 'UIW_DPad_Item_C_SetItem::CallFunc_GetPlayerInventory_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Item_C_SetItem, CallFunc_GetItemTotalCountByCodeName_ReturnValue_1) == 0x000140, "Member 'UIW_DPad_Item_C_SetItem::CallFunc_GetItemTotalCountByCodeName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Item_C_SetItem, CallFunc_EqualEqual_NameName_ReturnValue_2) == 0x000144, "Member 'UIW_DPad_Item_C_SetItem::CallFunc_EqualEqual_NameName_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Item_C_SetItem, CallFunc_NotEqual_NameName_ReturnValue) == 0x000145, "Member 'UIW_DPad_Item_C_SetItem::CallFunc_NotEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Item_C_SetItem, CallFunc_GetUnitUseType_ReturnValue) == 0x000146, "Member 'UIW_DPad_Item_C_SetItem::CallFunc_GetUnitUseType_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Item_C_SetItem, K2Node_SwitchEnum_CmpSuccess) == 0x000147, "Member 'UIW_DPad_Item_C_SetItem::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Item_C_SetItem, CallFunc_GetCount_ReturnValue) == 0x000148, "Member 'UIW_DPad_Item_C_SetItem::CallFunc_GetCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Item_C_SetItem, CallFunc_GetCount_ReturnValue_1) == 0x00014C, "Member 'UIW_DPad_Item_C_SetItem::CallFunc_GetCount_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Item_C_SetItem, CallFunc_Less_IntInt_ReturnValue) == 0x000150, "Member 'UIW_DPad_Item_C_SetItem::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Item_C_SetItem, CallFunc_GetGameInstanceSubsystem_ReturnValue_3) == 0x000158, "Member 'UIW_DPad_Item_C_SetItem::CallFunc_GetGameInstanceSubsystem_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Item_C_SetItem, CallFunc_GetPlayerInventory_ReturnValue_2) == 0x000160, "Member 'UIW_DPad_Item_C_SetItem::CallFunc_GetPlayerInventory_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Item_C_SetItem, CallFunc_FindItemByCodeName_ReturnValue) == 0x000168, "Member 'UIW_DPad_Item_C_SetItem::CallFunc_FindItemByCodeName_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Item_C_SetItem, CallFunc_IsValid_ReturnValue_1) == 0x000170, "Member 'UIW_DPad_Item_C_SetItem::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Item_C_SetItem, CallFunc_GetGameInstanceSubsystem_ReturnValue_4) == 0x000178, "Member 'UIW_DPad_Item_C_SetItem::CallFunc_GetGameInstanceSubsystem_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Item_C_SetItem, CallFunc_GetItemToggleImageResource_ReturnValue) == 0x000180, "Member 'UIW_DPad_Item_C_SetItem::CallFunc_GetItemToggleImageResource_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Item_C_SetItem, CallFunc_FindItemConsumeInfoByNameBP_ReturnValue) == 0x0001A8, "Member 'UIW_DPad_Item_C_SetItem::CallFunc_FindItemConsumeInfoByNameBP_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Item_C_SetItem, CallFunc_GetFirstCategory_ReturnValue) == 0x0001B0, "Member 'UIW_DPad_Item_C_SetItem::CallFunc_GetFirstCategory_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Item_C_SetItem, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x0001B1, "Member 'UIW_DPad_Item_C_SetItem::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Item_C_SetItem, CallFunc_GetCommonInfo_ReturnValue) == 0x0001B8, "Member 'UIW_DPad_Item_C_SetItem::CallFunc_GetCommonInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Item_C_SetItem, CallFunc_GetImageResource_ReturnValue_1) == 0x0001C0, "Member 'UIW_DPad_Item_C_SetItem::CallFunc_GetImageResource_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Item_C_SetItem, CallFunc_GetUnconsumable_ReturnValue_1) == 0x0001E8, "Member 'UIW_DPad_Item_C_SetItem::CallFunc_GetUnconsumable_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Item_C_SetItem, CallFunc_FindItemCommonInfoByNameBP_ReturnValue) == 0x0001F0, "Member 'UIW_DPad_Item_C_SetItem::CallFunc_FindItemCommonInfoByNameBP_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Item_C_SetItem, CallFunc_EqualEqual_NameName_ReturnValue_3) == 0x0001F8, "Member 'UIW_DPad_Item_C_SetItem::CallFunc_EqualEqual_NameName_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Item_C_SetItem, CallFunc_NotEqual_NameName_ReturnValue_1) == 0x0001F9, "Member 'UIW_DPad_Item_C_SetItem::CallFunc_NotEqual_NameName_ReturnValue_1' has a wrong offset!");

// Function UIW_DPad_Item.UIW_DPad_Item_C.OnUpdateItem
// 0x0018 (0x0018 - 0x0000)
struct UIW_DPad_Item_C_OnUpdateItem final
{
public:
	class ULItem*                                 Item;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetCodeName_ReturnValue;                  // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UIW_DPad_Item_C_OnUpdateItem) == 0x000008, "Wrong alignment on UIW_DPad_Item_C_OnUpdateItem");
static_assert(sizeof(UIW_DPad_Item_C_OnUpdateItem) == 0x000018, "Wrong size on UIW_DPad_Item_C_OnUpdateItem");
static_assert(offsetof(UIW_DPad_Item_C_OnUpdateItem, Item) == 0x000000, "Member 'UIW_DPad_Item_C_OnUpdateItem::Item' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Item_C_OnUpdateItem, CallFunc_GetCodeName_ReturnValue) == 0x000008, "Member 'UIW_DPad_Item_C_OnUpdateItem::CallFunc_GetCodeName_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Item_C_OnUpdateItem, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000010, "Member 'UIW_DPad_Item_C_OnUpdateItem::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");

// Function UIW_DPad_Item.UIW_DPad_Item_C.UpdatePulseGauge
// 0x0050 (0x0050 - 0x0000)
struct UIW_DPad_Item_C_UpdatePulseGauge final
{
public:
	struct FTweenEase                             K2Node_MakeStruct_TweenEase;                       // 0x0000(0x000C)(NoDestructor)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetCharacterStat_ReturnValue;             // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetSize_ReturnValue;                      // 0x001C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0034(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue;            // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetCharacterStat_ReturnValue_1;           // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_1;               // 0x0044(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UIW_DPad_Item_C_UpdatePulseGauge) == 0x000008, "Wrong alignment on UIW_DPad_Item_C_UpdatePulseGauge");
static_assert(sizeof(UIW_DPad_Item_C_UpdatePulseGauge) == 0x000050, "Wrong size on UIW_DPad_Item_C_UpdatePulseGauge");
static_assert(offsetof(UIW_DPad_Item_C_UpdatePulseGauge, K2Node_MakeStruct_TweenEase) == 0x000000, "Member 'UIW_DPad_Item_C_UpdatePulseGauge::K2Node_MakeStruct_TweenEase' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Item_C_UpdatePulseGauge, CallFunc_Conv_IntToFloat_ReturnValue) == 0x00000C, "Member 'UIW_DPad_Item_C_UpdatePulseGauge::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Item_C_UpdatePulseGauge, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x000010, "Member 'UIW_DPad_Item_C_UpdatePulseGauge::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Item_C_UpdatePulseGauge, CallFunc_GetCharacterStat_ReturnValue) == 0x000018, "Member 'UIW_DPad_Item_C_UpdatePulseGauge::CallFunc_GetCharacterStat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Item_C_UpdatePulseGauge, CallFunc_GetSize_ReturnValue) == 0x00001C, "Member 'UIW_DPad_Item_C_UpdatePulseGauge::CallFunc_GetSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Item_C_UpdatePulseGauge, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x000024, "Member 'UIW_DPad_Item_C_UpdatePulseGauge::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Item_C_UpdatePulseGauge, CallFunc_BreakVector2D_X) == 0x000028, "Member 'UIW_DPad_Item_C_UpdatePulseGauge::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Item_C_UpdatePulseGauge, CallFunc_BreakVector2D_Y) == 0x00002C, "Member 'UIW_DPad_Item_C_UpdatePulseGauge::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Item_C_UpdatePulseGauge, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000030, "Member 'UIW_DPad_Item_C_UpdatePulseGauge::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Item_C_UpdatePulseGauge, CallFunc_MakeVector2D_ReturnValue) == 0x000034, "Member 'UIW_DPad_Item_C_UpdatePulseGauge::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Item_C_UpdatePulseGauge, CallFunc_Multiply_IntFloat_ReturnValue) == 0x00003C, "Member 'UIW_DPad_Item_C_UpdatePulseGauge::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Item_C_UpdatePulseGauge, CallFunc_GetCharacterStat_ReturnValue_1) == 0x000040, "Member 'UIW_DPad_Item_C_UpdatePulseGauge::CallFunc_GetCharacterStat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Item_C_UpdatePulseGauge, CallFunc_MakeVector2D_ReturnValue_1) == 0x000044, "Member 'UIW_DPad_Item_C_UpdatePulseGauge::CallFunc_MakeVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Item_C_UpdatePulseGauge, CallFunc_NotEqual_IntInt_ReturnValue) == 0x00004C, "Member 'UIW_DPad_Item_C_UpdatePulseGauge::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");

// Function UIW_DPad_Item.UIW_DPad_Item_C.SetSelected
// 0x0010 (0x0010 - 0x0000)
struct UIW_DPad_Item_C_SetSelected final
{
public:
	bool                                          IsSelected;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UIW_DPad_Item_C_SetSelected) == 0x000008, "Wrong alignment on UIW_DPad_Item_C_SetSelected");
static_assert(sizeof(UIW_DPad_Item_C_SetSelected) == 0x000010, "Wrong size on UIW_DPad_Item_C_SetSelected");
static_assert(offsetof(UIW_DPad_Item_C_SetSelected, IsSelected) == 0x000000, "Member 'UIW_DPad_Item_C_SetSelected::IsSelected' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Item_C_SetSelected, CallFunc_PlayAnimation_ReturnValue) == 0x000008, "Member 'UIW_DPad_Item_C_SetSelected::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function UIW_DPad_Item.UIW_DPad_Item_C.SetPouchKey
// 0x0048 (0x0048 - 0x0000)
struct UIW_DPad_Item_C_SetPouchKey final
{
public:
	bool                                          IsGamePad;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   CallFunc_GetPouchKey_Key;                          // 0x0008(0x0018)(HasGetValueTypeHash)
	class UTexture2D*                             CallFunc_GetKeyIcon_Icon;                          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   CallFunc_GetPouchKey_Key_1;                        // 0x0028(0x0018)(HasGetValueTypeHash)
	class UTexture2D*                             CallFunc_GetKeyIcon_Icon_1;                        // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UIW_DPad_Item_C_SetPouchKey) == 0x000008, "Wrong alignment on UIW_DPad_Item_C_SetPouchKey");
static_assert(sizeof(UIW_DPad_Item_C_SetPouchKey) == 0x000048, "Wrong size on UIW_DPad_Item_C_SetPouchKey");
static_assert(offsetof(UIW_DPad_Item_C_SetPouchKey, IsGamePad) == 0x000000, "Member 'UIW_DPad_Item_C_SetPouchKey::IsGamePad' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Item_C_SetPouchKey, CallFunc_GetPouchKey_Key) == 0x000008, "Member 'UIW_DPad_Item_C_SetPouchKey::CallFunc_GetPouchKey_Key' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Item_C_SetPouchKey, CallFunc_GetKeyIcon_Icon) == 0x000020, "Member 'UIW_DPad_Item_C_SetPouchKey::CallFunc_GetKeyIcon_Icon' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Item_C_SetPouchKey, CallFunc_GetPouchKey_Key_1) == 0x000028, "Member 'UIW_DPad_Item_C_SetPouchKey::CallFunc_GetPouchKey_Key_1' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Item_C_SetPouchKey, CallFunc_GetKeyIcon_Icon_1) == 0x000040, "Member 'UIW_DPad_Item_C_SetPouchKey::CallFunc_GetKeyIcon_Icon_1' has a wrong offset!");

// Function UIW_DPad_Item.UIW_DPad_Item_C.OnChangeComplex
// 0x0014 (0x0014 - 0x0000)
struct UIW_DPad_Item_C_OnChangeComplex final
{
public:
	class FName                                   MainItemCodeName;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   UnitItemCodeName;                                  // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UIW_DPad_Item_C_OnChangeComplex) == 0x000004, "Wrong alignment on UIW_DPad_Item_C_OnChangeComplex");
static_assert(sizeof(UIW_DPad_Item_C_OnChangeComplex) == 0x000014, "Wrong size on UIW_DPad_Item_C_OnChangeComplex");
static_assert(offsetof(UIW_DPad_Item_C_OnChangeComplex, MainItemCodeName) == 0x000000, "Member 'UIW_DPad_Item_C_OnChangeComplex::MainItemCodeName' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Item_C_OnChangeComplex, UnitItemCodeName) == 0x000008, "Member 'UIW_DPad_Item_C_OnChangeComplex::UnitItemCodeName' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Item_C_OnChangeComplex, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000010, "Member 'UIW_DPad_Item_C_OnChangeComplex::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");

// Function UIW_DPad_Item.UIW_DPad_Item_C.GetPouchKey
// 0x0050 (0x0050 - 0x0000)
struct UIW_DPad_Item_C_GetPouchKey final
{
public:
	bool                                          IsGamePad;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   Key;                                               // 0x0008(0x0018)(Parm, OutParm, HasGetValueTypeHash)
	bool                                          K2Node_SwitchName_CmpSuccess;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FKey>                           CallFunc_GetInputKeyForAction_ReturnValue;         // 0x0028(0x0010)(ReferenceParm)
	struct FKey                                   CallFunc_Array_Get_Item;                           // 0x0038(0x0018)(HasGetValueTypeHash)
};
static_assert(alignof(UIW_DPad_Item_C_GetPouchKey) == 0x000008, "Wrong alignment on UIW_DPad_Item_C_GetPouchKey");
static_assert(sizeof(UIW_DPad_Item_C_GetPouchKey) == 0x000050, "Wrong size on UIW_DPad_Item_C_GetPouchKey");
static_assert(offsetof(UIW_DPad_Item_C_GetPouchKey, IsGamePad) == 0x000000, "Member 'UIW_DPad_Item_C_GetPouchKey::IsGamePad' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Item_C_GetPouchKey, Key) == 0x000008, "Member 'UIW_DPad_Item_C_GetPouchKey::Key' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Item_C_GetPouchKey, K2Node_SwitchName_CmpSuccess) == 0x000020, "Member 'UIW_DPad_Item_C_GetPouchKey::K2Node_SwitchName_CmpSuccess' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Item_C_GetPouchKey, CallFunc_GetInputKeyForAction_ReturnValue) == 0x000028, "Member 'UIW_DPad_Item_C_GetPouchKey::CallFunc_GetInputKeyForAction_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Item_C_GetPouchKey, CallFunc_Array_Get_Item) == 0x000038, "Member 'UIW_DPad_Item_C_GetPouchKey::CallFunc_Array_Get_Item' has a wrong offset!");

// Function UIW_DPad_Item.UIW_DPad_Item_C.IsComplexGrinder
// 0x0004 (0x0004 - 0x0000)
struct UIW_DPad_Item_C_IsComplexGrinder final
{
public:
	bool                                          Bool;                                              // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UIW_DPad_Item_C_IsComplexGrinder) == 0x000001, "Wrong alignment on UIW_DPad_Item_C_IsComplexGrinder");
static_assert(sizeof(UIW_DPad_Item_C_IsComplexGrinder) == 0x000004, "Wrong size on UIW_DPad_Item_C_IsComplexGrinder");
static_assert(offsetof(UIW_DPad_Item_C_IsComplexGrinder, Bool) == 0x000000, "Member 'UIW_DPad_Item_C_IsComplexGrinder::Bool' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Item_C_IsComplexGrinder, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'UIW_DPad_Item_C_IsComplexGrinder::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Item_C_IsComplexGrinder, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000002, "Member 'UIW_DPad_Item_C_IsComplexGrinder::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Item_C_IsComplexGrinder, CallFunc_BooleanAND_ReturnValue) == 0x000003, "Member 'UIW_DPad_Item_C_IsComplexGrinder::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function UIW_DPad_Item.UIW_DPad_Item_C.CanUse
// 0x0002 (0x0002 - 0x0000)
struct UIW_DPad_Item_C_CanUse final
{
public:
	bool                                          NewParam;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UIW_DPad_Item_C_CanUse) == 0x000001, "Wrong alignment on UIW_DPad_Item_C_CanUse");
static_assert(sizeof(UIW_DPad_Item_C_CanUse) == 0x000002, "Wrong size on UIW_DPad_Item_C_CanUse");
static_assert(offsetof(UIW_DPad_Item_C_CanUse, NewParam) == 0x000000, "Member 'UIW_DPad_Item_C_CanUse::NewParam' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Item_C_CanUse, CallFunc_Greater_IntInt_ReturnValue) == 0x000001, "Member 'UIW_DPad_Item_C_CanUse::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function UIW_DPad_Item.UIW_DPad_Item_C.IsGrinder
// 0x0002 (0x0002 - 0x0000)
struct UIW_DPad_Item_C_IsGrinder final
{
public:
	bool                                          Bool;                                              // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UIW_DPad_Item_C_IsGrinder) == 0x000001, "Wrong alignment on UIW_DPad_Item_C_IsGrinder");
static_assert(sizeof(UIW_DPad_Item_C_IsGrinder) == 0x000002, "Wrong size on UIW_DPad_Item_C_IsGrinder");
static_assert(offsetof(UIW_DPad_Item_C_IsGrinder, Bool) == 0x000000, "Member 'UIW_DPad_Item_C_IsGrinder::Bool' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Item_C_IsGrinder, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000001, "Member 'UIW_DPad_Item_C_IsGrinder::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");

}


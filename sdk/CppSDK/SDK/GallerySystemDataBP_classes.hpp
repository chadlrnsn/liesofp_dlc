#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GallerySystemDataBP

#include "Basic.hpp"

#include "ProjectP_classes.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass GallerySystemDataBP.GallerySystemDataBP_C
// 0x0038 (0x0218 - 0x01E0)
class AGallerySystemDataBP_C final : public ALGallerySystemData
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x01E0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x01E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 SpawnedModel;                                      // 0x01F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   SpawningCodeName;                                  // 0x01F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   ReserveSpawnCodeName;                              // 0x0200(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ReserveSpawnLocation;                              // 0x0208(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_GallerySystemDataBP(int32 EntryPoint);
	void ReceiveBeginPlay();
	void Spawn(const class FName& CodeName, const struct FVector& InLocation, class ACineCameraActor* InPreviewCam, float InPreviewCam_OriginZ);
	void OnLoaded_2FC58C774C8706F0E0E7C8A777D6A323(TSubclassOf<class UObject> Loaded);
	class AActor* GetSpawned();
	void CalcCamZByPivot(class USceneComponent* InCam, class USceneComponent* InPivot, float* OutInterval);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GallerySystemDataBP_C">();
	}
	static class AGallerySystemDataBP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AGallerySystemDataBP_C>();
	}
};
static_assert(alignof(AGallerySystemDataBP_C) == 0x000008, "Wrong alignment on AGallerySystemDataBP_C");
static_assert(sizeof(AGallerySystemDataBP_C) == 0x000218, "Wrong size on AGallerySystemDataBP_C");
static_assert(offsetof(AGallerySystemDataBP_C, UberGraphFrame) == 0x0001E0, "Member 'AGallerySystemDataBP_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AGallerySystemDataBP_C, DefaultSceneRoot) == 0x0001E8, "Member 'AGallerySystemDataBP_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(AGallerySystemDataBP_C, SpawnedModel) == 0x0001F0, "Member 'AGallerySystemDataBP_C::SpawnedModel' has a wrong offset!");
static_assert(offsetof(AGallerySystemDataBP_C, SpawningCodeName) == 0x0001F8, "Member 'AGallerySystemDataBP_C::SpawningCodeName' has a wrong offset!");
static_assert(offsetof(AGallerySystemDataBP_C, ReserveSpawnCodeName) == 0x000200, "Member 'AGallerySystemDataBP_C::ReserveSpawnCodeName' has a wrong offset!");
static_assert(offsetof(AGallerySystemDataBP_C, ReserveSpawnLocation) == 0x000208, "Member 'AGallerySystemDataBP_C::ReserveSpawnLocation' has a wrong offset!");

}


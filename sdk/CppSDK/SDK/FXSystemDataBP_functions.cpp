#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: FXSystemDataBP

#include "Basic.hpp"

#include "FXSystemDataBP_classes.hpp"
#include "FXSystemDataBP_parameters.hpp"


namespace SDK
{

// Function FXSystemDataBP.FXSystemDataBP_C.ExecuteUbergraph_FXSystemDataBP
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AFXSystemDataBP_C::ExecuteUbergraph_FXSystemDataBP(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FXSystemDataBP_C", "ExecuteUbergraph_FXSystemDataBP");

	Params::FXSystemDataBP_C_ExecuteUbergraph_FXSystemDataBP Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FXSystemDataBP.FXSystemDataBP_C.SetBloodOnOff
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bOnOff                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AFXSystemDataBP_C::SetBloodOnOff(bool bOnOff)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FXSystemDataBP_C", "SetBloodOnOff");

	Params::FXSystemDataBP_C_SetBloodOnOff Parms{};

	Parms.bOnOff = bOnOff;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FXSystemDataBP.FXSystemDataBP_C.PlaySocketTracerHitEffect_SFX
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// class FName                             EventName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FTransform                       HitTransform                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor)
// ELPhysicalSurfaceType                   AttackerPhysicalSurface                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// ELPhysicalSurfaceType                   GroundPhysicalSurface                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AFXSystemDataBP_C::PlaySocketTracerHitEffect_SFX(class FName EventName, const struct FTransform& HitTransform, ELPhysicalSurfaceType AttackerPhysicalSurface, ELPhysicalSurfaceType GroundPhysicalSurface)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FXSystemDataBP_C", "PlaySocketTracerHitEffect_SFX");

	Params::FXSystemDataBP_C_PlaySocketTracerHitEffect_SFX Parms{};

	Parms.EventName = EventName;
	Parms.HitTransform = std::move(HitTransform);
	Parms.AttackerPhysicalSurface = AttackerPhysicalSurface;
	Parms.GroundPhysicalSurface = GroundPhysicalSurface;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FXSystemDataBP.FXSystemDataBP_C.PlaySocketTracerHitEffect_FX
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// class FName                             EventName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FTransform                       HitTransform                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor)
// ELPhysicalSurfaceType                   AttackerPhysicalSurface                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// ELPhysicalSurfaceType                   GroundPhysicalSurface                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AFXSystemDataBP_C::PlaySocketTracerHitEffect_FX(class FName EventName, const struct FTransform& HitTransform, ELPhysicalSurfaceType AttackerPhysicalSurface, ELPhysicalSurfaceType GroundPhysicalSurface)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FXSystemDataBP_C", "PlaySocketTracerHitEffect_FX");

	Params::FXSystemDataBP_C_PlaySocketTracerHitEffect_FX Parms{};

	Parms.EventName = EventName;
	Parms.HitTransform = std::move(HitTransform);
	Parms.AttackerPhysicalSurface = AttackerPhysicalSurface;
	Parms.GroundPhysicalSurface = GroundPhysicalSurface;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FXSystemDataBP.FXSystemDataBP_C.OnEndTalk
// (Event, Public, BlueprintEvent)

void AFXSystemDataBP_C::OnEndTalk()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FXSystemDataBP_C", "OnEndTalk");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FXSystemDataBP.FXSystemDataBP_C.OnBeginTalk
// (Event, Public, BlueprintEvent)

void AFXSystemDataBP_C::OnBeginTalk()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FXSystemDataBP_C", "OnBeginTalk");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FXSystemDataBP.FXSystemDataBP_C.SetFatalIndicatorState
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// class FName                             IndicatorKey                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ALCharacter*                      TargetActor                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// ELFatalIndicatorState                   PrevState                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// ELFatalIndicatorState                   CurrentState                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FTransform                       FxTransform                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor)

void AFXSystemDataBP_C::SetFatalIndicatorState(class FName IndicatorKey, class ALCharacter* TargetActor, ELFatalIndicatorState PrevState, ELFatalIndicatorState CurrentState, const struct FTransform& FxTransform)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FXSystemDataBP_C", "SetFatalIndicatorState");

	Params::FXSystemDataBP_C_SetFatalIndicatorState Parms{};

	Parms.IndicatorKey = IndicatorKey;
	Parms.TargetActor = TargetActor;
	Parms.PrevState = PrevState;
	Parms.CurrentState = CurrentState;
	Parms.FxTransform = std::move(FxTransform);

	UObject::ProcessEvent(Func, &Parms);
}


// Function FXSystemDataBP.FXSystemDataBP_C.OnPulseRecharged
// (Event, Public, BlueprintEvent)

void AFXSystemDataBP_C::OnPulseRecharged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FXSystemDataBP_C", "OnPulseRecharged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FXSystemDataBP.FXSystemDataBP_C.OnParalyzationOcurred
// (Event, Public, BlueprintEvent)
// Parameters:
// class AActor*                           Victim                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AFXSystemDataBP_C::OnParalyzationOcurred(class AActor* Victim)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FXSystemDataBP_C", "OnParalyzationOcurred");

	Params::FXSystemDataBP_C_OnParalyzationOcurred Parms{};

	Parms.Victim = Victim;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FXSystemDataBP.FXSystemDataBP_C.OnTorsionCoilPostProcess
// (Event, Public, BlueprintEvent)

void AFXSystemDataBP_C::OnTorsionCoilPostProcess()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FXSystemDataBP_C", "OnTorsionCoilPostProcess");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FXSystemDataBP.FXSystemDataBP_C.OnDisappear
// (Event, Public, BlueprintEvent)
// Parameters:
// class ALCharacter*                      Character                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AFXSystemDataBP_C::OnDisappear(class ALCharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FXSystemDataBP_C", "OnDisappear");

	Params::FXSystemDataBP_C_OnDisappear Parms{};

	Parms.Character = Character;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FXSystemDataBP.FXSystemDataBP_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AFXSystemDataBP_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FXSystemDataBP_C", "ReceiveTick");

	Params::FXSystemDataBP_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FXSystemDataBP.FXSystemDataBP_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void AFXSystemDataBP_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FXSystemDataBP_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FXSystemDataBP.FXSystemDataBP_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void AFXSystemDataBP_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FXSystemDataBP_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FXSystemDataBP.FXSystemDataBP_C.OnBuffEffect
// (Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             EventName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// ELPhysicalSurfaceType                   PhysicalSurface                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             AttachedSocketName                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLAttachedEffectSet              ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, ContainsInstancedReference)

struct FLAttachedEffectSet AFXSystemDataBP_C::OnBuffEffect(class AActor* Actor, class FName EventName, ELPhysicalSurfaceType PhysicalSurface, class FName AttachedSocketName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FXSystemDataBP_C", "OnBuffEffect");

	Params::FXSystemDataBP_C_OnBuffEffect Parms{};

	Parms.Actor = Actor;
	Parms.EventName = EventName;
	Parms.PhysicalSurface = PhysicalSurface;
	Parms.AttachedSocketName = AttachedSocketName;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function FXSystemDataBP.FXSystemDataBP_C.ActiveFuryAttack
// (Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ALNPCCharacter*                   InTarget                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bActive                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   InVolumeModifier                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLAttachedEffectSet              ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, ContainsInstancedReference)

struct FLAttachedEffectSet AFXSystemDataBP_C::ActiveFuryAttack(class ALNPCCharacter* InTarget, bool bActive, float InVolumeModifier)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FXSystemDataBP_C", "ActiveFuryAttack");

	Params::FXSystemDataBP_C_ActiveFuryAttack Parms{};

	Parms.InTarget = InTarget;
	Parms.bActive = bActive;
	Parms.InVolumeModifier = InVolumeModifier;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function FXSystemDataBP.FXSystemDataBP_C.StartGainFrenzyMaterialFXByFuryAttack
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void AFXSystemDataBP_C::StartGainFrenzyMaterialFXByFuryAttack()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FXSystemDataBP_C", "StartGainFrenzyMaterialFXByFuryAttack");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FXSystemDataBP.FXSystemDataBP_C.ClearGainFrenzyMaterialFXByFuryAttack
// (Public, BlueprintCallable, BlueprintEvent)

void AFXSystemDataBP_C::ClearGainFrenzyMaterialFXByFuryAttack()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FXSystemDataBP_C", "ClearGainFrenzyMaterialFXByFuryAttack");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FXSystemDataBP.FXSystemDataBP_C.SetFatalIndicatorState_Inner
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLFatalIndicatorFx               FxData                                                 (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, ContainsInstancedReference)
// ELFatalIndicatorState                   PrevState                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// ELFatalIndicatorState                   CurrentState                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AFXSystemDataBP_C::SetFatalIndicatorState_Inner(class FName Key, const struct FLFatalIndicatorFx& FxData, ELFatalIndicatorState PrevState, ELFatalIndicatorState CurrentState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FXSystemDataBP_C", "SetFatalIndicatorState_Inner");

	Params::FXSystemDataBP_C_SetFatalIndicatorState_Inner Parms{};

	Parms.Key = Key;
	Parms.FxData = std::move(FxData);
	Parms.PrevState = PrevState;
	Parms.CurrentState = CurrentState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FXSystemDataBP.FXSystemDataBP_C.GetWeaponMaterialVarying
// (Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             MaterialFxCodename                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TSoftObjectPtr<class ULMaterialVarying> ReturnValue                                            (Parm, OutParm, ReturnParm, UObjectWrapper, HasGetValueTypeHash)

TSoftObjectPtr<class ULMaterialVarying> AFXSystemDataBP_C::GetWeaponMaterialVarying(class FName MaterialFxCodename)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FXSystemDataBP_C", "GetWeaponMaterialVarying");

	Params::FXSystemDataBP_C_GetWeaponMaterialVarying Parms{};

	Parms.MaterialFxCodename = MaterialFxCodename;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function FXSystemDataBP.FXSystemDataBP_C.GetWeaponTrailElementFX
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             ElementFXCodename                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UNiagaraSystem*                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

class UNiagaraSystem* AFXSystemDataBP_C::GetWeaponTrailElementFX(class FName ElementFXCodename)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FXSystemDataBP_C", "GetWeaponTrailElementFX");

	Params::FXSystemDataBP_C_GetWeaponTrailElementFX Parms{};

	Parms.ElementFXCodename = ElementFXCodename;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}


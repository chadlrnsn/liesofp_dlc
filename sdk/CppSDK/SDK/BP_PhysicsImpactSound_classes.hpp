#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PhysicsImpactSound

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_PhysicsImpactSound.BP_PhysicsImpactSound_C
// 0x0068 (0x0118 - 0x00B0)
class UBP_PhysicsImpactSound_C final : public UActorComponent
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x00B0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	float                                         ImpulseThreshold;                                  // 0x00B8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         VolumeSensitivity;                                 // 0x00BC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MaxCount;                                          // 0x00C0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ActiveLoopEventTime;                               // 0x00C4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DisableEventTime;                                  // 0x00C8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CC[0x4];                                       // 0x00CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             ImpactSound;                                       // 0x00D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UPrimitiveComponent*>            MeshComponentList;                                 // 0x00D8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	bool                                          IsPlayble;                                         // 0x00E8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E9[0x7];                                       // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           ActiveLoopEventTimeHandle;                         // 0x00F0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           DisableTimeHandle;                                 // 0x00F8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          InitCollectComponent;                              // 0x0100(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_101[0x7];                                      // 0x0101(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         ActorList;                                         // 0x0108(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)

public:
	void ExecuteUbergraph_BP_PhysicsImpactSound(int32 EntryPoint);
	void DeActivateImpactSound();
	void OnDisableEvent();
	void HitEvent(class AActor* SelfActor, class AActor* OtherActor, const struct FVector& NormalImpulse, const struct FHitResult& Hit);
	void ActivateImpactSound();
	void SetEventTimer();
	void AllClearEvent();
	void ResetTime();
	void ReceiveTick(float DeltaSeconds);
	void ReceiveBeginPlay();
	void CollectComponent(TArray<class USceneComponent*>& ComponentList, class UClass* ComponentClass, class AActor* InActor);
	void AddActor(class AActor* InActor);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_PhysicsImpactSound_C">();
	}
	static class UBP_PhysicsImpactSound_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_PhysicsImpactSound_C>();
	}
};
static_assert(alignof(UBP_PhysicsImpactSound_C) == 0x000008, "Wrong alignment on UBP_PhysicsImpactSound_C");
static_assert(sizeof(UBP_PhysicsImpactSound_C) == 0x000118, "Wrong size on UBP_PhysicsImpactSound_C");
static_assert(offsetof(UBP_PhysicsImpactSound_C, UberGraphFrame) == 0x0000B0, "Member 'UBP_PhysicsImpactSound_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_PhysicsImpactSound_C, ImpulseThreshold) == 0x0000B8, "Member 'UBP_PhysicsImpactSound_C::ImpulseThreshold' has a wrong offset!");
static_assert(offsetof(UBP_PhysicsImpactSound_C, VolumeSensitivity) == 0x0000BC, "Member 'UBP_PhysicsImpactSound_C::VolumeSensitivity' has a wrong offset!");
static_assert(offsetof(UBP_PhysicsImpactSound_C, MaxCount) == 0x0000C0, "Member 'UBP_PhysicsImpactSound_C::MaxCount' has a wrong offset!");
static_assert(offsetof(UBP_PhysicsImpactSound_C, ActiveLoopEventTime) == 0x0000C4, "Member 'UBP_PhysicsImpactSound_C::ActiveLoopEventTime' has a wrong offset!");
static_assert(offsetof(UBP_PhysicsImpactSound_C, DisableEventTime) == 0x0000C8, "Member 'UBP_PhysicsImpactSound_C::DisableEventTime' has a wrong offset!");
static_assert(offsetof(UBP_PhysicsImpactSound_C, ImpactSound) == 0x0000D0, "Member 'UBP_PhysicsImpactSound_C::ImpactSound' has a wrong offset!");
static_assert(offsetof(UBP_PhysicsImpactSound_C, MeshComponentList) == 0x0000D8, "Member 'UBP_PhysicsImpactSound_C::MeshComponentList' has a wrong offset!");
static_assert(offsetof(UBP_PhysicsImpactSound_C, IsPlayble) == 0x0000E8, "Member 'UBP_PhysicsImpactSound_C::IsPlayble' has a wrong offset!");
static_assert(offsetof(UBP_PhysicsImpactSound_C, ActiveLoopEventTimeHandle) == 0x0000F0, "Member 'UBP_PhysicsImpactSound_C::ActiveLoopEventTimeHandle' has a wrong offset!");
static_assert(offsetof(UBP_PhysicsImpactSound_C, DisableTimeHandle) == 0x0000F8, "Member 'UBP_PhysicsImpactSound_C::DisableTimeHandle' has a wrong offset!");
static_assert(offsetof(UBP_PhysicsImpactSound_C, InitCollectComponent) == 0x000100, "Member 'UBP_PhysicsImpactSound_C::InitCollectComponent' has a wrong offset!");
static_assert(offsetof(UBP_PhysicsImpactSound_C, ActorList) == 0x000108, "Member 'UBP_PhysicsImpactSound_C::ActorList' has a wrong offset!");

}


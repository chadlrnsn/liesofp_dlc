#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: EditorStyle

#include "Basic.hpp"

#include "EditorStyle_structs.hpp"
#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "CoreUObject_classes.hpp"


namespace SDK
{

// Class EditorStyle.EditorStyleSettings
// 0x02C8 (0x02F0 - 0x0028)
class UEditorStyleSettings final : public UObject
{
public:
	bool                                          bEnableHighDPIAwareness;                           // 0x0028(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bEnableUserEditorLayoutManagement;                 // 0x0029(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EColorVisionDeficiency                        ColorVisionDeficiencyPreviewType;                  // 0x002A(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2B[0x1];                                       // 0x002B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ColorVisionDeficiencySeverity;                     // 0x002C(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bColorVisionDeficiencyCorrection;                  // 0x0030(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bColorVisionDeficiencyCorrectionPreviewWithDeficiency; // 0x0031(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_32[0x2];                                       // 0x0032(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           SelectionColor;                                    // 0x0034(0x0010)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           PressedSelectionColor;                             // 0x0044(0x0010)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           InactiveSelectionColor;                            // 0x0054(0x0010)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           KeyboardFocusColor;                                // 0x0064(0x0010)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           EditorWindowBackgroundColor;                       // 0x0074(0x0010)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            EditorMainWindowBackgroundOverride;                // 0x0088(0x0088)(Edit, Config, NativeAccessSpecifierPublic)
	struct FSlateBrush                            EditorChildWindowBackgroundOverride;               // 0x0110(0x0088)(Edit, Config, NativeAccessSpecifierPublic)
	bool                                          bResetEditorWindowBackgroundSettings;              // 0x0198(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_199[0x3];                                      // 0x0199(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	uint8                                         bUseSmallToolBarIcons : 1;                         // 0x019C(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bUseGrid : 1;                                      // 0x019C(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_19D[0x3];                                      // 0x019D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           RegularColor;                                      // 0x01A0(0x0010)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           RuleColor;                                         // 0x01B0(0x0010)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           CenterColor;                                       // 0x01C0(0x0010)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32                                        GridSnapSize;                                      // 0x01D0(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1D4[0x4];                                      // 0x01D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            GraphBackgroundBrush;                              // 0x01D8(0x0088)(Edit, Config, NativeAccessSpecifierPublic)
	uint8                                         bEnableWindowAnimations : 1;                       // 0x0260(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bShowFriendlyNames : 1;                            // 0x0260(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bShowNativeComponentNames : 1;                     // 0x0260(0x0001)(BitIndex: 0x02, PropSize: 0x0001 (Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bExpandConfigurationMenus : 1;                     // 0x0260(0x0001)(BitIndex: 0x03, PropSize: 0x0001 (Edit, Config, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bShowProjectMenus : 1;                             // 0x0260(0x0001)(BitIndex: 0x04, PropSize: 0x0001 (Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bShowLaunchMenus : 1;                              // 0x0260(0x0001)(BitIndex: 0x05, PropSize: 0x0001 (Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_261[0x3];                                      // 0x0261(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           LogBackgroundColor;                                // 0x0264(0x0010)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           LogSelectionBackgroundColor;                       // 0x0274(0x0010)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           LogNormalColor;                                    // 0x0284(0x0010)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           LogCommandColor;                                   // 0x0294(0x0010)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           LogWarningColor;                                   // 0x02A4(0x0010)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           LogErrorColor;                                     // 0x02B4(0x0010)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         bShowAllAdvancedDetails : 1;                       // 0x02C4(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bShowHiddenPropertiesWhilePlaying : 1;             // 0x02C4(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_2C5[0x3];                                      // 0x02C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         LogFontSize;                                       // 0x02C8(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ELogTimes                                     LogTimestampMode;                                  // 0x02CC(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bPromoteOutputLogWarningsDuringPIE;                // 0x02CD(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EAssetEditorOpenLocation                      AssetEditorOpenLocation;                           // 0x02CE(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2CF[0x1];                                      // 0x02CF(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	uint8                                         bEnableColorizedEditorTabs : 1;                    // 0x02D0(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bEnableLegacyEditorModeUI : 1;                     // 0x02D0(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (Edit, Config, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_2D1[0x1F];                                     // 0x02D1(0x001F)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"EditorStyleSettings">();
	}
	static class UEditorStyleSettings* GetDefaultObj()
	{
		return GetDefaultObjImpl<UEditorStyleSettings>();
	}
};
static_assert(alignof(UEditorStyleSettings) == 0x000008, "Wrong alignment on UEditorStyleSettings");
static_assert(sizeof(UEditorStyleSettings) == 0x0002F0, "Wrong size on UEditorStyleSettings");
static_assert(offsetof(UEditorStyleSettings, bEnableHighDPIAwareness) == 0x000028, "Member 'UEditorStyleSettings::bEnableHighDPIAwareness' has a wrong offset!");
static_assert(offsetof(UEditorStyleSettings, bEnableUserEditorLayoutManagement) == 0x000029, "Member 'UEditorStyleSettings::bEnableUserEditorLayoutManagement' has a wrong offset!");
static_assert(offsetof(UEditorStyleSettings, ColorVisionDeficiencyPreviewType) == 0x00002A, "Member 'UEditorStyleSettings::ColorVisionDeficiencyPreviewType' has a wrong offset!");
static_assert(offsetof(UEditorStyleSettings, ColorVisionDeficiencySeverity) == 0x00002C, "Member 'UEditorStyleSettings::ColorVisionDeficiencySeverity' has a wrong offset!");
static_assert(offsetof(UEditorStyleSettings, bColorVisionDeficiencyCorrection) == 0x000030, "Member 'UEditorStyleSettings::bColorVisionDeficiencyCorrection' has a wrong offset!");
static_assert(offsetof(UEditorStyleSettings, bColorVisionDeficiencyCorrectionPreviewWithDeficiency) == 0x000031, "Member 'UEditorStyleSettings::bColorVisionDeficiencyCorrectionPreviewWithDeficiency' has a wrong offset!");
static_assert(offsetof(UEditorStyleSettings, SelectionColor) == 0x000034, "Member 'UEditorStyleSettings::SelectionColor' has a wrong offset!");
static_assert(offsetof(UEditorStyleSettings, PressedSelectionColor) == 0x000044, "Member 'UEditorStyleSettings::PressedSelectionColor' has a wrong offset!");
static_assert(offsetof(UEditorStyleSettings, InactiveSelectionColor) == 0x000054, "Member 'UEditorStyleSettings::InactiveSelectionColor' has a wrong offset!");
static_assert(offsetof(UEditorStyleSettings, KeyboardFocusColor) == 0x000064, "Member 'UEditorStyleSettings::KeyboardFocusColor' has a wrong offset!");
static_assert(offsetof(UEditorStyleSettings, EditorWindowBackgroundColor) == 0x000074, "Member 'UEditorStyleSettings::EditorWindowBackgroundColor' has a wrong offset!");
static_assert(offsetof(UEditorStyleSettings, EditorMainWindowBackgroundOverride) == 0x000088, "Member 'UEditorStyleSettings::EditorMainWindowBackgroundOverride' has a wrong offset!");
static_assert(offsetof(UEditorStyleSettings, EditorChildWindowBackgroundOverride) == 0x000110, "Member 'UEditorStyleSettings::EditorChildWindowBackgroundOverride' has a wrong offset!");
static_assert(offsetof(UEditorStyleSettings, bResetEditorWindowBackgroundSettings) == 0x000198, "Member 'UEditorStyleSettings::bResetEditorWindowBackgroundSettings' has a wrong offset!");
static_assert(offsetof(UEditorStyleSettings, RegularColor) == 0x0001A0, "Member 'UEditorStyleSettings::RegularColor' has a wrong offset!");
static_assert(offsetof(UEditorStyleSettings, RuleColor) == 0x0001B0, "Member 'UEditorStyleSettings::RuleColor' has a wrong offset!");
static_assert(offsetof(UEditorStyleSettings, CenterColor) == 0x0001C0, "Member 'UEditorStyleSettings::CenterColor' has a wrong offset!");
static_assert(offsetof(UEditorStyleSettings, GridSnapSize) == 0x0001D0, "Member 'UEditorStyleSettings::GridSnapSize' has a wrong offset!");
static_assert(offsetof(UEditorStyleSettings, GraphBackgroundBrush) == 0x0001D8, "Member 'UEditorStyleSettings::GraphBackgroundBrush' has a wrong offset!");
static_assert(offsetof(UEditorStyleSettings, LogBackgroundColor) == 0x000264, "Member 'UEditorStyleSettings::LogBackgroundColor' has a wrong offset!");
static_assert(offsetof(UEditorStyleSettings, LogSelectionBackgroundColor) == 0x000274, "Member 'UEditorStyleSettings::LogSelectionBackgroundColor' has a wrong offset!");
static_assert(offsetof(UEditorStyleSettings, LogNormalColor) == 0x000284, "Member 'UEditorStyleSettings::LogNormalColor' has a wrong offset!");
static_assert(offsetof(UEditorStyleSettings, LogCommandColor) == 0x000294, "Member 'UEditorStyleSettings::LogCommandColor' has a wrong offset!");
static_assert(offsetof(UEditorStyleSettings, LogWarningColor) == 0x0002A4, "Member 'UEditorStyleSettings::LogWarningColor' has a wrong offset!");
static_assert(offsetof(UEditorStyleSettings, LogErrorColor) == 0x0002B4, "Member 'UEditorStyleSettings::LogErrorColor' has a wrong offset!");
static_assert(offsetof(UEditorStyleSettings, LogFontSize) == 0x0002C8, "Member 'UEditorStyleSettings::LogFontSize' has a wrong offset!");
static_assert(offsetof(UEditorStyleSettings, LogTimestampMode) == 0x0002CC, "Member 'UEditorStyleSettings::LogTimestampMode' has a wrong offset!");
static_assert(offsetof(UEditorStyleSettings, bPromoteOutputLogWarningsDuringPIE) == 0x0002CD, "Member 'UEditorStyleSettings::bPromoteOutputLogWarningsDuringPIE' has a wrong offset!");
static_assert(offsetof(UEditorStyleSettings, AssetEditorOpenLocation) == 0x0002CE, "Member 'UEditorStyleSettings::AssetEditorOpenLocation' has a wrong offset!");

}


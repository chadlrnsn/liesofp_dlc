#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Action_Guard_Hit_Normal

#include "Basic.hpp"

#include "BP_Action_HitBase_classes.hpp"
#include "ProjectP_structs.hpp"
#include "Engine_structs.hpp"
#include "ProjectPContentInfo_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Action_Guard_Hit_Normal.BP_Action_Guard_Hit_Normal_C
// 0x0040 (0x0460 - 0x0420)
class UBP_Action_Guard_Hit_Normal_C : public UBP_Action_HitBase_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_Action_Guard_Hit_Normal_C;       // 0x0420(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FLGameObjectHandle                     MoveModifierHandle_Horizontal;                     // 0x0428(0x0004)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	bool                                          BackHit;                                           // 0x042C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          LoopCancelByHitAnimDuration;                       // 0x042D(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_42E[0x2];                                      // 0x042E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           OnHitAnimEndedTimer;                               // 0x0430(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          SuperArmorAdded;                                   // 0x0438(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsGuardRotation;                                   // 0x0439(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsGuardBreak;                                      // 0x043A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_43B[0x5];                                      // 0x043B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveVector*                           Cached_CurveVector;                                // 0x0440(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           Cached_TimerOnGuardHitEnded;                       // 0x0448(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          Cached_Interrupted;                                // 0x0450(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_451[0x3];                                      // 0x0451(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         GuardHitDuration_Min;                              // 0x0454(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Arm_GuardEx;                                       // 0x0458(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_BP_Action_Guard_Hit_Normal(int32 EntryPoint);
	void OnStopByMe(class ULActBase* StoppingAction);
	void OnGuardHitEnded();
	void OnCurrMontageBlendOutStarted(class UAnimMontage* Montage, bool bInterrupted, int32 MontageInstanceID);
	void OnCurrMontageEnded(class UAnimMontage* Montage, bool bInterrupted, int32 MontageInstanceID);
	void OnStop(class ULActBase* ReasonAction, class FName Reason);
	void OnStart();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Action_Guard_Hit_Normal_C">();
	}
	static class UBP_Action_Guard_Hit_Normal_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_Action_Guard_Hit_Normal_C>();
	}
};
static_assert(alignof(UBP_Action_Guard_Hit_Normal_C) == 0x000008, "Wrong alignment on UBP_Action_Guard_Hit_Normal_C");
static_assert(sizeof(UBP_Action_Guard_Hit_Normal_C) == 0x000460, "Wrong size on UBP_Action_Guard_Hit_Normal_C");
static_assert(offsetof(UBP_Action_Guard_Hit_Normal_C, UberGraphFrame_BP_Action_Guard_Hit_Normal_C) == 0x000420, "Member 'UBP_Action_Guard_Hit_Normal_C::UberGraphFrame_BP_Action_Guard_Hit_Normal_C' has a wrong offset!");
static_assert(offsetof(UBP_Action_Guard_Hit_Normal_C, MoveModifierHandle_Horizontal) == 0x000428, "Member 'UBP_Action_Guard_Hit_Normal_C::MoveModifierHandle_Horizontal' has a wrong offset!");
static_assert(offsetof(UBP_Action_Guard_Hit_Normal_C, BackHit) == 0x00042C, "Member 'UBP_Action_Guard_Hit_Normal_C::BackHit' has a wrong offset!");
static_assert(offsetof(UBP_Action_Guard_Hit_Normal_C, LoopCancelByHitAnimDuration) == 0x00042D, "Member 'UBP_Action_Guard_Hit_Normal_C::LoopCancelByHitAnimDuration' has a wrong offset!");
static_assert(offsetof(UBP_Action_Guard_Hit_Normal_C, OnHitAnimEndedTimer) == 0x000430, "Member 'UBP_Action_Guard_Hit_Normal_C::OnHitAnimEndedTimer' has a wrong offset!");
static_assert(offsetof(UBP_Action_Guard_Hit_Normal_C, SuperArmorAdded) == 0x000438, "Member 'UBP_Action_Guard_Hit_Normal_C::SuperArmorAdded' has a wrong offset!");
static_assert(offsetof(UBP_Action_Guard_Hit_Normal_C, IsGuardRotation) == 0x000439, "Member 'UBP_Action_Guard_Hit_Normal_C::IsGuardRotation' has a wrong offset!");
static_assert(offsetof(UBP_Action_Guard_Hit_Normal_C, IsGuardBreak) == 0x00043A, "Member 'UBP_Action_Guard_Hit_Normal_C::IsGuardBreak' has a wrong offset!");
static_assert(offsetof(UBP_Action_Guard_Hit_Normal_C, Cached_CurveVector) == 0x000440, "Member 'UBP_Action_Guard_Hit_Normal_C::Cached_CurveVector' has a wrong offset!");
static_assert(offsetof(UBP_Action_Guard_Hit_Normal_C, Cached_TimerOnGuardHitEnded) == 0x000448, "Member 'UBP_Action_Guard_Hit_Normal_C::Cached_TimerOnGuardHitEnded' has a wrong offset!");
static_assert(offsetof(UBP_Action_Guard_Hit_Normal_C, Cached_Interrupted) == 0x000450, "Member 'UBP_Action_Guard_Hit_Normal_C::Cached_Interrupted' has a wrong offset!");
static_assert(offsetof(UBP_Action_Guard_Hit_Normal_C, GuardHitDuration_Min) == 0x000454, "Member 'UBP_Action_Guard_Hit_Normal_C::GuardHitDuration_Min' has a wrong offset!");
static_assert(offsetof(UBP_Action_Guard_Hit_Normal_C, Arm_GuardEx) == 0x000458, "Member 'UBP_Action_Guard_Hit_Normal_C::Arm_GuardEx' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UIW_SlaveArm_ListItem

#include "Basic.hpp"

#include "ProjectP_structs.hpp"
#include "ProjectPContentInfo_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function UIW_SlaveArm_ListItem.UIW_SlaveArm_ListItem_C.ExecuteUbergraph_UIW_SlaveArm_ListItem
// 0x0130 (0x0130 - 0x0000)
struct UIW_SlaveArm_ListItem_C_ExecuteUbergraph_UIW_SlaveArm_ListItem final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bIsExpanded;                          // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_Event_ListItemObject;                       // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bIsSelected;                          // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0014(0x0038)(IsPlainOldData, NoDestructor)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerEvent                          K2Node_Event_MouseEvent_1;                         // 0x0050(0x0070)(ConstParm)
	struct FPointerEvent                          K2Node_Event_MouseEvent;                           // 0x00C0(0x0070)(ConstParm)
};
static_assert(alignof(UIW_SlaveArm_ListItem_C_ExecuteUbergraph_UIW_SlaveArm_ListItem) == 0x000008, "Wrong alignment on UIW_SlaveArm_ListItem_C_ExecuteUbergraph_UIW_SlaveArm_ListItem");
static_assert(sizeof(UIW_SlaveArm_ListItem_C_ExecuteUbergraph_UIW_SlaveArm_ListItem) == 0x000130, "Wrong size on UIW_SlaveArm_ListItem_C_ExecuteUbergraph_UIW_SlaveArm_ListItem");
static_assert(offsetof(UIW_SlaveArm_ListItem_C_ExecuteUbergraph_UIW_SlaveArm_ListItem, EntryPoint) == 0x000000, "Member 'UIW_SlaveArm_ListItem_C_ExecuteUbergraph_UIW_SlaveArm_ListItem::EntryPoint' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_ListItem_C_ExecuteUbergraph_UIW_SlaveArm_ListItem, K2Node_Event_bIsExpanded) == 0x000004, "Member 'UIW_SlaveArm_ListItem_C_ExecuteUbergraph_UIW_SlaveArm_ListItem::K2Node_Event_bIsExpanded' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_ListItem_C_ExecuteUbergraph_UIW_SlaveArm_ListItem, K2Node_Event_ListItemObject) == 0x000008, "Member 'UIW_SlaveArm_ListItem_C_ExecuteUbergraph_UIW_SlaveArm_ListItem::K2Node_Event_ListItemObject' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_ListItem_C_ExecuteUbergraph_UIW_SlaveArm_ListItem, K2Node_Event_bIsSelected) == 0x000010, "Member 'UIW_SlaveArm_ListItem_C_ExecuteUbergraph_UIW_SlaveArm_ListItem::K2Node_Event_bIsSelected' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_ListItem_C_ExecuteUbergraph_UIW_SlaveArm_ListItem, K2Node_Event_MyGeometry) == 0x000014, "Member 'UIW_SlaveArm_ListItem_C_ExecuteUbergraph_UIW_SlaveArm_ListItem::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_ListItem_C_ExecuteUbergraph_UIW_SlaveArm_ListItem, K2Node_Event_MouseEvent_1) == 0x000050, "Member 'UIW_SlaveArm_ListItem_C_ExecuteUbergraph_UIW_SlaveArm_ListItem::K2Node_Event_MouseEvent_1' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_ListItem_C_ExecuteUbergraph_UIW_SlaveArm_ListItem, K2Node_Event_MouseEvent) == 0x0000C0, "Member 'UIW_SlaveArm_ListItem_C_ExecuteUbergraph_UIW_SlaveArm_ListItem::K2Node_Event_MouseEvent' has a wrong offset!");

// Function UIW_SlaveArm_ListItem.UIW_SlaveArm_ListItem_C.OnMouseLeave
// 0x0070 (0x0070 - 0x0000)
struct UIW_SlaveArm_ListItem_C_OnMouseLeave final
{
public:
	struct FPointerEvent                          MouseEvent;                                        // 0x0000(0x0070)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(UIW_SlaveArm_ListItem_C_OnMouseLeave) == 0x000008, "Wrong alignment on UIW_SlaveArm_ListItem_C_OnMouseLeave");
static_assert(sizeof(UIW_SlaveArm_ListItem_C_OnMouseLeave) == 0x000070, "Wrong size on UIW_SlaveArm_ListItem_C_OnMouseLeave");
static_assert(offsetof(UIW_SlaveArm_ListItem_C_OnMouseLeave, MouseEvent) == 0x000000, "Member 'UIW_SlaveArm_ListItem_C_OnMouseLeave::MouseEvent' has a wrong offset!");

// Function UIW_SlaveArm_ListItem.UIW_SlaveArm_ListItem_C.OnMouseEnter
// 0x00A8 (0x00A8 - 0x0000)
struct UIW_SlaveArm_ListItem_C_OnMouseEnter final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0070)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(UIW_SlaveArm_ListItem_C_OnMouseEnter) == 0x000008, "Wrong alignment on UIW_SlaveArm_ListItem_C_OnMouseEnter");
static_assert(sizeof(UIW_SlaveArm_ListItem_C_OnMouseEnter) == 0x0000A8, "Wrong size on UIW_SlaveArm_ListItem_C_OnMouseEnter");
static_assert(offsetof(UIW_SlaveArm_ListItem_C_OnMouseEnter, MyGeometry) == 0x000000, "Member 'UIW_SlaveArm_ListItem_C_OnMouseEnter::MyGeometry' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_ListItem_C_OnMouseEnter, MouseEvent) == 0x000038, "Member 'UIW_SlaveArm_ListItem_C_OnMouseEnter::MouseEvent' has a wrong offset!");

// Function UIW_SlaveArm_ListItem.UIW_SlaveArm_ListItem_C.BP_OnItemSelectionChanged
// 0x0001 (0x0001 - 0x0000)
struct UIW_SlaveArm_ListItem_C_BP_OnItemSelectionChanged final
{
public:
	bool                                          bIsSelected;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UIW_SlaveArm_ListItem_C_BP_OnItemSelectionChanged) == 0x000001, "Wrong alignment on UIW_SlaveArm_ListItem_C_BP_OnItemSelectionChanged");
static_assert(sizeof(UIW_SlaveArm_ListItem_C_BP_OnItemSelectionChanged) == 0x000001, "Wrong size on UIW_SlaveArm_ListItem_C_BP_OnItemSelectionChanged");
static_assert(offsetof(UIW_SlaveArm_ListItem_C_BP_OnItemSelectionChanged, bIsSelected) == 0x000000, "Member 'UIW_SlaveArm_ListItem_C_BP_OnItemSelectionChanged::bIsSelected' has a wrong offset!");

// Function UIW_SlaveArm_ListItem.UIW_SlaveArm_ListItem_C.OnListItemObjectSet
// 0x0008 (0x0008 - 0x0000)
struct UIW_SlaveArm_ListItem_C_OnListItemObjectSet final
{
public:
	class UObject*                                ListItemObject;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UIW_SlaveArm_ListItem_C_OnListItemObjectSet) == 0x000008, "Wrong alignment on UIW_SlaveArm_ListItem_C_OnListItemObjectSet");
static_assert(sizeof(UIW_SlaveArm_ListItem_C_OnListItemObjectSet) == 0x000008, "Wrong size on UIW_SlaveArm_ListItem_C_OnListItemObjectSet");
static_assert(offsetof(UIW_SlaveArm_ListItem_C_OnListItemObjectSet, ListItemObject) == 0x000000, "Member 'UIW_SlaveArm_ListItem_C_OnListItemObjectSet::ListItemObject' has a wrong offset!");

// Function UIW_SlaveArm_ListItem.UIW_SlaveArm_ListItem_C.BP_OnItemExpansionChanged
// 0x0001 (0x0001 - 0x0000)
struct UIW_SlaveArm_ListItem_C_BP_OnItemExpansionChanged final
{
public:
	bool                                          bIsExpanded;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UIW_SlaveArm_ListItem_C_BP_OnItemExpansionChanged) == 0x000001, "Wrong alignment on UIW_SlaveArm_ListItem_C_BP_OnItemExpansionChanged");
static_assert(sizeof(UIW_SlaveArm_ListItem_C_BP_OnItemExpansionChanged) == 0x000001, "Wrong size on UIW_SlaveArm_ListItem_C_BP_OnItemExpansionChanged");
static_assert(offsetof(UIW_SlaveArm_ListItem_C_BP_OnItemExpansionChanged, bIsExpanded) == 0x000000, "Member 'UIW_SlaveArm_ListItem_C_BP_OnItemExpansionChanged::bIsExpanded' has a wrong offset!");

// Function UIW_SlaveArm_ListItem.UIW_SlaveArm_ListItem_C.SetData
// 0x00D0 (0x00D0 - 0x0000)
struct UIW_SlaveArm_ListItem_C_SetData final
{
public:
	class UObject*                                Object;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   LocalSlaveArm3Name;                                // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   LocalSlaveArm2Name;                                // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   LocalSlaveArm1Name;                                // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FItemCommonInfoPtr                     LocalCommonInfo;                                   // 0x0020(0x0008)(Edit, BlueprintVisible, NoDestructor)
	class UUIBP_ListData_ShopItem_C*              K2Node_DynamicCast_AsUIBP_List_Data_Shop_Item;     // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ULItem*                                 CallFunc_GetItem_ReturnValue;                      // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUIBP_ListData_Default_C*               K2Node_DynamicCast_AsUIBP_List_Data_Default;       // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FItemCommonInfoPtr                     CallFunc_GetCommonInfo_ReturnValue;                // 0x0050(0x0008)(NoDestructor)
	class FName                                   CallFunc_GetCodeName_ReturnValue;                  // 0x0058(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUIBP_ListData_Item_C*                  K2Node_DynamicCast_AsUIBP_List_Data_Item;          // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FItemCommonInfoPtr                     CallFunc_FindItemCommonInfoByNameBP_ReturnValue;   // 0x0070(0x0008)(NoDestructor)
	struct FItemCommonInfoPtr                     CallFunc_GetCommonInfo_ReturnValue_1;              // 0x0078(0x0008)(NoDestructor)
	class FName                                   CallFunc_GetCodeName_ReturnValue_1;                // 0x0080(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULItemSystem*                           CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULPlayerInventory*                      CallFunc_GetPlayerInventory_ReturnValue;           // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULItem*                                 CallFunc_FindItemByCodeName_ReturnValue;           // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UObject>                 CallFunc_GetImageResource_ReturnValue;             // 0x00A8(0x0028)(ConstParm, UObjectWrapper, HasGetValueTypeHash)
};
static_assert(alignof(UIW_SlaveArm_ListItem_C_SetData) == 0x000008, "Wrong alignment on UIW_SlaveArm_ListItem_C_SetData");
static_assert(sizeof(UIW_SlaveArm_ListItem_C_SetData) == 0x0000D0, "Wrong size on UIW_SlaveArm_ListItem_C_SetData");
static_assert(offsetof(UIW_SlaveArm_ListItem_C_SetData, Object) == 0x000000, "Member 'UIW_SlaveArm_ListItem_C_SetData::Object' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_ListItem_C_SetData, LocalSlaveArm3Name) == 0x000008, "Member 'UIW_SlaveArm_ListItem_C_SetData::LocalSlaveArm3Name' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_ListItem_C_SetData, LocalSlaveArm2Name) == 0x000010, "Member 'UIW_SlaveArm_ListItem_C_SetData::LocalSlaveArm2Name' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_ListItem_C_SetData, LocalSlaveArm1Name) == 0x000018, "Member 'UIW_SlaveArm_ListItem_C_SetData::LocalSlaveArm1Name' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_ListItem_C_SetData, LocalCommonInfo) == 0x000020, "Member 'UIW_SlaveArm_ListItem_C_SetData::LocalCommonInfo' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_ListItem_C_SetData, K2Node_DynamicCast_AsUIBP_List_Data_Shop_Item) == 0x000028, "Member 'UIW_SlaveArm_ListItem_C_SetData::K2Node_DynamicCast_AsUIBP_List_Data_Shop_Item' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_ListItem_C_SetData, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'UIW_SlaveArm_ListItem_C_SetData::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_ListItem_C_SetData, CallFunc_GetItem_ReturnValue) == 0x000038, "Member 'UIW_SlaveArm_ListItem_C_SetData::CallFunc_GetItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_ListItem_C_SetData, K2Node_DynamicCast_AsUIBP_List_Data_Default) == 0x000040, "Member 'UIW_SlaveArm_ListItem_C_SetData::K2Node_DynamicCast_AsUIBP_List_Data_Default' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_ListItem_C_SetData, K2Node_DynamicCast_bSuccess_1) == 0x000048, "Member 'UIW_SlaveArm_ListItem_C_SetData::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_ListItem_C_SetData, CallFunc_GetCommonInfo_ReturnValue) == 0x000050, "Member 'UIW_SlaveArm_ListItem_C_SetData::CallFunc_GetCommonInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_ListItem_C_SetData, CallFunc_GetCodeName_ReturnValue) == 0x000058, "Member 'UIW_SlaveArm_ListItem_C_SetData::CallFunc_GetCodeName_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_ListItem_C_SetData, K2Node_DynamicCast_AsUIBP_List_Data_Item) == 0x000060, "Member 'UIW_SlaveArm_ListItem_C_SetData::K2Node_DynamicCast_AsUIBP_List_Data_Item' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_ListItem_C_SetData, K2Node_DynamicCast_bSuccess_2) == 0x000068, "Member 'UIW_SlaveArm_ListItem_C_SetData::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_ListItem_C_SetData, CallFunc_FindItemCommonInfoByNameBP_ReturnValue) == 0x000070, "Member 'UIW_SlaveArm_ListItem_C_SetData::CallFunc_FindItemCommonInfoByNameBP_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_ListItem_C_SetData, CallFunc_GetCommonInfo_ReturnValue_1) == 0x000078, "Member 'UIW_SlaveArm_ListItem_C_SetData::CallFunc_GetCommonInfo_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_ListItem_C_SetData, CallFunc_GetCodeName_ReturnValue_1) == 0x000080, "Member 'UIW_SlaveArm_ListItem_C_SetData::CallFunc_GetCodeName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_ListItem_C_SetData, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000088, "Member 'UIW_SlaveArm_ListItem_C_SetData::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_ListItem_C_SetData, CallFunc_GetPlayerInventory_ReturnValue) == 0x000090, "Member 'UIW_SlaveArm_ListItem_C_SetData::CallFunc_GetPlayerInventory_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_ListItem_C_SetData, CallFunc_FindItemByCodeName_ReturnValue) == 0x000098, "Member 'UIW_SlaveArm_ListItem_C_SetData::CallFunc_FindItemByCodeName_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_ListItem_C_SetData, CallFunc_IsValid_ReturnValue) == 0x0000A0, "Member 'UIW_SlaveArm_ListItem_C_SetData::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_ListItem_C_SetData, CallFunc_GetImageResource_ReturnValue) == 0x0000A8, "Member 'UIW_SlaveArm_ListItem_C_SetData::CallFunc_GetImageResource_ReturnValue' has a wrong offset!");

// Function UIW_SlaveArm_ListItem.UIW_SlaveArm_ListItem_C.SetSlotType
// 0x000C (0x000C - 0x0000)
struct UIW_SlaveArm_ListItem_C_SetSlotType final
{
public:
	class FName                                   ID;                                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchName_CmpSuccess;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UIW_SlaveArm_ListItem_C_SetSlotType) == 0x000004, "Wrong alignment on UIW_SlaveArm_ListItem_C_SetSlotType");
static_assert(sizeof(UIW_SlaveArm_ListItem_C_SetSlotType) == 0x00000C, "Wrong size on UIW_SlaveArm_ListItem_C_SetSlotType");
static_assert(offsetof(UIW_SlaveArm_ListItem_C_SetSlotType, ID) == 0x000000, "Member 'UIW_SlaveArm_ListItem_C_SetSlotType::ID' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_ListItem_C_SetSlotType, K2Node_SwitchName_CmpSuccess) == 0x000008, "Member 'UIW_SlaveArm_ListItem_C_SetSlotType::K2Node_SwitchName_CmpSuccess' has a wrong offset!");

// Function UIW_SlaveArm_ListItem.UIW_SlaveArm_ListItem_C.SetSlotTypeAll
// 0x00C8 (0x00C8 - 0x0000)
struct UIW_SlaveArm_ListItem_C_SetSlotTypeAll final
{
public:
	class FName                                   InputPin;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULItemSystem*                           CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULItemSystem*                           CallFunc_GetGameInstanceSubsystem_ReturnValue_1;   // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULPlayerEquipment*                      CallFunc_GetPlayerEquipment_ReturnValue;           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULPlayerEquipment*                      CallFunc_GetPlayerEquipment_ReturnValue_1;         // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetEquipItemSlot_bFound;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLEquipItemSlot                        CallFunc_GetEquipItemSlot_ReturnValue;             // 0x0030(0x0018)(NoDestructor)
	bool                                          CallFunc_GetEquipItemSlot_bFound_1;                // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLEquipItemSlot                        CallFunc_GetEquipItemSlot_ReturnValue_1;           // 0x0050(0x0018)(NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetCodeName_ReturnValue;                  // 0x006C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0075(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_76[0x2];                                       // 0x0076(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetCodeName_ReturnValue_1;                // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULItemSystem*                           CallFunc_GetGameInstanceSubsystem_ReturnValue_2;   // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue_1;        // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ULPlayerEquipment*                      CallFunc_GetPlayerEquipment_ReturnValue_2;         // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetEquipItemSlot_bFound_2;                // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLEquipItemSlot                        CallFunc_GetEquipItemSlot_ReturnValue_2;           // 0x00A0(0x0018)(NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B9[0x3];                                       // 0x00B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetCodeName_ReturnValue_2;                // 0x00BC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue_2;        // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UIW_SlaveArm_ListItem_C_SetSlotTypeAll) == 0x000008, "Wrong alignment on UIW_SlaveArm_ListItem_C_SetSlotTypeAll");
static_assert(sizeof(UIW_SlaveArm_ListItem_C_SetSlotTypeAll) == 0x0000C8, "Wrong size on UIW_SlaveArm_ListItem_C_SetSlotTypeAll");
static_assert(offsetof(UIW_SlaveArm_ListItem_C_SetSlotTypeAll, InputPin) == 0x000000, "Member 'UIW_SlaveArm_ListItem_C_SetSlotTypeAll::InputPin' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_ListItem_C_SetSlotTypeAll, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000008, "Member 'UIW_SlaveArm_ListItem_C_SetSlotTypeAll::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_ListItem_C_SetSlotTypeAll, CallFunc_GetGameInstanceSubsystem_ReturnValue_1) == 0x000010, "Member 'UIW_SlaveArm_ListItem_C_SetSlotTypeAll::CallFunc_GetGameInstanceSubsystem_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_ListItem_C_SetSlotTypeAll, CallFunc_GetPlayerEquipment_ReturnValue) == 0x000018, "Member 'UIW_SlaveArm_ListItem_C_SetSlotTypeAll::CallFunc_GetPlayerEquipment_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_ListItem_C_SetSlotTypeAll, CallFunc_GetPlayerEquipment_ReturnValue_1) == 0x000020, "Member 'UIW_SlaveArm_ListItem_C_SetSlotTypeAll::CallFunc_GetPlayerEquipment_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_ListItem_C_SetSlotTypeAll, CallFunc_GetEquipItemSlot_bFound) == 0x000028, "Member 'UIW_SlaveArm_ListItem_C_SetSlotTypeAll::CallFunc_GetEquipItemSlot_bFound' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_ListItem_C_SetSlotTypeAll, CallFunc_GetEquipItemSlot_ReturnValue) == 0x000030, "Member 'UIW_SlaveArm_ListItem_C_SetSlotTypeAll::CallFunc_GetEquipItemSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_ListItem_C_SetSlotTypeAll, CallFunc_GetEquipItemSlot_bFound_1) == 0x000048, "Member 'UIW_SlaveArm_ListItem_C_SetSlotTypeAll::CallFunc_GetEquipItemSlot_bFound_1' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_ListItem_C_SetSlotTypeAll, CallFunc_GetEquipItemSlot_ReturnValue_1) == 0x000050, "Member 'UIW_SlaveArm_ListItem_C_SetSlotTypeAll::CallFunc_GetEquipItemSlot_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_ListItem_C_SetSlotTypeAll, CallFunc_IsValid_ReturnValue) == 0x000068, "Member 'UIW_SlaveArm_ListItem_C_SetSlotTypeAll::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_ListItem_C_SetSlotTypeAll, CallFunc_GetCodeName_ReturnValue) == 0x00006C, "Member 'UIW_SlaveArm_ListItem_C_SetSlotTypeAll::CallFunc_GetCodeName_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_ListItem_C_SetSlotTypeAll, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000074, "Member 'UIW_SlaveArm_ListItem_C_SetSlotTypeAll::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_ListItem_C_SetSlotTypeAll, CallFunc_IsValid_ReturnValue_1) == 0x000075, "Member 'UIW_SlaveArm_ListItem_C_SetSlotTypeAll::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_ListItem_C_SetSlotTypeAll, CallFunc_GetCodeName_ReturnValue_1) == 0x000078, "Member 'UIW_SlaveArm_ListItem_C_SetSlotTypeAll::CallFunc_GetCodeName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_ListItem_C_SetSlotTypeAll, CallFunc_GetGameInstanceSubsystem_ReturnValue_2) == 0x000080, "Member 'UIW_SlaveArm_ListItem_C_SetSlotTypeAll::CallFunc_GetGameInstanceSubsystem_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_ListItem_C_SetSlotTypeAll, CallFunc_EqualEqual_NameName_ReturnValue_1) == 0x000088, "Member 'UIW_SlaveArm_ListItem_C_SetSlotTypeAll::CallFunc_EqualEqual_NameName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_ListItem_C_SetSlotTypeAll, CallFunc_GetPlayerEquipment_ReturnValue_2) == 0x000090, "Member 'UIW_SlaveArm_ListItem_C_SetSlotTypeAll::CallFunc_GetPlayerEquipment_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_ListItem_C_SetSlotTypeAll, CallFunc_GetEquipItemSlot_bFound_2) == 0x000098, "Member 'UIW_SlaveArm_ListItem_C_SetSlotTypeAll::CallFunc_GetEquipItemSlot_bFound_2' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_ListItem_C_SetSlotTypeAll, CallFunc_GetEquipItemSlot_ReturnValue_2) == 0x0000A0, "Member 'UIW_SlaveArm_ListItem_C_SetSlotTypeAll::CallFunc_GetEquipItemSlot_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_ListItem_C_SetSlotTypeAll, CallFunc_IsValid_ReturnValue_2) == 0x0000B8, "Member 'UIW_SlaveArm_ListItem_C_SetSlotTypeAll::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_ListItem_C_SetSlotTypeAll, CallFunc_GetCodeName_ReturnValue_2) == 0x0000BC, "Member 'UIW_SlaveArm_ListItem_C_SetSlotTypeAll::CallFunc_GetCodeName_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_ListItem_C_SetSlotTypeAll, CallFunc_EqualEqual_NameName_ReturnValue_2) == 0x0000C4, "Member 'UIW_SlaveArm_ListItem_C_SetSlotTypeAll::CallFunc_EqualEqual_NameName_ReturnValue_2' has a wrong offset!");

}


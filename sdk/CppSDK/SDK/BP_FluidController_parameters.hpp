#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_FluidController

#include "Basic.hpp"

#include "PhysicsCore_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_FluidController.BP_FluidController_C.ExecuteUbergraph_BP_FluidController
// 0x0088 (0x0088 - 0x0000)
struct BP_FluidController_C_ExecuteUbergraph_BP_FluidController final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInAnySurface_Value;                     // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Percent_IntInt_ReturnValue;               // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEndPlayReason                                K2Node_Event_EndPlayReason;                        // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_FMin_ReturnValue;                         // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTextureRenderTarget2D*                 CallFunc_GetRT_RenderTarget;                       // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTextureRenderTarget2D*                 CallFunc_GetPreviousRT_RenderTargetOut;            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvas*                                CallFunc_BeginDrawCanvasToRenderTarget_Canvas;     // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_BeginDrawCanvasToRenderTarget_Size;       // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FDrawToRenderTargetContext             CallFunc_BeginDrawCanvasToRenderTarget_Context;    // 0x0048(0x0010)(NoDestructor)
	class UTextureRenderTarget2D*                 CallFunc_GetPreviousRT_RenderTargetOut_1;          // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue;            // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMin_ReturnValue_1;                       // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTextureRenderTarget2D*                 CallFunc_GetRT_RenderTarget_1;                     // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULObjectManagementSystem*               CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ShouldUpdate_Value;                       // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_FluidController_C_ExecuteUbergraph_BP_FluidController) == 0x000008, "Wrong alignment on BP_FluidController_C_ExecuteUbergraph_BP_FluidController");
static_assert(sizeof(BP_FluidController_C_ExecuteUbergraph_BP_FluidController) == 0x000088, "Wrong size on BP_FluidController_C_ExecuteUbergraph_BP_FluidController");
static_assert(offsetof(BP_FluidController_C_ExecuteUbergraph_BP_FluidController, EntryPoint) == 0x000000, "Member 'BP_FluidController_C_ExecuteUbergraph_BP_FluidController::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_FluidController_C_ExecuteUbergraph_BP_FluidController, CallFunc_IsInAnySurface_Value) == 0x000004, "Member 'BP_FluidController_C_ExecuteUbergraph_BP_FluidController::CallFunc_IsInAnySurface_Value' has a wrong offset!");
static_assert(offsetof(BP_FluidController_C_ExecuteUbergraph_BP_FluidController, K2Node_Event_DeltaSeconds) == 0x000008, "Member 'BP_FluidController_C_ExecuteUbergraph_BP_FluidController::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_FluidController_C_ExecuteUbergraph_BP_FluidController, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_FluidController_C_ExecuteUbergraph_BP_FluidController::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluidController_C_ExecuteUbergraph_BP_FluidController, CallFunc_Percent_IntInt_ReturnValue) == 0x000010, "Member 'BP_FluidController_C_ExecuteUbergraph_BP_FluidController::CallFunc_Percent_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluidController_C_ExecuteUbergraph_BP_FluidController, K2Node_Event_EndPlayReason) == 0x000014, "Member 'BP_FluidController_C_ExecuteUbergraph_BP_FluidController::K2Node_Event_EndPlayReason' has a wrong offset!");
static_assert(offsetof(BP_FluidController_C_ExecuteUbergraph_BP_FluidController, CallFunc_FMin_ReturnValue) == 0x000018, "Member 'BP_FluidController_C_ExecuteUbergraph_BP_FluidController::CallFunc_FMin_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluidController_C_ExecuteUbergraph_BP_FluidController, CallFunc_Add_FloatFloat_ReturnValue) == 0x00001C, "Member 'BP_FluidController_C_ExecuteUbergraph_BP_FluidController::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluidController_C_ExecuteUbergraph_BP_FluidController, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000020, "Member 'BP_FluidController_C_ExecuteUbergraph_BP_FluidController::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluidController_C_ExecuteUbergraph_BP_FluidController, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000024, "Member 'BP_FluidController_C_ExecuteUbergraph_BP_FluidController::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluidController_C_ExecuteUbergraph_BP_FluidController, CallFunc_GetRT_RenderTarget) == 0x000028, "Member 'BP_FluidController_C_ExecuteUbergraph_BP_FluidController::CallFunc_GetRT_RenderTarget' has a wrong offset!");
static_assert(offsetof(BP_FluidController_C_ExecuteUbergraph_BP_FluidController, CallFunc_GetPreviousRT_RenderTargetOut) == 0x000030, "Member 'BP_FluidController_C_ExecuteUbergraph_BP_FluidController::CallFunc_GetPreviousRT_RenderTargetOut' has a wrong offset!");
static_assert(offsetof(BP_FluidController_C_ExecuteUbergraph_BP_FluidController, CallFunc_BeginDrawCanvasToRenderTarget_Canvas) == 0x000038, "Member 'BP_FluidController_C_ExecuteUbergraph_BP_FluidController::CallFunc_BeginDrawCanvasToRenderTarget_Canvas' has a wrong offset!");
static_assert(offsetof(BP_FluidController_C_ExecuteUbergraph_BP_FluidController, CallFunc_BeginDrawCanvasToRenderTarget_Size) == 0x000040, "Member 'BP_FluidController_C_ExecuteUbergraph_BP_FluidController::CallFunc_BeginDrawCanvasToRenderTarget_Size' has a wrong offset!");
static_assert(offsetof(BP_FluidController_C_ExecuteUbergraph_BP_FluidController, CallFunc_BeginDrawCanvasToRenderTarget_Context) == 0x000048, "Member 'BP_FluidController_C_ExecuteUbergraph_BP_FluidController::CallFunc_BeginDrawCanvasToRenderTarget_Context' has a wrong offset!");
static_assert(offsetof(BP_FluidController_C_ExecuteUbergraph_BP_FluidController, CallFunc_GetPreviousRT_RenderTargetOut_1) == 0x000058, "Member 'BP_FluidController_C_ExecuteUbergraph_BP_FluidController::CallFunc_GetPreviousRT_RenderTargetOut_1' has a wrong offset!");
static_assert(offsetof(BP_FluidController_C_ExecuteUbergraph_BP_FluidController, CallFunc_Multiply_IntFloat_ReturnValue) == 0x000060, "Member 'BP_FluidController_C_ExecuteUbergraph_BP_FluidController::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluidController_C_ExecuteUbergraph_BP_FluidController, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000064, "Member 'BP_FluidController_C_ExecuteUbergraph_BP_FluidController::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluidController_C_ExecuteUbergraph_BP_FluidController, CallFunc_FMin_ReturnValue_1) == 0x000068, "Member 'BP_FluidController_C_ExecuteUbergraph_BP_FluidController::CallFunc_FMin_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FluidController_C_ExecuteUbergraph_BP_FluidController, CallFunc_GetRT_RenderTarget_1) == 0x000070, "Member 'BP_FluidController_C_ExecuteUbergraph_BP_FluidController::CallFunc_GetRT_RenderTarget_1' has a wrong offset!");
static_assert(offsetof(BP_FluidController_C_ExecuteUbergraph_BP_FluidController, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000078, "Member 'BP_FluidController_C_ExecuteUbergraph_BP_FluidController::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluidController_C_ExecuteUbergraph_BP_FluidController, CallFunc_ShouldUpdate_Value) == 0x000080, "Member 'BP_FluidController_C_ExecuteUbergraph_BP_FluidController::CallFunc_ShouldUpdate_Value' has a wrong offset!");

// Function BP_FluidController.BP_FluidController_C.ReceiveEndPlay
// 0x0001 (0x0001 - 0x0000)
struct BP_FluidController_C_ReceiveEndPlay final
{
public:
	EEndPlayReason                                EndPlayReason;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FluidController_C_ReceiveEndPlay) == 0x000001, "Wrong alignment on BP_FluidController_C_ReceiveEndPlay");
static_assert(sizeof(BP_FluidController_C_ReceiveEndPlay) == 0x000001, "Wrong size on BP_FluidController_C_ReceiveEndPlay");
static_assert(offsetof(BP_FluidController_C_ReceiveEndPlay, EndPlayReason) == 0x000000, "Member 'BP_FluidController_C_ReceiveEndPlay::EndPlayReason' has a wrong offset!");

// Function BP_FluidController.BP_FluidController_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_FluidController_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FluidController_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_FluidController_C_ReceiveTick");
static_assert(sizeof(BP_FluidController_C_ReceiveTick) == 0x000004, "Wrong size on BP_FluidController_C_ReceiveTick");
static_assert(offsetof(BP_FluidController_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_FluidController_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_FluidController.BP_FluidController_C.GetPreviousRT
// 0x0040 (0x0040 - 0x0000)
struct BP_FluidController_C_GetPreviousRT final
{
public:
	int32                                         CurrentRTIndex;                                    // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         FramesOld;                                         // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTextureRenderTarget2D*                 RenderTarget_0;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTextureRenderTarget2D*                 RenderTarget_1;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTextureRenderTarget2D*                 RenderTarget_2;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTextureRenderTarget2D*                 RenderTargetOut;                                   // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Percent_IntInt_ReturnValue;               // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTextureRenderTarget2D*                 CallFunc_GetRT_RenderTarget;                       // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FluidController_C_GetPreviousRT) == 0x000008, "Wrong alignment on BP_FluidController_C_GetPreviousRT");
static_assert(sizeof(BP_FluidController_C_GetPreviousRT) == 0x000040, "Wrong size on BP_FluidController_C_GetPreviousRT");
static_assert(offsetof(BP_FluidController_C_GetPreviousRT, CurrentRTIndex) == 0x000000, "Member 'BP_FluidController_C_GetPreviousRT::CurrentRTIndex' has a wrong offset!");
static_assert(offsetof(BP_FluidController_C_GetPreviousRT, FramesOld) == 0x000004, "Member 'BP_FluidController_C_GetPreviousRT::FramesOld' has a wrong offset!");
static_assert(offsetof(BP_FluidController_C_GetPreviousRT, RenderTarget_0) == 0x000008, "Member 'BP_FluidController_C_GetPreviousRT::RenderTarget_0' has a wrong offset!");
static_assert(offsetof(BP_FluidController_C_GetPreviousRT, RenderTarget_1) == 0x000010, "Member 'BP_FluidController_C_GetPreviousRT::RenderTarget_1' has a wrong offset!");
static_assert(offsetof(BP_FluidController_C_GetPreviousRT, RenderTarget_2) == 0x000018, "Member 'BP_FluidController_C_GetPreviousRT::RenderTarget_2' has a wrong offset!");
static_assert(offsetof(BP_FluidController_C_GetPreviousRT, RenderTargetOut) == 0x000020, "Member 'BP_FluidController_C_GetPreviousRT::RenderTargetOut' has a wrong offset!");
static_assert(offsetof(BP_FluidController_C_GetPreviousRT, CallFunc_Subtract_IntInt_ReturnValue) == 0x000028, "Member 'BP_FluidController_C_GetPreviousRT::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluidController_C_GetPreviousRT, CallFunc_Add_IntInt_ReturnValue) == 0x00002C, "Member 'BP_FluidController_C_GetPreviousRT::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluidController_C_GetPreviousRT, CallFunc_Percent_IntInt_ReturnValue) == 0x000030, "Member 'BP_FluidController_C_GetPreviousRT::CallFunc_Percent_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluidController_C_GetPreviousRT, CallFunc_GetRT_RenderTarget) == 0x000038, "Member 'BP_FluidController_C_GetPreviousRT::CallFunc_GetRT_RenderTarget' has a wrong offset!");

// Function BP_FluidController.BP_FluidController_C.GetRT
// 0x0038 (0x0038 - 0x0000)
struct BP_FluidController_C_GetRT final
{
public:
	int32                                         Index_0;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTextureRenderTarget2D*                 RenderTarget_0;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTextureRenderTarget2D*                 RenderTarget_1;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTextureRenderTarget2D*                 RenderTarget_2;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTextureRenderTarget2D*                 RenderTarget;                                      // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTextureRenderTarget2D*                 K2Node_Select_Default;                             // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FluidController_C_GetRT) == 0x000008, "Wrong alignment on BP_FluidController_C_GetRT");
static_assert(sizeof(BP_FluidController_C_GetRT) == 0x000038, "Wrong size on BP_FluidController_C_GetRT");
static_assert(offsetof(BP_FluidController_C_GetRT, Index_0) == 0x000000, "Member 'BP_FluidController_C_GetRT::Index_0' has a wrong offset!");
static_assert(offsetof(BP_FluidController_C_GetRT, RenderTarget_0) == 0x000008, "Member 'BP_FluidController_C_GetRT::RenderTarget_0' has a wrong offset!");
static_assert(offsetof(BP_FluidController_C_GetRT, RenderTarget_1) == 0x000010, "Member 'BP_FluidController_C_GetRT::RenderTarget_1' has a wrong offset!");
static_assert(offsetof(BP_FluidController_C_GetRT, RenderTarget_2) == 0x000018, "Member 'BP_FluidController_C_GetRT::RenderTarget_2' has a wrong offset!");
static_assert(offsetof(BP_FluidController_C_GetRT, RenderTarget) == 0x000020, "Member 'BP_FluidController_C_GetRT::RenderTarget' has a wrong offset!");
static_assert(offsetof(BP_FluidController_C_GetRT, Temp_int_Variable) == 0x000028, "Member 'BP_FluidController_C_GetRT::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_FluidController_C_GetRT, K2Node_Select_Default) == 0x000030, "Member 'BP_FluidController_C_GetRT::K2Node_Select_Default' has a wrong offset!");

// Function BP_FluidController.BP_FluidController_C.CreateMaterials
// 0x0018 (0x0018 - 0x0000)
struct BP_FluidController_C_CreateMaterials final
{
public:
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue_1; // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue_2; // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FluidController_C_CreateMaterials) == 0x000008, "Wrong alignment on BP_FluidController_C_CreateMaterials");
static_assert(sizeof(BP_FluidController_C_CreateMaterials) == 0x000018, "Wrong size on BP_FluidController_C_CreateMaterials");
static_assert(offsetof(BP_FluidController_C_CreateMaterials, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000000, "Member 'BP_FluidController_C_CreateMaterials::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluidController_C_CreateMaterials, CallFunc_CreateDynamicMaterialInstance_ReturnValue_1) == 0x000008, "Member 'BP_FluidController_C_CreateMaterials::CallFunc_CreateDynamicMaterialInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FluidController_C_CreateMaterials, CallFunc_CreateDynamicMaterialInstance_ReturnValue_2) == 0x000010, "Member 'BP_FluidController_C_CreateMaterials::CallFunc_CreateDynamicMaterialInstance_ReturnValue_2' has a wrong offset!");

// Function BP_FluidController.BP_FluidController_C.GetRT_Height
// 0x0020 (0x0020 - 0x0000)
struct BP_FluidController_C_GetRT_Height final
{
public:
	int32                                         Index_0;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTextureRenderTarget2D*                 RenderTarget;                                      // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTextureRenderTarget2D*                 K2Node_Select_Default;                             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FluidController_C_GetRT_Height) == 0x000008, "Wrong alignment on BP_FluidController_C_GetRT_Height");
static_assert(sizeof(BP_FluidController_C_GetRT_Height) == 0x000020, "Wrong size on BP_FluidController_C_GetRT_Height");
static_assert(offsetof(BP_FluidController_C_GetRT_Height, Index_0) == 0x000000, "Member 'BP_FluidController_C_GetRT_Height::Index_0' has a wrong offset!");
static_assert(offsetof(BP_FluidController_C_GetRT_Height, RenderTarget) == 0x000008, "Member 'BP_FluidController_C_GetRT_Height::RenderTarget' has a wrong offset!");
static_assert(offsetof(BP_FluidController_C_GetRT_Height, Temp_int_Variable) == 0x000010, "Member 'BP_FluidController_C_GetRT_Height::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_FluidController_C_GetRT_Height, K2Node_Select_Default) == 0x000018, "Member 'BP_FluidController_C_GetRT_Height::K2Node_Select_Default' has a wrong offset!");

// Function BP_FluidController.BP_FluidController_C.SetLastTracedTime
// 0x0004 (0x0004 - 0x0000)
struct BP_FluidController_C_SetLastTracedTime final
{
public:
	float                                         CallFunc_GetGameTimeSinceCreation_ReturnValue;     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FluidController_C_SetLastTracedTime) == 0x000004, "Wrong alignment on BP_FluidController_C_SetLastTracedTime");
static_assert(sizeof(BP_FluidController_C_SetLastTracedTime) == 0x000004, "Wrong size on BP_FluidController_C_SetLastTracedTime");
static_assert(offsetof(BP_FluidController_C_SetLastTracedTime, CallFunc_GetGameTimeSinceCreation_ReturnValue) == 0x000000, "Member 'BP_FluidController_C_SetLastTracedTime::CallFunc_GetGameTimeSinceCreation_ReturnValue' has a wrong offset!");

// Function BP_FluidController.BP_FluidController_C.SetSurfaceType
// 0x0100 (0x0100 - 0x0000)
struct BP_FluidController_C_SetSurfaceType final
{
public:
	EPhysicalSurface                              InSurfaceType;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPhysicalSurface                              Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_2;                             // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_3;                             // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_4;                             // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_5;                             // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_6;                             // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_7;                             // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_8;                             // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_9;                             // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_10;                            // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_11;                            // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_12;                            // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_13;                            // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_14;                            // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_15;                            // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPhysicalSurface                              Temp_byte_Variable_1;                              // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable_16;                            // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_17;                            // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_18;                            // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_19;                            // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_20;                            // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_21;                            // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_22;                            // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_23;                            // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_24;                            // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_25;                            // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_26;                            // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_27;                            // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_28;                            // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_29;                            // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_30;                            // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_31;                            // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPhysicalSurface                              Temp_byte_Variable_2;                              // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89[0x3];                                       // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable_32;                            // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_33;                            // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_34;                            // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_35;                            // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_36;                            // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_37;                            // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_38;                            // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_39;                            // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_40;                            // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_41;                            // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_42;                            // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_43;                            // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_44;                            // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_45;                            // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_46;                            // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_47;                            // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeLiteralFloat_ReturnValue;             // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeLiteralFloat_ReturnValue_1;           // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeLiteralFloat_ReturnValue_2;           // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeLiteralFloat_ReturnValue_3;           // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeLiteralFloat_ReturnValue_4;           // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeLiteralFloat_ReturnValue_5;           // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeLiteralFloat_ReturnValue_6;           // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeLiteralFloat_ReturnValue_7;           // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeLiteralFloat_ReturnValue_8;           // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_1;                           // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_2;                           // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x00FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_FluidController_C_SetSurfaceType) == 0x000004, "Wrong alignment on BP_FluidController_C_SetSurfaceType");
static_assert(sizeof(BP_FluidController_C_SetSurfaceType) == 0x000100, "Wrong size on BP_FluidController_C_SetSurfaceType");
static_assert(offsetof(BP_FluidController_C_SetSurfaceType, InSurfaceType) == 0x000000, "Member 'BP_FluidController_C_SetSurfaceType::InSurfaceType' has a wrong offset!");
static_assert(offsetof(BP_FluidController_C_SetSurfaceType, Temp_byte_Variable) == 0x000001, "Member 'BP_FluidController_C_SetSurfaceType::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_FluidController_C_SetSurfaceType, Temp_float_Variable) == 0x000004, "Member 'BP_FluidController_C_SetSurfaceType::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(BP_FluidController_C_SetSurfaceType, Temp_float_Variable_1) == 0x000008, "Member 'BP_FluidController_C_SetSurfaceType::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_FluidController_C_SetSurfaceType, Temp_float_Variable_2) == 0x00000C, "Member 'BP_FluidController_C_SetSurfaceType::Temp_float_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_FluidController_C_SetSurfaceType, Temp_float_Variable_3) == 0x000010, "Member 'BP_FluidController_C_SetSurfaceType::Temp_float_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_FluidController_C_SetSurfaceType, Temp_float_Variable_4) == 0x000014, "Member 'BP_FluidController_C_SetSurfaceType::Temp_float_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_FluidController_C_SetSurfaceType, Temp_float_Variable_5) == 0x000018, "Member 'BP_FluidController_C_SetSurfaceType::Temp_float_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_FluidController_C_SetSurfaceType, Temp_float_Variable_6) == 0x00001C, "Member 'BP_FluidController_C_SetSurfaceType::Temp_float_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_FluidController_C_SetSurfaceType, Temp_float_Variable_7) == 0x000020, "Member 'BP_FluidController_C_SetSurfaceType::Temp_float_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_FluidController_C_SetSurfaceType, Temp_float_Variable_8) == 0x000024, "Member 'BP_FluidController_C_SetSurfaceType::Temp_float_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_FluidController_C_SetSurfaceType, Temp_float_Variable_9) == 0x000028, "Member 'BP_FluidController_C_SetSurfaceType::Temp_float_Variable_9' has a wrong offset!");
static_assert(offsetof(BP_FluidController_C_SetSurfaceType, Temp_float_Variable_10) == 0x00002C, "Member 'BP_FluidController_C_SetSurfaceType::Temp_float_Variable_10' has a wrong offset!");
static_assert(offsetof(BP_FluidController_C_SetSurfaceType, Temp_float_Variable_11) == 0x000030, "Member 'BP_FluidController_C_SetSurfaceType::Temp_float_Variable_11' has a wrong offset!");
static_assert(offsetof(BP_FluidController_C_SetSurfaceType, Temp_float_Variable_12) == 0x000034, "Member 'BP_FluidController_C_SetSurfaceType::Temp_float_Variable_12' has a wrong offset!");
static_assert(offsetof(BP_FluidController_C_SetSurfaceType, Temp_float_Variable_13) == 0x000038, "Member 'BP_FluidController_C_SetSurfaceType::Temp_float_Variable_13' has a wrong offset!");
static_assert(offsetof(BP_FluidController_C_SetSurfaceType, Temp_float_Variable_14) == 0x00003C, "Member 'BP_FluidController_C_SetSurfaceType::Temp_float_Variable_14' has a wrong offset!");
static_assert(offsetof(BP_FluidController_C_SetSurfaceType, Temp_float_Variable_15) == 0x000040, "Member 'BP_FluidController_C_SetSurfaceType::Temp_float_Variable_15' has a wrong offset!");
static_assert(offsetof(BP_FluidController_C_SetSurfaceType, Temp_byte_Variable_1) == 0x000044, "Member 'BP_FluidController_C_SetSurfaceType::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_FluidController_C_SetSurfaceType, Temp_float_Variable_16) == 0x000048, "Member 'BP_FluidController_C_SetSurfaceType::Temp_float_Variable_16' has a wrong offset!");
static_assert(offsetof(BP_FluidController_C_SetSurfaceType, Temp_float_Variable_17) == 0x00004C, "Member 'BP_FluidController_C_SetSurfaceType::Temp_float_Variable_17' has a wrong offset!");
static_assert(offsetof(BP_FluidController_C_SetSurfaceType, Temp_float_Variable_18) == 0x000050, "Member 'BP_FluidController_C_SetSurfaceType::Temp_float_Variable_18' has a wrong offset!");
static_assert(offsetof(BP_FluidController_C_SetSurfaceType, Temp_float_Variable_19) == 0x000054, "Member 'BP_FluidController_C_SetSurfaceType::Temp_float_Variable_19' has a wrong offset!");
static_assert(offsetof(BP_FluidController_C_SetSurfaceType, Temp_float_Variable_20) == 0x000058, "Member 'BP_FluidController_C_SetSurfaceType::Temp_float_Variable_20' has a wrong offset!");
static_assert(offsetof(BP_FluidController_C_SetSurfaceType, Temp_float_Variable_21) == 0x00005C, "Member 'BP_FluidController_C_SetSurfaceType::Temp_float_Variable_21' has a wrong offset!");
static_assert(offsetof(BP_FluidController_C_SetSurfaceType, Temp_float_Variable_22) == 0x000060, "Member 'BP_FluidController_C_SetSurfaceType::Temp_float_Variable_22' has a wrong offset!");
static_assert(offsetof(BP_FluidController_C_SetSurfaceType, Temp_float_Variable_23) == 0x000064, "Member 'BP_FluidController_C_SetSurfaceType::Temp_float_Variable_23' has a wrong offset!");
static_assert(offsetof(BP_FluidController_C_SetSurfaceType, Temp_float_Variable_24) == 0x000068, "Member 'BP_FluidController_C_SetSurfaceType::Temp_float_Variable_24' has a wrong offset!");
static_assert(offsetof(BP_FluidController_C_SetSurfaceType, Temp_float_Variable_25) == 0x00006C, "Member 'BP_FluidController_C_SetSurfaceType::Temp_float_Variable_25' has a wrong offset!");
static_assert(offsetof(BP_FluidController_C_SetSurfaceType, Temp_float_Variable_26) == 0x000070, "Member 'BP_FluidController_C_SetSurfaceType::Temp_float_Variable_26' has a wrong offset!");
static_assert(offsetof(BP_FluidController_C_SetSurfaceType, Temp_float_Variable_27) == 0x000074, "Member 'BP_FluidController_C_SetSurfaceType::Temp_float_Variable_27' has a wrong offset!");
static_assert(offsetof(BP_FluidController_C_SetSurfaceType, Temp_float_Variable_28) == 0x000078, "Member 'BP_FluidController_C_SetSurfaceType::Temp_float_Variable_28' has a wrong offset!");
static_assert(offsetof(BP_FluidController_C_SetSurfaceType, Temp_float_Variable_29) == 0x00007C, "Member 'BP_FluidController_C_SetSurfaceType::Temp_float_Variable_29' has a wrong offset!");
static_assert(offsetof(BP_FluidController_C_SetSurfaceType, Temp_float_Variable_30) == 0x000080, "Member 'BP_FluidController_C_SetSurfaceType::Temp_float_Variable_30' has a wrong offset!");
static_assert(offsetof(BP_FluidController_C_SetSurfaceType, Temp_float_Variable_31) == 0x000084, "Member 'BP_FluidController_C_SetSurfaceType::Temp_float_Variable_31' has a wrong offset!");
static_assert(offsetof(BP_FluidController_C_SetSurfaceType, Temp_byte_Variable_2) == 0x000088, "Member 'BP_FluidController_C_SetSurfaceType::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_FluidController_C_SetSurfaceType, Temp_float_Variable_32) == 0x00008C, "Member 'BP_FluidController_C_SetSurfaceType::Temp_float_Variable_32' has a wrong offset!");
static_assert(offsetof(BP_FluidController_C_SetSurfaceType, Temp_float_Variable_33) == 0x000090, "Member 'BP_FluidController_C_SetSurfaceType::Temp_float_Variable_33' has a wrong offset!");
static_assert(offsetof(BP_FluidController_C_SetSurfaceType, Temp_float_Variable_34) == 0x000094, "Member 'BP_FluidController_C_SetSurfaceType::Temp_float_Variable_34' has a wrong offset!");
static_assert(offsetof(BP_FluidController_C_SetSurfaceType, Temp_float_Variable_35) == 0x000098, "Member 'BP_FluidController_C_SetSurfaceType::Temp_float_Variable_35' has a wrong offset!");
static_assert(offsetof(BP_FluidController_C_SetSurfaceType, Temp_float_Variable_36) == 0x00009C, "Member 'BP_FluidController_C_SetSurfaceType::Temp_float_Variable_36' has a wrong offset!");
static_assert(offsetof(BP_FluidController_C_SetSurfaceType, Temp_float_Variable_37) == 0x0000A0, "Member 'BP_FluidController_C_SetSurfaceType::Temp_float_Variable_37' has a wrong offset!");
static_assert(offsetof(BP_FluidController_C_SetSurfaceType, Temp_float_Variable_38) == 0x0000A4, "Member 'BP_FluidController_C_SetSurfaceType::Temp_float_Variable_38' has a wrong offset!");
static_assert(offsetof(BP_FluidController_C_SetSurfaceType, Temp_float_Variable_39) == 0x0000A8, "Member 'BP_FluidController_C_SetSurfaceType::Temp_float_Variable_39' has a wrong offset!");
static_assert(offsetof(BP_FluidController_C_SetSurfaceType, Temp_float_Variable_40) == 0x0000AC, "Member 'BP_FluidController_C_SetSurfaceType::Temp_float_Variable_40' has a wrong offset!");
static_assert(offsetof(BP_FluidController_C_SetSurfaceType, Temp_float_Variable_41) == 0x0000B0, "Member 'BP_FluidController_C_SetSurfaceType::Temp_float_Variable_41' has a wrong offset!");
static_assert(offsetof(BP_FluidController_C_SetSurfaceType, Temp_float_Variable_42) == 0x0000B4, "Member 'BP_FluidController_C_SetSurfaceType::Temp_float_Variable_42' has a wrong offset!");
static_assert(offsetof(BP_FluidController_C_SetSurfaceType, Temp_float_Variable_43) == 0x0000B8, "Member 'BP_FluidController_C_SetSurfaceType::Temp_float_Variable_43' has a wrong offset!");
static_assert(offsetof(BP_FluidController_C_SetSurfaceType, Temp_float_Variable_44) == 0x0000BC, "Member 'BP_FluidController_C_SetSurfaceType::Temp_float_Variable_44' has a wrong offset!");
static_assert(offsetof(BP_FluidController_C_SetSurfaceType, Temp_float_Variable_45) == 0x0000C0, "Member 'BP_FluidController_C_SetSurfaceType::Temp_float_Variable_45' has a wrong offset!");
static_assert(offsetof(BP_FluidController_C_SetSurfaceType, Temp_float_Variable_46) == 0x0000C4, "Member 'BP_FluidController_C_SetSurfaceType::Temp_float_Variable_46' has a wrong offset!");
static_assert(offsetof(BP_FluidController_C_SetSurfaceType, Temp_float_Variable_47) == 0x0000C8, "Member 'BP_FluidController_C_SetSurfaceType::Temp_float_Variable_47' has a wrong offset!");
static_assert(offsetof(BP_FluidController_C_SetSurfaceType, CallFunc_MakeLiteralFloat_ReturnValue) == 0x0000CC, "Member 'BP_FluidController_C_SetSurfaceType::CallFunc_MakeLiteralFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluidController_C_SetSurfaceType, CallFunc_MakeLiteralFloat_ReturnValue_1) == 0x0000D0, "Member 'BP_FluidController_C_SetSurfaceType::CallFunc_MakeLiteralFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FluidController_C_SetSurfaceType, CallFunc_MakeLiteralFloat_ReturnValue_2) == 0x0000D4, "Member 'BP_FluidController_C_SetSurfaceType::CallFunc_MakeLiteralFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_FluidController_C_SetSurfaceType, CallFunc_MakeLiteralFloat_ReturnValue_3) == 0x0000D8, "Member 'BP_FluidController_C_SetSurfaceType::CallFunc_MakeLiteralFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_FluidController_C_SetSurfaceType, K2Node_Select_Default) == 0x0000DC, "Member 'BP_FluidController_C_SetSurfaceType::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_FluidController_C_SetSurfaceType, CallFunc_MakeLiteralFloat_ReturnValue_4) == 0x0000E0, "Member 'BP_FluidController_C_SetSurfaceType::CallFunc_MakeLiteralFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_FluidController_C_SetSurfaceType, CallFunc_MakeLiteralFloat_ReturnValue_5) == 0x0000E4, "Member 'BP_FluidController_C_SetSurfaceType::CallFunc_MakeLiteralFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_FluidController_C_SetSurfaceType, CallFunc_MakeLiteralFloat_ReturnValue_6) == 0x0000E8, "Member 'BP_FluidController_C_SetSurfaceType::CallFunc_MakeLiteralFloat_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_FluidController_C_SetSurfaceType, CallFunc_MakeLiteralFloat_ReturnValue_7) == 0x0000EC, "Member 'BP_FluidController_C_SetSurfaceType::CallFunc_MakeLiteralFloat_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_FluidController_C_SetSurfaceType, CallFunc_MakeLiteralFloat_ReturnValue_8) == 0x0000F0, "Member 'BP_FluidController_C_SetSurfaceType::CallFunc_MakeLiteralFloat_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_FluidController_C_SetSurfaceType, K2Node_Select_Default_1) == 0x0000F4, "Member 'BP_FluidController_C_SetSurfaceType::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_FluidController_C_SetSurfaceType, K2Node_Select_Default_2) == 0x0000F8, "Member 'BP_FluidController_C_SetSurfaceType::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BP_FluidController_C_SetSurfaceType, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x0000FC, "Member 'BP_FluidController_C_SetSurfaceType::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BP_FluidController.BP_FluidController_C.RefreshSimulationMaterial
// 0x0002 (0x0002 - 0x0000)
struct BP_FluidController_C_RefreshSimulationMaterial final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_FluidController_C_RefreshSimulationMaterial) == 0x000001, "Wrong alignment on BP_FluidController_C_RefreshSimulationMaterial");
static_assert(sizeof(BP_FluidController_C_RefreshSimulationMaterial) == 0x000002, "Wrong size on BP_FluidController_C_RefreshSimulationMaterial");
static_assert(offsetof(BP_FluidController_C_RefreshSimulationMaterial, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BP_FluidController_C_RefreshSimulationMaterial::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluidController_C_RefreshSimulationMaterial, CallFunc_IsValid_ReturnValue_1) == 0x000001, "Member 'BP_FluidController_C_RefreshSimulationMaterial::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function BP_FluidController.BP_FluidController_C.CollectSurfaceBounds
// 0x00C8 (0x00C8 - 0x0000)
struct BP_FluidController_C_CollectSurfaceBounds final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0010(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_GetAllActorsOfClass_OutActors;            // 0x0028(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UStaticMeshComponent*>           CallFunc_GetComponentsByTag_ReturnValue;           // 0x0050(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UStaticMeshComponent*                   CallFunc_Array_Get_Item_1;                         // 0x0060(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetComponentBounds_Origin;                // 0x006C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetComponentBounds_BoxExtent;             // 0x0078(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetComponentBounds_SphereRadius;          // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89[0x3];                                       // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x008C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0098(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBoxSphereBounds                       K2Node_MakeStruct_BoxSphereBounds;                 // 0x00A4(0x001C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FluidController_C_CollectSurfaceBounds) == 0x000008, "Wrong alignment on BP_FluidController_C_CollectSurfaceBounds");
static_assert(sizeof(BP_FluidController_C_CollectSurfaceBounds) == 0x0000C8, "Wrong size on BP_FluidController_C_CollectSurfaceBounds");
static_assert(offsetof(BP_FluidController_C_CollectSurfaceBounds, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_FluidController_C_CollectSurfaceBounds::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_FluidController_C_CollectSurfaceBounds, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_FluidController_C_CollectSurfaceBounds::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_FluidController_C_CollectSurfaceBounds, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_FluidController_C_CollectSurfaceBounds::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluidController_C_CollectSurfaceBounds, Temp_int_Array_Index_Variable_1) == 0x00000C, "Member 'BP_FluidController_C_CollectSurfaceBounds::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_FluidController_C_CollectSurfaceBounds, CallFunc_MakeVector_ReturnValue) == 0x000010, "Member 'BP_FluidController_C_CollectSurfaceBounds::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluidController_C_CollectSurfaceBounds, Temp_int_Loop_Counter_Variable_1) == 0x00001C, "Member 'BP_FluidController_C_CollectSurfaceBounds::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_FluidController_C_CollectSurfaceBounds, CallFunc_Add_IntInt_ReturnValue_1) == 0x000020, "Member 'BP_FluidController_C_CollectSurfaceBounds::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FluidController_C_CollectSurfaceBounds, CallFunc_GetAllActorsOfClass_OutActors) == 0x000028, "Member 'BP_FluidController_C_CollectSurfaceBounds::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(BP_FluidController_C_CollectSurfaceBounds, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'BP_FluidController_C_CollectSurfaceBounds::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluidController_C_CollectSurfaceBounds, CallFunc_Array_Get_Item) == 0x000040, "Member 'BP_FluidController_C_CollectSurfaceBounds::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_FluidController_C_CollectSurfaceBounds, CallFunc_Less_IntInt_ReturnValue) == 0x000048, "Member 'BP_FluidController_C_CollectSurfaceBounds::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluidController_C_CollectSurfaceBounds, CallFunc_GetComponentsByTag_ReturnValue) == 0x000050, "Member 'BP_FluidController_C_CollectSurfaceBounds::CallFunc_GetComponentsByTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluidController_C_CollectSurfaceBounds, CallFunc_Array_Get_Item_1) == 0x000060, "Member 'BP_FluidController_C_CollectSurfaceBounds::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_FluidController_C_CollectSurfaceBounds, CallFunc_Array_Length_ReturnValue_1) == 0x000068, "Member 'BP_FluidController_C_CollectSurfaceBounds::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FluidController_C_CollectSurfaceBounds, CallFunc_GetComponentBounds_Origin) == 0x00006C, "Member 'BP_FluidController_C_CollectSurfaceBounds::CallFunc_GetComponentBounds_Origin' has a wrong offset!");
static_assert(offsetof(BP_FluidController_C_CollectSurfaceBounds, CallFunc_GetComponentBounds_BoxExtent) == 0x000078, "Member 'BP_FluidController_C_CollectSurfaceBounds::CallFunc_GetComponentBounds_BoxExtent' has a wrong offset!");
static_assert(offsetof(BP_FluidController_C_CollectSurfaceBounds, CallFunc_GetComponentBounds_SphereRadius) == 0x000084, "Member 'BP_FluidController_C_CollectSurfaceBounds::CallFunc_GetComponentBounds_SphereRadius' has a wrong offset!");
static_assert(offsetof(BP_FluidController_C_CollectSurfaceBounds, CallFunc_Less_IntInt_ReturnValue_1) == 0x000088, "Member 'BP_FluidController_C_CollectSurfaceBounds::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FluidController_C_CollectSurfaceBounds, CallFunc_Add_VectorVector_ReturnValue) == 0x00008C, "Member 'BP_FluidController_C_CollectSurfaceBounds::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluidController_C_CollectSurfaceBounds, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000098, "Member 'BP_FluidController_C_CollectSurfaceBounds::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluidController_C_CollectSurfaceBounds, K2Node_MakeStruct_BoxSphereBounds) == 0x0000A4, "Member 'BP_FluidController_C_CollectSurfaceBounds::K2Node_MakeStruct_BoxSphereBounds' has a wrong offset!");
static_assert(offsetof(BP_FluidController_C_CollectSurfaceBounds, CallFunc_Array_Add_ReturnValue) == 0x0000C0, "Member 'BP_FluidController_C_CollectSurfaceBounds::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function BP_FluidController.BP_FluidController_C.IsInAnySurface
// 0x0068 (0x0068 - 0x0000)
struct BP_FluidController_C_IsInAnySurface final
{
public:
	bool                                          Value;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsIn;                                              // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Location;                                          // 0x0004(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue;           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBoxSphereBounds                       CallFunc_Array_Get_Item;                           // 0x0034(0x001C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPointInBox_ReturnValue;                 // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0055(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0056(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_57[0x1];                                       // 0x0057(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0058(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FluidController_C_IsInAnySurface) == 0x000008, "Wrong alignment on BP_FluidController_C_IsInAnySurface");
static_assert(sizeof(BP_FluidController_C_IsInAnySurface) == 0x000068, "Wrong size on BP_FluidController_C_IsInAnySurface");
static_assert(offsetof(BP_FluidController_C_IsInAnySurface, Value) == 0x000000, "Member 'BP_FluidController_C_IsInAnySurface::Value' has a wrong offset!");
static_assert(offsetof(BP_FluidController_C_IsInAnySurface, IsIn) == 0x000001, "Member 'BP_FluidController_C_IsInAnySurface::IsIn' has a wrong offset!");
static_assert(offsetof(BP_FluidController_C_IsInAnySurface, Location) == 0x000004, "Member 'BP_FluidController_C_IsInAnySurface::Location' has a wrong offset!");
static_assert(offsetof(BP_FluidController_C_IsInAnySurface, Temp_bool_True_if_break_was_hit_Variable) == 0x000010, "Member 'BP_FluidController_C_IsInAnySurface::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_FluidController_C_IsInAnySurface, Temp_int_Array_Index_Variable) == 0x000014, "Member 'BP_FluidController_C_IsInAnySurface::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_FluidController_C_IsInAnySurface, CallFunc_Not_PreBool_ReturnValue) == 0x000018, "Member 'BP_FluidController_C_IsInAnySurface::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluidController_C_IsInAnySurface, Temp_int_Loop_Counter_Variable) == 0x00001C, "Member 'BP_FluidController_C_IsInAnySurface::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_FluidController_C_IsInAnySurface, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'BP_FluidController_C_IsInAnySurface::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluidController_C_IsInAnySurface, CallFunc_GetPlayerCharacter_ReturnValue) == 0x000028, "Member 'BP_FluidController_C_IsInAnySurface::CallFunc_GetPlayerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluidController_C_IsInAnySurface, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'BP_FluidController_C_IsInAnySurface::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluidController_C_IsInAnySurface, CallFunc_Array_Get_Item) == 0x000034, "Member 'BP_FluidController_C_IsInAnySurface::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_FluidController_C_IsInAnySurface, CallFunc_Array_Length_ReturnValue) == 0x000050, "Member 'BP_FluidController_C_IsInAnySurface::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluidController_C_IsInAnySurface, CallFunc_IsPointInBox_ReturnValue) == 0x000054, "Member 'BP_FluidController_C_IsInAnySurface::CallFunc_IsPointInBox_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluidController_C_IsInAnySurface, CallFunc_Less_IntInt_ReturnValue) == 0x000055, "Member 'BP_FluidController_C_IsInAnySurface::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluidController_C_IsInAnySurface, CallFunc_BooleanAND_ReturnValue) == 0x000056, "Member 'BP_FluidController_C_IsInAnySurface::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluidController_C_IsInAnySurface, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000058, "Member 'BP_FluidController_C_IsInAnySurface::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");

// Function BP_FluidController.BP_FluidController_C.ShouldUpdate
// 0x0010 (0x0010 - 0x0000)
struct BP_FluidController_C_ShouldUpdate final
{
public:
	bool                                          Value;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetGameTimeSinceCreation_ReturnValue;     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_FluidController_C_ShouldUpdate) == 0x000004, "Wrong alignment on BP_FluidController_C_ShouldUpdate");
static_assert(sizeof(BP_FluidController_C_ShouldUpdate) == 0x000010, "Wrong size on BP_FluidController_C_ShouldUpdate");
static_assert(offsetof(BP_FluidController_C_ShouldUpdate, Value) == 0x000000, "Member 'BP_FluidController_C_ShouldUpdate::Value' has a wrong offset!");
static_assert(offsetof(BP_FluidController_C_ShouldUpdate, CallFunc_GetGameTimeSinceCreation_ReturnValue) == 0x000004, "Member 'BP_FluidController_C_ShouldUpdate::CallFunc_GetGameTimeSinceCreation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluidController_C_ShouldUpdate, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000008, "Member 'BP_FluidController_C_ShouldUpdate::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluidController_C_ShouldUpdate, CallFunc_Greater_FloatFloat_ReturnValue) == 0x00000C, "Member 'BP_FluidController_C_ShouldUpdate::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluidController_C_ShouldUpdate, CallFunc_Less_FloatFloat_ReturnValue) == 0x00000D, "Member 'BP_FluidController_C_ShouldUpdate::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluidController_C_ShouldUpdate, CallFunc_BooleanAND_ReturnValue) == 0x00000E, "Member 'BP_FluidController_C_ShouldUpdate::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

}


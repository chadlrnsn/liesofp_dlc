#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PhysicalAnimationComponent

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "ProjectP_structs.hpp"
#include "ProjectP_classes.hpp"
#include "CoreUObject_structs.hpp"
#include "ProjectPContentInfo_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_PhysicalAnimationComponent.BP_PhysicalAnimationComponent_C
// 0x0518 (0x0808 - 0x02F0)
class UBP_PhysicalAnimationComponent_C final : public ULPhysicalAnimationComponent
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02F0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FPhysicalAnimationData                 Option_Default_PhysicalAnimationData;              // 0x02F8(0x0024)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	uint8                                         Pad_31C[0x4];                                      // 0x031C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           Option_Default_BlockToNoPhysicsWhenActionStopped;  // 0x0320(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          Option_Draw_Explosion_DirectionalImpulse;          // 0x0330(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_331[0x7];                                      // 0x0331(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           Cached_TimerHandle_PlayExplosionFx;                // 0x0338(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UPhysicalAnimationComponent*            Cached_PhysicalAnimationComponent;                 // 0x0340(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Option_ConstraintProfile_ForExplosion;             // 0x0348(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Option_SocketName_Bip001;                          // 0x0350(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Option_SocketName_Root;                            // 0x0358(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           Cached_TimerHandle_ConsumePhysicalMomentum;        // 0x0360(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class FName                                   Option_SliceMesh_RootSocket_Chest;                 // 0x0368(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Cached_Slice_Parts_SocketName_Upper;               // 0x0370(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Cached_Slice_Parts_SocketName;                     // 0x0378(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Arm_R_Socket;                                      // 0x0380(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 Cached_ExtraExplodeMesh;                           // 0x0388(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 Cached_ImpulseTargetMesh;                          // 0x0390(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLPhysicsInfo_Explosion                Cached_Explosion_Info;                             // 0x0398(0x0200)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	struct FLExplosionMeshInfo                    Cached_Explosion_MeshInfo;                         // 0x0598(0x00A8)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	struct FLHitInfo                              Cached_Explosion_HitInfo;                          // 0x0640(0x0150)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, ContainsInstancedReference)
	struct FVector                                Option_Explosion_ImpulseForSpinning;               // 0x0790(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Option_Explosion_Impulse_Sphere_Radius;            // 0x079C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMesh*                          Cached_Explosion_RestoreMesh;                      // 0x07A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           Cached_TimerHandle_PlayExplosionFx_Dissolve;       // 0x07A8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TArray<class UNiagaraComponent*>              Cached_AttachedSystemFx;                           // 0x07B0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TArray<class UNiagaraComponent*>              Cached_AttachedSystemFx_OnReset;                   // 0x07C0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	struct FTimerHandle                           Cached_TimerHandle_PlayExplosionFx_ChangeCutMaterial; // 0x07D0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	float                                         Cached_StartTime_PlayExplosionFx_ChangeCutMaterial; // 0x07D8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Cached_HideBoneOffset;                             // 0x07DC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           Cached_TimerHandle_PlayExplosionFx_ChangeCutMaterial_Before; // 0x07E0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	float                                         ChangeTexture;                                     // 0x07E8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ChangeDelay;                                       // 0x07EC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         All_ChangeDelay;                                   // 0x07F0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         All_ChangeTexture;                                 // 0x07F4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Option_TestNewExplosion;                           // 0x07F8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7F9[0x7];                                      // 0x07F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           Cached_TimerHandle_PlayExplosionFx_Dissolve_Defer_NoCollision; // 0x0800(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_PhysicalAnimationComponent(int32 EntryPoint);
	void OnResetBP(class USkeletalMeshComponent* InSkeletalMeshComponent);
	bool OnChangeToNoPhysicsBP(const struct FLPhysicsInfo_NoPhysics& PhysicsInfo);
	bool OnChangeToPhysicalAnimationBP(const struct FLPhysicsInfo_PhysicalAnimation& PhysicsInfo);
	bool OnChangeToRagdollBP(const struct FLPhysicsInfo_RagDoll& PhysicsInfo);
	bool OnChangeToExplosionBP(const struct FLPhysicsInfo_Explosion& PhysicsInfo);
	void PlayExplosionFx();
	void ConsumePhysicalMomentum();
	bool OnChangeToRagdollFreezeBP();
	void PlayExplosionFx_Dissolve();
	void PlayExplosionFx_ChangeCutMaterial();
	void PlayExplosionFx_Dissolve_Defer_NoCollision();
	void PlayExplosionFx_ChangeCutMaterial_Before();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_PhysicalAnimationComponent_C">();
	}
	static class UBP_PhysicalAnimationComponent_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_PhysicalAnimationComponent_C>();
	}
};
static_assert(alignof(UBP_PhysicalAnimationComponent_C) == 0x000008, "Wrong alignment on UBP_PhysicalAnimationComponent_C");
static_assert(sizeof(UBP_PhysicalAnimationComponent_C) == 0x000808, "Wrong size on UBP_PhysicalAnimationComponent_C");
static_assert(offsetof(UBP_PhysicalAnimationComponent_C, UberGraphFrame) == 0x0002F0, "Member 'UBP_PhysicalAnimationComponent_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_PhysicalAnimationComponent_C, Option_Default_PhysicalAnimationData) == 0x0002F8, "Member 'UBP_PhysicalAnimationComponent_C::Option_Default_PhysicalAnimationData' has a wrong offset!");
static_assert(offsetof(UBP_PhysicalAnimationComponent_C, Option_Default_BlockToNoPhysicsWhenActionStopped) == 0x000320, "Member 'UBP_PhysicalAnimationComponent_C::Option_Default_BlockToNoPhysicsWhenActionStopped' has a wrong offset!");
static_assert(offsetof(UBP_PhysicalAnimationComponent_C, Option_Draw_Explosion_DirectionalImpulse) == 0x000330, "Member 'UBP_PhysicalAnimationComponent_C::Option_Draw_Explosion_DirectionalImpulse' has a wrong offset!");
static_assert(offsetof(UBP_PhysicalAnimationComponent_C, Cached_TimerHandle_PlayExplosionFx) == 0x000338, "Member 'UBP_PhysicalAnimationComponent_C::Cached_TimerHandle_PlayExplosionFx' has a wrong offset!");
static_assert(offsetof(UBP_PhysicalAnimationComponent_C, Cached_PhysicalAnimationComponent) == 0x000340, "Member 'UBP_PhysicalAnimationComponent_C::Cached_PhysicalAnimationComponent' has a wrong offset!");
static_assert(offsetof(UBP_PhysicalAnimationComponent_C, Option_ConstraintProfile_ForExplosion) == 0x000348, "Member 'UBP_PhysicalAnimationComponent_C::Option_ConstraintProfile_ForExplosion' has a wrong offset!");
static_assert(offsetof(UBP_PhysicalAnimationComponent_C, Option_SocketName_Bip001) == 0x000350, "Member 'UBP_PhysicalAnimationComponent_C::Option_SocketName_Bip001' has a wrong offset!");
static_assert(offsetof(UBP_PhysicalAnimationComponent_C, Option_SocketName_Root) == 0x000358, "Member 'UBP_PhysicalAnimationComponent_C::Option_SocketName_Root' has a wrong offset!");
static_assert(offsetof(UBP_PhysicalAnimationComponent_C, Cached_TimerHandle_ConsumePhysicalMomentum) == 0x000360, "Member 'UBP_PhysicalAnimationComponent_C::Cached_TimerHandle_ConsumePhysicalMomentum' has a wrong offset!");
static_assert(offsetof(UBP_PhysicalAnimationComponent_C, Option_SliceMesh_RootSocket_Chest) == 0x000368, "Member 'UBP_PhysicalAnimationComponent_C::Option_SliceMesh_RootSocket_Chest' has a wrong offset!");
static_assert(offsetof(UBP_PhysicalAnimationComponent_C, Cached_Slice_Parts_SocketName_Upper) == 0x000370, "Member 'UBP_PhysicalAnimationComponent_C::Cached_Slice_Parts_SocketName_Upper' has a wrong offset!");
static_assert(offsetof(UBP_PhysicalAnimationComponent_C, Cached_Slice_Parts_SocketName) == 0x000378, "Member 'UBP_PhysicalAnimationComponent_C::Cached_Slice_Parts_SocketName' has a wrong offset!");
static_assert(offsetof(UBP_PhysicalAnimationComponent_C, Arm_R_Socket) == 0x000380, "Member 'UBP_PhysicalAnimationComponent_C::Arm_R_Socket' has a wrong offset!");
static_assert(offsetof(UBP_PhysicalAnimationComponent_C, Cached_ExtraExplodeMesh) == 0x000388, "Member 'UBP_PhysicalAnimationComponent_C::Cached_ExtraExplodeMesh' has a wrong offset!");
static_assert(offsetof(UBP_PhysicalAnimationComponent_C, Cached_ImpulseTargetMesh) == 0x000390, "Member 'UBP_PhysicalAnimationComponent_C::Cached_ImpulseTargetMesh' has a wrong offset!");
static_assert(offsetof(UBP_PhysicalAnimationComponent_C, Cached_Explosion_Info) == 0x000398, "Member 'UBP_PhysicalAnimationComponent_C::Cached_Explosion_Info' has a wrong offset!");
static_assert(offsetof(UBP_PhysicalAnimationComponent_C, Cached_Explosion_MeshInfo) == 0x000598, "Member 'UBP_PhysicalAnimationComponent_C::Cached_Explosion_MeshInfo' has a wrong offset!");
static_assert(offsetof(UBP_PhysicalAnimationComponent_C, Cached_Explosion_HitInfo) == 0x000640, "Member 'UBP_PhysicalAnimationComponent_C::Cached_Explosion_HitInfo' has a wrong offset!");
static_assert(offsetof(UBP_PhysicalAnimationComponent_C, Option_Explosion_ImpulseForSpinning) == 0x000790, "Member 'UBP_PhysicalAnimationComponent_C::Option_Explosion_ImpulseForSpinning' has a wrong offset!");
static_assert(offsetof(UBP_PhysicalAnimationComponent_C, Option_Explosion_Impulse_Sphere_Radius) == 0x00079C, "Member 'UBP_PhysicalAnimationComponent_C::Option_Explosion_Impulse_Sphere_Radius' has a wrong offset!");
static_assert(offsetof(UBP_PhysicalAnimationComponent_C, Cached_Explosion_RestoreMesh) == 0x0007A0, "Member 'UBP_PhysicalAnimationComponent_C::Cached_Explosion_RestoreMesh' has a wrong offset!");
static_assert(offsetof(UBP_PhysicalAnimationComponent_C, Cached_TimerHandle_PlayExplosionFx_Dissolve) == 0x0007A8, "Member 'UBP_PhysicalAnimationComponent_C::Cached_TimerHandle_PlayExplosionFx_Dissolve' has a wrong offset!");
static_assert(offsetof(UBP_PhysicalAnimationComponent_C, Cached_AttachedSystemFx) == 0x0007B0, "Member 'UBP_PhysicalAnimationComponent_C::Cached_AttachedSystemFx' has a wrong offset!");
static_assert(offsetof(UBP_PhysicalAnimationComponent_C, Cached_AttachedSystemFx_OnReset) == 0x0007C0, "Member 'UBP_PhysicalAnimationComponent_C::Cached_AttachedSystemFx_OnReset' has a wrong offset!");
static_assert(offsetof(UBP_PhysicalAnimationComponent_C, Cached_TimerHandle_PlayExplosionFx_ChangeCutMaterial) == 0x0007D0, "Member 'UBP_PhysicalAnimationComponent_C::Cached_TimerHandle_PlayExplosionFx_ChangeCutMaterial' has a wrong offset!");
static_assert(offsetof(UBP_PhysicalAnimationComponent_C, Cached_StartTime_PlayExplosionFx_ChangeCutMaterial) == 0x0007D8, "Member 'UBP_PhysicalAnimationComponent_C::Cached_StartTime_PlayExplosionFx_ChangeCutMaterial' has a wrong offset!");
static_assert(offsetof(UBP_PhysicalAnimationComponent_C, Cached_HideBoneOffset) == 0x0007DC, "Member 'UBP_PhysicalAnimationComponent_C::Cached_HideBoneOffset' has a wrong offset!");
static_assert(offsetof(UBP_PhysicalAnimationComponent_C, Cached_TimerHandle_PlayExplosionFx_ChangeCutMaterial_Before) == 0x0007E0, "Member 'UBP_PhysicalAnimationComponent_C::Cached_TimerHandle_PlayExplosionFx_ChangeCutMaterial_Before' has a wrong offset!");
static_assert(offsetof(UBP_PhysicalAnimationComponent_C, ChangeTexture) == 0x0007E8, "Member 'UBP_PhysicalAnimationComponent_C::ChangeTexture' has a wrong offset!");
static_assert(offsetof(UBP_PhysicalAnimationComponent_C, ChangeDelay) == 0x0007EC, "Member 'UBP_PhysicalAnimationComponent_C::ChangeDelay' has a wrong offset!");
static_assert(offsetof(UBP_PhysicalAnimationComponent_C, All_ChangeDelay) == 0x0007F0, "Member 'UBP_PhysicalAnimationComponent_C::All_ChangeDelay' has a wrong offset!");
static_assert(offsetof(UBP_PhysicalAnimationComponent_C, All_ChangeTexture) == 0x0007F4, "Member 'UBP_PhysicalAnimationComponent_C::All_ChangeTexture' has a wrong offset!");
static_assert(offsetof(UBP_PhysicalAnimationComponent_C, Option_TestNewExplosion) == 0x0007F8, "Member 'UBP_PhysicalAnimationComponent_C::Option_TestNewExplosion' has a wrong offset!");
static_assert(offsetof(UBP_PhysicalAnimationComponent_C, Cached_TimerHandle_PlayExplosionFx_Dissolve_Defer_NoCollision) == 0x000800, "Member 'UBP_PhysicalAnimationComponent_C::Cached_TimerHandle_PlayExplosionFx_Dissolve_Defer_NoCollision' has a wrong offset!");

}


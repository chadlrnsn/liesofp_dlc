#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Projectile_SniperCannon

#include "Basic.hpp"

#include "ProjectP_classes.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Projectile_SniperCannon.BP_Projectile_SniperCannon_C
// 0x0020 (0x0430 - 0x0410)
class ABP_Projectile_SniperCannon_C final : public ALProjectile_Angular
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0410(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class ULProjectileMovementComponent*          LProjectileMovement;                               // 0x0418(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USphereComponent*                       Collision;                                         // 0x0420(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	int32                                         MaxBounceCount;                                    // 0x0428(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_Projectile_SniperCannon(int32 EntryPoint);
	void ReceiveTick(float DeltaSeconds);
	void ReceiveBeginPlay();
	void Stop();
	void BndEvt__BP_Projectile_Angular_Base_Collision_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit);
	void Start();
	void InitializeFromProjectileDesign();
	void UserConstructionScript();
	void FinishProjectile();
	void CheckDistance();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Projectile_SniperCannon_C">();
	}
	static class ABP_Projectile_SniperCannon_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Projectile_SniperCannon_C>();
	}
};
static_assert(alignof(ABP_Projectile_SniperCannon_C) == 0x000010, "Wrong alignment on ABP_Projectile_SniperCannon_C");
static_assert(sizeof(ABP_Projectile_SniperCannon_C) == 0x000430, "Wrong size on ABP_Projectile_SniperCannon_C");
static_assert(offsetof(ABP_Projectile_SniperCannon_C, UberGraphFrame) == 0x000410, "Member 'ABP_Projectile_SniperCannon_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_Projectile_SniperCannon_C, LProjectileMovement) == 0x000418, "Member 'ABP_Projectile_SniperCannon_C::LProjectileMovement' has a wrong offset!");
static_assert(offsetof(ABP_Projectile_SniperCannon_C, Collision) == 0x000420, "Member 'ABP_Projectile_SniperCannon_C::Collision' has a wrong offset!");
static_assert(offsetof(ABP_Projectile_SniperCannon_C, MaxBounceCount) == 0x000428, "Member 'ABP_Projectile_SniperCannon_C::MaxBounceCount' has a wrong offset!");

}


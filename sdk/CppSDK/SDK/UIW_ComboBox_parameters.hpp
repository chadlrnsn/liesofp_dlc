#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UIW_ComboBox

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function UIW_ComboBox.UIW_ComboBox_C.OnSelectionChanged__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct UIW_ComboBox_C_OnSelectionChanged__DelegateSignature final
{
public:
	int32                                         Index_0;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UIW_ComboBox_C_OnSelectionChanged__DelegateSignature) == 0x000004, "Wrong alignment on UIW_ComboBox_C_OnSelectionChanged__DelegateSignature");
static_assert(sizeof(UIW_ComboBox_C_OnSelectionChanged__DelegateSignature) == 0x000004, "Wrong size on UIW_ComboBox_C_OnSelectionChanged__DelegateSignature");
static_assert(offsetof(UIW_ComboBox_C_OnSelectionChanged__DelegateSignature, Index_0) == 0x000000, "Member 'UIW_ComboBox_C_OnSelectionChanged__DelegateSignature::Index_0' has a wrong offset!");

// Function UIW_ComboBox.UIW_ComboBox_C.OnOpenAndClose__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct UIW_ComboBox_C_OnOpenAndClose__DelegateSignature final
{
public:
	bool                                          IsOpen;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUIW_ComboBox_C*                        ComboBox;                                          // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UIW_ComboBox_C_OnOpenAndClose__DelegateSignature) == 0x000008, "Wrong alignment on UIW_ComboBox_C_OnOpenAndClose__DelegateSignature");
static_assert(sizeof(UIW_ComboBox_C_OnOpenAndClose__DelegateSignature) == 0x000010, "Wrong size on UIW_ComboBox_C_OnOpenAndClose__DelegateSignature");
static_assert(offsetof(UIW_ComboBox_C_OnOpenAndClose__DelegateSignature, IsOpen) == 0x000000, "Member 'UIW_ComboBox_C_OnOpenAndClose__DelegateSignature::IsOpen' has a wrong offset!");
static_assert(offsetof(UIW_ComboBox_C_OnOpenAndClose__DelegateSignature, ComboBox) == 0x000008, "Member 'UIW_ComboBox_C_OnOpenAndClose__DelegateSignature::ComboBox' has a wrong offset!");

// Function UIW_ComboBox.UIW_ComboBox_C.ExecuteUbergraph_UIW_ComboBox
// 0x0004 (0x0004 - 0x0000)
struct UIW_ComboBox_C_ExecuteUbergraph_UIW_ComboBox final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UIW_ComboBox_C_ExecuteUbergraph_UIW_ComboBox) == 0x000004, "Wrong alignment on UIW_ComboBox_C_ExecuteUbergraph_UIW_ComboBox");
static_assert(sizeof(UIW_ComboBox_C_ExecuteUbergraph_UIW_ComboBox) == 0x000004, "Wrong size on UIW_ComboBox_C_ExecuteUbergraph_UIW_ComboBox");
static_assert(offsetof(UIW_ComboBox_C_ExecuteUbergraph_UIW_ComboBox, EntryPoint) == 0x000000, "Member 'UIW_ComboBox_C_ExecuteUbergraph_UIW_ComboBox::EntryPoint' has a wrong offset!");

// Function UIW_ComboBox.UIW_ComboBox_C.OnFocusReceived
// 0x01B0 (0x01B0 - 0x0000)
struct UIW_ComboBox_C_OnFocusReceived final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FFocusEvent                            InFocusEvent;                                      // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FEventReply                            ReturnValue;                                       // 0x0040(0x00B8)(Parm, OutParm, ReturnParm)
	struct FEventReply                            K2Node_MakeStruct_EventReply;                      // 0x00F8(0x00B8)()
};
static_assert(alignof(UIW_ComboBox_C_OnFocusReceived) == 0x000008, "Wrong alignment on UIW_ComboBox_C_OnFocusReceived");
static_assert(sizeof(UIW_ComboBox_C_OnFocusReceived) == 0x0001B0, "Wrong size on UIW_ComboBox_C_OnFocusReceived");
static_assert(offsetof(UIW_ComboBox_C_OnFocusReceived, MyGeometry) == 0x000000, "Member 'UIW_ComboBox_C_OnFocusReceived::MyGeometry' has a wrong offset!");
static_assert(offsetof(UIW_ComboBox_C_OnFocusReceived, InFocusEvent) == 0x000038, "Member 'UIW_ComboBox_C_OnFocusReceived::InFocusEvent' has a wrong offset!");
static_assert(offsetof(UIW_ComboBox_C_OnFocusReceived, ReturnValue) == 0x000040, "Member 'UIW_ComboBox_C_OnFocusReceived::ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_ComboBox_C_OnFocusReceived, K2Node_MakeStruct_EventReply) == 0x0000F8, "Member 'UIW_ComboBox_C_OnFocusReceived::K2Node_MakeStruct_EventReply' has a wrong offset!");

// Function UIW_ComboBox.UIW_ComboBox_C.SetStringOptions
// 0x0058 (0x0058 - 0x0000)
struct UIW_ComboBox_C_SetStringOptions final
{
public:
	TArray<class FString>                         Options;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Array_Get_Item;                           // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0030(0x0018)()
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UIW_ComboBox_C_SetStringOptions) == 0x000008, "Wrong alignment on UIW_ComboBox_C_SetStringOptions");
static_assert(sizeof(UIW_ComboBox_C_SetStringOptions) == 0x000058, "Wrong size on UIW_ComboBox_C_SetStringOptions");
static_assert(offsetof(UIW_ComboBox_C_SetStringOptions, Options) == 0x000000, "Member 'UIW_ComboBox_C_SetStringOptions::Options' has a wrong offset!");
static_assert(offsetof(UIW_ComboBox_C_SetStringOptions, CallFunc_Array_Length_ReturnValue) == 0x000010, "Member 'UIW_ComboBox_C_SetStringOptions::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_ComboBox_C_SetStringOptions, Temp_int_Array_Index_Variable) == 0x000014, "Member 'UIW_ComboBox_C_SetStringOptions::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(UIW_ComboBox_C_SetStringOptions, Temp_int_Loop_Counter_Variable) == 0x000018, "Member 'UIW_ComboBox_C_SetStringOptions::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(UIW_ComboBox_C_SetStringOptions, CallFunc_Array_Get_Item) == 0x000020, "Member 'UIW_ComboBox_C_SetStringOptions::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(UIW_ComboBox_C_SetStringOptions, CallFunc_Conv_StringToText_ReturnValue) == 0x000030, "Member 'UIW_ComboBox_C_SetStringOptions::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_ComboBox_C_SetStringOptions, CallFunc_Less_IntInt_ReturnValue) == 0x000048, "Member 'UIW_ComboBox_C_SetStringOptions::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_ComboBox_C_SetStringOptions, CallFunc_Add_IntInt_ReturnValue) == 0x00004C, "Member 'UIW_ComboBox_C_SetStringOptions::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_ComboBox_C_SetStringOptions, CallFunc_Array_Add_ReturnValue) == 0x000050, "Member 'UIW_ComboBox_C_SetStringOptions::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function UIW_ComboBox.UIW_ComboBox_C.SetTextOptions
// 0x0010 (0x0010 - 0x0000)
struct UIW_ComboBox_C_SetTextOptions final
{
public:
	TArray<class FText>                           Options;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(UIW_ComboBox_C_SetTextOptions) == 0x000008, "Wrong alignment on UIW_ComboBox_C_SetTextOptions");
static_assert(sizeof(UIW_ComboBox_C_SetTextOptions) == 0x000010, "Wrong size on UIW_ComboBox_C_SetTextOptions");
static_assert(offsetof(UIW_ComboBox_C_SetTextOptions, Options) == 0x000000, "Member 'UIW_ComboBox_C_SetTextOptions::Options' has a wrong offset!");

// Function UIW_ComboBox.UIW_ComboBox_C.GetSelectedIndex
// 0x0004 (0x0004 - 0x0000)
struct UIW_ComboBox_C_GetSelectedIndex final
{
public:
	int32                                         Index_0;                                           // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UIW_ComboBox_C_GetSelectedIndex) == 0x000004, "Wrong alignment on UIW_ComboBox_C_GetSelectedIndex");
static_assert(sizeof(UIW_ComboBox_C_GetSelectedIndex) == 0x000004, "Wrong size on UIW_ComboBox_C_GetSelectedIndex");
static_assert(offsetof(UIW_ComboBox_C_GetSelectedIndex, Index_0) == 0x000000, "Member 'UIW_ComboBox_C_GetSelectedIndex::Index_0' has a wrong offset!");

// Function UIW_ComboBox.UIW_ComboBox_C.SetSelectedIndex
// 0x0008 (0x0008 - 0x0000)
struct UIW_ComboBox_C_SetSelectedIndex final
{
public:
	int32                                         Index_0;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UIW_ComboBox_C_SetSelectedIndex) == 0x000004, "Wrong alignment on UIW_ComboBox_C_SetSelectedIndex");
static_assert(sizeof(UIW_ComboBox_C_SetSelectedIndex) == 0x000008, "Wrong size on UIW_ComboBox_C_SetSelectedIndex");
static_assert(offsetof(UIW_ComboBox_C_SetSelectedIndex, Index_0) == 0x000000, "Member 'UIW_ComboBox_C_SetSelectedIndex::Index_0' has a wrong offset!");
static_assert(offsetof(UIW_ComboBox_C_SetSelectedIndex, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000004, "Member 'UIW_ComboBox_C_SetSelectedIndex::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");

// Function UIW_ComboBox.UIW_ComboBox_C.CallbackComboBox
// 0x0004 (0x0004 - 0x0000)
struct UIW_ComboBox_C_CallbackComboBox final
{
public:
	int32                                         Index_0;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UIW_ComboBox_C_CallbackComboBox) == 0x000004, "Wrong alignment on UIW_ComboBox_C_CallbackComboBox");
static_assert(sizeof(UIW_ComboBox_C_CallbackComboBox) == 0x000004, "Wrong size on UIW_ComboBox_C_CallbackComboBox");
static_assert(offsetof(UIW_ComboBox_C_CallbackComboBox, Index_0) == 0x000000, "Member 'UIW_ComboBox_C_CallbackComboBox::Index_0' has a wrong offset!");

// Function UIW_ComboBox.UIW_ComboBox_C.Open
// 0x0020 (0x0020 - 0x0000)
struct UIW_ComboBox_C_Open final
{
public:
	class UUIW_Main_C*                            CallFunc_GetMainWidget_MainWidget;                 // 0x0000(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUserWidget*                            CallFunc_AddWidget_Widget;                         // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUIW_ComboBox_List_C*                   K2Node_DynamicCast_AsUIW_Combo_Box_List;           // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UIW_ComboBox_C_Open) == 0x000008, "Wrong alignment on UIW_ComboBox_C_Open");
static_assert(sizeof(UIW_ComboBox_C_Open) == 0x000020, "Wrong size on UIW_ComboBox_C_Open");
static_assert(offsetof(UIW_ComboBox_C_Open, CallFunc_GetMainWidget_MainWidget) == 0x000000, "Member 'UIW_ComboBox_C_Open::CallFunc_GetMainWidget_MainWidget' has a wrong offset!");
static_assert(offsetof(UIW_ComboBox_C_Open, CallFunc_AddWidget_Widget) == 0x000008, "Member 'UIW_ComboBox_C_Open::CallFunc_AddWidget_Widget' has a wrong offset!");
static_assert(offsetof(UIW_ComboBox_C_Open, K2Node_DynamicCast_AsUIW_Combo_Box_List) == 0x000010, "Member 'UIW_ComboBox_C_Open::K2Node_DynamicCast_AsUIW_Combo_Box_List' has a wrong offset!");
static_assert(offsetof(UIW_ComboBox_C_Open, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'UIW_ComboBox_C_Open::K2Node_DynamicCast_bSuccess' has a wrong offset!");

}


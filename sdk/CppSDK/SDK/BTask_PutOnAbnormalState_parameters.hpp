#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BTask_PutOnAbnormalState

#include "Basic.hpp"


namespace SDK::Params
{

// Function BTask_PutOnAbnormalState.BTask_PutOnAbnormalState_C.ExecuteUbergraph_BTask_PutOnAbnormalState
// 0x0050 (0x0050 - 0x0000)
struct BTask_PutOnAbnormalState_C_ExecuteUbergraph_BTask_PutOnAbnormalState final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AAIController*                          K2Node_Event_OwnerController;                      // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_ControlledPawn;                       // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULObjectManagementSystem*               CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ALNPCCharacter*>                 CallFunc_FindNPCCharactersAround_ReturnValue;      // 0x0030(0x0010)(ReferenceParm)
	class ALNPCCharacter*                         CallFunc_Array_Get_Item;                           // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x004D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x004E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BTask_PutOnAbnormalState_C_ExecuteUbergraph_BTask_PutOnAbnormalState) == 0x000008, "Wrong alignment on BTask_PutOnAbnormalState_C_ExecuteUbergraph_BTask_PutOnAbnormalState");
static_assert(sizeof(BTask_PutOnAbnormalState_C_ExecuteUbergraph_BTask_PutOnAbnormalState) == 0x000050, "Wrong size on BTask_PutOnAbnormalState_C_ExecuteUbergraph_BTask_PutOnAbnormalState");
static_assert(offsetof(BTask_PutOnAbnormalState_C_ExecuteUbergraph_BTask_PutOnAbnormalState, EntryPoint) == 0x000000, "Member 'BTask_PutOnAbnormalState_C_ExecuteUbergraph_BTask_PutOnAbnormalState::EntryPoint' has a wrong offset!");
static_assert(offsetof(BTask_PutOnAbnormalState_C_ExecuteUbergraph_BTask_PutOnAbnormalState, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000004, "Member 'BTask_PutOnAbnormalState_C_ExecuteUbergraph_BTask_PutOnAbnormalState::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTask_PutOnAbnormalState_C_ExecuteUbergraph_BTask_PutOnAbnormalState, Temp_int_Array_Index_Variable) == 0x000008, "Member 'BTask_PutOnAbnormalState_C_ExecuteUbergraph_BTask_PutOnAbnormalState::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BTask_PutOnAbnormalState_C_ExecuteUbergraph_BTask_PutOnAbnormalState, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'BTask_PutOnAbnormalState_C_ExecuteUbergraph_BTask_PutOnAbnormalState::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BTask_PutOnAbnormalState_C_ExecuteUbergraph_BTask_PutOnAbnormalState, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'BTask_PutOnAbnormalState_C_ExecuteUbergraph_BTask_PutOnAbnormalState::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTask_PutOnAbnormalState_C_ExecuteUbergraph_BTask_PutOnAbnormalState, K2Node_Event_OwnerController) == 0x000018, "Member 'BTask_PutOnAbnormalState_C_ExecuteUbergraph_BTask_PutOnAbnormalState::K2Node_Event_OwnerController' has a wrong offset!");
static_assert(offsetof(BTask_PutOnAbnormalState_C_ExecuteUbergraph_BTask_PutOnAbnormalState, K2Node_Event_ControlledPawn) == 0x000020, "Member 'BTask_PutOnAbnormalState_C_ExecuteUbergraph_BTask_PutOnAbnormalState::K2Node_Event_ControlledPawn' has a wrong offset!");
static_assert(offsetof(BTask_PutOnAbnormalState_C_ExecuteUbergraph_BTask_PutOnAbnormalState, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000028, "Member 'BTask_PutOnAbnormalState_C_ExecuteUbergraph_BTask_PutOnAbnormalState::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTask_PutOnAbnormalState_C_ExecuteUbergraph_BTask_PutOnAbnormalState, CallFunc_FindNPCCharactersAround_ReturnValue) == 0x000030, "Member 'BTask_PutOnAbnormalState_C_ExecuteUbergraph_BTask_PutOnAbnormalState::CallFunc_FindNPCCharactersAround_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTask_PutOnAbnormalState_C_ExecuteUbergraph_BTask_PutOnAbnormalState, CallFunc_Array_Get_Item) == 0x000040, "Member 'BTask_PutOnAbnormalState_C_ExecuteUbergraph_BTask_PutOnAbnormalState::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BTask_PutOnAbnormalState_C_ExecuteUbergraph_BTask_PutOnAbnormalState, CallFunc_Array_Length_ReturnValue) == 0x000048, "Member 'BTask_PutOnAbnormalState_C_ExecuteUbergraph_BTask_PutOnAbnormalState::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTask_PutOnAbnormalState_C_ExecuteUbergraph_BTask_PutOnAbnormalState, CallFunc_Less_IntInt_ReturnValue) == 0x00004C, "Member 'BTask_PutOnAbnormalState_C_ExecuteUbergraph_BTask_PutOnAbnormalState::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTask_PutOnAbnormalState_C_ExecuteUbergraph_BTask_PutOnAbnormalState, CallFunc_Not_PreBool_ReturnValue) == 0x00004D, "Member 'BTask_PutOnAbnormalState_C_ExecuteUbergraph_BTask_PutOnAbnormalState::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTask_PutOnAbnormalState_C_ExecuteUbergraph_BTask_PutOnAbnormalState, CallFunc_BooleanAND_ReturnValue) == 0x00004E, "Member 'BTask_PutOnAbnormalState_C_ExecuteUbergraph_BTask_PutOnAbnormalState::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BTask_PutOnAbnormalState.BTask_PutOnAbnormalState_C.ReceiveExecuteAI
// 0x0010 (0x0010 - 0x0000)
struct BTask_PutOnAbnormalState_C_ReceiveExecuteAI final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTask_PutOnAbnormalState_C_ReceiveExecuteAI) == 0x000008, "Wrong alignment on BTask_PutOnAbnormalState_C_ReceiveExecuteAI");
static_assert(sizeof(BTask_PutOnAbnormalState_C_ReceiveExecuteAI) == 0x000010, "Wrong size on BTask_PutOnAbnormalState_C_ReceiveExecuteAI");
static_assert(offsetof(BTask_PutOnAbnormalState_C_ReceiveExecuteAI, OwnerController) == 0x000000, "Member 'BTask_PutOnAbnormalState_C_ReceiveExecuteAI::OwnerController' has a wrong offset!");
static_assert(offsetof(BTask_PutOnAbnormalState_C_ReceiveExecuteAI, ControlledPawn) == 0x000008, "Member 'BTask_PutOnAbnormalState_C_ReceiveExecuteAI::ControlledPawn' has a wrong offset!");

}


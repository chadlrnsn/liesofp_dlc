#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Projectile_chakram

#include "Basic.hpp"

#include "ProjectP_structs.hpp"
#include "ProjectP_classes.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "ProjectPContentInfo_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Projectile_chakram.BP_Projectile_Chakram_C
// 0x0070 (0x0440 - 0x03D0)
class ABP_Projectile_Chakram_C final : public ALProjectile_NonTypical
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x03D0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class ULProjectileMovementComponent*          LProjectileMovement;                               // 0x03D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USphereComponent*                       Collision;                                         // 0x03E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class FName                                   ChakramStateName;                                  // 0x03E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Speed_Fire;                                        // 0x03F0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Duration_Speed_Fire;                               // 0x03F4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Duration_Speed_Zero;                               // 0x03F8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Duration_Stay;                                     // 0x03FC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Speed_Return;                                      // 0x0400(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ElaspedTimeAfterStateChange;                       // 0x0404(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Cached_Location;                                   // 0x0408(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ReturnLocation;                                    // 0x0414(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ALCharacter*                            HitActor;                                          // 0x0420(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   AttachedHitActorBoneName;                          // 0x0428(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Cached_Distance;                                   // 0x0430(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         New_Distance;                                      // 0x0434(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_Projectile_Chakram(int32 EntryPoint);
	void UpdateCharkramState(float DeltaTime);
	void SetCharkramState(class FName InState);
	void Stop();
	void Start();
	void InitializeFromProjectileDesign();
	void ReceiveTick(float DeltaSeconds);
	void ReceiveBeginPlay();
	void UserConstructionScript();
	void FinishProjectile();
	void GetDestination(ELProjectileMoveTargetType* OutMoveTargetType);
	void GetReturnLocation(struct FVector* OutReturnLocation);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Projectile_Chakram_C">();
	}
	static class ABP_Projectile_Chakram_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Projectile_Chakram_C>();
	}
};
static_assert(alignof(ABP_Projectile_Chakram_C) == 0x000010, "Wrong alignment on ABP_Projectile_Chakram_C");
static_assert(sizeof(ABP_Projectile_Chakram_C) == 0x000440, "Wrong size on ABP_Projectile_Chakram_C");
static_assert(offsetof(ABP_Projectile_Chakram_C, UberGraphFrame) == 0x0003D0, "Member 'ABP_Projectile_Chakram_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_Projectile_Chakram_C, LProjectileMovement) == 0x0003D8, "Member 'ABP_Projectile_Chakram_C::LProjectileMovement' has a wrong offset!");
static_assert(offsetof(ABP_Projectile_Chakram_C, Collision) == 0x0003E0, "Member 'ABP_Projectile_Chakram_C::Collision' has a wrong offset!");
static_assert(offsetof(ABP_Projectile_Chakram_C, ChakramStateName) == 0x0003E8, "Member 'ABP_Projectile_Chakram_C::ChakramStateName' has a wrong offset!");
static_assert(offsetof(ABP_Projectile_Chakram_C, Speed_Fire) == 0x0003F0, "Member 'ABP_Projectile_Chakram_C::Speed_Fire' has a wrong offset!");
static_assert(offsetof(ABP_Projectile_Chakram_C, Duration_Speed_Fire) == 0x0003F4, "Member 'ABP_Projectile_Chakram_C::Duration_Speed_Fire' has a wrong offset!");
static_assert(offsetof(ABP_Projectile_Chakram_C, Duration_Speed_Zero) == 0x0003F8, "Member 'ABP_Projectile_Chakram_C::Duration_Speed_Zero' has a wrong offset!");
static_assert(offsetof(ABP_Projectile_Chakram_C, Duration_Stay) == 0x0003FC, "Member 'ABP_Projectile_Chakram_C::Duration_Stay' has a wrong offset!");
static_assert(offsetof(ABP_Projectile_Chakram_C, Speed_Return) == 0x000400, "Member 'ABP_Projectile_Chakram_C::Speed_Return' has a wrong offset!");
static_assert(offsetof(ABP_Projectile_Chakram_C, ElaspedTimeAfterStateChange) == 0x000404, "Member 'ABP_Projectile_Chakram_C::ElaspedTimeAfterStateChange' has a wrong offset!");
static_assert(offsetof(ABP_Projectile_Chakram_C, Cached_Location) == 0x000408, "Member 'ABP_Projectile_Chakram_C::Cached_Location' has a wrong offset!");
static_assert(offsetof(ABP_Projectile_Chakram_C, ReturnLocation) == 0x000414, "Member 'ABP_Projectile_Chakram_C::ReturnLocation' has a wrong offset!");
static_assert(offsetof(ABP_Projectile_Chakram_C, HitActor) == 0x000420, "Member 'ABP_Projectile_Chakram_C::HitActor' has a wrong offset!");
static_assert(offsetof(ABP_Projectile_Chakram_C, AttachedHitActorBoneName) == 0x000428, "Member 'ABP_Projectile_Chakram_C::AttachedHitActorBoneName' has a wrong offset!");
static_assert(offsetof(ABP_Projectile_Chakram_C, Cached_Distance) == 0x000430, "Member 'ABP_Projectile_Chakram_C::Cached_Distance' has a wrong offset!");
static_assert(offsetof(ABP_Projectile_Chakram_C, New_Distance) == 0x000434, "Member 'ABP_Projectile_Chakram_C::New_Distance' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CWBP_PlayRecordCamera

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "ProjectP_structs.hpp"


namespace SDK::Params
{

// Function CWBP_PlayRecordCamera.CWBP_PlayRecordCamera_C.ExecuteUbergraph_CWBP_PlayRecordCamera
// 0x0090 (0x0090 - 0x0000)
struct CWBP_PlayRecordCamera_C_ExecuteUbergraph_CWBP_PlayRecordCamera final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaTime;                            // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue;                         // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetSampleFrame_Location;                  // 0x0014(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetSampleFrame_Rotation;                  // 0x0020(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue;        // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLCameraWorkViewInfo                   K2Node_MakeStruct_LCameraWorkViewInfo;             // 0x0030(0x001C)(NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D[0x3];                                       // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue_1;                       // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetSampleFrame_Location_1;                // 0x0058(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetSampleFrame_Rotation_1;                // 0x0064(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x3];                                       // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLCameraWorkViewInfo                   K2Node_MakeStruct_LCameraWorkViewInfo_1;           // 0x0074(0x001C)(NoDestructor)
};
static_assert(alignof(CWBP_PlayRecordCamera_C_ExecuteUbergraph_CWBP_PlayRecordCamera) == 0x000004, "Wrong alignment on CWBP_PlayRecordCamera_C_ExecuteUbergraph_CWBP_PlayRecordCamera");
static_assert(sizeof(CWBP_PlayRecordCamera_C_ExecuteUbergraph_CWBP_PlayRecordCamera) == 0x000090, "Wrong size on CWBP_PlayRecordCamera_C_ExecuteUbergraph_CWBP_PlayRecordCamera");
static_assert(offsetof(CWBP_PlayRecordCamera_C_ExecuteUbergraph_CWBP_PlayRecordCamera, EntryPoint) == 0x000000, "Member 'CWBP_PlayRecordCamera_C_ExecuteUbergraph_CWBP_PlayRecordCamera::EntryPoint' has a wrong offset!");
static_assert(offsetof(CWBP_PlayRecordCamera_C_ExecuteUbergraph_CWBP_PlayRecordCamera, K2Node_Event_DeltaTime) == 0x000004, "Member 'CWBP_PlayRecordCamera_C_ExecuteUbergraph_CWBP_PlayRecordCamera::K2Node_Event_DeltaTime' has a wrong offset!");
static_assert(offsetof(CWBP_PlayRecordCamera_C_ExecuteUbergraph_CWBP_PlayRecordCamera, K2Node_Event_DeltaSeconds) == 0x000008, "Member 'CWBP_PlayRecordCamera_C_ExecuteUbergraph_CWBP_PlayRecordCamera::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(CWBP_PlayRecordCamera_C_ExecuteUbergraph_CWBP_PlayRecordCamera, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x00000C, "Member 'CWBP_PlayRecordCamera_C_ExecuteUbergraph_CWBP_PlayRecordCamera::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(CWBP_PlayRecordCamera_C_ExecuteUbergraph_CWBP_PlayRecordCamera, CallFunc_FMax_ReturnValue) == 0x000010, "Member 'CWBP_PlayRecordCamera_C_ExecuteUbergraph_CWBP_PlayRecordCamera::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(CWBP_PlayRecordCamera_C_ExecuteUbergraph_CWBP_PlayRecordCamera, CallFunc_GetSampleFrame_Location) == 0x000014, "Member 'CWBP_PlayRecordCamera_C_ExecuteUbergraph_CWBP_PlayRecordCamera::CallFunc_GetSampleFrame_Location' has a wrong offset!");
static_assert(offsetof(CWBP_PlayRecordCamera_C_ExecuteUbergraph_CWBP_PlayRecordCamera, CallFunc_GetSampleFrame_Rotation) == 0x000020, "Member 'CWBP_PlayRecordCamera_C_ExecuteUbergraph_CWBP_PlayRecordCamera::CallFunc_GetSampleFrame_Rotation' has a wrong offset!");
static_assert(offsetof(CWBP_PlayRecordCamera_C_ExecuteUbergraph_CWBP_PlayRecordCamera, CallFunc_EqualEqual_FloatFloat_ReturnValue) == 0x00002C, "Member 'CWBP_PlayRecordCamera_C_ExecuteUbergraph_CWBP_PlayRecordCamera::CallFunc_EqualEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(CWBP_PlayRecordCamera_C_ExecuteUbergraph_CWBP_PlayRecordCamera, K2Node_MakeStruct_LCameraWorkViewInfo) == 0x000030, "Member 'CWBP_PlayRecordCamera_C_ExecuteUbergraph_CWBP_PlayRecordCamera::K2Node_MakeStruct_LCameraWorkViewInfo' has a wrong offset!");
static_assert(offsetof(CWBP_PlayRecordCamera_C_ExecuteUbergraph_CWBP_PlayRecordCamera, CallFunc_Greater_FloatFloat_ReturnValue) == 0x00004C, "Member 'CWBP_PlayRecordCamera_C_ExecuteUbergraph_CWBP_PlayRecordCamera::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(CWBP_PlayRecordCamera_C_ExecuteUbergraph_CWBP_PlayRecordCamera, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x000050, "Member 'CWBP_PlayRecordCamera_C_ExecuteUbergraph_CWBP_PlayRecordCamera::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CWBP_PlayRecordCamera_C_ExecuteUbergraph_CWBP_PlayRecordCamera, CallFunc_FMax_ReturnValue_1) == 0x000054, "Member 'CWBP_PlayRecordCamera_C_ExecuteUbergraph_CWBP_PlayRecordCamera::CallFunc_FMax_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CWBP_PlayRecordCamera_C_ExecuteUbergraph_CWBP_PlayRecordCamera, CallFunc_GetSampleFrame_Location_1) == 0x000058, "Member 'CWBP_PlayRecordCamera_C_ExecuteUbergraph_CWBP_PlayRecordCamera::CallFunc_GetSampleFrame_Location_1' has a wrong offset!");
static_assert(offsetof(CWBP_PlayRecordCamera_C_ExecuteUbergraph_CWBP_PlayRecordCamera, CallFunc_GetSampleFrame_Rotation_1) == 0x000064, "Member 'CWBP_PlayRecordCamera_C_ExecuteUbergraph_CWBP_PlayRecordCamera::CallFunc_GetSampleFrame_Rotation_1' has a wrong offset!");
static_assert(offsetof(CWBP_PlayRecordCamera_C_ExecuteUbergraph_CWBP_PlayRecordCamera, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x000070, "Member 'CWBP_PlayRecordCamera_C_ExecuteUbergraph_CWBP_PlayRecordCamera::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CWBP_PlayRecordCamera_C_ExecuteUbergraph_CWBP_PlayRecordCamera, K2Node_MakeStruct_LCameraWorkViewInfo_1) == 0x000074, "Member 'CWBP_PlayRecordCamera_C_ExecuteUbergraph_CWBP_PlayRecordCamera::K2Node_MakeStruct_LCameraWorkViewInfo_1' has a wrong offset!");

// Function CWBP_PlayRecordCamera.CWBP_PlayRecordCamera_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct CWBP_PlayRecordCamera_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CWBP_PlayRecordCamera_C_ReceiveTick) == 0x000004, "Wrong alignment on CWBP_PlayRecordCamera_C_ReceiveTick");
static_assert(sizeof(CWBP_PlayRecordCamera_C_ReceiveTick) == 0x000004, "Wrong size on CWBP_PlayRecordCamera_C_ReceiveTick");
static_assert(offsetof(CWBP_PlayRecordCamera_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'CWBP_PlayRecordCamera_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function CWBP_PlayRecordCamera.CWBP_PlayRecordCamera_C.UpdateTargetView
// 0x0004 (0x0004 - 0x0000)
struct CWBP_PlayRecordCamera_C_UpdateTargetView final
{
public:
	float                                         DeltaTime;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CWBP_PlayRecordCamera_C_UpdateTargetView) == 0x000004, "Wrong alignment on CWBP_PlayRecordCamera_C_UpdateTargetView");
static_assert(sizeof(CWBP_PlayRecordCamera_C_UpdateTargetView) == 0x000004, "Wrong size on CWBP_PlayRecordCamera_C_UpdateTargetView");
static_assert(offsetof(CWBP_PlayRecordCamera_C_UpdateTargetView, DeltaTime) == 0x000000, "Member 'CWBP_PlayRecordCamera_C_UpdateTargetView::DeltaTime' has a wrong offset!");

// Function CWBP_PlayRecordCamera.CWBP_PlayRecordCamera_C.OnPreWork
// 0x0018 (0x0018 - 0x0000)
struct CWBP_PlayRecordCamera_C_OnPreWork final
{
public:
	bool                                          bCanStartWorking;                                  // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ULDevSystem*                            CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CWBP_PlayRecordCamera_C_OnPreWork) == 0x000008, "Wrong alignment on CWBP_PlayRecordCamera_C_OnPreWork");
static_assert(sizeof(CWBP_PlayRecordCamera_C_OnPreWork) == 0x000018, "Wrong size on CWBP_PlayRecordCamera_C_OnPreWork");
static_assert(offsetof(CWBP_PlayRecordCamera_C_OnPreWork, bCanStartWorking) == 0x000000, "Member 'CWBP_PlayRecordCamera_C_OnPreWork::bCanStartWorking' has a wrong offset!");
static_assert(offsetof(CWBP_PlayRecordCamera_C_OnPreWork, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000008, "Member 'CWBP_PlayRecordCamera_C_OnPreWork::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(CWBP_PlayRecordCamera_C_OnPreWork, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'CWBP_PlayRecordCamera_C_OnPreWork::CallFunc_IsValid_ReturnValue' has a wrong offset!");

}


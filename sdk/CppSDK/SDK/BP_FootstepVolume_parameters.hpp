#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_FootstepVolume

#include "Basic.hpp"

#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_FootstepVolume.BP_FootstepVolume_C.ExecuteUbergraph_BP_FootstepVolume
// 0x0120 (0x0120 - 0x0000)
struct BP_FootstepVolume_C_ExecuteUbergraph_BP_FootstepVolume final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent_1;  // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_1;           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_1;            // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex_1;       // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep;             // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult;            // 0x0030(0x0088)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent;    // 0x00B8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x00C8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex;         // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D4[0x4];                                       // 0x00D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_InfinityFootstepComponent_C*        CallFunc_GetComponentByClass_ReturnValue;          // 0x00D8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_InfinityFootstepComponent_C*        CallFunc_GetComponentByClass_ReturnValue_1;        // 0x00E0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_EA[0x6];                                       // 0x00EA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_GetOverlappingActors_OverlappingActors;   // 0x00F0(0x0010)(ReferenceParm)
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10C[0x4];                                      // 0x010C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_InfinityFootstepComponent_C*        CallFunc_GetComponentByClass_ReturnValue_2;        // 0x0110(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0119(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_FootstepVolume_C_ExecuteUbergraph_BP_FootstepVolume) == 0x000008, "Wrong alignment on BP_FootstepVolume_C_ExecuteUbergraph_BP_FootstepVolume");
static_assert(sizeof(BP_FootstepVolume_C_ExecuteUbergraph_BP_FootstepVolume) == 0x000120, "Wrong size on BP_FootstepVolume_C_ExecuteUbergraph_BP_FootstepVolume");
static_assert(offsetof(BP_FootstepVolume_C_ExecuteUbergraph_BP_FootstepVolume, EntryPoint) == 0x000000, "Member 'BP_FootstepVolume_C_ExecuteUbergraph_BP_FootstepVolume::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_FootstepVolume_C_ExecuteUbergraph_BP_FootstepVolume, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_FootstepVolume_C_ExecuteUbergraph_BP_FootstepVolume::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_FootstepVolume_C_ExecuteUbergraph_BP_FootstepVolume, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BP_FootstepVolume_C_ExecuteUbergraph_BP_FootstepVolume::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_FootstepVolume_C_ExecuteUbergraph_BP_FootstepVolume, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_FootstepVolume_C_ExecuteUbergraph_BP_FootstepVolume::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FootstepVolume_C_ExecuteUbergraph_BP_FootstepVolume, K2Node_ComponentBoundEvent_OverlappedComponent_1) == 0x000010, "Member 'BP_FootstepVolume_C_ExecuteUbergraph_BP_FootstepVolume::K2Node_ComponentBoundEvent_OverlappedComponent_1' has a wrong offset!");
static_assert(offsetof(BP_FootstepVolume_C_ExecuteUbergraph_BP_FootstepVolume, K2Node_ComponentBoundEvent_OtherActor_1) == 0x000018, "Member 'BP_FootstepVolume_C_ExecuteUbergraph_BP_FootstepVolume::K2Node_ComponentBoundEvent_OtherActor_1' has a wrong offset!");
static_assert(offsetof(BP_FootstepVolume_C_ExecuteUbergraph_BP_FootstepVolume, K2Node_ComponentBoundEvent_OtherComp_1) == 0x000020, "Member 'BP_FootstepVolume_C_ExecuteUbergraph_BP_FootstepVolume::K2Node_ComponentBoundEvent_OtherComp_1' has a wrong offset!");
static_assert(offsetof(BP_FootstepVolume_C_ExecuteUbergraph_BP_FootstepVolume, K2Node_ComponentBoundEvent_OtherBodyIndex_1) == 0x000028, "Member 'BP_FootstepVolume_C_ExecuteUbergraph_BP_FootstepVolume::K2Node_ComponentBoundEvent_OtherBodyIndex_1' has a wrong offset!");
static_assert(offsetof(BP_FootstepVolume_C_ExecuteUbergraph_BP_FootstepVolume, K2Node_ComponentBoundEvent_bFromSweep) == 0x00002C, "Member 'BP_FootstepVolume_C_ExecuteUbergraph_BP_FootstepVolume::K2Node_ComponentBoundEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_FootstepVolume_C_ExecuteUbergraph_BP_FootstepVolume, K2Node_ComponentBoundEvent_SweepResult) == 0x000030, "Member 'BP_FootstepVolume_C_ExecuteUbergraph_BP_FootstepVolume::K2Node_ComponentBoundEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(BP_FootstepVolume_C_ExecuteUbergraph_BP_FootstepVolume, K2Node_ComponentBoundEvent_OverlappedComponent) == 0x0000B8, "Member 'BP_FootstepVolume_C_ExecuteUbergraph_BP_FootstepVolume::K2Node_ComponentBoundEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_FootstepVolume_C_ExecuteUbergraph_BP_FootstepVolume, K2Node_ComponentBoundEvent_OtherActor) == 0x0000C0, "Member 'BP_FootstepVolume_C_ExecuteUbergraph_BP_FootstepVolume::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(BP_FootstepVolume_C_ExecuteUbergraph_BP_FootstepVolume, K2Node_ComponentBoundEvent_OtherComp) == 0x0000C8, "Member 'BP_FootstepVolume_C_ExecuteUbergraph_BP_FootstepVolume::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(BP_FootstepVolume_C_ExecuteUbergraph_BP_FootstepVolume, K2Node_ComponentBoundEvent_OtherBodyIndex) == 0x0000D0, "Member 'BP_FootstepVolume_C_ExecuteUbergraph_BP_FootstepVolume::K2Node_ComponentBoundEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_FootstepVolume_C_ExecuteUbergraph_BP_FootstepVolume, CallFunc_GetComponentByClass_ReturnValue) == 0x0000D8, "Member 'BP_FootstepVolume_C_ExecuteUbergraph_BP_FootstepVolume::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FootstepVolume_C_ExecuteUbergraph_BP_FootstepVolume, CallFunc_GetComponentByClass_ReturnValue_1) == 0x0000E0, "Member 'BP_FootstepVolume_C_ExecuteUbergraph_BP_FootstepVolume::CallFunc_GetComponentByClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FootstepVolume_C_ExecuteUbergraph_BP_FootstepVolume, CallFunc_IsValid_ReturnValue) == 0x0000E8, "Member 'BP_FootstepVolume_C_ExecuteUbergraph_BP_FootstepVolume::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FootstepVolume_C_ExecuteUbergraph_BP_FootstepVolume, CallFunc_IsValid_ReturnValue_1) == 0x0000E9, "Member 'BP_FootstepVolume_C_ExecuteUbergraph_BP_FootstepVolume::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FootstepVolume_C_ExecuteUbergraph_BP_FootstepVolume, CallFunc_GetOverlappingActors_OverlappingActors) == 0x0000F0, "Member 'BP_FootstepVolume_C_ExecuteUbergraph_BP_FootstepVolume::CallFunc_GetOverlappingActors_OverlappingActors' has a wrong offset!");
static_assert(offsetof(BP_FootstepVolume_C_ExecuteUbergraph_BP_FootstepVolume, CallFunc_Array_Get_Item) == 0x000100, "Member 'BP_FootstepVolume_C_ExecuteUbergraph_BP_FootstepVolume::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_FootstepVolume_C_ExecuteUbergraph_BP_FootstepVolume, CallFunc_Array_Length_ReturnValue) == 0x000108, "Member 'BP_FootstepVolume_C_ExecuteUbergraph_BP_FootstepVolume::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FootstepVolume_C_ExecuteUbergraph_BP_FootstepVolume, CallFunc_GetComponentByClass_ReturnValue_2) == 0x000110, "Member 'BP_FootstepVolume_C_ExecuteUbergraph_BP_FootstepVolume::CallFunc_GetComponentByClass_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_FootstepVolume_C_ExecuteUbergraph_BP_FootstepVolume, CallFunc_Less_IntInt_ReturnValue) == 0x000118, "Member 'BP_FootstepVolume_C_ExecuteUbergraph_BP_FootstepVolume::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FootstepVolume_C_ExecuteUbergraph_BP_FootstepVolume, CallFunc_IsValid_ReturnValue_2) == 0x000119, "Member 'BP_FootstepVolume_C_ExecuteUbergraph_BP_FootstepVolume::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");

// Function BP_FootstepVolume.BP_FootstepVolume_C.BndEvt__Box_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct BP_FootstepVolume_C_BndEvt__Box_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FootstepVolume_C_BndEvt__Box_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_FootstepVolume_C_BndEvt__Box_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_FootstepVolume_C_BndEvt__Box_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature) == 0x000020, "Wrong size on BP_FootstepVolume_C_BndEvt__Box_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_FootstepVolume_C_BndEvt__Box_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_FootstepVolume_C_BndEvt__Box_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_FootstepVolume_C_BndEvt__Box_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_FootstepVolume_C_BndEvt__Box_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_FootstepVolume_C_BndEvt__Box_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_FootstepVolume_C_BndEvt__Box_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_FootstepVolume_C_BndEvt__Box_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_FootstepVolume_C_BndEvt__Box_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");

// Function BP_FootstepVolume.BP_FootstepVolume_C.BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature
// 0x00A8 (0x00A8 - 0x0000)
struct BP_FootstepVolume_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_FootstepVolume_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_FootstepVolume_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_FootstepVolume_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x0000A8, "Wrong size on BP_FootstepVolume_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_FootstepVolume_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_FootstepVolume_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_FootstepVolume_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_FootstepVolume_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_FootstepVolume_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_FootstepVolume_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_FootstepVolume_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_FootstepVolume_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_FootstepVolume_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'BP_FootstepVolume_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_FootstepVolume_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'BP_FootstepVolume_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function BP_FootstepVolume.BP_FootstepVolume_C.SetActive
// 0x0001 (0x0001 - 0x0000)
struct BP_FootstepVolume_C_SetActive final
{
public:
	bool                                          Activate;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_FootstepVolume_C_SetActive) == 0x000001, "Wrong alignment on BP_FootstepVolume_C_SetActive");
static_assert(sizeof(BP_FootstepVolume_C_SetActive) == 0x000001, "Wrong size on BP_FootstepVolume_C_SetActive");
static_assert(offsetof(BP_FootstepVolume_C_SetActive, Activate) == 0x000000, "Member 'BP_FootstepVolume_C_SetActive::Activate' has a wrong offset!");

// Function BP_FootstepVolume.BP_FootstepVolume_C.IsActive
// 0x0030 (0x0030 - 0x0000)
struct BP_FootstepVolume_C_IsActive final
{
public:
	bool                                          IsActive_0;                                        // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x001C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetScalarParameterValue_ReturnValue;      // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue;        // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_FloatFloat_ReturnValue;          // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_FootstepVolume_C_IsActive) == 0x000008, "Wrong alignment on BP_FootstepVolume_C_IsActive");
static_assert(sizeof(BP_FootstepVolume_C_IsActive) == 0x000030, "Wrong size on BP_FootstepVolume_C_IsActive");
static_assert(offsetof(BP_FootstepVolume_C_IsActive, IsActive_0) == 0x000000, "Member 'BP_FootstepVolume_C_IsActive::IsActive_0' has a wrong offset!");
static_assert(offsetof(BP_FootstepVolume_C_IsActive, K2Node_SwitchEnum_CmpSuccess) == 0x000001, "Member 'BP_FootstepVolume_C_IsActive::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_FootstepVolume_C_IsActive, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000008, "Member 'BP_FootstepVolume_C_IsActive::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FootstepVolume_C_IsActive, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000018, "Member 'BP_FootstepVolume_C_IsActive::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FootstepVolume_C_IsActive, CallFunc_Conv_StringToName_ReturnValue) == 0x00001C, "Member 'BP_FootstepVolume_C_IsActive::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FootstepVolume_C_IsActive, CallFunc_GetScalarParameterValue_ReturnValue) == 0x000024, "Member 'BP_FootstepVolume_C_IsActive::CallFunc_GetScalarParameterValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FootstepVolume_C_IsActive, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000028, "Member 'BP_FootstepVolume_C_IsActive::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FootstepVolume_C_IsActive, CallFunc_EqualEqual_FloatFloat_ReturnValue) == 0x000029, "Member 'BP_FootstepVolume_C_IsActive::CallFunc_EqualEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FootstepVolume_C_IsActive, CallFunc_NotEqual_FloatFloat_ReturnValue) == 0x00002A, "Member 'BP_FootstepVolume_C_IsActive::CallFunc_NotEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FootstepVolume_C_IsActive, CallFunc_Less_FloatFloat_ReturnValue) == 0x00002B, "Member 'BP_FootstepVolume_C_IsActive::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FootstepVolume_C_IsActive, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x00002C, "Member 'BP_FootstepVolume_C_IsActive::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FootstepVolume_C_IsActive, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x00002D, "Member 'BP_FootstepVolume_C_IsActive::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");

}


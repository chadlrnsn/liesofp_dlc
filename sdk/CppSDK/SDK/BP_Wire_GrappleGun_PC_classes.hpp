#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Wire_GrappleGun_PC

#include "Basic.hpp"

#include "ProjectP_structs.hpp"
#include "Engine_structs.hpp"
#include "BP_Wire_GrappleGun_Base_classes.hpp"
#include "ProjectPContentInfo_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Wire_GrappleGun_PC.BP_Wire_GrappleGun_PC_C
// 0x0018 (0x02E8 - 0x02D0)
class ABP_Wire_GrappleGun_PC_C final : public ABP_Wire_GrappleGun_Base_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_Wire_GrappleGun_PC_C;            // 0x02D0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UCapsuleComponent*                      PropFracture;                                      // 0x02D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         CameraMaxPitchAdjustMultiplier;                    // 0x02E0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CameraMaxYawAdjustMultiplier;                      // 0x02E4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_Wire_GrappleGun_PC(int32 EntryPoint);
	void BndEvt__BP_Wire_GrappleGun_PC_PropFracture_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void PlayReservedAttachAction();
	void Attached();
	void Following();
	void Pulling();
	void ProcessHit(class FName SkillHitCodeName);
	void SetWireDirection();
	void PlayFollowingAction(class ALCharacter* MoveActor_0, class ALCharacter* DestActor);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Wire_GrappleGun_PC_C">();
	}
	static class ABP_Wire_GrappleGun_PC_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Wire_GrappleGun_PC_C>();
	}
};
static_assert(alignof(ABP_Wire_GrappleGun_PC_C) == 0x000008, "Wrong alignment on ABP_Wire_GrappleGun_PC_C");
static_assert(sizeof(ABP_Wire_GrappleGun_PC_C) == 0x0002E8, "Wrong size on ABP_Wire_GrappleGun_PC_C");
static_assert(offsetof(ABP_Wire_GrappleGun_PC_C, UberGraphFrame_BP_Wire_GrappleGun_PC_C) == 0x0002D0, "Member 'ABP_Wire_GrappleGun_PC_C::UberGraphFrame_BP_Wire_GrappleGun_PC_C' has a wrong offset!");
static_assert(offsetof(ABP_Wire_GrappleGun_PC_C, PropFracture) == 0x0002D8, "Member 'ABP_Wire_GrappleGun_PC_C::PropFracture' has a wrong offset!");
static_assert(offsetof(ABP_Wire_GrappleGun_PC_C, CameraMaxPitchAdjustMultiplier) == 0x0002E0, "Member 'ABP_Wire_GrappleGun_PC_C::CameraMaxPitchAdjustMultiplier' has a wrong offset!");
static_assert(offsetof(ABP_Wire_GrappleGun_PC_C, CameraMaxYawAdjustMultiplier) == 0x0002E4, "Member 'ABP_Wire_GrappleGun_PC_C::CameraMaxYawAdjustMultiplier' has a wrong offset!");

}


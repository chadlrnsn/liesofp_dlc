#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BDeco_InTargetRange

#include "Basic.hpp"

#include "ProjectPContentInfo_structs.hpp"
#include "ProjectP_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BDeco_InTargetRange.BDeco_InTargetRange_C
// 0x0028 (0x00D0 - 0x00A8)
class UBDeco_InTargetRange_C final : public ULBDecorator_BlueprintBase
{
public:
	float                                         DistMin;                                           // 0x00A8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DistMax;                                           // 0x00AC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AngleBegin;                                        // 0x00B0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AngleEnd;                                          // 0x00B4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Check_Height;                                      // 0x00B8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ELAIRangeCheckType                            Range_Check_Type;                                  // 0x00BC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BD[0x3];                                       // 0x00BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Primary_Target_Start_Angle;                        // 0x00C0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Primary_Target_End_Angle;                          // 0x00C4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SelfMoveAngle;                                     // 0x00C8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SelfMoveDistance;                                  // 0x00CC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	bool PerformConditionCheckAI(class AAIController* OwnerController, class APawn* ControlledPawn);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BDeco_InTargetRange_C">();
	}
	static class UBDeco_InTargetRange_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBDeco_InTargetRange_C>();
	}
};
static_assert(alignof(UBDeco_InTargetRange_C) == 0x000008, "Wrong alignment on UBDeco_InTargetRange_C");
static_assert(sizeof(UBDeco_InTargetRange_C) == 0x0000D0, "Wrong size on UBDeco_InTargetRange_C");
static_assert(offsetof(UBDeco_InTargetRange_C, DistMin) == 0x0000A8, "Member 'UBDeco_InTargetRange_C::DistMin' has a wrong offset!");
static_assert(offsetof(UBDeco_InTargetRange_C, DistMax) == 0x0000AC, "Member 'UBDeco_InTargetRange_C::DistMax' has a wrong offset!");
static_assert(offsetof(UBDeco_InTargetRange_C, AngleBegin) == 0x0000B0, "Member 'UBDeco_InTargetRange_C::AngleBegin' has a wrong offset!");
static_assert(offsetof(UBDeco_InTargetRange_C, AngleEnd) == 0x0000B4, "Member 'UBDeco_InTargetRange_C::AngleEnd' has a wrong offset!");
static_assert(offsetof(UBDeco_InTargetRange_C, Check_Height) == 0x0000B8, "Member 'UBDeco_InTargetRange_C::Check_Height' has a wrong offset!");
static_assert(offsetof(UBDeco_InTargetRange_C, Range_Check_Type) == 0x0000BC, "Member 'UBDeco_InTargetRange_C::Range_Check_Type' has a wrong offset!");
static_assert(offsetof(UBDeco_InTargetRange_C, Primary_Target_Start_Angle) == 0x0000C0, "Member 'UBDeco_InTargetRange_C::Primary_Target_Start_Angle' has a wrong offset!");
static_assert(offsetof(UBDeco_InTargetRange_C, Primary_Target_End_Angle) == 0x0000C4, "Member 'UBDeco_InTargetRange_C::Primary_Target_End_Angle' has a wrong offset!");
static_assert(offsetof(UBDeco_InTargetRange_C, SelfMoveAngle) == 0x0000C8, "Member 'UBDeco_InTargetRange_C::SelfMoveAngle' has a wrong offset!");
static_assert(offsetof(UBDeco_InTargetRange_C, SelfMoveDistance) == 0x0000CC, "Member 'UBDeco_InTargetRange_C::SelfMoveDistance' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_DestructionSpot

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "ProjectP_structs.hpp"
#include "ProjectP_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_DestructionSpot.BP_DestructionSpot_C
// 0x0020 (0x0398 - 0x0378)
class ABP_DestructionSpot_C final : public ALPropDestructionSpot
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0378(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBoxComponent*                          AdditionalDestructionVolume;                       // 0x0380(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	ELAdditionalDestructionType                   AdditionalDestruction;                             // 0x0388(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_389[0x3];                                      // 0x0389(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         DistructionDelayTime;                              // 0x038C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DistructionElapsedDelayTime;                       // 0x0390(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ELAdditionalDestructionTargetType             DestructionTargetType;                             // 0x0394(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_DestructionSpot(int32 EntryPoint);
	void BndEvt__BP_DestructionSpot_AdditionalDestructionVolume_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void BndEvt__BP_DestructionSpot_AdditionalDestructionVolume_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void ReceiveTick(float DeltaSeconds);
	void ReceiveBeginPlay();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_DestructionSpot_C">();
	}
	static class ABP_DestructionSpot_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_DestructionSpot_C>();
	}
};
static_assert(alignof(ABP_DestructionSpot_C) == 0x000008, "Wrong alignment on ABP_DestructionSpot_C");
static_assert(sizeof(ABP_DestructionSpot_C) == 0x000398, "Wrong size on ABP_DestructionSpot_C");
static_assert(offsetof(ABP_DestructionSpot_C, UberGraphFrame) == 0x000378, "Member 'ABP_DestructionSpot_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_DestructionSpot_C, AdditionalDestructionVolume) == 0x000380, "Member 'ABP_DestructionSpot_C::AdditionalDestructionVolume' has a wrong offset!");
static_assert(offsetof(ABP_DestructionSpot_C, AdditionalDestruction) == 0x000388, "Member 'ABP_DestructionSpot_C::AdditionalDestruction' has a wrong offset!");
static_assert(offsetof(ABP_DestructionSpot_C, DistructionDelayTime) == 0x00038C, "Member 'ABP_DestructionSpot_C::DistructionDelayTime' has a wrong offset!");
static_assert(offsetof(ABP_DestructionSpot_C, DistructionElapsedDelayTime) == 0x000390, "Member 'ABP_DestructionSpot_C::DistructionElapsedDelayTime' has a wrong offset!");
static_assert(offsetof(ABP_DestructionSpot_C, DestructionTargetType) == 0x000394, "Member 'ABP_DestructionSpot_C::DestructionTargetType' has a wrong offset!");

}


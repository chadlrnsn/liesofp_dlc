#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UIW_Achievement

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UIW_Window_classes.hpp"
#include "ProjectPContentInfo_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass UIW_Achievement.UIW_Achievement_C
// 0x00F8 (0x0448 - 0x0350)
class UUIW_Achievement_C final : public UUIW_Window_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_UIW_Achievement_C;                  // 0x0350(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UUIW_Btn_Key_C*                         Btn_Close;                                         // 0x0358(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 IMG_Icon_Bronze;                                   // 0x0360(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 IMG_Icon_Gold;                                     // 0x0368(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 IMG_Icon_Platinum;                                 // 0x0370(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 IMG_Icon_Silver;                                   // 0x0378(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class ULListView*                             List;                                              // 0x0380(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           Panel;                                             // 0x0388(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Text_Condition_Bronze;                             // 0x0390(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Text_Condition_Gold;                               // 0x0398(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Text_Condition_Platinum;                           // 0x03A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Text_Condition_Silver;                             // 0x03A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UMultiLineEditableTextBox*              Text_Tooltip;                                      // 0x03B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Text_TotalScore_Title;                             // 0x03B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Text_TotalScore_Value;                             // 0x03C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Tooltip;                                           // 0x03C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	TArray<class UUIBP_ListData_Achievement_C*>   ListDataArr_Platinum;                              // 0x03D0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UUIBP_ListData_Achievement_C*>   ListDataArr_Gold;                                  // 0x03E0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UUIBP_ListData_Achievement_C*>   ListDataArr_Silver;                                // 0x03F0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UUIBP_ListData_Achievement_C*>   ListDataArr_Bronze;                                // 0x0400(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UUIBP_ListData_Achievement_C*>   ListDataArr_All;                                   // 0x0410(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	int32                                         TotalCountMax_Platinum;                            // 0x0420(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TotalCountMax_Gold;                                // 0x0424(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TotalCountMax_Silver;                              // 0x0428(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TotalCountMax_Bronze;                              // 0x042C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TotalScoreMax;                                     // 0x0430(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TotalScoreCurr;                                    // 0x0434(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TotalCountCurr_Platinum;                           // 0x0438(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TotalCountCurr_Gold;                               // 0x043C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TotalCountCurr_Silver;                             // 0x0440(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TotalCountCurr_Bronze;                             // 0x0444(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_UIW_Achievement(int32 EntryPoint);
	void OnUpdateDetail(class FName AchievementCodeName);
	void BndEvt__UIW_Achievement_List_K2Node_ComponentBoundEvent_2_OnListItemSelectionChangedDynamic__DelegateSignature(class UObject* Item, bool bIsSelected);
	void BndEvt__List_K2Node_ComponentBoundEvent_6_OnItemIsHoveredChangedDynamic__DelegateSignature(class UObject* Item, bool bIsHovered);
	void BndEvt__Btn_Back_K2Node_ComponentBoundEvent_1_OnActive__DelegateSignature(class UUIW_Btn_Key_C* BtnKey);
	void Construct();
	void OnReady();
	struct FEventReply FocusManage(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);
	void AddEventBinding();
	void ClearEventBinding();
	void OnCompleteAchievement(class FName AchievementCodeName);
	void ShowTooltip(class UUIBP_ListData_Achievement_C* ItemData);
	void RefreshListData();
	void RefreshDataOne(class FName AchievementCodeName);
	void RefreshCountData();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"UIW_Achievement_C">();
	}
	static class UUIW_Achievement_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUIW_Achievement_C>();
	}
};
static_assert(alignof(UUIW_Achievement_C) == 0x000008, "Wrong alignment on UUIW_Achievement_C");
static_assert(sizeof(UUIW_Achievement_C) == 0x000448, "Wrong size on UUIW_Achievement_C");
static_assert(offsetof(UUIW_Achievement_C, UberGraphFrame_UIW_Achievement_C) == 0x000350, "Member 'UUIW_Achievement_C::UberGraphFrame_UIW_Achievement_C' has a wrong offset!");
static_assert(offsetof(UUIW_Achievement_C, Btn_Close) == 0x000358, "Member 'UUIW_Achievement_C::Btn_Close' has a wrong offset!");
static_assert(offsetof(UUIW_Achievement_C, IMG_Icon_Bronze) == 0x000360, "Member 'UUIW_Achievement_C::IMG_Icon_Bronze' has a wrong offset!");
static_assert(offsetof(UUIW_Achievement_C, IMG_Icon_Gold) == 0x000368, "Member 'UUIW_Achievement_C::IMG_Icon_Gold' has a wrong offset!");
static_assert(offsetof(UUIW_Achievement_C, IMG_Icon_Platinum) == 0x000370, "Member 'UUIW_Achievement_C::IMG_Icon_Platinum' has a wrong offset!");
static_assert(offsetof(UUIW_Achievement_C, IMG_Icon_Silver) == 0x000378, "Member 'UUIW_Achievement_C::IMG_Icon_Silver' has a wrong offset!");
static_assert(offsetof(UUIW_Achievement_C, List) == 0x000380, "Member 'UUIW_Achievement_C::List' has a wrong offset!");
static_assert(offsetof(UUIW_Achievement_C, Panel) == 0x000388, "Member 'UUIW_Achievement_C::Panel' has a wrong offset!");
static_assert(offsetof(UUIW_Achievement_C, Text_Condition_Bronze) == 0x000390, "Member 'UUIW_Achievement_C::Text_Condition_Bronze' has a wrong offset!");
static_assert(offsetof(UUIW_Achievement_C, Text_Condition_Gold) == 0x000398, "Member 'UUIW_Achievement_C::Text_Condition_Gold' has a wrong offset!");
static_assert(offsetof(UUIW_Achievement_C, Text_Condition_Platinum) == 0x0003A0, "Member 'UUIW_Achievement_C::Text_Condition_Platinum' has a wrong offset!");
static_assert(offsetof(UUIW_Achievement_C, Text_Condition_Silver) == 0x0003A8, "Member 'UUIW_Achievement_C::Text_Condition_Silver' has a wrong offset!");
static_assert(offsetof(UUIW_Achievement_C, Text_Tooltip) == 0x0003B0, "Member 'UUIW_Achievement_C::Text_Tooltip' has a wrong offset!");
static_assert(offsetof(UUIW_Achievement_C, Text_TotalScore_Title) == 0x0003B8, "Member 'UUIW_Achievement_C::Text_TotalScore_Title' has a wrong offset!");
static_assert(offsetof(UUIW_Achievement_C, Text_TotalScore_Value) == 0x0003C0, "Member 'UUIW_Achievement_C::Text_TotalScore_Value' has a wrong offset!");
static_assert(offsetof(UUIW_Achievement_C, Tooltip) == 0x0003C8, "Member 'UUIW_Achievement_C::Tooltip' has a wrong offset!");
static_assert(offsetof(UUIW_Achievement_C, ListDataArr_Platinum) == 0x0003D0, "Member 'UUIW_Achievement_C::ListDataArr_Platinum' has a wrong offset!");
static_assert(offsetof(UUIW_Achievement_C, ListDataArr_Gold) == 0x0003E0, "Member 'UUIW_Achievement_C::ListDataArr_Gold' has a wrong offset!");
static_assert(offsetof(UUIW_Achievement_C, ListDataArr_Silver) == 0x0003F0, "Member 'UUIW_Achievement_C::ListDataArr_Silver' has a wrong offset!");
static_assert(offsetof(UUIW_Achievement_C, ListDataArr_Bronze) == 0x000400, "Member 'UUIW_Achievement_C::ListDataArr_Bronze' has a wrong offset!");
static_assert(offsetof(UUIW_Achievement_C, ListDataArr_All) == 0x000410, "Member 'UUIW_Achievement_C::ListDataArr_All' has a wrong offset!");
static_assert(offsetof(UUIW_Achievement_C, TotalCountMax_Platinum) == 0x000420, "Member 'UUIW_Achievement_C::TotalCountMax_Platinum' has a wrong offset!");
static_assert(offsetof(UUIW_Achievement_C, TotalCountMax_Gold) == 0x000424, "Member 'UUIW_Achievement_C::TotalCountMax_Gold' has a wrong offset!");
static_assert(offsetof(UUIW_Achievement_C, TotalCountMax_Silver) == 0x000428, "Member 'UUIW_Achievement_C::TotalCountMax_Silver' has a wrong offset!");
static_assert(offsetof(UUIW_Achievement_C, TotalCountMax_Bronze) == 0x00042C, "Member 'UUIW_Achievement_C::TotalCountMax_Bronze' has a wrong offset!");
static_assert(offsetof(UUIW_Achievement_C, TotalScoreMax) == 0x000430, "Member 'UUIW_Achievement_C::TotalScoreMax' has a wrong offset!");
static_assert(offsetof(UUIW_Achievement_C, TotalScoreCurr) == 0x000434, "Member 'UUIW_Achievement_C::TotalScoreCurr' has a wrong offset!");
static_assert(offsetof(UUIW_Achievement_C, TotalCountCurr_Platinum) == 0x000438, "Member 'UUIW_Achievement_C::TotalCountCurr_Platinum' has a wrong offset!");
static_assert(offsetof(UUIW_Achievement_C, TotalCountCurr_Gold) == 0x00043C, "Member 'UUIW_Achievement_C::TotalCountCurr_Gold' has a wrong offset!");
static_assert(offsetof(UUIW_Achievement_C, TotalCountCurr_Silver) == 0x000440, "Member 'UUIW_Achievement_C::TotalCountCurr_Silver' has a wrong offset!");
static_assert(offsetof(UUIW_Achievement_C, TotalCountCurr_Bronze) == 0x000444, "Member 'UUIW_Achievement_C::TotalCountCurr_Bronze' has a wrong offset!");

}


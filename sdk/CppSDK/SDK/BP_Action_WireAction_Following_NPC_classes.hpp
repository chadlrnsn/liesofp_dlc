#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Action_WireAction_Following_NPC

#include "Basic.hpp"

#include "ProjectP_structs.hpp"
#include "ProjectP_classes.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Action_WireAction_Following_NPC.BP_Action_WireAction_Following_NPC_C
// 0x0058 (0x02B0 - 0x0258)
class UBP_Action_WireAction_Following_NPC_C final : public ULAction_LoopAnim
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0258(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	bool                                          IsWireAttached;                                    // 0x0260(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsFollowingAnimEnd;                                // 0x0261(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_262[0x2];                                      // 0x0262(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         FollowingAnimMontageInstanceID;                    // 0x0264(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FollowingDistance;                                 // 0x0268(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                FollowingDirection;                                // 0x026C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ALCharacter*                            Cached_Target;                                     // 0x0278(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Cached_StartLocation;                              // 0x0280(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Cached_EndLocation;                                // 0x028C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Angle;                                             // 0x0298(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Speed;                                             // 0x029C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Gravity;                                           // 0x02A0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ElapsedTime;                                       // 0x02A4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   FollowingEndSkillCodeName;                         // 0x02A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_Action_WireAction_Following_NPC(int32 EntryPoint);
	void OnTick(float DeltaTime);
	void OnStop(class ULActBase* ReasonAction, class FName Reason);
	void OnCurrMontageEnded(class UAnimMontage* Montage, bool bInterrupted, int32 MontageInstanceID);
	void OnArrived();
	void OnFollowingStop();
	void OnWireAttached(class ALCharacter* Target, float Speed_0, float Gravity_0, class FName FollowingEndSkillCodeName_0);
	void OnStart();
	void UpdateWireFollowingMovementAngular(float DeltaTime);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Action_WireAction_Following_NPC_C">();
	}
	static class UBP_Action_WireAction_Following_NPC_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_Action_WireAction_Following_NPC_C>();
	}
};
static_assert(alignof(UBP_Action_WireAction_Following_NPC_C) == 0x000008, "Wrong alignment on UBP_Action_WireAction_Following_NPC_C");
static_assert(sizeof(UBP_Action_WireAction_Following_NPC_C) == 0x0002B0, "Wrong size on UBP_Action_WireAction_Following_NPC_C");
static_assert(offsetof(UBP_Action_WireAction_Following_NPC_C, UberGraphFrame) == 0x000258, "Member 'UBP_Action_WireAction_Following_NPC_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_Action_WireAction_Following_NPC_C, IsWireAttached) == 0x000260, "Member 'UBP_Action_WireAction_Following_NPC_C::IsWireAttached' has a wrong offset!");
static_assert(offsetof(UBP_Action_WireAction_Following_NPC_C, IsFollowingAnimEnd) == 0x000261, "Member 'UBP_Action_WireAction_Following_NPC_C::IsFollowingAnimEnd' has a wrong offset!");
static_assert(offsetof(UBP_Action_WireAction_Following_NPC_C, FollowingAnimMontageInstanceID) == 0x000264, "Member 'UBP_Action_WireAction_Following_NPC_C::FollowingAnimMontageInstanceID' has a wrong offset!");
static_assert(offsetof(UBP_Action_WireAction_Following_NPC_C, FollowingDistance) == 0x000268, "Member 'UBP_Action_WireAction_Following_NPC_C::FollowingDistance' has a wrong offset!");
static_assert(offsetof(UBP_Action_WireAction_Following_NPC_C, FollowingDirection) == 0x00026C, "Member 'UBP_Action_WireAction_Following_NPC_C::FollowingDirection' has a wrong offset!");
static_assert(offsetof(UBP_Action_WireAction_Following_NPC_C, Cached_Target) == 0x000278, "Member 'UBP_Action_WireAction_Following_NPC_C::Cached_Target' has a wrong offset!");
static_assert(offsetof(UBP_Action_WireAction_Following_NPC_C, Cached_StartLocation) == 0x000280, "Member 'UBP_Action_WireAction_Following_NPC_C::Cached_StartLocation' has a wrong offset!");
static_assert(offsetof(UBP_Action_WireAction_Following_NPC_C, Cached_EndLocation) == 0x00028C, "Member 'UBP_Action_WireAction_Following_NPC_C::Cached_EndLocation' has a wrong offset!");
static_assert(offsetof(UBP_Action_WireAction_Following_NPC_C, Angle) == 0x000298, "Member 'UBP_Action_WireAction_Following_NPC_C::Angle' has a wrong offset!");
static_assert(offsetof(UBP_Action_WireAction_Following_NPC_C, Speed) == 0x00029C, "Member 'UBP_Action_WireAction_Following_NPC_C::Speed' has a wrong offset!");
static_assert(offsetof(UBP_Action_WireAction_Following_NPC_C, Gravity) == 0x0002A0, "Member 'UBP_Action_WireAction_Following_NPC_C::Gravity' has a wrong offset!");
static_assert(offsetof(UBP_Action_WireAction_Following_NPC_C, ElapsedTime) == 0x0002A4, "Member 'UBP_Action_WireAction_Following_NPC_C::ElapsedTime' has a wrong offset!");
static_assert(offsetof(UBP_Action_WireAction_Following_NPC_C, FollowingEndSkillCodeName) == 0x0002A8, "Member 'UBP_Action_WireAction_Following_NPC_C::FollowingEndSkillCodeName' has a wrong offset!");

}


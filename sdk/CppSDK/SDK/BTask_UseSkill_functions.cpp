#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BTask_UseSkill

#include "Basic.hpp"

#include "BTask_UseSkill_classes.hpp"
#include "BTask_UseSkill_parameters.hpp"


namespace SDK
{

// Function BTask_UseSkill.BTask_UseSkill_C.ExecuteUbergraph_BTask_UseSkill
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBTask_UseSkill_C::ExecuteUbergraph_BTask_UseSkill(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTask_UseSkill_C", "ExecuteUbergraph_BTask_UseSkill");

	Params::BTask_UseSkill_C_ExecuteUbergraph_BTask_UseSkill Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BTask_UseSkill.BTask_UseSkill_C.DoSkill
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             SkillId                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBTask_UseSkill_C::DoSkill(class FName SkillId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTask_UseSkill_C", "DoSkill");

	Params::BTask_UseSkill_C_DoSkill Parms{};

	Parms.SkillId = SkillId;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BTask_UseSkill.BTask_UseSkill_C.ReceiveExecuteAI
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AAIController*                    OwnerController                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class APawn*                            ControlledPawn                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBTask_UseSkill_C::ReceiveExecuteAI(class AAIController* OwnerController, class APawn* ControlledPawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTask_UseSkill_C", "ReceiveExecuteAI");

	Params::BTask_UseSkill_C_ReceiveExecuteAI Parms{};

	Parms.OwnerController = OwnerController;
	Parms.ControlledPawn = ControlledPawn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BTask_UseSkill.BTask_UseSkill_C.CheckCoolTime
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             SkillId                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBTask_UseSkill_C::CheckCoolTime(class FName SkillId, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTask_UseSkill_C", "CheckCoolTime");

	Params::BTask_UseSkill_C_CheckCoolTime Parms{};

	Parms.SkillId = SkillId;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function BTask_UseSkill.BTask_UseSkill_C.CheckOutOfRotationAngle
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AAIController*                    Controller                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Angle                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bResult                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBTask_UseSkill_C::CheckOutOfRotationAngle(class AAIController* Controller, int32 Angle, bool* bResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTask_UseSkill_C", "CheckOutOfRotationAngle");

	Params::BTask_UseSkill_C_CheckOutOfRotationAngle Parms{};

	Parms.Controller = Controller;
	Parms.Angle = Angle;

	UObject::ProcessEvent(Func, &Parms);

	if (bResult != nullptr)
		*bResult = Parms.bResult;
}


// Function BTask_UseSkill.BTask_UseSkill_C.GetSkillInfo
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FSkillInfoPtr                    SkillInfo                                              (Parm, OutParm, NoDestructor)

void UBTask_UseSkill_C::GetSkillInfo(struct FSkillInfoPtr* SkillInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTask_UseSkill_C", "GetSkillInfo");

	Params::BTask_UseSkill_C_GetSkillInfo Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (SkillInfo != nullptr)
		*SkillInfo = std::move(Parms.SkillInfo);
}


// Function BTask_UseSkill.BTask_UseSkill_C.GetRotateAngle
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FSkillInfoPtr                    SkillInfoPtr                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
// struct FNPCInfoPtr                      NPCInfoPtr                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

int32 UBTask_UseSkill_C::GetRotateAngle(const struct FSkillInfoPtr& SkillInfoPtr, const struct FNPCInfoPtr& NPCInfoPtr)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTask_UseSkill_C", "GetRotateAngle");

	Params::BTask_UseSkill_C_GetRotateAngle Parms{};

	Parms.SkillInfoPtr = std::move(SkillInfoPtr);
	Parms.NPCInfoPtr = std::move(NPCInfoPtr);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BTask_UseSkill.BTask_UseSkill_C.DoRatate
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AAIController*                    Controller                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ALNPCCharacter*                   Character                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBTask_UseSkill_C::DoRatate(class AAIController* Controller, class ALNPCCharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTask_UseSkill_C", "DoRatate");

	Params::BTask_UseSkill_C_DoRatate Parms{};

	Parms.Controller = Controller;
	Parms.Character = Character;

	UObject::ProcessEvent(Func, &Parms);
}

}


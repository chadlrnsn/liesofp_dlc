#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UIW_HUD

#include "Basic.hpp"

#include "ProjectPContentInfo_structs.hpp"
#include "ProjectP_structs.hpp"
#include "ProjectP_classes.hpp"
#include "Engine_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass UIW_HUD.UIW_HUD_C
// 0x0278 (0x0520 - 0x02A8)
class UUIW_HUD_C final : public ULWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02A8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UUIW_HUD_Abnormal_Debuff_C*             Abnormal_Debuff;                                   // 0x02B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUIW_Alert_Location_C*                  Alert_Location;                                    // 0x02B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUIW_HUD_BossBar_C*                     BossBar_0;                                         // 0x02C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUIW_HUD_BossBar_C*                     BossBar_1;                                         // 0x02C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUIW_HUD_BossBar_C*                     BossBar_2;                                         // 0x02D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUIW_HUD_BossBar_C*                     BossBar_3;                                         // 0x02D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUIW_Btn_Key_C*                         Btn_LegionArm_Add_Trigger;                         // 0x02E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUIW_Btn_Key_C*                         Btn_LegionArm_Use;                                 // 0x02E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUIW_HUD_Gauge_HP_C*                    Gauge_HP;                                          // 0x02F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUIW_HUD_PileBunker_C*                  Gauge_PileBunker;                                  // 0x02F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUIW_HUD_Gauge_C*                       Gauge_Slave;                                       // 0x0300(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUIW_HUD_Gauge_C*                       Gauge_Stamina;                                     // 0x0308(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           Group_BossBar;                                     // 0x0310(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUIW_HUD_ControlGuide_C*                Group_ControlGuide;                                // 0x0318(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           Group_Legion_Aegis;                                // 0x0320(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           Group_SlaveArm;                                    // 0x0328(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           HotelArenaCanvas;                                  // 0x0330(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           HUDPanel;                                          // 0x0338(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Img_Aegis_Active;                                  // 0x0340(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                Img_Aegis_Timer;                                   // 0x0348(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Img_Crosshair;                                     // 0x0350(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Img_SlaveArm;                                      // 0x0358(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           Left;                                              // 0x0360(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           LeftBottom;                                        // 0x0368(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           LeftTop;                                           // 0x0370(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUIW_Indicator_Lockon_C*                LockonIndicator;                                   // 0x0378(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUIW_Monologue_C*                       Monologue;                                         // 0x0380(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUIW_PackageDownload_C*                 PackageDownload;                                   // 0x0388(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUIW_HUD_QuickSlot_C*                   QuickSlot;                                         // 0x0390(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUIW_RecordRemote_C*                    RecordRemote;                                      // 0x0398(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           RightBottom;                                       // 0x03A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           RightTop;                                          // 0x03A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUIW_HUD_LegionArm_State_Icon_C*        State_LegionArm_Icon;                              // 0x03B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Text_SlaveArm;                                     // 0x03B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Timer_Fill;                                        // 0x03C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUIW_Alert_Death_C*                     UIW_Alert_Death;                                   // 0x03C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUIW_Alert_Interaction_C*               UIW_Alert_Interaction;                             // 0x03D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUIW_HUD_FatalAttack_C*                 UIW_Fatal;                                         // 0x03D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUIW_Grid_Sample_Menu_C*                UIW_Grid_Sample_Menu;                              // 0x03E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUIW_HelpMate_C*                        UIW_HelpMate;                                      // 0x03E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUIW_HUD_Menu_C*                        UIW_HUD_Menu;                                      // 0x03F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUIW_LetterPreview_C*                   UIW_LetterPreview;                                 // 0x03F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUIW_ProfileItem_Ergo_C*                UIW_ProfileItem_Ergo;                              // 0x0400(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           VisbleGroup;                                       // 0x0408(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUIW_DPad_Weapon_C*                     Weapon;                                            // 0x0410(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class ALPCCharacter*                          Player;                                            // 0x0418(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsLockOn;                                          // 0x0420(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsOpenedWindow;                                    // 0x0421(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsValidPlayer;                                     // 0x0422(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_423[0x1];                                      // 0x0423(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         PrevPlayerHP;                                      // 0x0424(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULStatComponent*                        StatComponent;                                     // 0x0428(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PrevStamina;                                       // 0x0430(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CanUseSlaveArm;                                    // 0x0434(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   ForceItemCodeName;                                 // 0x0438(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsShowHUD;                                         // 0x0440(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_441[0x3];                                      // 0x0441(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   HUDEventName;                                      // 0x0444(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44C[0x4];                                      // 0x044C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class FName, class UUIW_HUD_BossBar_C*>  BossActorHp_ShowMap;                               // 0x0450(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TArray<class UUIW_HUD_BossBar_C*>             BossActorHp_Hide;                                  // 0x04A0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TArray<class UUIW_HUD_BossBar_C*>             BossActorHp_Hiding;                                // 0x04B0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TArray<class UWidget*>                        BossBarArrForChangeOrder;                          // 0x04C0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	bool                                          IsShowPouch;                                       // 0x04D0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D1[0x7];                                      // 0x04D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUIW_HotelArena_C*                      HotelArenaWidget;                                  // 0x04D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           ForceUseTimer;                                     // 0x04E0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class ULSlaveArmItem*                         LSlaveArmItem;                                     // 0x04E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NeedCheckFlameExplosion;                           // 0x04F0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	ELFlameThrowerExplosionEnableStateType        FlameExplosionState;                               // 0x04F1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          PrevAegisInCoolTime;                               // 0x04F2(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          CurrAegisInCoolTime;                               // 0x04F3(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4F4[0x4];                                      // 0x04F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           AegisCooltimer;                                    // 0x04F8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	float                                         AegisCooltimeMax;                                  // 0x0500(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AegisCooltimeCurrent;                              // 0x0504(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsAegisReinforced2nd;                              // 0x0508(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          AcidSpreadingModeChangeable;                       // 0x0509(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	ELAcidSpreadingModeType                       AcidSpreadingMode;                                 // 0x050A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsNewGameStartPopupOpen;                           // 0x050B(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	int32                                         FlameThrowerExplosionChangable;                    // 0x050C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ELFlameThrowerExplosionEnableStateType        FlameThrowerExplosionType;                         // 0x0510(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_511[0x3];                                      // 0x0511(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   MenuAction;                                        // 0x0514(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsHUDEventEnd;                                     // 0x051C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_UIW_HUD(int32 EntryPoint);
	void OnNewGamePlus_Hotel(class UUIW_Popup_C* Popup, class UUIW_Btn_Key_C* BtnKey);
	void OnNewGamePlus_Credit(class UUIW_Popup_C* Popup, class UUIW_Btn_Key_C* BtnKey);
	void OnShowControlGuide();
	void BndEvt__UIW_HUD_LockonIndicator_K2Node_ComponentBoundEvent_0_OnVisibilityChangedEvent__DelegateSignature(ESlateVisibility InVisibility);
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void PreConstruct(bool IsDesignTime);
	void RemoveBinding();
	void AddBinding();
	void Destruct();
	void Construct();
	void PressedMenuToggleKey();
	void PressedMenuCloseKey();
	void ReleasedMenuCloseKey();
	void RefreshHP();
	void RefreshSlaveMagazine(bool CanUse);
	void RefreshStamina();
	void StartLockOn();
	void FinishLockOn();
	void SetVisibleWindow(bool IsOpened);
	void StartTweenHUD();
	void InitGaugeBar();
	void SetLengthGaugeBar(ELSecondStat InStat);
	void SetLengthHP();
	void SetLengthStamina();
	void SetLengthSlaveMagazine();
	void VisibleMenu(bool IsOpened, bool NeedCenterMouse);
	void OnChooseSlaveArm(const struct FLEquipItemSlot& SlaveArmSlot);
	void HUDEvent(class FName EventName, bool IsStart);
	void OnExecuteCommand(const class FString& CommandName, bool CommandCondition);
	void CallbackForceUse(class UUIW_Popup_C* Popup, class UUIW_Btn_Key_C* BtnKey);
	void OnRefillItem(const TArray<class ULItem*>& ItemList);
	void SetCrosshairVisible(bool bVisible);
	void OnCompleteTweenEvent(class FName CategoryName);
	void OpenPopupForceUse(class FName CodeName);
	void OpenPopupNewGamePlus(int32 Number, bool bFirstAsk);
	void OnSpawnFailedPopup(const class FString& StringData);
	void CallbackSpwnFailed(class UUIW_Popup_C* Popup, class UUIW_Btn_Key_C* BtnKey);
	void ShowBossHPBar(class ALNPCCharacter* NPCActor, bool IsVisible_0);
	void OnBossBarHide(class UUIW_HUD_BossBar_C* BossBar, class FName BossFName);
	void OnPressPouchKey(bool IsValid);
	void OnSlaveArmAmmoChange(int32 Current, int32 Max);
	void SetIsShowHUDEvent(bool IsShow, bool ShowCompleted);
	void SetIsShowHUDOnOffOption();
	void OnTrainingArea(bool IsValid);
	void On_Change_Input_And_Show_Hud(bool bGamePad);
	void HideHud();
	void OnShowHUD();
	void AddPopupForceUseActive();
	void SetSlaveArmControlGuide();
	void OnAcidSpreadingModeChanged(bool Mode_Changeable, ELAcidSpreadingModeType Mode);
	void SetAcidSpreadingMode();
	void OnFlameThrowerExplosionEnableStateChanged(bool Mode_Changeable, ELFlameThrowerExplosionEnableStateType Type);
	void OnSlaveArmAction(bool IsValid);
	void SetAegisSlaveArm();
	void SetAegisCooltime(bool IsStart, float CoolTime);
	void OnAegisCoolTimer();
	void SetSlaveArmAdditional();
	void OnInputSlaveArmUsePress();
	void OnInputSlaveArmUseRelease();
	void OnActionStartAegis(class ULActMgrComponent* ActMgrComponent, class ULActBase* StartedAction);
	void SetActiveAegis(bool IsCooltime);
	void SetSoundMix(bool IsOpened);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"UIW_HUD_C">();
	}
	static class UUIW_HUD_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUIW_HUD_C>();
	}
};
static_assert(alignof(UUIW_HUD_C) == 0x000008, "Wrong alignment on UUIW_HUD_C");
static_assert(sizeof(UUIW_HUD_C) == 0x000520, "Wrong size on UUIW_HUD_C");
static_assert(offsetof(UUIW_HUD_C, UberGraphFrame) == 0x0002A8, "Member 'UUIW_HUD_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UUIW_HUD_C, Abnormal_Debuff) == 0x0002B0, "Member 'UUIW_HUD_C::Abnormal_Debuff' has a wrong offset!");
static_assert(offsetof(UUIW_HUD_C, Alert_Location) == 0x0002B8, "Member 'UUIW_HUD_C::Alert_Location' has a wrong offset!");
static_assert(offsetof(UUIW_HUD_C, BossBar_0) == 0x0002C0, "Member 'UUIW_HUD_C::BossBar_0' has a wrong offset!");
static_assert(offsetof(UUIW_HUD_C, BossBar_1) == 0x0002C8, "Member 'UUIW_HUD_C::BossBar_1' has a wrong offset!");
static_assert(offsetof(UUIW_HUD_C, BossBar_2) == 0x0002D0, "Member 'UUIW_HUD_C::BossBar_2' has a wrong offset!");
static_assert(offsetof(UUIW_HUD_C, BossBar_3) == 0x0002D8, "Member 'UUIW_HUD_C::BossBar_3' has a wrong offset!");
static_assert(offsetof(UUIW_HUD_C, Btn_LegionArm_Add_Trigger) == 0x0002E0, "Member 'UUIW_HUD_C::Btn_LegionArm_Add_Trigger' has a wrong offset!");
static_assert(offsetof(UUIW_HUD_C, Btn_LegionArm_Use) == 0x0002E8, "Member 'UUIW_HUD_C::Btn_LegionArm_Use' has a wrong offset!");
static_assert(offsetof(UUIW_HUD_C, Gauge_HP) == 0x0002F0, "Member 'UUIW_HUD_C::Gauge_HP' has a wrong offset!");
static_assert(offsetof(UUIW_HUD_C, Gauge_PileBunker) == 0x0002F8, "Member 'UUIW_HUD_C::Gauge_PileBunker' has a wrong offset!");
static_assert(offsetof(UUIW_HUD_C, Gauge_Slave) == 0x000300, "Member 'UUIW_HUD_C::Gauge_Slave' has a wrong offset!");
static_assert(offsetof(UUIW_HUD_C, Gauge_Stamina) == 0x000308, "Member 'UUIW_HUD_C::Gauge_Stamina' has a wrong offset!");
static_assert(offsetof(UUIW_HUD_C, Group_BossBar) == 0x000310, "Member 'UUIW_HUD_C::Group_BossBar' has a wrong offset!");
static_assert(offsetof(UUIW_HUD_C, Group_ControlGuide) == 0x000318, "Member 'UUIW_HUD_C::Group_ControlGuide' has a wrong offset!");
static_assert(offsetof(UUIW_HUD_C, Group_Legion_Aegis) == 0x000320, "Member 'UUIW_HUD_C::Group_Legion_Aegis' has a wrong offset!");
static_assert(offsetof(UUIW_HUD_C, Group_SlaveArm) == 0x000328, "Member 'UUIW_HUD_C::Group_SlaveArm' has a wrong offset!");
static_assert(offsetof(UUIW_HUD_C, HotelArenaCanvas) == 0x000330, "Member 'UUIW_HUD_C::HotelArenaCanvas' has a wrong offset!");
static_assert(offsetof(UUIW_HUD_C, HUDPanel) == 0x000338, "Member 'UUIW_HUD_C::HUDPanel' has a wrong offset!");
static_assert(offsetof(UUIW_HUD_C, Img_Aegis_Active) == 0x000340, "Member 'UUIW_HUD_C::Img_Aegis_Active' has a wrong offset!");
static_assert(offsetof(UUIW_HUD_C, Img_Aegis_Timer) == 0x000348, "Member 'UUIW_HUD_C::Img_Aegis_Timer' has a wrong offset!");
static_assert(offsetof(UUIW_HUD_C, Img_Crosshair) == 0x000350, "Member 'UUIW_HUD_C::Img_Crosshair' has a wrong offset!");
static_assert(offsetof(UUIW_HUD_C, Img_SlaveArm) == 0x000358, "Member 'UUIW_HUD_C::Img_SlaveArm' has a wrong offset!");
static_assert(offsetof(UUIW_HUD_C, Left) == 0x000360, "Member 'UUIW_HUD_C::Left' has a wrong offset!");
static_assert(offsetof(UUIW_HUD_C, LeftBottom) == 0x000368, "Member 'UUIW_HUD_C::LeftBottom' has a wrong offset!");
static_assert(offsetof(UUIW_HUD_C, LeftTop) == 0x000370, "Member 'UUIW_HUD_C::LeftTop' has a wrong offset!");
static_assert(offsetof(UUIW_HUD_C, LockonIndicator) == 0x000378, "Member 'UUIW_HUD_C::LockonIndicator' has a wrong offset!");
static_assert(offsetof(UUIW_HUD_C, Monologue) == 0x000380, "Member 'UUIW_HUD_C::Monologue' has a wrong offset!");
static_assert(offsetof(UUIW_HUD_C, PackageDownload) == 0x000388, "Member 'UUIW_HUD_C::PackageDownload' has a wrong offset!");
static_assert(offsetof(UUIW_HUD_C, QuickSlot) == 0x000390, "Member 'UUIW_HUD_C::QuickSlot' has a wrong offset!");
static_assert(offsetof(UUIW_HUD_C, RecordRemote) == 0x000398, "Member 'UUIW_HUD_C::RecordRemote' has a wrong offset!");
static_assert(offsetof(UUIW_HUD_C, RightBottom) == 0x0003A0, "Member 'UUIW_HUD_C::RightBottom' has a wrong offset!");
static_assert(offsetof(UUIW_HUD_C, RightTop) == 0x0003A8, "Member 'UUIW_HUD_C::RightTop' has a wrong offset!");
static_assert(offsetof(UUIW_HUD_C, State_LegionArm_Icon) == 0x0003B0, "Member 'UUIW_HUD_C::State_LegionArm_Icon' has a wrong offset!");
static_assert(offsetof(UUIW_HUD_C, Text_SlaveArm) == 0x0003B8, "Member 'UUIW_HUD_C::Text_SlaveArm' has a wrong offset!");
static_assert(offsetof(UUIW_HUD_C, Timer_Fill) == 0x0003C0, "Member 'UUIW_HUD_C::Timer_Fill' has a wrong offset!");
static_assert(offsetof(UUIW_HUD_C, UIW_Alert_Death) == 0x0003C8, "Member 'UUIW_HUD_C::UIW_Alert_Death' has a wrong offset!");
static_assert(offsetof(UUIW_HUD_C, UIW_Alert_Interaction) == 0x0003D0, "Member 'UUIW_HUD_C::UIW_Alert_Interaction' has a wrong offset!");
static_assert(offsetof(UUIW_HUD_C, UIW_Fatal) == 0x0003D8, "Member 'UUIW_HUD_C::UIW_Fatal' has a wrong offset!");
static_assert(offsetof(UUIW_HUD_C, UIW_Grid_Sample_Menu) == 0x0003E0, "Member 'UUIW_HUD_C::UIW_Grid_Sample_Menu' has a wrong offset!");
static_assert(offsetof(UUIW_HUD_C, UIW_HelpMate) == 0x0003E8, "Member 'UUIW_HUD_C::UIW_HelpMate' has a wrong offset!");
static_assert(offsetof(UUIW_HUD_C, UIW_HUD_Menu) == 0x0003F0, "Member 'UUIW_HUD_C::UIW_HUD_Menu' has a wrong offset!");
static_assert(offsetof(UUIW_HUD_C, UIW_LetterPreview) == 0x0003F8, "Member 'UUIW_HUD_C::UIW_LetterPreview' has a wrong offset!");
static_assert(offsetof(UUIW_HUD_C, UIW_ProfileItem_Ergo) == 0x000400, "Member 'UUIW_HUD_C::UIW_ProfileItem_Ergo' has a wrong offset!");
static_assert(offsetof(UUIW_HUD_C, VisbleGroup) == 0x000408, "Member 'UUIW_HUD_C::VisbleGroup' has a wrong offset!");
static_assert(offsetof(UUIW_HUD_C, Weapon) == 0x000410, "Member 'UUIW_HUD_C::Weapon' has a wrong offset!");
static_assert(offsetof(UUIW_HUD_C, Player) == 0x000418, "Member 'UUIW_HUD_C::Player' has a wrong offset!");
static_assert(offsetof(UUIW_HUD_C, IsLockOn) == 0x000420, "Member 'UUIW_HUD_C::IsLockOn' has a wrong offset!");
static_assert(offsetof(UUIW_HUD_C, IsOpenedWindow) == 0x000421, "Member 'UUIW_HUD_C::IsOpenedWindow' has a wrong offset!");
static_assert(offsetof(UUIW_HUD_C, IsValidPlayer) == 0x000422, "Member 'UUIW_HUD_C::IsValidPlayer' has a wrong offset!");
static_assert(offsetof(UUIW_HUD_C, PrevPlayerHP) == 0x000424, "Member 'UUIW_HUD_C::PrevPlayerHP' has a wrong offset!");
static_assert(offsetof(UUIW_HUD_C, StatComponent) == 0x000428, "Member 'UUIW_HUD_C::StatComponent' has a wrong offset!");
static_assert(offsetof(UUIW_HUD_C, PrevStamina) == 0x000430, "Member 'UUIW_HUD_C::PrevStamina' has a wrong offset!");
static_assert(offsetof(UUIW_HUD_C, CanUseSlaveArm) == 0x000434, "Member 'UUIW_HUD_C::CanUseSlaveArm' has a wrong offset!");
static_assert(offsetof(UUIW_HUD_C, ForceItemCodeName) == 0x000438, "Member 'UUIW_HUD_C::ForceItemCodeName' has a wrong offset!");
static_assert(offsetof(UUIW_HUD_C, IsShowHUD) == 0x000440, "Member 'UUIW_HUD_C::IsShowHUD' has a wrong offset!");
static_assert(offsetof(UUIW_HUD_C, HUDEventName) == 0x000444, "Member 'UUIW_HUD_C::HUDEventName' has a wrong offset!");
static_assert(offsetof(UUIW_HUD_C, BossActorHp_ShowMap) == 0x000450, "Member 'UUIW_HUD_C::BossActorHp_ShowMap' has a wrong offset!");
static_assert(offsetof(UUIW_HUD_C, BossActorHp_Hide) == 0x0004A0, "Member 'UUIW_HUD_C::BossActorHp_Hide' has a wrong offset!");
static_assert(offsetof(UUIW_HUD_C, BossActorHp_Hiding) == 0x0004B0, "Member 'UUIW_HUD_C::BossActorHp_Hiding' has a wrong offset!");
static_assert(offsetof(UUIW_HUD_C, BossBarArrForChangeOrder) == 0x0004C0, "Member 'UUIW_HUD_C::BossBarArrForChangeOrder' has a wrong offset!");
static_assert(offsetof(UUIW_HUD_C, IsShowPouch) == 0x0004D0, "Member 'UUIW_HUD_C::IsShowPouch' has a wrong offset!");
static_assert(offsetof(UUIW_HUD_C, HotelArenaWidget) == 0x0004D8, "Member 'UUIW_HUD_C::HotelArenaWidget' has a wrong offset!");
static_assert(offsetof(UUIW_HUD_C, ForceUseTimer) == 0x0004E0, "Member 'UUIW_HUD_C::ForceUseTimer' has a wrong offset!");
static_assert(offsetof(UUIW_HUD_C, LSlaveArmItem) == 0x0004E8, "Member 'UUIW_HUD_C::LSlaveArmItem' has a wrong offset!");
static_assert(offsetof(UUIW_HUD_C, NeedCheckFlameExplosion) == 0x0004F0, "Member 'UUIW_HUD_C::NeedCheckFlameExplosion' has a wrong offset!");
static_assert(offsetof(UUIW_HUD_C, FlameExplosionState) == 0x0004F1, "Member 'UUIW_HUD_C::FlameExplosionState' has a wrong offset!");
static_assert(offsetof(UUIW_HUD_C, PrevAegisInCoolTime) == 0x0004F2, "Member 'UUIW_HUD_C::PrevAegisInCoolTime' has a wrong offset!");
static_assert(offsetof(UUIW_HUD_C, CurrAegisInCoolTime) == 0x0004F3, "Member 'UUIW_HUD_C::CurrAegisInCoolTime' has a wrong offset!");
static_assert(offsetof(UUIW_HUD_C, AegisCooltimer) == 0x0004F8, "Member 'UUIW_HUD_C::AegisCooltimer' has a wrong offset!");
static_assert(offsetof(UUIW_HUD_C, AegisCooltimeMax) == 0x000500, "Member 'UUIW_HUD_C::AegisCooltimeMax' has a wrong offset!");
static_assert(offsetof(UUIW_HUD_C, AegisCooltimeCurrent) == 0x000504, "Member 'UUIW_HUD_C::AegisCooltimeCurrent' has a wrong offset!");
static_assert(offsetof(UUIW_HUD_C, IsAegisReinforced2nd) == 0x000508, "Member 'UUIW_HUD_C::IsAegisReinforced2nd' has a wrong offset!");
static_assert(offsetof(UUIW_HUD_C, AcidSpreadingModeChangeable) == 0x000509, "Member 'UUIW_HUD_C::AcidSpreadingModeChangeable' has a wrong offset!");
static_assert(offsetof(UUIW_HUD_C, AcidSpreadingMode) == 0x00050A, "Member 'UUIW_HUD_C::AcidSpreadingMode' has a wrong offset!");
static_assert(offsetof(UUIW_HUD_C, IsNewGameStartPopupOpen) == 0x00050B, "Member 'UUIW_HUD_C::IsNewGameStartPopupOpen' has a wrong offset!");
static_assert(offsetof(UUIW_HUD_C, FlameThrowerExplosionChangable) == 0x00050C, "Member 'UUIW_HUD_C::FlameThrowerExplosionChangable' has a wrong offset!");
static_assert(offsetof(UUIW_HUD_C, FlameThrowerExplosionType) == 0x000510, "Member 'UUIW_HUD_C::FlameThrowerExplosionType' has a wrong offset!");
static_assert(offsetof(UUIW_HUD_C, MenuAction) == 0x000514, "Member 'UUIW_HUD_C::MenuAction' has a wrong offset!");
static_assert(offsetof(UUIW_HUD_C, IsHUDEventEnd) == 0x00051C, "Member 'UUIW_HUD_C::IsHUDEventEnd' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_LightProp_Lamp_01

#include "Basic.hpp"

#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_LightProp_Lamp_01.BP_LightProp_Lamp_01_C
// 0x0038 (0x0218 - 0x01E0)
class ABP_LightProp_Lamp_01_C final : public AActor
{
public:
	class UPointLightComponent*                   PointLight;                                        // 0x01E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Lamp;                                              // 0x01E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x01F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          LightOn;                                           // 0x01F8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1F9[0x7];                                      // 0x01F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             NewEventDispatcher_0;                              // 0x0200(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          EffectOn;                                          // 0x0210(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)

public:
	void NewEventDispatcher_0__DelegateSignature();
	void NewFunction_0(bool LightOn_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_LightProp_Lamp_01_C">();
	}
	static class ABP_LightProp_Lamp_01_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_LightProp_Lamp_01_C>();
	}
};
static_assert(alignof(ABP_LightProp_Lamp_01_C) == 0x000008, "Wrong alignment on ABP_LightProp_Lamp_01_C");
static_assert(sizeof(ABP_LightProp_Lamp_01_C) == 0x000218, "Wrong size on ABP_LightProp_Lamp_01_C");
static_assert(offsetof(ABP_LightProp_Lamp_01_C, PointLight) == 0x0001E0, "Member 'ABP_LightProp_Lamp_01_C::PointLight' has a wrong offset!");
static_assert(offsetof(ABP_LightProp_Lamp_01_C, Lamp) == 0x0001E8, "Member 'ABP_LightProp_Lamp_01_C::Lamp' has a wrong offset!");
static_assert(offsetof(ABP_LightProp_Lamp_01_C, DefaultSceneRoot) == 0x0001F0, "Member 'ABP_LightProp_Lamp_01_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_LightProp_Lamp_01_C, LightOn) == 0x0001F8, "Member 'ABP_LightProp_Lamp_01_C::LightOn' has a wrong offset!");
static_assert(offsetof(ABP_LightProp_Lamp_01_C, NewEventDispatcher_0) == 0x000200, "Member 'ABP_LightProp_Lamp_01_C::NewEventDispatcher_0' has a wrong offset!");
static_assert(offsetof(ABP_LightProp_Lamp_01_C, EffectOn) == 0x000210, "Member 'ABP_LightProp_Lamp_01_C::EffectOn' has a wrong offset!");

}


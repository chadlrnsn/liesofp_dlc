#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: DDV_CH05_BearTrap

#include "Basic.hpp"

#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function DDV_CH05_BearTrap.DDV_CH05_BearTrap_C.ExecuteUbergraph_DDV_CH05_BearTrap
// 0x00B8 (0x00B8 - 0x0000)
struct DDV_CH05_BearTrap_C_ExecuteUbergraph_DDV_CH05_BearTrap final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_Actor;                                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_Event_HitResult;                            // 0x0010(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class ALNPCCharacter*                         K2Node_DynamicCast_AsLNPCCharacter;                // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ALPCCharacter*                          K2Node_DynamicCast_AsLPCCharacter;                 // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(DDV_CH05_BearTrap_C_ExecuteUbergraph_DDV_CH05_BearTrap) == 0x000008, "Wrong alignment on DDV_CH05_BearTrap_C_ExecuteUbergraph_DDV_CH05_BearTrap");
static_assert(sizeof(DDV_CH05_BearTrap_C_ExecuteUbergraph_DDV_CH05_BearTrap) == 0x0000B8, "Wrong size on DDV_CH05_BearTrap_C_ExecuteUbergraph_DDV_CH05_BearTrap");
static_assert(offsetof(DDV_CH05_BearTrap_C_ExecuteUbergraph_DDV_CH05_BearTrap, EntryPoint) == 0x000000, "Member 'DDV_CH05_BearTrap_C_ExecuteUbergraph_DDV_CH05_BearTrap::EntryPoint' has a wrong offset!");
static_assert(offsetof(DDV_CH05_BearTrap_C_ExecuteUbergraph_DDV_CH05_BearTrap, K2Node_Event_Actor) == 0x000008, "Member 'DDV_CH05_BearTrap_C_ExecuteUbergraph_DDV_CH05_BearTrap::K2Node_Event_Actor' has a wrong offset!");
static_assert(offsetof(DDV_CH05_BearTrap_C_ExecuteUbergraph_DDV_CH05_BearTrap, K2Node_Event_HitResult) == 0x000010, "Member 'DDV_CH05_BearTrap_C_ExecuteUbergraph_DDV_CH05_BearTrap::K2Node_Event_HitResult' has a wrong offset!");
static_assert(offsetof(DDV_CH05_BearTrap_C_ExecuteUbergraph_DDV_CH05_BearTrap, K2Node_DynamicCast_AsLNPCCharacter) == 0x000098, "Member 'DDV_CH05_BearTrap_C_ExecuteUbergraph_DDV_CH05_BearTrap::K2Node_DynamicCast_AsLNPCCharacter' has a wrong offset!");
static_assert(offsetof(DDV_CH05_BearTrap_C_ExecuteUbergraph_DDV_CH05_BearTrap, K2Node_DynamicCast_bSuccess) == 0x0000A0, "Member 'DDV_CH05_BearTrap_C_ExecuteUbergraph_DDV_CH05_BearTrap::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(DDV_CH05_BearTrap_C_ExecuteUbergraph_DDV_CH05_BearTrap, K2Node_DynamicCast_AsLPCCharacter) == 0x0000A8, "Member 'DDV_CH05_BearTrap_C_ExecuteUbergraph_DDV_CH05_BearTrap::K2Node_DynamicCast_AsLPCCharacter' has a wrong offset!");
static_assert(offsetof(DDV_CH05_BearTrap_C_ExecuteUbergraph_DDV_CH05_BearTrap, K2Node_DynamicCast_bSuccess_1) == 0x0000B0, "Member 'DDV_CH05_BearTrap_C_ExecuteUbergraph_DDV_CH05_BearTrap::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function DDV_CH05_BearTrap.DDV_CH05_BearTrap_C.OnBeginOverlap
// 0x0090 (0x0090 - 0x0000)
struct DDV_CH05_BearTrap_C_OnBeginOverlap final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             HitResult;                                         // 0x0008(0x0088)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(DDV_CH05_BearTrap_C_OnBeginOverlap) == 0x000008, "Wrong alignment on DDV_CH05_BearTrap_C_OnBeginOverlap");
static_assert(sizeof(DDV_CH05_BearTrap_C_OnBeginOverlap) == 0x000090, "Wrong size on DDV_CH05_BearTrap_C_OnBeginOverlap");
static_assert(offsetof(DDV_CH05_BearTrap_C_OnBeginOverlap, Actor) == 0x000000, "Member 'DDV_CH05_BearTrap_C_OnBeginOverlap::Actor' has a wrong offset!");
static_assert(offsetof(DDV_CH05_BearTrap_C_OnBeginOverlap, HitResult) == 0x000008, "Member 'DDV_CH05_BearTrap_C_OnBeginOverlap::HitResult' has a wrong offset!");

}


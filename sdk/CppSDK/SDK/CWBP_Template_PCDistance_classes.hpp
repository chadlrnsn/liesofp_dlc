#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CWBP_Template_PCDistance

#include "Basic.hpp"

#include "ProjectP_classes.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass CWBP_Template_PCDistance.CWBP_Template_PCDistance_C
// 0x0030 (0x0330 - 0x0300)
class ACWBP_Template_PCDistance_C : public ALCameraWork
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0300(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0308(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         StartCameraDistance;                               // 0x0310(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PCDistance;                                        // 0x0314(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TargetUpdateLocation;                              // 0x0318(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bTraceOwnerCharacter;                              // 0x0324(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_CWBP_Template_PCDistance(int32 EntryPoint);
	void OnStartWork();
	void UpdateTargetView(float DeltaTime);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"CWBP_Template_PCDistance_C">();
	}
	static class ACWBP_Template_PCDistance_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ACWBP_Template_PCDistance_C>();
	}
};
static_assert(alignof(ACWBP_Template_PCDistance_C) == 0x000010, "Wrong alignment on ACWBP_Template_PCDistance_C");
static_assert(sizeof(ACWBP_Template_PCDistance_C) == 0x000330, "Wrong size on ACWBP_Template_PCDistance_C");
static_assert(offsetof(ACWBP_Template_PCDistance_C, UberGraphFrame) == 0x000300, "Member 'ACWBP_Template_PCDistance_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ACWBP_Template_PCDistance_C, DefaultSceneRoot) == 0x000308, "Member 'ACWBP_Template_PCDistance_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ACWBP_Template_PCDistance_C, StartCameraDistance) == 0x000310, "Member 'ACWBP_Template_PCDistance_C::StartCameraDistance' has a wrong offset!");
static_assert(offsetof(ACWBP_Template_PCDistance_C, PCDistance) == 0x000314, "Member 'ACWBP_Template_PCDistance_C::PCDistance' has a wrong offset!");
static_assert(offsetof(ACWBP_Template_PCDistance_C, TargetUpdateLocation) == 0x000318, "Member 'ACWBP_Template_PCDistance_C::TargetUpdateLocation' has a wrong offset!");
static_assert(offsetof(ACWBP_Template_PCDistance_C, bTraceOwnerCharacter) == 0x000324, "Member 'ACWBP_Template_PCDistance_C::bTraceOwnerCharacter' has a wrong offset!");

}


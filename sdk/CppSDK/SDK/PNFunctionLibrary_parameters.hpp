#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PNFunctionLibrary

#include "Basic.hpp"

#include "ProjectPContentInfo_structs.hpp"
#include "ProjectP_structs.hpp"


namespace SDK::Params
{

// Function PNFunctionLibrary.PNFunctionLibrary_C.Is Play State
// 0x0038 (0x0038 - 0x0000)
struct PNFunctionLibrary_C_Is_Play_State final
{
public:
	class UObject*                                Object;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsValid;                                           // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Result;                                            // 0x0011(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ULGameInstance*                         K2Node_DynamicCast_AsLGame_Instance;               // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlayState_ReturnValue;                  // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PNFunctionLibrary_C_Is_Play_State) == 0x000008, "Wrong alignment on PNFunctionLibrary_C_Is_Play_State");
static_assert(sizeof(PNFunctionLibrary_C_Is_Play_State) == 0x000038, "Wrong size on PNFunctionLibrary_C_Is_Play_State");
static_assert(offsetof(PNFunctionLibrary_C_Is_Play_State, Object) == 0x000000, "Member 'PNFunctionLibrary_C_Is_Play_State::Object' has a wrong offset!");
static_assert(offsetof(PNFunctionLibrary_C_Is_Play_State, __WorldContext) == 0x000008, "Member 'PNFunctionLibrary_C_Is_Play_State::__WorldContext' has a wrong offset!");
static_assert(offsetof(PNFunctionLibrary_C_Is_Play_State, IsValid) == 0x000010, "Member 'PNFunctionLibrary_C_Is_Play_State::IsValid' has a wrong offset!");
static_assert(offsetof(PNFunctionLibrary_C_Is_Play_State, Result) == 0x000011, "Member 'PNFunctionLibrary_C_Is_Play_State::Result' has a wrong offset!");
static_assert(offsetof(PNFunctionLibrary_C_Is_Play_State, CallFunc_GetGameInstance_ReturnValue) == 0x000018, "Member 'PNFunctionLibrary_C_Is_Play_State::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(PNFunctionLibrary_C_Is_Play_State, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'PNFunctionLibrary_C_Is_Play_State::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PNFunctionLibrary_C_Is_Play_State, K2Node_DynamicCast_AsLGame_Instance) == 0x000028, "Member 'PNFunctionLibrary_C_Is_Play_State::K2Node_DynamicCast_AsLGame_Instance' has a wrong offset!");
static_assert(offsetof(PNFunctionLibrary_C_Is_Play_State, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'PNFunctionLibrary_C_Is_Play_State::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PNFunctionLibrary_C_Is_Play_State, CallFunc_IsPlayState_ReturnValue) == 0x000031, "Member 'PNFunctionLibrary_C_Is_Play_State::CallFunc_IsPlayState_ReturnValue' has a wrong offset!");

// Function PNFunctionLibrary.PNFunctionLibrary_C.GetGameState
// 0x0038 (0x0038 - 0x0000)
struct PNFunctionLibrary_C_GetGameState final
{
public:
	class UObject*                                Object;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPNGameState                                  NewParam;                                          // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPNGameState                                  Result;                                            // 0x0011(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ULGameInstance*                         K2Node_DynamicCast_AsLGame_Instance;               // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPNGameState                                  CallFunc_GetGameState_ReturnValue;                 // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PNFunctionLibrary_C_GetGameState) == 0x000008, "Wrong alignment on PNFunctionLibrary_C_GetGameState");
static_assert(sizeof(PNFunctionLibrary_C_GetGameState) == 0x000038, "Wrong size on PNFunctionLibrary_C_GetGameState");
static_assert(offsetof(PNFunctionLibrary_C_GetGameState, Object) == 0x000000, "Member 'PNFunctionLibrary_C_GetGameState::Object' has a wrong offset!");
static_assert(offsetof(PNFunctionLibrary_C_GetGameState, __WorldContext) == 0x000008, "Member 'PNFunctionLibrary_C_GetGameState::__WorldContext' has a wrong offset!");
static_assert(offsetof(PNFunctionLibrary_C_GetGameState, NewParam) == 0x000010, "Member 'PNFunctionLibrary_C_GetGameState::NewParam' has a wrong offset!");
static_assert(offsetof(PNFunctionLibrary_C_GetGameState, Result) == 0x000011, "Member 'PNFunctionLibrary_C_GetGameState::Result' has a wrong offset!");
static_assert(offsetof(PNFunctionLibrary_C_GetGameState, CallFunc_GetGameInstance_ReturnValue) == 0x000018, "Member 'PNFunctionLibrary_C_GetGameState::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(PNFunctionLibrary_C_GetGameState, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'PNFunctionLibrary_C_GetGameState::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PNFunctionLibrary_C_GetGameState, K2Node_DynamicCast_AsLGame_Instance) == 0x000028, "Member 'PNFunctionLibrary_C_GetGameState::K2Node_DynamicCast_AsLGame_Instance' has a wrong offset!");
static_assert(offsetof(PNFunctionLibrary_C_GetGameState, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'PNFunctionLibrary_C_GetGameState::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PNFunctionLibrary_C_GetGameState, CallFunc_GetGameState_ReturnValue) == 0x000031, "Member 'PNFunctionLibrary_C_GetGameState::CallFunc_GetGameState_ReturnValue' has a wrong offset!");

// Function PNFunctionLibrary.PNFunctionLibrary_C.CheckRepulse
// 0x0060 (0x0060 - 0x0000)
struct PNFunctionLibrary_C_CheckRepulse final
{
public:
	class FName                                   SkillHitCodeName;                                  // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Attacker;                                          // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Victim;                                            // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ULActionSystem*                         CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSkillHitInfoPtr                       CallFunc_FindSkillHitInfoByNameBP_ReturnValue;     // 0x0030(0x0008)(NoDestructor)
	float                                         CallFunc_GetRigidityConstant_ReturnValue;          // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetRigidityRatio_ReturnValue;             // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ELRepulseDirectionType                        CallFunc_GetRepulseDirection_ReturnValue;          // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_IntFloat_ReturnValue;            // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_CalcRigidity_ReturnValue;                 // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_CalcRigidity_ReturnValue_1;               // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PNFunctionLibrary_C_CheckRepulse) == 0x000008, "Wrong alignment on PNFunctionLibrary_C_CheckRepulse");
static_assert(sizeof(PNFunctionLibrary_C_CheckRepulse) == 0x000060, "Wrong size on PNFunctionLibrary_C_CheckRepulse");
static_assert(offsetof(PNFunctionLibrary_C_CheckRepulse, SkillHitCodeName) == 0x000000, "Member 'PNFunctionLibrary_C_CheckRepulse::SkillHitCodeName' has a wrong offset!");
static_assert(offsetof(PNFunctionLibrary_C_CheckRepulse, Attacker) == 0x000008, "Member 'PNFunctionLibrary_C_CheckRepulse::Attacker' has a wrong offset!");
static_assert(offsetof(PNFunctionLibrary_C_CheckRepulse, Victim) == 0x000010, "Member 'PNFunctionLibrary_C_CheckRepulse::Victim' has a wrong offset!");
static_assert(offsetof(PNFunctionLibrary_C_CheckRepulse, __WorldContext) == 0x000018, "Member 'PNFunctionLibrary_C_CheckRepulse::__WorldContext' has a wrong offset!");
static_assert(offsetof(PNFunctionLibrary_C_CheckRepulse, Result) == 0x000020, "Member 'PNFunctionLibrary_C_CheckRepulse::Result' has a wrong offset!");
static_assert(offsetof(PNFunctionLibrary_C_CheckRepulse, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000028, "Member 'PNFunctionLibrary_C_CheckRepulse::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(PNFunctionLibrary_C_CheckRepulse, CallFunc_FindSkillHitInfoByNameBP_ReturnValue) == 0x000030, "Member 'PNFunctionLibrary_C_CheckRepulse::CallFunc_FindSkillHitInfoByNameBP_ReturnValue' has a wrong offset!");
static_assert(offsetof(PNFunctionLibrary_C_CheckRepulse, CallFunc_GetRigidityConstant_ReturnValue) == 0x000038, "Member 'PNFunctionLibrary_C_CheckRepulse::CallFunc_GetRigidityConstant_ReturnValue' has a wrong offset!");
static_assert(offsetof(PNFunctionLibrary_C_CheckRepulse, CallFunc_GetRigidityRatio_ReturnValue) == 0x00003C, "Member 'PNFunctionLibrary_C_CheckRepulse::CallFunc_GetRigidityRatio_ReturnValue' has a wrong offset!");
static_assert(offsetof(PNFunctionLibrary_C_CheckRepulse, CallFunc_GetRepulseDirection_ReturnValue) == 0x000040, "Member 'PNFunctionLibrary_C_CheckRepulse::CallFunc_GetRepulseDirection_ReturnValue' has a wrong offset!");
static_assert(offsetof(PNFunctionLibrary_C_CheckRepulse, CallFunc_Multiply_IntFloat_ReturnValue) == 0x000044, "Member 'PNFunctionLibrary_C_CheckRepulse::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PNFunctionLibrary_C_CheckRepulse, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000048, "Member 'PNFunctionLibrary_C_CheckRepulse::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(PNFunctionLibrary_C_CheckRepulse, CallFunc_CalcRigidity_ReturnValue) == 0x00004C, "Member 'PNFunctionLibrary_C_CheckRepulse::CallFunc_CalcRigidity_ReturnValue' has a wrong offset!");
static_assert(offsetof(PNFunctionLibrary_C_CheckRepulse, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000050, "Member 'PNFunctionLibrary_C_CheckRepulse::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PNFunctionLibrary_C_CheckRepulse, CallFunc_CalcRigidity_ReturnValue_1) == 0x000054, "Member 'PNFunctionLibrary_C_CheckRepulse::CallFunc_CalcRigidity_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PNFunctionLibrary_C_CheckRepulse, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000058, "Member 'PNFunctionLibrary_C_CheckRepulse::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PNFunctionLibrary_C_CheckRepulse, CallFunc_Greater_FloatFloat_ReturnValue) == 0x00005C, "Member 'PNFunctionLibrary_C_CheckRepulse::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");

}


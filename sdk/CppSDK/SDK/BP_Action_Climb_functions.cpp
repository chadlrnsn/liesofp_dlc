#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Action_Climb

#include "Basic.hpp"

#include "BP_Action_Climb_classes.hpp"
#include "BP_Action_Climb_parameters.hpp"


namespace SDK
{

// Function BP_Action_Climb.BP_Action_Climb_C.ExecuteUbergraph_BP_Action_Climb
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_Action_Climb_C::ExecuteUbergraph_BP_Action_Climb(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Action_Climb_C", "ExecuteUbergraph_BP_Action_Climb");

	Params::BP_Action_Climb_C_ExecuteUbergraph_BP_Action_Climb Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Action_Climb.BP_Action_Climb_C.EndAnimTimerEvent_StartMotion
// (BlueprintCallable, BlueprintEvent)

void UBP_Action_Climb_C::EndAnimTimerEvent_StartMotion()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Action_Climb_C", "EndAnimTimerEvent_StartMotion");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Action_Climb.BP_Action_Climb_C.FastDownSoundFadeOut
// (BlueprintCallable, BlueprintEvent)

void UBP_Action_Climb_C::FastDownSoundFadeOut()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Action_Climb_C", "FastDownSoundFadeOut");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Action_Climb.BP_Action_Climb_C.EndAnimProcess
// (BlueprintCallable, BlueprintEvent)

void UBP_Action_Climb_C::EndAnimProcess()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Action_Climb_C", "EndAnimProcess");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Action_Climb.BP_Action_Climb_C.OnFastDown
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Active                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_Action_Climb_C::OnFastDown(bool Active)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Action_Climb_C", "OnFastDown");

	Params::BP_Action_Climb_C_OnFastDown Parms{};

	Parms.Active = Active;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Action_Climb.BP_Action_Climb_C.ClimbDown
// (BlueprintCallable, BlueprintEvent)

void UBP_Action_Climb_C::ClimbDown()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Action_Climb_C", "ClimbDown");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Action_Climb.BP_Action_Climb_C.ClimbUp
// (BlueprintCallable, BlueprintEvent)

void UBP_Action_Climb_C::ClimbUp()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Action_Climb_C", "ClimbUp");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Action_Climb.BP_Action_Climb_C.AddAnimTimerEvent
// (BlueprintCallable, BlueprintEvent)

void UBP_Action_Climb_C::AddAnimTimerEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Action_Climb_C", "AddAnimTimerEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Action_Climb.BP_Action_Climb_C.EndAnimTimerEvent
// (BlueprintCallable, BlueprintEvent)

void UBP_Action_Climb_C::EndAnimTimerEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Action_Climb_C", "EndAnimTimerEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Action_Climb.BP_Action_Climb_C.EndSyncTransformDown
// (BlueprintCallable, BlueprintEvent)

void UBP_Action_Climb_C::EndSyncTransformDown()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Action_Climb_C", "EndSyncTransformDown");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Action_Climb.BP_Action_Climb_C.EndSyncTransformUp
// (BlueprintCallable, BlueprintEvent)

void UBP_Action_Climb_C::EndSyncTransformUp()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Action_Climb_C", "EndSyncTransformUp");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Action_Climb.BP_Action_Climb_C.OnCurrMontageBlendOutStarted
// (Event, Public, BlueprintEvent)
// Parameters:
// class UAnimMontage*                     Montage                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bInterrupted                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   MontageInstanceID                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_Action_Climb_C::OnCurrMontageBlendOutStarted(class UAnimMontage* Montage, bool bInterrupted, int32 MontageInstanceID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Action_Climb_C", "OnCurrMontageBlendOutStarted");

	Params::BP_Action_Climb_C_OnCurrMontageBlendOutStarted Parms{};

	Parms.Montage = Montage;
	Parms.bInterrupted = bInterrupted;
	Parms.MontageInstanceID = MontageInstanceID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Action_Climb.BP_Action_Climb_C.OnCurrMontageEnded
// (Event, Public, BlueprintEvent)
// Parameters:
// class UAnimMontage*                     Montage                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bInterrupted                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   MontageInstanceID                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_Action_Climb_C::OnCurrMontageEnded(class UAnimMontage* Montage, bool bInterrupted, int32 MontageInstanceID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Action_Climb_C", "OnCurrMontageEnded");

	Params::BP_Action_Climb_C_OnCurrMontageEnded Parms{};

	Parms.Montage = Montage;
	Parms.bInterrupted = bInterrupted;
	Parms.MontageInstanceID = MontageInstanceID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Action_Climb.BP_Action_Climb_C.OnMoveAxis
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   AxisValue                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_Action_Climb_C::OnMoveAxis(float AxisValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Action_Climb_C", "OnMoveAxis");

	Params::BP_Action_Climb_C_OnMoveAxis Parms{};

	Parms.AxisValue = AxisValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Action_Climb.BP_Action_Climb_C.OnStop
// (Event, Public, BlueprintEvent)
// Parameters:
// class ULActBase*                        ReasonAction                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             Reason                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_Action_Climb_C::OnStop(class ULActBase* ReasonAction, class FName Reason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Action_Climb_C", "OnStop");

	Params::BP_Action_Climb_C_OnStop Parms{};

	Parms.ReasonAction = ReasonAction;
	Parms.Reason = Reason;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Action_Climb.BP_Action_Climb_C.OnStart
// (Event, Public, BlueprintEvent)

void UBP_Action_Climb_C::OnStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Action_Climb_C", "OnStart");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Action_Climb.BP_Action_Climb_C.ExecuteClimb
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Up                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Fast                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_Action_Climb_C::ExecuteClimb(bool Up, bool Fast)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Action_Climb_C", "ExecuteClimb");

	Params::BP_Action_Climb_C_ExecuteClimb Parms{};

	Parms.Up = Up;
	Parms.Fast = Fast;

	UObject::ProcessEvent(Func, &Parms);
}

}


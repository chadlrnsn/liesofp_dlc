#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_UmbrellaSword_HND

#include "Basic.hpp"

#include "ProjectP_structs.hpp"
#include "ProjectP_classes.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_UmbrellaSword_HND.BP_UmbrellaSword_HND_C
// 0x0020 (0x0278 - 0x0258)
class UBP_UmbrellaSword_HND_C final : public ULAction_LoopAnim
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0258(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class ULHitProcContext*                       Cached_HitProcContext;                             // 0x0260(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Enable_Counter;                                    // 0x0268(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLGameObjectHandle                     Cached_Handle_ActionState_HND_1;                   // 0x026C(0x0004)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	struct FLGameObjectHandle                     Cached_Handle_ActionState_FableHandle;             // 0x0270(0x0004)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	struct FLGameObjectHandle                     Cached_Handle_ActionState_Frenzy;                  // 0x0274(0x0004)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)

public:
	void ExecuteUbergraph_BP_UmbrellaSword_HND(int32 EntryPoint);
	void OnStop(class ULActBase* ReasonAction, class FName Reason);
	void OnGuard();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_UmbrellaSword_HND_C">();
	}
	static class UBP_UmbrellaSword_HND_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_UmbrellaSword_HND_C>();
	}
};
static_assert(alignof(UBP_UmbrellaSword_HND_C) == 0x000008, "Wrong alignment on UBP_UmbrellaSword_HND_C");
static_assert(sizeof(UBP_UmbrellaSword_HND_C) == 0x000278, "Wrong size on UBP_UmbrellaSword_HND_C");
static_assert(offsetof(UBP_UmbrellaSword_HND_C, UberGraphFrame) == 0x000258, "Member 'UBP_UmbrellaSword_HND_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_UmbrellaSword_HND_C, Cached_HitProcContext) == 0x000260, "Member 'UBP_UmbrellaSword_HND_C::Cached_HitProcContext' has a wrong offset!");
static_assert(offsetof(UBP_UmbrellaSword_HND_C, Enable_Counter) == 0x000268, "Member 'UBP_UmbrellaSword_HND_C::Enable_Counter' has a wrong offset!");
static_assert(offsetof(UBP_UmbrellaSword_HND_C, Cached_Handle_ActionState_HND_1) == 0x00026C, "Member 'UBP_UmbrellaSword_HND_C::Cached_Handle_ActionState_HND_1' has a wrong offset!");
static_assert(offsetof(UBP_UmbrellaSword_HND_C, Cached_Handle_ActionState_FableHandle) == 0x000270, "Member 'UBP_UmbrellaSword_HND_C::Cached_Handle_ActionState_FableHandle' has a wrong offset!");
static_assert(offsetof(UBP_UmbrellaSword_HND_C, Cached_Handle_ActionState_Frenzy) == 0x000274, "Member 'UBP_UmbrellaSword_HND_C::Cached_Handle_ActionState_Frenzy' has a wrong offset!");

}


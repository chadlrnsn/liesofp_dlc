#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UIW_Inventory

#include "Basic.hpp"

#include "ProjectP_structs.hpp"
#include "Engine_structs.hpp"
#include "ProjectPContentInfo_structs.hpp"
#include "UIW_Window_classes.hpp"
#include "SlateCore_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass UIW_Inventory.UIW_Inventory_C
// 0x0218 (0x0568 - 0x0350)
class UUIW_Inventory_C final : public UUIW_Window_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_UIW_Inventory_C;                    // 0x0350(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UUIW_BG_Tab_C*                          BG_Tab;                                            // 0x0358(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUIW_Btn_Key_C*                         Btn_Back;                                          // 0x0360(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUIW_Btn_Key_C*                         Btn_ItemInfo;                                      // 0x0368(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUIW_Btn_Key_C*                         Btn_Scroll;                                        // 0x0370(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUIW_Btn_Key_C*                         Btn_Select;                                        // 0x0378(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUIW_Btn_Key_C*                         Btn_Tab_LeftKey;                                   // 0x0380(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUIW_Btn_Key_C*                         Btn_Tab_RightKey;                                  // 0x0388(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         BtnGroup;                                          // 0x0390(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUIW_HasItem_Counter_C*                 HasItem_Counter;                                   // 0x0398(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUIW_ItemInfo_C*                        ItemInfo;                                          // 0x03A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUIW_SubTitle_C*                        LargeList_SubTitle_1;                              // 0x03A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUIW_SubTitle_C*                        LargeList_SubTitle_2;                              // 0x03B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUIW_SubTitle_C*                        LargeList_SubTitle_3;                              // 0x03B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class ULTileView*                             List_Large_1;                                      // 0x03C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class ULTileView*                             List_Large_2;                                      // 0x03C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class ULTileView*                             List_Large_3;                                      // 0x03D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class ULTileView*                             List_Small_1;                                      // 0x03D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class ULTileView*                             List_Small_2;                                      // 0x03E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class ULTileView*                             List_Small_3;                                      // 0x03E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class ULTileView*                             List_Small_4;                                      // 0x03F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class ULTileView*                             List_Small_5;                                      // 0x03F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class ULTileView*                             List_Small_6;                                      // 0x0400(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class ULTileView*                             List_Small_7;                                      // 0x0408(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class ULTileView*                             List_Small_8;                                      // 0x0410(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class ULTileView*                             List_Small_9;                                      // 0x0418(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class ULTileView*                             List_Small_10;                                     // 0x0420(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class ULListView*                             List_Tab;                                          // 0x0428(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class ULTileView*                             List_Weapon_1;                                     // 0x0430(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class ULTileView*                             List_Weapon_2;                                     // 0x0438(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UScrollBox*                             ListLarge_Group;                                   // 0x0440(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UScrollBox*                             ListSmall_Group;                                   // 0x0448(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UScrollBox*                             ListWeapon_Group;                                  // 0x0450(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUIW_SubTitle_C*                        SmallList_SubTitle_1;                              // 0x0458(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUIW_SubTitle_C*                        SmallList_SubTitle_2;                              // 0x0460(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUIW_SubTitle_C*                        SmallList_SubTitle_3;                              // 0x0468(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUIW_SubTitle_C*                        SmallList_SubTitle_4;                              // 0x0470(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUIW_SubTitle_C*                        SmallList_SubTitle_5;                              // 0x0478(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUIW_SubTitle_C*                        SmallList_SubTitle_6;                              // 0x0480(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUIW_SubTitle_C*                        SmallList_SubTitle_7;                              // 0x0488(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUIW_SubTitle_C*                        SmallList_SubTitle_8;                              // 0x0490(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUIW_SubTitle_C*                        SmallList_SubTitle_9;                              // 0x0498(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUIW_SubTitle_C*                        SmallList_SubTitle_10;                             // 0x04A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUIW_NoContents_C*                      UIW_NoContents;                                    // 0x04A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUIW_SubTitle_C*                        WeaponList_SubTitle_1;                             // 0x04B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUIW_SubTitle_C*                        WeaponList_SubTitle_2;                             // 0x04B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class ULItem*                                 SelectedItem;                                      // 0x04C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SelectedItemIndex;                                 // 0x04C8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ELItemFirstCategory                           SelectedCategory;                                  // 0x04CC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsWaitingUpdateItem;                               // 0x04CD(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4CE[0x2];                                      // 0x04CE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UScrollBox*                             SelectedListGroup;                                 // 0x04D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULTileView*                             SelectedList;                                      // 0x04D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ULTileView*>                     SmallListArr;                                      // 0x04E0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TArray<class ULTileView*>                     LargeListArr;                                      // 0x04F0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TArray<class ULTileView*>                     WeaponListArr;                                     // 0x0500(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TArray<class UUIW_SubTitle_C*>                SmallSubTitleArr;                                  // 0x0510(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TArray<class UUIW_SubTitle_C*>                LargeSubTitleArr;                                  // 0x0520(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TArray<class UUIW_SubTitle_C*>                WeaponSubTitleArr;                                 // 0x0530(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	int32                                         ColumnCount;                                       // 0x0540(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         PrevListSelectedIndex;                             // 0x0544(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PrevScrollBoxOffset;                               // 0x0548(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54C[0x4];                                      // 0x054C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           ListPendingTimer;                                  // 0x0550(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class FName                                   ContextMenuEventForSystemSoundCheck;               // 0x0558(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UScrollBox*                             PromoteDLCItemList;                                // 0x0560(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_UIW_Inventory(int32 EntryPoint);
	void BndEvt__UIW_Inventory_List_Large_3_K2Node_ComponentBoundEvent_31_OnListItemSelectionChangedDynamic__DelegateSignature(class UObject* Item, bool bIsSelected);
	void BndEvt__UIW_Inventory_List_Large_3_K2Node_ComponentBoundEvent_24_SimpleListItemEventDynamic__DelegateSignature(class UObject* Item);
	void Destruct();
	void BndEvt__Btn_Back_K2Node_ComponentBoundEvent_2_OnActive__DelegateSignature(class UUIW_Btn_Key_C* BtnKey);
	void BndEvt__List_Item_K2Node_ComponentBoundEvent_4_SimpleListItemEventDynamic__DelegateSignature(class UObject* Item);
	void BndEvt__List_Weapon_K2Node_ComponentBoundEvent_5_SimpleListItemEventDynamic__DelegateSignature(class UObject* Item);
	void BndEvt__UIW_Inventory_List_Large_2_K2Node_ComponentBoundEvent_30_SimpleListItemEventDynamic__DelegateSignature(class UObject* Item);
	void BndEvt__UIW_Inventory_List_Weapon_2_K2Node_ComponentBoundEvent_29_SimpleListItemEventDynamic__DelegateSignature(class UObject* Item);
	void BndEvt__UIW_Inventory_List_Large_2_K2Node_ComponentBoundEvent_28_OnListItemSelectionChangedDynamic__DelegateSignature(class UObject* Item, bool bIsSelected);
	void BndEvt__UIW_Inventory_List_Large_1_K2Node_ComponentBoundEvent_27_OnListItemSelectionChangedDynamic__DelegateSignature(class UObject* Item, bool bIsSelected);
	void BndEvt__UIW_Inventory_List_Weapon_2_K2Node_ComponentBoundEvent_26_OnListItemSelectionChangedDynamic__DelegateSignature(class UObject* Item, bool bIsSelected);
	void BndEvt__UIW_Inventory_List_Weapon_1_K2Node_ComponentBoundEvent_25_OnListItemSelectionChangedDynamic__DelegateSignature(class UObject* Item, bool bIsSelected);
	void BndEvt__Btn_Delete_K2Node_ComponentBoundEvent_1_OnActive__DelegateSignature(class UUIW_Btn_Key_C* BtnKey);
	void BndEvt__UIW_Inventory_List_Small_10_K2Node_ComponentBoundEvent_23_OnListItemSelectionChangedDynamic__DelegateSignature(class UObject* Item, bool bIsSelected);
	void BndEvt__UIW_Inventory_List_Small_9_K2Node_ComponentBoundEvent_22_OnListItemSelectionChangedDynamic__DelegateSignature(class UObject* Item, bool bIsSelected);
	void BndEvt__UIW_Inventory_List_Small_8_K2Node_ComponentBoundEvent_21_OnListItemSelectionChangedDynamic__DelegateSignature(class UObject* Item, bool bIsSelected);
	void BndEvt__UIW_Inventory_List_Small_7_K2Node_ComponentBoundEvent_20_OnListItemSelectionChangedDynamic__DelegateSignature(class UObject* Item, bool bIsSelected);
	void BndEvt__UIW_Inventory_List_Small_6_K2Node_ComponentBoundEvent_19_OnListItemSelectionChangedDynamic__DelegateSignature(class UObject* Item, bool bIsSelected);
	void BndEvt__UIW_Inventory_List_Small_5_K2Node_ComponentBoundEvent_18_OnListItemSelectionChangedDynamic__DelegateSignature(class UObject* Item, bool bIsSelected);
	void BndEvt__UIW_Inventory_List_Small_4_K2Node_ComponentBoundEvent_17_OnListItemSelectionChangedDynamic__DelegateSignature(class UObject* Item, bool bIsSelected);
	void BndEvt__UIW_Inventory_List_Small_3_K2Node_ComponentBoundEvent_16_OnListItemSelectionChangedDynamic__DelegateSignature(class UObject* Item, bool bIsSelected);
	void BndEvt__UIW_Inventory_List_Small_2_K2Node_ComponentBoundEvent_15_OnListItemSelectionChangedDynamic__DelegateSignature(class UObject* Item, bool bIsSelected);
	void BndEvt__UIW_Inventory_List_Small_1_K2Node_ComponentBoundEvent_14_OnListItemSelectionChangedDynamic__DelegateSignature(class UObject* Item, bool bIsSelected);
	void BndEvt__UIW_Inventory_List_SlaveArm_K2Node_ComponentBoundEvent_0_SimpleListItemEventDynamic__DelegateSignature(class UObject* Item);
	void Construct();
	void BndEvt__UIW_Inventory_List_Small_9_K2Node_ComponentBoundEvent_13_SimpleListItemEventDynamic__DelegateSignature(class UObject* Item);
	void BndEvt__UIW_Inventory_List_Small_8_K2Node_ComponentBoundEvent_12_SimpleListItemEventDynamic__DelegateSignature(class UObject* Item);
	void BndEvt__UIW_Inventory_List_Small_7_K2Node_ComponentBoundEvent_11_SimpleListItemEventDynamic__DelegateSignature(class UObject* Item);
	void BndEvt__UIW_Inventory_List_Small_6_K2Node_ComponentBoundEvent_10_SimpleListItemEventDynamic__DelegateSignature(class UObject* Item);
	void BndEvt__UIW_Inventory_List_Small_5_K2Node_ComponentBoundEvent_9_SimpleListItemEventDynamic__DelegateSignature(class UObject* Item);
	void BndEvt__UIW_Inventory_List_Small_4_K2Node_ComponentBoundEvent_8_SimpleListItemEventDynamic__DelegateSignature(class UObject* Item);
	void BndEvt__UIW_Inventory_List_Small_3_K2Node_ComponentBoundEvent_7_SimpleListItemEventDynamic__DelegateSignature(class UObject* Item);
	void BndEvt__UIW_Inventory_List_Small_2_K2Node_ComponentBoundEvent_6_SimpleListItemEventDynamic__DelegateSignature(class UObject* Item);
	void BndEvt__UIW_Inventory_List_Small_1_K2Node_ComponentBoundEvent_3_SimpleListItemEventDynamic__DelegateSignature(class UObject* Item);
	void MoveLeftTab(class UUIW_Btn_Key_C* BtnKey);
	void MoveRightTab(class UUIW_Btn_Key_C* BtnKey);
	void Change_Tab(class UObject* Item, bool bIsSelected);
	void RefreshTab();
	void SetSelectedItem(class UObject* Item, bool bIsSelected, class UScrollBox* ListGroup);
	void SetSelectedWeapon(class UObject* Item, bool bIsSelected, class UScrollBox* ListGroup);
	void SetSelectedList(class ULTileView* ListView);
	void DoubleClickListItem(class UObject* Item);
	void EquipItem(class UObject* Item);
	void UseItem(class UObject* Item, int32 Count);
	struct FEventReply FocusManage(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);
	void DestroyItem(int32 Count);
	void OnUpdateItem(class ULItem* LItem);
	void CallbackContextMenu(class FName EventName);
	void ClearEventBinding();
	void AddEventBinding();
	void CallbackDestroy(class UUIW_Popup_C* Popup, class UUIW_Btn_Key_C* BtnKey);
	void CallbackMultipleUse(int32 Value);
	void CallbackMultipleAbandon(int32 Value);
	void OnReady();
	void SetEnabledWindow(bool IsEnabled);
	void Add_Item(class ULItem* Item, class ULWeaponItem* Weapon, const TMap<ELItemSecondCategory, struct FUIST_SecondCategoryArr>& SecondCategoryMap, bool IsWeapon, TMap<ELItemSecondCategory, struct FUIST_SecondCategoryArr>* ResultCategoryMap);
	void HideAllInvenList();
	void PopulateInvenListItems(const TMap<ELItemSecondCategory, struct FUIST_SecondCategoryArr>& SecondCategoryMap, TArray<class ULTileView*>& ListArr, TArray<class UUIW_SubTitle_C*>& SubTitleArr, ELItemSecondCategory SelectedSecondCategory, bool IsWeaponOrNot, class ULTileView** SelectedList_0);
	void AddListEmptyFill(TArray<class UObject*>& DataArr, int32 ColumnCnt, ELItemFirstCategory FirstCategory);
	void AddListEmptyFill_SecondCategory(int32 ColumnCnt, const TMap<ELItemSecondCategory, struct FUIST_SecondCategoryArr>& SecondCategoryMap, ELItemSecondCategory SecondCategory, ELItemFirstCategory FirstCategory, TMap<ELItemSecondCategory, struct FUIST_SecondCategoryArr>* NewParam);
	void GetListForEmpty(const class FString& CurrentListDisplayName, class UTileView** NewTileView, int32* NewIndex);
	void GetListPrevNext(const class FString& CurrentListDisplayName, class UTileView** PrevView, class UTileView** NextView);
	class UWidget* NavToTop(EUINavigation Navigation_0);
	class UWidget* NavToSmall1(EUINavigation Navigation_0);
	class UWidget* NavToSmall2(EUINavigation Navigation_0);
	class UWidget* NavToSmall3(EUINavigation Navigation_0);
	class UWidget* NavToSmall4(EUINavigation Navigation_0);
	class UWidget* NavToSmall5(EUINavigation Navigation_0);
	class UWidget* NavToSmall6(EUINavigation Navigation_0);
	class UWidget* NavToSmall7(EUINavigation Navigation_0);
	class UWidget* NavToSmall8(EUINavigation Navigation_0);
	class UWidget* NavToSmall9(EUINavigation Navigation_0);
	class UWidget* NavToSmall10(EUINavigation Navigation_0);
	class UWidget* NavToBottom(EUINavigation Navigation_0);
	class UWidget* NavToLRLoop(EUINavigation Navigation_0);
	void HideFocusOnScroll(float CurerntOffset);
	class UWidget* NavToWeapon1(EUINavigation Navigation_0);
	class UWidget* NavToWeapon2(EUINavigation Navigation_0);
	class UWidget* NavToLarge1(EUINavigation Navigation_0);
	class UWidget* NavToLarge2(EUINavigation Navigation_0);
	class UWidget* NavToLarge3(EUINavigation Navigation_0);
	void CallbackPromoteDLCItem(class UUIW_Popup_C* Popup, class UUIW_Btn_Key_C* BtnKey);
	void OnPromoteDLCItemResult(ELDLCItemReceiveResult DLCItemReceiveResult, class FName DLC_CodeName, const TArray<class ULItem*>& DLC_ItemList);
	void GetBottomList(class UTileView** AsTile_View);
	void GetTopList(class UTileView** ListView);
	void CallbackPromoteDLCItemScroll(float Delta);
	void ListPendingCheck();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"UIW_Inventory_C">();
	}
	static class UUIW_Inventory_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUIW_Inventory_C>();
	}
};
static_assert(alignof(UUIW_Inventory_C) == 0x000008, "Wrong alignment on UUIW_Inventory_C");
static_assert(sizeof(UUIW_Inventory_C) == 0x000568, "Wrong size on UUIW_Inventory_C");
static_assert(offsetof(UUIW_Inventory_C, UberGraphFrame_UIW_Inventory_C) == 0x000350, "Member 'UUIW_Inventory_C::UberGraphFrame_UIW_Inventory_C' has a wrong offset!");
static_assert(offsetof(UUIW_Inventory_C, BG_Tab) == 0x000358, "Member 'UUIW_Inventory_C::BG_Tab' has a wrong offset!");
static_assert(offsetof(UUIW_Inventory_C, Btn_Back) == 0x000360, "Member 'UUIW_Inventory_C::Btn_Back' has a wrong offset!");
static_assert(offsetof(UUIW_Inventory_C, Btn_ItemInfo) == 0x000368, "Member 'UUIW_Inventory_C::Btn_ItemInfo' has a wrong offset!");
static_assert(offsetof(UUIW_Inventory_C, Btn_Scroll) == 0x000370, "Member 'UUIW_Inventory_C::Btn_Scroll' has a wrong offset!");
static_assert(offsetof(UUIW_Inventory_C, Btn_Select) == 0x000378, "Member 'UUIW_Inventory_C::Btn_Select' has a wrong offset!");
static_assert(offsetof(UUIW_Inventory_C, Btn_Tab_LeftKey) == 0x000380, "Member 'UUIW_Inventory_C::Btn_Tab_LeftKey' has a wrong offset!");
static_assert(offsetof(UUIW_Inventory_C, Btn_Tab_RightKey) == 0x000388, "Member 'UUIW_Inventory_C::Btn_Tab_RightKey' has a wrong offset!");
static_assert(offsetof(UUIW_Inventory_C, BtnGroup) == 0x000390, "Member 'UUIW_Inventory_C::BtnGroup' has a wrong offset!");
static_assert(offsetof(UUIW_Inventory_C, HasItem_Counter) == 0x000398, "Member 'UUIW_Inventory_C::HasItem_Counter' has a wrong offset!");
static_assert(offsetof(UUIW_Inventory_C, ItemInfo) == 0x0003A0, "Member 'UUIW_Inventory_C::ItemInfo' has a wrong offset!");
static_assert(offsetof(UUIW_Inventory_C, LargeList_SubTitle_1) == 0x0003A8, "Member 'UUIW_Inventory_C::LargeList_SubTitle_1' has a wrong offset!");
static_assert(offsetof(UUIW_Inventory_C, LargeList_SubTitle_2) == 0x0003B0, "Member 'UUIW_Inventory_C::LargeList_SubTitle_2' has a wrong offset!");
static_assert(offsetof(UUIW_Inventory_C, LargeList_SubTitle_3) == 0x0003B8, "Member 'UUIW_Inventory_C::LargeList_SubTitle_3' has a wrong offset!");
static_assert(offsetof(UUIW_Inventory_C, List_Large_1) == 0x0003C0, "Member 'UUIW_Inventory_C::List_Large_1' has a wrong offset!");
static_assert(offsetof(UUIW_Inventory_C, List_Large_2) == 0x0003C8, "Member 'UUIW_Inventory_C::List_Large_2' has a wrong offset!");
static_assert(offsetof(UUIW_Inventory_C, List_Large_3) == 0x0003D0, "Member 'UUIW_Inventory_C::List_Large_3' has a wrong offset!");
static_assert(offsetof(UUIW_Inventory_C, List_Small_1) == 0x0003D8, "Member 'UUIW_Inventory_C::List_Small_1' has a wrong offset!");
static_assert(offsetof(UUIW_Inventory_C, List_Small_2) == 0x0003E0, "Member 'UUIW_Inventory_C::List_Small_2' has a wrong offset!");
static_assert(offsetof(UUIW_Inventory_C, List_Small_3) == 0x0003E8, "Member 'UUIW_Inventory_C::List_Small_3' has a wrong offset!");
static_assert(offsetof(UUIW_Inventory_C, List_Small_4) == 0x0003F0, "Member 'UUIW_Inventory_C::List_Small_4' has a wrong offset!");
static_assert(offsetof(UUIW_Inventory_C, List_Small_5) == 0x0003F8, "Member 'UUIW_Inventory_C::List_Small_5' has a wrong offset!");
static_assert(offsetof(UUIW_Inventory_C, List_Small_6) == 0x000400, "Member 'UUIW_Inventory_C::List_Small_6' has a wrong offset!");
static_assert(offsetof(UUIW_Inventory_C, List_Small_7) == 0x000408, "Member 'UUIW_Inventory_C::List_Small_7' has a wrong offset!");
static_assert(offsetof(UUIW_Inventory_C, List_Small_8) == 0x000410, "Member 'UUIW_Inventory_C::List_Small_8' has a wrong offset!");
static_assert(offsetof(UUIW_Inventory_C, List_Small_9) == 0x000418, "Member 'UUIW_Inventory_C::List_Small_9' has a wrong offset!");
static_assert(offsetof(UUIW_Inventory_C, List_Small_10) == 0x000420, "Member 'UUIW_Inventory_C::List_Small_10' has a wrong offset!");
static_assert(offsetof(UUIW_Inventory_C, List_Tab) == 0x000428, "Member 'UUIW_Inventory_C::List_Tab' has a wrong offset!");
static_assert(offsetof(UUIW_Inventory_C, List_Weapon_1) == 0x000430, "Member 'UUIW_Inventory_C::List_Weapon_1' has a wrong offset!");
static_assert(offsetof(UUIW_Inventory_C, List_Weapon_2) == 0x000438, "Member 'UUIW_Inventory_C::List_Weapon_2' has a wrong offset!");
static_assert(offsetof(UUIW_Inventory_C, ListLarge_Group) == 0x000440, "Member 'UUIW_Inventory_C::ListLarge_Group' has a wrong offset!");
static_assert(offsetof(UUIW_Inventory_C, ListSmall_Group) == 0x000448, "Member 'UUIW_Inventory_C::ListSmall_Group' has a wrong offset!");
static_assert(offsetof(UUIW_Inventory_C, ListWeapon_Group) == 0x000450, "Member 'UUIW_Inventory_C::ListWeapon_Group' has a wrong offset!");
static_assert(offsetof(UUIW_Inventory_C, SmallList_SubTitle_1) == 0x000458, "Member 'UUIW_Inventory_C::SmallList_SubTitle_1' has a wrong offset!");
static_assert(offsetof(UUIW_Inventory_C, SmallList_SubTitle_2) == 0x000460, "Member 'UUIW_Inventory_C::SmallList_SubTitle_2' has a wrong offset!");
static_assert(offsetof(UUIW_Inventory_C, SmallList_SubTitle_3) == 0x000468, "Member 'UUIW_Inventory_C::SmallList_SubTitle_3' has a wrong offset!");
static_assert(offsetof(UUIW_Inventory_C, SmallList_SubTitle_4) == 0x000470, "Member 'UUIW_Inventory_C::SmallList_SubTitle_4' has a wrong offset!");
static_assert(offsetof(UUIW_Inventory_C, SmallList_SubTitle_5) == 0x000478, "Member 'UUIW_Inventory_C::SmallList_SubTitle_5' has a wrong offset!");
static_assert(offsetof(UUIW_Inventory_C, SmallList_SubTitle_6) == 0x000480, "Member 'UUIW_Inventory_C::SmallList_SubTitle_6' has a wrong offset!");
static_assert(offsetof(UUIW_Inventory_C, SmallList_SubTitle_7) == 0x000488, "Member 'UUIW_Inventory_C::SmallList_SubTitle_7' has a wrong offset!");
static_assert(offsetof(UUIW_Inventory_C, SmallList_SubTitle_8) == 0x000490, "Member 'UUIW_Inventory_C::SmallList_SubTitle_8' has a wrong offset!");
static_assert(offsetof(UUIW_Inventory_C, SmallList_SubTitle_9) == 0x000498, "Member 'UUIW_Inventory_C::SmallList_SubTitle_9' has a wrong offset!");
static_assert(offsetof(UUIW_Inventory_C, SmallList_SubTitle_10) == 0x0004A0, "Member 'UUIW_Inventory_C::SmallList_SubTitle_10' has a wrong offset!");
static_assert(offsetof(UUIW_Inventory_C, UIW_NoContents) == 0x0004A8, "Member 'UUIW_Inventory_C::UIW_NoContents' has a wrong offset!");
static_assert(offsetof(UUIW_Inventory_C, WeaponList_SubTitle_1) == 0x0004B0, "Member 'UUIW_Inventory_C::WeaponList_SubTitle_1' has a wrong offset!");
static_assert(offsetof(UUIW_Inventory_C, WeaponList_SubTitle_2) == 0x0004B8, "Member 'UUIW_Inventory_C::WeaponList_SubTitle_2' has a wrong offset!");
static_assert(offsetof(UUIW_Inventory_C, SelectedItem) == 0x0004C0, "Member 'UUIW_Inventory_C::SelectedItem' has a wrong offset!");
static_assert(offsetof(UUIW_Inventory_C, SelectedItemIndex) == 0x0004C8, "Member 'UUIW_Inventory_C::SelectedItemIndex' has a wrong offset!");
static_assert(offsetof(UUIW_Inventory_C, SelectedCategory) == 0x0004CC, "Member 'UUIW_Inventory_C::SelectedCategory' has a wrong offset!");
static_assert(offsetof(UUIW_Inventory_C, IsWaitingUpdateItem) == 0x0004CD, "Member 'UUIW_Inventory_C::IsWaitingUpdateItem' has a wrong offset!");
static_assert(offsetof(UUIW_Inventory_C, SelectedListGroup) == 0x0004D0, "Member 'UUIW_Inventory_C::SelectedListGroup' has a wrong offset!");
static_assert(offsetof(UUIW_Inventory_C, SelectedList) == 0x0004D8, "Member 'UUIW_Inventory_C::SelectedList' has a wrong offset!");
static_assert(offsetof(UUIW_Inventory_C, SmallListArr) == 0x0004E0, "Member 'UUIW_Inventory_C::SmallListArr' has a wrong offset!");
static_assert(offsetof(UUIW_Inventory_C, LargeListArr) == 0x0004F0, "Member 'UUIW_Inventory_C::LargeListArr' has a wrong offset!");
static_assert(offsetof(UUIW_Inventory_C, WeaponListArr) == 0x000500, "Member 'UUIW_Inventory_C::WeaponListArr' has a wrong offset!");
static_assert(offsetof(UUIW_Inventory_C, SmallSubTitleArr) == 0x000510, "Member 'UUIW_Inventory_C::SmallSubTitleArr' has a wrong offset!");
static_assert(offsetof(UUIW_Inventory_C, LargeSubTitleArr) == 0x000520, "Member 'UUIW_Inventory_C::LargeSubTitleArr' has a wrong offset!");
static_assert(offsetof(UUIW_Inventory_C, WeaponSubTitleArr) == 0x000530, "Member 'UUIW_Inventory_C::WeaponSubTitleArr' has a wrong offset!");
static_assert(offsetof(UUIW_Inventory_C, ColumnCount) == 0x000540, "Member 'UUIW_Inventory_C::ColumnCount' has a wrong offset!");
static_assert(offsetof(UUIW_Inventory_C, PrevListSelectedIndex) == 0x000544, "Member 'UUIW_Inventory_C::PrevListSelectedIndex' has a wrong offset!");
static_assert(offsetof(UUIW_Inventory_C, PrevScrollBoxOffset) == 0x000548, "Member 'UUIW_Inventory_C::PrevScrollBoxOffset' has a wrong offset!");
static_assert(offsetof(UUIW_Inventory_C, ListPendingTimer) == 0x000550, "Member 'UUIW_Inventory_C::ListPendingTimer' has a wrong offset!");
static_assert(offsetof(UUIW_Inventory_C, ContextMenuEventForSystemSoundCheck) == 0x000558, "Member 'UUIW_Inventory_C::ContextMenuEventForSystemSoundCheck' has a wrong offset!");
static_assert(offsetof(UUIW_Inventory_C, PromoteDLCItemList) == 0x000560, "Member 'UUIW_Inventory_C::PromoteDLCItemList' has a wrong offset!");

}


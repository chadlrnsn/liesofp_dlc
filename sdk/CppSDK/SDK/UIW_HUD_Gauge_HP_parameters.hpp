#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UIW_HUD_Gauge_HP

#include "Basic.hpp"

#include "ProjectP_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function UIW_HUD_Gauge_HP.UIW_HUD_Gauge_HP_C.ExecuteUbergraph_UIW_HUD_Gauge_HP
// 0x0008 (0x0008 - 0x0000)
struct UIW_HUD_Gauge_HP_C_ExecuteUbergraph_UIW_HUD_Gauge_HP final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UIW_HUD_Gauge_HP_C_ExecuteUbergraph_UIW_HUD_Gauge_HP) == 0x000004, "Wrong alignment on UIW_HUD_Gauge_HP_C_ExecuteUbergraph_UIW_HUD_Gauge_HP");
static_assert(sizeof(UIW_HUD_Gauge_HP_C_ExecuteUbergraph_UIW_HUD_Gauge_HP) == 0x000008, "Wrong size on UIW_HUD_Gauge_HP_C_ExecuteUbergraph_UIW_HUD_Gauge_HP");
static_assert(offsetof(UIW_HUD_Gauge_HP_C_ExecuteUbergraph_UIW_HUD_Gauge_HP, EntryPoint) == 0x000000, "Member 'UIW_HUD_Gauge_HP_C_ExecuteUbergraph_UIW_HUD_Gauge_HP::EntryPoint' has a wrong offset!");
static_assert(offsetof(UIW_HUD_Gauge_HP_C_ExecuteUbergraph_UIW_HUD_Gauge_HP, K2Node_Event_IsDesignTime) == 0x000004, "Member 'UIW_HUD_Gauge_HP_C_ExecuteUbergraph_UIW_HUD_Gauge_HP::K2Node_Event_IsDesignTime' has a wrong offset!");

// Function UIW_HUD_Gauge_HP.UIW_HUD_Gauge_HP_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct UIW_HUD_Gauge_HP_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UIW_HUD_Gauge_HP_C_PreConstruct) == 0x000001, "Wrong alignment on UIW_HUD_Gauge_HP_C_PreConstruct");
static_assert(sizeof(UIW_HUD_Gauge_HP_C_PreConstruct) == 0x000001, "Wrong size on UIW_HUD_Gauge_HP_C_PreConstruct");
static_assert(offsetof(UIW_HUD_Gauge_HP_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'UIW_HUD_Gauge_HP_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function UIW_HUD_Gauge_HP.UIW_HUD_Gauge_HP_C.InitGauge
// 0x0038 (0x0038 - 0x0000)
struct UIW_HUD_Gauge_HP_C_InitGauge final
{
public:
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x0000(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetSize_ReturnValue;                      // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue_1;           // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_1;               // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue_2;           // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UIW_HUD_Gauge_HP_C_InitGauge) == 0x000008, "Wrong alignment on UIW_HUD_Gauge_HP_C_InitGauge");
static_assert(sizeof(UIW_HUD_Gauge_HP_C_InitGauge) == 0x000038, "Wrong size on UIW_HUD_Gauge_HP_C_InitGauge");
static_assert(offsetof(UIW_HUD_Gauge_HP_C_InitGauge, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x000000, "Member 'UIW_HUD_Gauge_HP_C_InitGauge::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_HUD_Gauge_HP_C_InitGauge, CallFunc_GetSize_ReturnValue) == 0x000008, "Member 'UIW_HUD_Gauge_HP_C_InitGauge::CallFunc_GetSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_HUD_Gauge_HP_C_InitGauge, CallFunc_SlotAsCanvasSlot_ReturnValue_1) == 0x000010, "Member 'UIW_HUD_Gauge_HP_C_InitGauge::CallFunc_SlotAsCanvasSlot_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UIW_HUD_Gauge_HP_C_InitGauge, CallFunc_BreakVector2D_X) == 0x000018, "Member 'UIW_HUD_Gauge_HP_C_InitGauge::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(UIW_HUD_Gauge_HP_C_InitGauge, CallFunc_BreakVector2D_Y) == 0x00001C, "Member 'UIW_HUD_Gauge_HP_C_InitGauge::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(UIW_HUD_Gauge_HP_C_InitGauge, CallFunc_MakeVector2D_ReturnValue) == 0x000020, "Member 'UIW_HUD_Gauge_HP_C_InitGauge::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_HUD_Gauge_HP_C_InitGauge, CallFunc_MakeVector2D_ReturnValue_1) == 0x000028, "Member 'UIW_HUD_Gauge_HP_C_InitGauge::CallFunc_MakeVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UIW_HUD_Gauge_HP_C_InitGauge, CallFunc_SlotAsCanvasSlot_ReturnValue_2) == 0x000030, "Member 'UIW_HUD_Gauge_HP_C_InitGauge::CallFunc_SlotAsCanvasSlot_ReturnValue_2' has a wrong offset!");

// Function UIW_HUD_Gauge_HP.UIW_HUD_Gauge_HP_C.SetGaugeColor
// 0x0070 (0x0070 - 0x0000)
struct UIW_HUD_Gauge_HP_C_SetGaugeColor final
{
public:
	struct FLinearColor                           HPColor;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           FXGradationColor;                                  // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0020(0x0028)()
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_1;                    // 0x0048(0x0028)()
};
static_assert(alignof(UIW_HUD_Gauge_HP_C_SetGaugeColor) == 0x000008, "Wrong alignment on UIW_HUD_Gauge_HP_C_SetGaugeColor");
static_assert(sizeof(UIW_HUD_Gauge_HP_C_SetGaugeColor) == 0x000070, "Wrong size on UIW_HUD_Gauge_HP_C_SetGaugeColor");
static_assert(offsetof(UIW_HUD_Gauge_HP_C_SetGaugeColor, HPColor) == 0x000000, "Member 'UIW_HUD_Gauge_HP_C_SetGaugeColor::HPColor' has a wrong offset!");
static_assert(offsetof(UIW_HUD_Gauge_HP_C_SetGaugeColor, FXGradationColor) == 0x000010, "Member 'UIW_HUD_Gauge_HP_C_SetGaugeColor::FXGradationColor' has a wrong offset!");
static_assert(offsetof(UIW_HUD_Gauge_HP_C_SetGaugeColor, K2Node_MakeStruct_SlateColor) == 0x000020, "Member 'UIW_HUD_Gauge_HP_C_SetGaugeColor::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(UIW_HUD_Gauge_HP_C_SetGaugeColor, K2Node_MakeStruct_SlateColor_1) == 0x000048, "Member 'UIW_HUD_Gauge_HP_C_SetGaugeColor::K2Node_MakeStruct_SlateColor_1' has a wrong offset!");

// Function UIW_HUD_Gauge_HP.UIW_HUD_Gauge_HP_C.SetParalyze
// 0x0010 (0x0010 - 0x0000)
struct UIW_HUD_Gauge_HP_C_SetParalyze final
{
public:
	class ALNPCCharacter*                         NPC;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsAbleParalyze;                                    // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UIW_HUD_Gauge_HP_C_SetParalyze) == 0x000008, "Wrong alignment on UIW_HUD_Gauge_HP_C_SetParalyze");
static_assert(sizeof(UIW_HUD_Gauge_HP_C_SetParalyze) == 0x000010, "Wrong size on UIW_HUD_Gauge_HP_C_SetParalyze");
static_assert(offsetof(UIW_HUD_Gauge_HP_C_SetParalyze, NPC) == 0x000000, "Member 'UIW_HUD_Gauge_HP_C_SetParalyze::NPC' has a wrong offset!");
static_assert(offsetof(UIW_HUD_Gauge_HP_C_SetParalyze, IsAbleParalyze) == 0x000008, "Member 'UIW_HUD_Gauge_HP_C_SetParalyze::IsAbleParalyze' has a wrong offset!");

// Function UIW_HUD_Gauge_HP.UIW_HUD_Gauge_HP_C.RefreshGauge
// 0x00C8 (0x00C8 - 0x0000)
struct UIW_HUD_Gauge_HP_C_RefreshGauge final
{
public:
	class ULStatComponent*                        StatComponent;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NeedFxUpdate;                                      // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          NeedEffectUpdate;                                  // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A[0x2];                                        // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CurrentPercent;                                    // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NeedGaugeTween;                                    // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         GaugeSizeX;                                        // 0x0014(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          LocalNeedTween;                                    // 0x0018(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         LocalCurrentValue;                                 // 0x001C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTweenEase                             K2Node_MakeStruct_TweenEase;                       // 0x0020(0x000C)(NoDestructor)
	struct FTweenEase                             K2Node_MakeStruct_TweenEase_1;                     // 0x002C(0x000C)(NoDestructor)
	struct FTweenEase                             K2Node_MakeStruct_TweenEase_2;                     // 0x0038(0x000C)(NoDestructor)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0044(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x0050(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_1;               // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetSize_ReturnValue;                      // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_2;               // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetCharacterStat_ReturnValue;             // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetCharacterStat_ReturnValue_1;           // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetCharacterStat_ReturnValue_2;           // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue_1;           // 0x0098(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_3;               // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_4;               // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_1;                        // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_1;                        // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_5;               // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue;                         // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UIW_HUD_Gauge_HP_C_RefreshGauge) == 0x000008, "Wrong alignment on UIW_HUD_Gauge_HP_C_RefreshGauge");
static_assert(sizeof(UIW_HUD_Gauge_HP_C_RefreshGauge) == 0x0000C8, "Wrong size on UIW_HUD_Gauge_HP_C_RefreshGauge");
static_assert(offsetof(UIW_HUD_Gauge_HP_C_RefreshGauge, StatComponent) == 0x000000, "Member 'UIW_HUD_Gauge_HP_C_RefreshGauge::StatComponent' has a wrong offset!");
static_assert(offsetof(UIW_HUD_Gauge_HP_C_RefreshGauge, NeedFxUpdate) == 0x000008, "Member 'UIW_HUD_Gauge_HP_C_RefreshGauge::NeedFxUpdate' has a wrong offset!");
static_assert(offsetof(UIW_HUD_Gauge_HP_C_RefreshGauge, NeedEffectUpdate) == 0x000009, "Member 'UIW_HUD_Gauge_HP_C_RefreshGauge::NeedEffectUpdate' has a wrong offset!");
static_assert(offsetof(UIW_HUD_Gauge_HP_C_RefreshGauge, CurrentPercent) == 0x00000C, "Member 'UIW_HUD_Gauge_HP_C_RefreshGauge::CurrentPercent' has a wrong offset!");
static_assert(offsetof(UIW_HUD_Gauge_HP_C_RefreshGauge, NeedGaugeTween) == 0x000010, "Member 'UIW_HUD_Gauge_HP_C_RefreshGauge::NeedGaugeTween' has a wrong offset!");
static_assert(offsetof(UIW_HUD_Gauge_HP_C_RefreshGauge, GaugeSizeX) == 0x000014, "Member 'UIW_HUD_Gauge_HP_C_RefreshGauge::GaugeSizeX' has a wrong offset!");
static_assert(offsetof(UIW_HUD_Gauge_HP_C_RefreshGauge, LocalNeedTween) == 0x000018, "Member 'UIW_HUD_Gauge_HP_C_RefreshGauge::LocalNeedTween' has a wrong offset!");
static_assert(offsetof(UIW_HUD_Gauge_HP_C_RefreshGauge, LocalCurrentValue) == 0x00001C, "Member 'UIW_HUD_Gauge_HP_C_RefreshGauge::LocalCurrentValue' has a wrong offset!");
static_assert(offsetof(UIW_HUD_Gauge_HP_C_RefreshGauge, K2Node_MakeStruct_TweenEase) == 0x000020, "Member 'UIW_HUD_Gauge_HP_C_RefreshGauge::K2Node_MakeStruct_TweenEase' has a wrong offset!");
static_assert(offsetof(UIW_HUD_Gauge_HP_C_RefreshGauge, K2Node_MakeStruct_TweenEase_1) == 0x00002C, "Member 'UIW_HUD_Gauge_HP_C_RefreshGauge::K2Node_MakeStruct_TweenEase_1' has a wrong offset!");
static_assert(offsetof(UIW_HUD_Gauge_HP_C_RefreshGauge, K2Node_MakeStruct_TweenEase_2) == 0x000038, "Member 'UIW_HUD_Gauge_HP_C_RefreshGauge::K2Node_MakeStruct_TweenEase_2' has a wrong offset!");
static_assert(offsetof(UIW_HUD_Gauge_HP_C_RefreshGauge, CallFunc_MakeVector2D_ReturnValue) == 0x000044, "Member 'UIW_HUD_Gauge_HP_C_RefreshGauge::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_HUD_Gauge_HP_C_RefreshGauge, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x000050, "Member 'UIW_HUD_Gauge_HP_C_RefreshGauge::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_HUD_Gauge_HP_C_RefreshGauge, CallFunc_MakeVector2D_ReturnValue_1) == 0x000058, "Member 'UIW_HUD_Gauge_HP_C_RefreshGauge::CallFunc_MakeVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UIW_HUD_Gauge_HP_C_RefreshGauge, CallFunc_GetSize_ReturnValue) == 0x000060, "Member 'UIW_HUD_Gauge_HP_C_RefreshGauge::CallFunc_GetSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_HUD_Gauge_HP_C_RefreshGauge, CallFunc_BreakVector2D_X) == 0x000068, "Member 'UIW_HUD_Gauge_HP_C_RefreshGauge::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(UIW_HUD_Gauge_HP_C_RefreshGauge, CallFunc_BreakVector2D_Y) == 0x00006C, "Member 'UIW_HUD_Gauge_HP_C_RefreshGauge::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(UIW_HUD_Gauge_HP_C_RefreshGauge, CallFunc_MakeVector2D_ReturnValue_2) == 0x000070, "Member 'UIW_HUD_Gauge_HP_C_RefreshGauge::CallFunc_MakeVector2D_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UIW_HUD_Gauge_HP_C_RefreshGauge, CallFunc_GetCharacterStat_ReturnValue) == 0x000078, "Member 'UIW_HUD_Gauge_HP_C_RefreshGauge::CallFunc_GetCharacterStat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_HUD_Gauge_HP_C_RefreshGauge, CallFunc_GetCharacterStat_ReturnValue_1) == 0x00007C, "Member 'UIW_HUD_Gauge_HP_C_RefreshGauge::CallFunc_GetCharacterStat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UIW_HUD_Gauge_HP_C_RefreshGauge, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000080, "Member 'UIW_HUD_Gauge_HP_C_RefreshGauge::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_HUD_Gauge_HP_C_RefreshGauge, CallFunc_GetCharacterStat_ReturnValue_2) == 0x000084, "Member 'UIW_HUD_Gauge_HP_C_RefreshGauge::CallFunc_GetCharacterStat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UIW_HUD_Gauge_HP_C_RefreshGauge, CallFunc_Add_IntInt_ReturnValue) == 0x000088, "Member 'UIW_HUD_Gauge_HP_C_RefreshGauge::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_HUD_Gauge_HP_C_RefreshGauge, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x00008C, "Member 'UIW_HUD_Gauge_HP_C_RefreshGauge::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UIW_HUD_Gauge_HP_C_RefreshGauge, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000090, "Member 'UIW_HUD_Gauge_HP_C_RefreshGauge::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_HUD_Gauge_HP_C_RefreshGauge, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000094, "Member 'UIW_HUD_Gauge_HP_C_RefreshGauge::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_HUD_Gauge_HP_C_RefreshGauge, CallFunc_SlotAsCanvasSlot_ReturnValue_1) == 0x000098, "Member 'UIW_HUD_Gauge_HP_C_RefreshGauge::CallFunc_SlotAsCanvasSlot_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UIW_HUD_Gauge_HP_C_RefreshGauge, CallFunc_MakeVector2D_ReturnValue_3) == 0x0000A0, "Member 'UIW_HUD_Gauge_HP_C_RefreshGauge::CallFunc_MakeVector2D_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(UIW_HUD_Gauge_HP_C_RefreshGauge, CallFunc_MakeVector2D_ReturnValue_4) == 0x0000A8, "Member 'UIW_HUD_Gauge_HP_C_RefreshGauge::CallFunc_MakeVector2D_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(UIW_HUD_Gauge_HP_C_RefreshGauge, CallFunc_BreakVector2D_X_1) == 0x0000B0, "Member 'UIW_HUD_Gauge_HP_C_RefreshGauge::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(UIW_HUD_Gauge_HP_C_RefreshGauge, CallFunc_BreakVector2D_Y_1) == 0x0000B4, "Member 'UIW_HUD_Gauge_HP_C_RefreshGauge::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(UIW_HUD_Gauge_HP_C_RefreshGauge, CallFunc_MakeVector2D_ReturnValue_5) == 0x0000B8, "Member 'UIW_HUD_Gauge_HP_C_RefreshGauge::CallFunc_MakeVector2D_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(UIW_HUD_Gauge_HP_C_RefreshGauge, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x0000C0, "Member 'UIW_HUD_Gauge_HP_C_RefreshGauge::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UIW_HUD_Gauge_HP_C_RefreshGauge, CallFunc_FMax_ReturnValue) == 0x0000C4, "Member 'UIW_HUD_Gauge_HP_C_RefreshGauge::CallFunc_FMax_ReturnValue' has a wrong offset!");

}


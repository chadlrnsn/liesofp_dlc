#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UIW_Popup_Module

#include "Basic.hpp"

#include "UIW_Popup_Module_classes.hpp"
#include "UIW_Popup_Module_parameters.hpp"


namespace SDK
{

// Function UIW_Popup_Module.UIW_Popup_Module_C.SetModule
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UUIW_Popup_C*                     PopupWindow_0                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           Data                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void UUIW_Popup_Module_C::SetModule(class UUIW_Popup_C* PopupWindow_0, const class FString& Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIW_Popup_Module_C", "SetModule");

	Params::UIW_Popup_Module_C_SetModule Parms{};

	Parms.PopupWindow_0 = PopupWindow_0;
	Parms.Data = std::move(Data);

	UObject::ProcessEvent(Func, &Parms);
}


// Function UIW_Popup_Module.UIW_Popup_Module_C.OnActive
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UUIW_Btn_Key_C*                   BtnKey                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUIW_Popup_Module_C::OnActive(class UUIW_Btn_Key_C* BtnKey)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIW_Popup_Module_C", "OnActive");

	Params::UIW_Popup_Module_C_OnActive Parms{};

	Parms.BtnKey = BtnKey;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UIW_Popup_Module.UIW_Popup_Module_C.OnRepeat
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UUIW_Btn_Key_C*                   BtnKey                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUIW_Popup_Module_C::OnRepeat(class UUIW_Btn_Key_C* BtnKey)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIW_Popup_Module_C", "OnRepeat");

	Params::UIW_Popup_Module_C_OnRepeat Parms{};

	Parms.BtnKey = BtnKey;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UIW_Popup_Module.UIW_Popup_Module_C.FocusManage
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// struct FPointerEvent                    MouseEvent                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FEventReply                      ReturnValue                                            (Parm, OutParm, ReturnParm)

struct FEventReply UUIW_Popup_Module_C::FocusManage(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIW_Popup_Module_C", "FocusManage");

	Params::UIW_Popup_Module_C_FocusManage Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.MouseEvent = std::move(MouseEvent);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function UIW_Popup_Module.UIW_Popup_Module_C.OnWheel
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Delta                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUIW_Popup_Module_C::OnWheel(float Delta)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIW_Popup_Module_C", "OnWheel");

	Params::UIW_Popup_Module_C_OnWheel Parms{};

	Parms.Delta = Delta;

	UObject::ProcessEvent(Func, &Parms);
}

}


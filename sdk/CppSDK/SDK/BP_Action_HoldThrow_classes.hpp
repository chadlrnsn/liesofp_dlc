#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Action_HoldThrow

#include "Basic.hpp"

#include "ProjectP_structs.hpp"
#include "ProjectP_classes.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Action_HoldThrow.BP_Action_HoldThrow_C
// 0x0018 (0x0270 - 0x0258)
class UBP_Action_HoldThrow_C final : public ULAction_LoopAnim
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0258(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class ULActPayload_UseItem*                   PayloadItem;                                       // 0x0260(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULItem*                                 BeforeItem;                                        // 0x0268(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_Action_HoldThrow(int32 EntryPoint);
	void ___t___0(class ULActMgrComponent* ActMgrComponent, class AActor* TargetActor, class FName Command, const struct FVector& Lever, bool SkipCommandPrerequisitiesCheck);
	void OnStop(class ULActBase* ReasonAction, class FName Reason);
	void OnCurrMontageEnded(class UAnimMontage* Montage, bool bInterrupted, int32 MontageInstanceID);
	void OnStart();
	bool OnPreProcessAction();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Action_HoldThrow_C">();
	}
	static class UBP_Action_HoldThrow_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_Action_HoldThrow_C>();
	}
};
static_assert(alignof(UBP_Action_HoldThrow_C) == 0x000008, "Wrong alignment on UBP_Action_HoldThrow_C");
static_assert(sizeof(UBP_Action_HoldThrow_C) == 0x000270, "Wrong size on UBP_Action_HoldThrow_C");
static_assert(offsetof(UBP_Action_HoldThrow_C, UberGraphFrame) == 0x000258, "Member 'UBP_Action_HoldThrow_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_Action_HoldThrow_C, PayloadItem) == 0x000260, "Member 'UBP_Action_HoldThrow_C::PayloadItem' has a wrong offset!");
static_assert(offsetof(UBP_Action_HoldThrow_C, BeforeItem) == 0x000268, "Member 'UBP_Action_HoldThrow_C::BeforeItem' has a wrong offset!");

}


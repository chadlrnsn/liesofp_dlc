#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UIBP_ListData_Achievement

#include "Basic.hpp"

#include "ProjectPContentInfo_structs.hpp"
#include "ProjectP_structs.hpp"
#include "CoreUObject_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass UIBP_ListData_Achievement.UIBP_ListData_Achievement_C
// 0x0098 (0x00C0 - 0x0028)
class UUIBP_ListData_Achievement_C final : public UObject
{
public:
	TArray<struct FAchievementDetailInfo>         DetailInfo;                                        // 0x0028(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FLAchievementHierarchyInfo             HierarchyInfo;                                     // 0x0038(0x0078)(Edit, BlueprintVisible, ExposeOnSpawn)
	FMulticastInlineDelegateProperty_             OnUpdateDispatcher;                                // 0x00B0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)

public:
	void OnUpdateDispatcher__DelegateSignature(class UUIBP_ListData_Achievement_C* Data);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"UIBP_ListData_Achievement_C">();
	}
	static class UUIBP_ListData_Achievement_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUIBP_ListData_Achievement_C>();
	}
};
static_assert(alignof(UUIBP_ListData_Achievement_C) == 0x000008, "Wrong alignment on UUIBP_ListData_Achievement_C");
static_assert(sizeof(UUIBP_ListData_Achievement_C) == 0x0000C0, "Wrong size on UUIBP_ListData_Achievement_C");
static_assert(offsetof(UUIBP_ListData_Achievement_C, DetailInfo) == 0x000028, "Member 'UUIBP_ListData_Achievement_C::DetailInfo' has a wrong offset!");
static_assert(offsetof(UUIBP_ListData_Achievement_C, HierarchyInfo) == 0x000038, "Member 'UUIBP_ListData_Achievement_C::HierarchyInfo' has a wrong offset!");
static_assert(offsetof(UUIBP_ListData_Achievement_C, OnUpdateDispatcher) == 0x0000B0, "Member 'UUIBP_ListData_Achievement_C::OnUpdateDispatcher' has a wrong offset!");

}


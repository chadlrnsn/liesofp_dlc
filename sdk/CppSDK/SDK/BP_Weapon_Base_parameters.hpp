#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Weapon_Base

#include "Basic.hpp"

#include "ProjectPContentInfo_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_Weapon_Base.BP_Weapon_Base_C.ExecuteUbergraph_BP_Weapon_Base
// 0x03C0 (0x03C0 - 0x0000)
struct BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_2;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7[0x1];                                        // 0x0007(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ULFXSystem*                             CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_5;                              // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22[0x2];                                       // 0x0022(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_DoesSocketExist_ReturnValue;              // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_DoesSocketExist_ReturnValue_1;            // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetSocketTransform_ReturnValue;           // 0x0030(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0060(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x006C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0078(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84[0xC];                                       // 0x0084(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetSocketTransform_ReturnValue_1;         // 0x0090(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_6;                              // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C1[0x3];                                       // 0x00C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakTransform_Location_1;                // 0x00C4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_1;                // 0x00D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_1;                   // 0x00DC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RandomPointInBoundingBox_ReturnValue;     // 0x00E8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x00F4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_7;                              // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_8;                              // 0x0109(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_9;                              // 0x010A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsNewBreakBlade_ReturnValue;              // 0x010B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsNewBreakBlade_ReturnValue_1;            // 0x010C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsNewBreakBlade_ReturnValue_2;            // 0x010D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_10;                             // 0x010E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_10F[0x1];                                      // 0x010F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_RandomPointInBoundingBox_ReturnValue_1;   // 0x0110(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue_1;         // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_11;                             // 0x0124(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_125[0x3];                                      // 0x0125(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_12;                             // 0x012C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12D[0x3];                                      // 0x012D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_RandomPointInBoundingBox_ReturnValue_2;   // 0x0130(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue_2;         // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default;                             // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_141[0x3];                                      // 0x0141(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_13;                             // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_149[0x7];                                      // 0x0149(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UNiagaraComponent*                      CallFunc_Array_Get_Item;                           // 0x0150(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_159[0x3];                                      // 0x0159(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x015C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_161[0x7];                                      // 0x0161(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UNiagaraComponent*                      CallFunc_Array_Get_Item_1;                         // 0x0168(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_171[0x3];                                      // 0x0171(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_14;                             // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_179[0x7];                                      // 0x0179(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UNiagaraComponent*                      CallFunc_Array_Get_Item_2;                         // 0x0180(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x018C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x018D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_15;                             // 0x018E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_16;                             // 0x018F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Select_Default_1;                           // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsNewBreakBlade_ReturnValue_3;            // 0x0191(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsNewBreakBlade_ReturnValue_4;            // 0x0192(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Select_Default_2;                           // 0x0193(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Select_Default_3;                           // 0x0194(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsNewBreakBlade_ReturnValue_5;            // 0x0195(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_17;                             // 0x0196(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_197[0x1];                                      // 0x0197(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_Event_BreakPointLocation;                   // 0x0198(0x000C)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_ImpulseDirection;                     // 0x01A4(0x000C)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x01B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x01BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x01C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue_1;                     // 0x01D4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_2;           // 0x01E0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_PlayCameraShake_ReturnValue;              // 0x01EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1ED[0x3];                                      // 0x01ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Normal_ReturnValue_2;                     // 0x01F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1FC[0x4];                                      // 0x01FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UNiagaraComponent*                      CallFunc_SpawnSystemAtLocation_ReturnValue;        // 0x0200(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetWeaponOwner_ReturnValue;               // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULActMgrComponent*                      CallFunc_GetActMgrComponent_ReturnValue;           // 0x0210(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULActBase*                              CallFunc_GetActionFromTable_ReturnValue;           // 0x0218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ProcessAction_ReturnValue;                // 0x0220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_IsApply;                              // 0x0221(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_222[0x2];                                      // 0x0222(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Event_AbnormalCodeName;                     // 0x0224(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsWeaponOn_ReturnValue;                   // 0x022C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22D[0x3];                                      // 0x022D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Event_MaterialFxCodename_1;                 // 0x0230(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Event_MaterialFxCodename;                   // 0x0238(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0240(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bOnOff;                               // 0x0244(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0245(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_246[0x2];                                      // 0x0246(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0248(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsRemoveAbnormalStateAfterBroken_ReturnValue; // 0x024C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsWeaponOn_ReturnValue_1;                 // 0x024D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x024E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_24F[0x1];                                      // 0x024F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UMeshComponent*>                 K2Node_MakeArray_Array;                            // 0x0250(0x0010)(ConstParm, ReferenceParm, ContainsInstancedReference)
	bool                                          Temp_bool_Variable_18;                             // 0x0260(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_261[0x3];                                      // 0x0261(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Event_ElementName_1;                        // 0x0264(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Event_ElementName;                          // 0x026C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0274(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue_1;        // 0x0275(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue;            // 0x0276(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_277[0x1];                                      // 0x0277(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class UNiagaraSystem*                         CallFunc_GetWeaponTrailElementFX_ReturnValue;      // 0x0278(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x0280(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x0281(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_19;                             // 0x0282(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Select_Default_4;                           // 0x0283(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0284(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_3;           // 0x0290(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMass_ReturnValue;                      // 0x029C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x02A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x02A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_1;    // 0x02B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_4;           // 0x02BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMass_ReturnValue_1;                    // 0x02C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x02CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x02D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetBrokenBladeOnBuild_ReturnValue;        // 0x02DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2DD[0x3];                                      // 0x02DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UMeshComponent*>                 CallFunc_GetWeaponMeshComponentsBySelectionType_OutComponents; // 0x02E0(0x0010)(ReferenceParm, ContainsInstancedReference)
	class ALWeapon*                               K2Node_Event_From;                                 // 0x02F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ALWeapon*                               K2Node_Event_To;                                   // 0x02F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_20;                             // 0x0300(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_301[0x7];                                      // 0x0301(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetWeaponOwner_ReturnValue_1;             // 0x0308(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_7;                    // 0x0310(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Select_Default_5;                           // 0x0311(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_312[0x6];                                      // 0x0312(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ALNPCCharacter*                         K2Node_DynamicCast_AsLNPCCharacter;                // 0x0318(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0320(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ExecuteWorldEvent_ReturnValue;            // 0x0321(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasBroken_ReturnValue;                    // 0x0322(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasBroken_ReturnValue_1;                  // 0x0323(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_324[0x4];                                      // 0x0324(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMeshComponent*                         K2Node_Select_Default_6;                           // 0x0328(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasBroken_ReturnValue_2;                  // 0x0330(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasBroken_ReturnValue_3;                  // 0x0331(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_332[0x6];                                      // 0x0332(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UMeshComponent*                         K2Node_Select_Default_7;                           // 0x0338(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsNewBreakBlade_ReturnValue_6;            // 0x0340(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_341[0x7];                                      // 0x0341(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        K2Node_Select_Default_8;                           // 0x0348(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_2;    // 0x0350(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35C[0x4];                                      // 0x035C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UNiagaraComponent*                      CallFunc_SpawnSystemAtLocation_ReturnValue_1;      // 0x0360(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_8;                    // 0x0368(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_9;                    // 0x0369(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue;         // 0x036A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36B[0x5];                                      // 0x036B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UMeshComponent*                         CallFunc_GetActiveMeshComponent_ReturnValue;       // 0x0370(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_3;    // 0x0378(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_10;                   // 0x0384(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_385[0x3];                                      // 0x0385(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_5;           // 0x0388(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_394[0x4];                                      // 0x0394(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMeshComponent*                         CallFunc_GetActiveMeshComponent_ReturnValue_1;     // 0x0398(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMass_ReturnValue_2;                    // 0x03A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_11;                   // 0x03A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A5[0x3];                                      // 0x03A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x03A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_2;       // 0x03AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base) == 0x000010, "Wrong alignment on BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base");
static_assert(sizeof(BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base) == 0x0003C0, "Wrong size on BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base");
static_assert(offsetof(BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base, EntryPoint) == 0x000000, "Member 'BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base, Temp_bool_Variable) == 0x000004, "Member 'BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base, Temp_bool_Variable_1) == 0x000005, "Member 'BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base, Temp_bool_Variable_2) == 0x000006, "Member 'BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base, Temp_int_Array_Index_Variable) == 0x000010, "Member 'BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base, Temp_bool_Variable_3) == 0x000014, "Member 'BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000018, "Member 'BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base, Temp_bool_Variable_4) == 0x000020, "Member 'BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base, Temp_bool_Variable_5) == 0x000021, "Member 'BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base::Temp_bool_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base, Temp_int_Array_Index_Variable_1) == 0x000024, "Member 'BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base, CallFunc_DoesSocketExist_ReturnValue) == 0x000029, "Member 'BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base::CallFunc_DoesSocketExist_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base, CallFunc_DoesSocketExist_ReturnValue_1) == 0x00002A, "Member 'BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base::CallFunc_DoesSocketExist_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base, CallFunc_BooleanAND_ReturnValue) == 0x00002B, "Member 'BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base, CallFunc_GetSocketTransform_ReturnValue) == 0x000030, "Member 'BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base::CallFunc_GetSocketTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base, CallFunc_BreakTransform_Location) == 0x000060, "Member 'BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base, CallFunc_BreakTransform_Rotation) == 0x00006C, "Member 'BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base, CallFunc_BreakTransform_Scale) == 0x000078, "Member 'BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base, CallFunc_GetSocketTransform_ReturnValue_1) == 0x000090, "Member 'BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base::CallFunc_GetSocketTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base, Temp_bool_Variable_6) == 0x0000C0, "Member 'BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base::Temp_bool_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base, CallFunc_BreakTransform_Location_1) == 0x0000C4, "Member 'BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base::CallFunc_BreakTransform_Location_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base, CallFunc_BreakTransform_Rotation_1) == 0x0000D0, "Member 'BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base::CallFunc_BreakTransform_Rotation_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base, CallFunc_BreakTransform_Scale_1) == 0x0000DC, "Member 'BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base::CallFunc_BreakTransform_Scale_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base, CallFunc_RandomPointInBoundingBox_ReturnValue) == 0x0000E8, "Member 'BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base::CallFunc_RandomPointInBoundingBox_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base, CallFunc_Subtract_VectorVector_ReturnValue) == 0x0000F4, "Member 'BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base, CallFunc_RandomFloatInRange_ReturnValue) == 0x000100, "Member 'BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base, CallFunc_VSize_ReturnValue) == 0x000104, "Member 'BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base, Temp_bool_Variable_7) == 0x000108, "Member 'BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base::Temp_bool_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base, Temp_bool_Variable_8) == 0x000109, "Member 'BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base::Temp_bool_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base, Temp_bool_Variable_9) == 0x00010A, "Member 'BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base::Temp_bool_Variable_9' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base, CallFunc_IsNewBreakBlade_ReturnValue) == 0x00010B, "Member 'BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base::CallFunc_IsNewBreakBlade_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base, CallFunc_IsNewBreakBlade_ReturnValue_1) == 0x00010C, "Member 'BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base::CallFunc_IsNewBreakBlade_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base, CallFunc_IsNewBreakBlade_ReturnValue_2) == 0x00010D, "Member 'BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base::CallFunc_IsNewBreakBlade_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base, Temp_bool_Variable_10) == 0x00010E, "Member 'BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base::Temp_bool_Variable_10' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base, CallFunc_RandomPointInBoundingBox_ReturnValue_1) == 0x000110, "Member 'BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base::CallFunc_RandomPointInBoundingBox_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base, CallFunc_RandomFloatInRange_ReturnValue_1) == 0x00011C, "Member 'BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base::CallFunc_RandomFloatInRange_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base, Temp_int_Loop_Counter_Variable_1) == 0x000120, "Member 'BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base, Temp_bool_Variable_11) == 0x000124, "Member 'BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base::Temp_bool_Variable_11' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base, CallFunc_Add_IntInt_ReturnValue_1) == 0x000128, "Member 'BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base, Temp_bool_Variable_12) == 0x00012C, "Member 'BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base::Temp_bool_Variable_12' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base, CallFunc_RandomPointInBoundingBox_ReturnValue_2) == 0x000130, "Member 'BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base::CallFunc_RandomPointInBoundingBox_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base, CallFunc_RandomFloatInRange_ReturnValue_2) == 0x00013C, "Member 'BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base::CallFunc_RandomFloatInRange_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base, K2Node_Select_Default) == 0x000140, "Member 'BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base, Temp_int_Array_Index_Variable_2) == 0x000144, "Member 'BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base, Temp_bool_Variable_13) == 0x000148, "Member 'BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base::Temp_bool_Variable_13' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base, CallFunc_Array_Get_Item) == 0x000150, "Member 'BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base, CallFunc_IsValid_ReturnValue_1) == 0x000158, "Member 'BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base, CallFunc_Array_Length_ReturnValue) == 0x00015C, "Member 'BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base, CallFunc_Less_IntInt_ReturnValue) == 0x000160, "Member 'BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base, CallFunc_Array_Get_Item_1) == 0x000168, "Member 'BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base, CallFunc_IsValid_ReturnValue_2) == 0x000170, "Member 'BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base, CallFunc_Array_Length_ReturnValue_1) == 0x000174, "Member 'BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base, Temp_bool_Variable_14) == 0x000178, "Member 'BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base::Temp_bool_Variable_14' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base, CallFunc_Array_Get_Item_2) == 0x000180, "Member 'BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base, CallFunc_Array_Length_ReturnValue_2) == 0x000188, "Member 'BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base, CallFunc_IsValid_ReturnValue_3) == 0x00018C, "Member 'BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base, CallFunc_Less_IntInt_ReturnValue_1) == 0x00018D, "Member 'BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base, Temp_bool_Variable_15) == 0x00018E, "Member 'BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base::Temp_bool_Variable_15' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base, Temp_bool_Variable_16) == 0x00018F, "Member 'BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base::Temp_bool_Variable_16' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base, K2Node_Select_Default_1) == 0x000190, "Member 'BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base, CallFunc_IsNewBreakBlade_ReturnValue_3) == 0x000191, "Member 'BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base::CallFunc_IsNewBreakBlade_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base, CallFunc_IsNewBreakBlade_ReturnValue_4) == 0x000192, "Member 'BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base::CallFunc_IsNewBreakBlade_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base, K2Node_Select_Default_2) == 0x000193, "Member 'BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base, K2Node_Select_Default_3) == 0x000194, "Member 'BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base, CallFunc_IsNewBreakBlade_ReturnValue_5) == 0x000195, "Member 'BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base::CallFunc_IsNewBreakBlade_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base, Temp_bool_Variable_17) == 0x000196, "Member 'BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base::Temp_bool_Variable_17' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base, K2Node_Event_BreakPointLocation) == 0x000198, "Member 'BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base::K2Node_Event_BreakPointLocation' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base, K2Node_Event_ImpulseDirection) == 0x0001A4, "Member 'BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base::K2Node_Event_ImpulseDirection' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base, CallFunc_Add_VectorVector_ReturnValue) == 0x0001B0, "Member 'BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base, CallFunc_Add_VectorVector_ReturnValue_1) == 0x0001BC, "Member 'BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base, CallFunc_Normal_ReturnValue) == 0x0001C8, "Member 'BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base, CallFunc_Normal_ReturnValue_1) == 0x0001D4, "Member 'BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base::CallFunc_Normal_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base, CallFunc_Add_VectorVector_ReturnValue_2) == 0x0001E0, "Member 'BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base::CallFunc_Add_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base, CallFunc_PlayCameraShake_ReturnValue) == 0x0001EC, "Member 'BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base::CallFunc_PlayCameraShake_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base, CallFunc_Normal_ReturnValue_2) == 0x0001F0, "Member 'BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base::CallFunc_Normal_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base, CallFunc_SpawnSystemAtLocation_ReturnValue) == 0x000200, "Member 'BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base::CallFunc_SpawnSystemAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base, CallFunc_GetWeaponOwner_ReturnValue) == 0x000208, "Member 'BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base::CallFunc_GetWeaponOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base, CallFunc_GetActMgrComponent_ReturnValue) == 0x000210, "Member 'BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base::CallFunc_GetActMgrComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base, CallFunc_GetActionFromTable_ReturnValue) == 0x000218, "Member 'BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base::CallFunc_GetActionFromTable_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base, CallFunc_ProcessAction_ReturnValue) == 0x000220, "Member 'BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base::CallFunc_ProcessAction_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base, K2Node_Event_IsApply) == 0x000221, "Member 'BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base::K2Node_Event_IsApply' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base, K2Node_Event_AbnormalCodeName) == 0x000224, "Member 'BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base::K2Node_Event_AbnormalCodeName' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base, CallFunc_IsWeaponOn_ReturnValue) == 0x00022C, "Member 'BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base::CallFunc_IsWeaponOn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base, K2Node_Event_MaterialFxCodename_1) == 0x000230, "Member 'BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base::K2Node_Event_MaterialFxCodename_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base, K2Node_Event_MaterialFxCodename) == 0x000238, "Member 'BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base::K2Node_Event_MaterialFxCodename' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base, Temp_int_Loop_Counter_Variable_2) == 0x000240, "Member 'BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base, K2Node_Event_bOnOff) == 0x000244, "Member 'BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base::K2Node_Event_bOnOff' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base, CallFunc_Less_IntInt_ReturnValue_2) == 0x000245, "Member 'BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base, CallFunc_Add_IntInt_ReturnValue_2) == 0x000248, "Member 'BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base, CallFunc_IsRemoveAbnormalStateAfterBroken_ReturnValue) == 0x00024C, "Member 'BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base::CallFunc_IsRemoveAbnormalStateAfterBroken_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base, CallFunc_IsWeaponOn_ReturnValue_1) == 0x00024D, "Member 'BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base::CallFunc_IsWeaponOn_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base, CallFunc_IsValid_ReturnValue_4) == 0x00024E, "Member 'BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base, K2Node_MakeArray_Array) == 0x000250, "Member 'BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base, Temp_bool_Variable_18) == 0x000260, "Member 'BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base::Temp_bool_Variable_18' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base, K2Node_Event_ElementName_1) == 0x000264, "Member 'BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base::K2Node_Event_ElementName_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base, K2Node_Event_ElementName) == 0x00026C, "Member 'BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base::K2Node_Event_ElementName' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000274, "Member 'BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base, CallFunc_EqualEqual_NameName_ReturnValue_1) == 0x000275, "Member 'BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base::CallFunc_EqualEqual_NameName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base, CallFunc_NotEqual_NameName_ReturnValue) == 0x000276, "Member 'BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base::CallFunc_NotEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base, CallFunc_GetWeaponTrailElementFX_ReturnValue) == 0x000278, "Member 'BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base::CallFunc_GetWeaponTrailElementFX_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base, CallFunc_IsValid_ReturnValue_5) == 0x000280, "Member 'BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base, CallFunc_IsValid_ReturnValue_6) == 0x000281, "Member 'BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base, Temp_bool_Variable_19) == 0x000282, "Member 'BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base::Temp_bool_Variable_19' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base, K2Node_Select_Default_4) == 0x000283, "Member 'BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000284, "Member 'BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base, CallFunc_Add_VectorVector_ReturnValue_3) == 0x000290, "Member 'BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base::CallFunc_Add_VectorVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base, CallFunc_GetMass_ReturnValue) == 0x00029C, "Member 'BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base::CallFunc_GetMass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0002A0, "Member 'BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0002A4, "Member 'BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base, CallFunc_K2_GetComponentLocation_ReturnValue_1) == 0x0002B0, "Member 'BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base::CallFunc_K2_GetComponentLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base, CallFunc_Add_VectorVector_ReturnValue_4) == 0x0002BC, "Member 'BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base::CallFunc_Add_VectorVector_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base, CallFunc_GetMass_ReturnValue_1) == 0x0002C8, "Member 'BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base::CallFunc_GetMass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x0002CC, "Member 'BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x0002D0, "Member 'BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base, CallFunc_GetBrokenBladeOnBuild_ReturnValue) == 0x0002DC, "Member 'BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base::CallFunc_GetBrokenBladeOnBuild_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base, CallFunc_GetWeaponMeshComponentsBySelectionType_OutComponents) == 0x0002E0, "Member 'BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base::CallFunc_GetWeaponMeshComponentsBySelectionType_OutComponents' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base, K2Node_Event_From) == 0x0002F0, "Member 'BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base::K2Node_Event_From' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base, K2Node_Event_To) == 0x0002F8, "Member 'BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base::K2Node_Event_To' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base, Temp_bool_Variable_20) == 0x000300, "Member 'BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base::Temp_bool_Variable_20' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base, CallFunc_GetWeaponOwner_ReturnValue_1) == 0x000308, "Member 'BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base::CallFunc_GetWeaponOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base, CallFunc_IsValid_ReturnValue_7) == 0x000310, "Member 'BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base::CallFunc_IsValid_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base, K2Node_Select_Default_5) == 0x000311, "Member 'BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base::K2Node_Select_Default_5' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base, K2Node_DynamicCast_AsLNPCCharacter) == 0x000318, "Member 'BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base::K2Node_DynamicCast_AsLNPCCharacter' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base, K2Node_DynamicCast_bSuccess) == 0x000320, "Member 'BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base, CallFunc_ExecuteWorldEvent_ReturnValue) == 0x000321, "Member 'BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base::CallFunc_ExecuteWorldEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base, CallFunc_HasBroken_ReturnValue) == 0x000322, "Member 'BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base::CallFunc_HasBroken_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base, CallFunc_HasBroken_ReturnValue_1) == 0x000323, "Member 'BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base::CallFunc_HasBroken_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base, K2Node_Select_Default_6) == 0x000328, "Member 'BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base::K2Node_Select_Default_6' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base, CallFunc_HasBroken_ReturnValue_2) == 0x000330, "Member 'BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base::CallFunc_HasBroken_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base, CallFunc_HasBroken_ReturnValue_3) == 0x000331, "Member 'BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base::CallFunc_HasBroken_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base, K2Node_Select_Default_7) == 0x000338, "Member 'BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base::K2Node_Select_Default_7' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base, CallFunc_IsNewBreakBlade_ReturnValue_6) == 0x000340, "Member 'BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base::CallFunc_IsNewBreakBlade_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base, K2Node_Select_Default_8) == 0x000348, "Member 'BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base::K2Node_Select_Default_8' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base, CallFunc_K2_GetComponentLocation_ReturnValue_2) == 0x000350, "Member 'BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base::CallFunc_K2_GetComponentLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base, CallFunc_SpawnSystemAtLocation_ReturnValue_1) == 0x000360, "Member 'BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base::CallFunc_SpawnSystemAtLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base, CallFunc_IsValid_ReturnValue_8) == 0x000368, "Member 'BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base::CallFunc_IsValid_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base, CallFunc_IsValid_ReturnValue_9) == 0x000369, "Member 'BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base::CallFunc_IsValid_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base, CallFunc_K2_AttachToComponent_ReturnValue) == 0x00036A, "Member 'BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base::CallFunc_K2_AttachToComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base, CallFunc_GetActiveMeshComponent_ReturnValue) == 0x000370, "Member 'BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base::CallFunc_GetActiveMeshComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base, CallFunc_K2_GetComponentLocation_ReturnValue_3) == 0x000378, "Member 'BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base::CallFunc_K2_GetComponentLocation_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base, CallFunc_IsValid_ReturnValue_10) == 0x000384, "Member 'BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base::CallFunc_IsValid_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base, CallFunc_Add_VectorVector_ReturnValue_5) == 0x000388, "Member 'BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base::CallFunc_Add_VectorVector_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base, CallFunc_GetActiveMeshComponent_ReturnValue_1) == 0x000398, "Member 'BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base::CallFunc_GetActiveMeshComponent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base, CallFunc_GetMass_ReturnValue_2) == 0x0003A0, "Member 'BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base::CallFunc_GetMass_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base, CallFunc_IsValid_ReturnValue_11) == 0x0003A4, "Member 'BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base::CallFunc_IsValid_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x0003A8, "Member 'BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base, CallFunc_Multiply_VectorFloat_ReturnValue_2) == 0x0003AC, "Member 'BP_Weapon_Base_C_ExecuteUbergraph_BP_Weapon_Base::CallFunc_Multiply_VectorFloat_ReturnValue_2' has a wrong offset!");

// Function BP_Weapon_Base.BP_Weapon_Base_C.OnWeaponChanged
// 0x0010 (0x0010 - 0x0000)
struct BP_Weapon_Base_C_OnWeaponChanged final
{
public:
	class ALWeapon*                               From;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ALWeapon*                               To;                                                // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Weapon_Base_C_OnWeaponChanged) == 0x000008, "Wrong alignment on BP_Weapon_Base_C_OnWeaponChanged");
static_assert(sizeof(BP_Weapon_Base_C_OnWeaponChanged) == 0x000010, "Wrong size on BP_Weapon_Base_C_OnWeaponChanged");
static_assert(offsetof(BP_Weapon_Base_C_OnWeaponChanged, From) == 0x000000, "Member 'BP_Weapon_Base_C_OnWeaponChanged::From' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_OnWeaponChanged, To) == 0x000008, "Member 'BP_Weapon_Base_C_OnWeaponChanged::To' has a wrong offset!");

// Function BP_Weapon_Base.BP_Weapon_Base_C.RemoveElement
// 0x0008 (0x0008 - 0x0000)
struct BP_Weapon_Base_C_RemoveElement final
{
public:
	class FName                                   ElementName;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Weapon_Base_C_RemoveElement) == 0x000004, "Wrong alignment on BP_Weapon_Base_C_RemoveElement");
static_assert(sizeof(BP_Weapon_Base_C_RemoveElement) == 0x000008, "Wrong size on BP_Weapon_Base_C_RemoveElement");
static_assert(offsetof(BP_Weapon_Base_C_RemoveElement, ElementName) == 0x000000, "Member 'BP_Weapon_Base_C_RemoveElement::ElementName' has a wrong offset!");

// Function BP_Weapon_Base.BP_Weapon_Base_C.ApplyElement
// 0x0008 (0x0008 - 0x0000)
struct BP_Weapon_Base_C_ApplyElement final
{
public:
	class FName                                   ElementName;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Weapon_Base_C_ApplyElement) == 0x000004, "Wrong alignment on BP_Weapon_Base_C_ApplyElement");
static_assert(sizeof(BP_Weapon_Base_C_ApplyElement) == 0x000008, "Wrong size on BP_Weapon_Base_C_ApplyElement");
static_assert(offsetof(BP_Weapon_Base_C_ApplyElement, ElementName) == 0x000000, "Member 'BP_Weapon_Base_C_ApplyElement::ElementName' has a wrong offset!");

// Function BP_Weapon_Base.BP_Weapon_Base_C.OnWeaponOnOff
// 0x0001 (0x0001 - 0x0000)
struct BP_Weapon_Base_C_OnWeaponOnOff final
{
public:
	bool                                          bOnOff;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Weapon_Base_C_OnWeaponOnOff) == 0x000001, "Wrong alignment on BP_Weapon_Base_C_OnWeaponOnOff");
static_assert(sizeof(BP_Weapon_Base_C_OnWeaponOnOff) == 0x000001, "Wrong size on BP_Weapon_Base_C_OnWeaponOnOff");
static_assert(offsetof(BP_Weapon_Base_C_OnWeaponOnOff, bOnOff) == 0x000000, "Member 'BP_Weapon_Base_C_OnWeaponOnOff::bOnOff' has a wrong offset!");

// Function BP_Weapon_Base.BP_Weapon_Base_C.RemoveMaterialVarying
// 0x0008 (0x0008 - 0x0000)
struct BP_Weapon_Base_C_RemoveMaterialVarying final
{
public:
	class FName                                   MaterialFxCodename;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Weapon_Base_C_RemoveMaterialVarying) == 0x000004, "Wrong alignment on BP_Weapon_Base_C_RemoveMaterialVarying");
static_assert(sizeof(BP_Weapon_Base_C_RemoveMaterialVarying) == 0x000008, "Wrong size on BP_Weapon_Base_C_RemoveMaterialVarying");
static_assert(offsetof(BP_Weapon_Base_C_RemoveMaterialVarying, MaterialFxCodename) == 0x000000, "Member 'BP_Weapon_Base_C_RemoveMaterialVarying::MaterialFxCodename' has a wrong offset!");

// Function BP_Weapon_Base.BP_Weapon_Base_C.ApplyMaterialVarying
// 0x0008 (0x0008 - 0x0000)
struct BP_Weapon_Base_C_ApplyMaterialVarying final
{
public:
	class FName                                   MaterialFxCodename;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Weapon_Base_C_ApplyMaterialVarying) == 0x000004, "Wrong alignment on BP_Weapon_Base_C_ApplyMaterialVarying");
static_assert(sizeof(BP_Weapon_Base_C_ApplyMaterialVarying) == 0x000008, "Wrong size on BP_Weapon_Base_C_ApplyMaterialVarying");
static_assert(offsetof(BP_Weapon_Base_C_ApplyMaterialVarying, MaterialFxCodename) == 0x000000, "Member 'BP_Weapon_Base_C_ApplyMaterialVarying::MaterialFxCodename' has a wrong offset!");

// Function BP_Weapon_Base.BP_Weapon_Base_C.OnApplyRunningAbnormal
// 0x000C (0x000C - 0x0000)
struct BP_Weapon_Base_C_OnApplyRunningAbnormal final
{
public:
	bool                                          IsApply;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   AbnormalCodeName;                                  // 0x0004(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Weapon_Base_C_OnApplyRunningAbnormal) == 0x000004, "Wrong alignment on BP_Weapon_Base_C_OnApplyRunningAbnormal");
static_assert(sizeof(BP_Weapon_Base_C_OnApplyRunningAbnormal) == 0x00000C, "Wrong size on BP_Weapon_Base_C_OnApplyRunningAbnormal");
static_assert(offsetof(BP_Weapon_Base_C_OnApplyRunningAbnormal, IsApply) == 0x000000, "Member 'BP_Weapon_Base_C_OnApplyRunningAbnormal::IsApply' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_OnApplyRunningAbnormal, AbnormalCodeName) == 0x000004, "Member 'BP_Weapon_Base_C_OnApplyRunningAbnormal::AbnormalCodeName' has a wrong offset!");

// Function BP_Weapon_Base.BP_Weapon_Base_C.OnBreakBlade
// 0x0018 (0x0018 - 0x0000)
struct BP_Weapon_Base_C_OnBreakBlade final
{
public:
	struct FVector                                BreakPointLocation;                                // 0x0000(0x000C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ImpulseDirection;                                  // 0x000C(0x000C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Weapon_Base_C_OnBreakBlade) == 0x000004, "Wrong alignment on BP_Weapon_Base_C_OnBreakBlade");
static_assert(sizeof(BP_Weapon_Base_C_OnBreakBlade) == 0x000018, "Wrong size on BP_Weapon_Base_C_OnBreakBlade");
static_assert(offsetof(BP_Weapon_Base_C_OnBreakBlade, BreakPointLocation) == 0x000000, "Member 'BP_Weapon_Base_C_OnBreakBlade::BreakPointLocation' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_OnBreakBlade, ImpulseDirection) == 0x00000C, "Member 'BP_Weapon_Base_C_OnBreakBlade::ImpulseDirection' has a wrong offset!");

// Function BP_Weapon_Base.BP_Weapon_Base_C.UserConstructionScript
// 0x0960 (0x0960 - 0x0000)
struct BP_Weapon_Base_C_UserConstructionScript final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_2;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_3;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_4;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_5;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_6;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_7;                              // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_8;                              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_9;                              // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_10;                             // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_11;                             // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_12;                             // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_13;                             // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_14;                             // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_15;                             // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_16;                             // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_17;                             // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue_1;        // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue_2;        // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsNewBreakBlade_ReturnValue;              // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsNewBreakBlade_ReturnValue_1;            // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsNewBreakBlade_ReturnValue_2;            // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_18;                             // 0x0033(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsNewBreakBlade_ReturnValue_3;            // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsNewBreakBlade_ReturnValue_4;            // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Select_Default;                             // 0x0036(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Select_Default_1;                           // 0x0037(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsNewBreakBlade_ReturnValue_5;            // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Select_Default_2;                           // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsNewBreakBlade_ReturnValue_6;            // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsNewBreakBlade_ReturnValue_7;            // 0x003B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Select_Default_3;                           // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Select_Default_4;                           // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsNewBreakBlade_ReturnValue_8;            // 0x003E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_19;                             // 0x003F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Select_Default_5;                           // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_20;                             // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_21;                             // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Select_Default_6;                           // 0x0043(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_22;                             // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_23;                             // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_24;                             // 0x0046(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Select_Default_7;                           // 0x0047(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue;         // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue_1;       // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue_2;       // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4B[0x5];                                       // 0x004B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetSocketTransform_ReturnValue;           // 0x0050(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_GetSocketTransform_ReturnValue_1;         // 0x0080(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x00B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x00BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x00C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D4[0xC];                                       // 0x00D4(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_InvertTransform_ReturnValue;              // 0x00E0(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0110(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeTransform_SweepHitResult;   // 0x011C(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult;    // 0x01A4(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_DoesSocketExist_ReturnValue;              // 0x022C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_DoesSocketExist_ReturnValue_1;            // 0x022D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22E[0x2];                                      // 0x022E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0230(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0240(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetSocketTransform_ReturnValue_2;         // 0x0250(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location_1;                // 0x0280(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_1;                // 0x028C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_1;                   // 0x0298(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeLocationAndRotation_SweepHitResult; // 0x02A4(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	uint8                                         Pad_32C[0x4];                                      // 0x032C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDisplayName_ReturnValue_1;             // 0x0330(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0340(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeLocationAndRotation_SweepHitResult_1; // 0x0350(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FHitResult                             CallFunc_K2_SetRelativeLocationAndRotation_SweepHitResult_2; // 0x03D8(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FHitResult                             CallFunc_K2_SetRelativeLocationAndRotation_SweepHitResult_3; // 0x0460(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          Temp_bool_Variable_25;                             // 0x04E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue_3;       // 0x04E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4EA[0x2];                                      // 0x04EA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetRelativeLocationAndRotation_SweepHitResult_4; // 0x04EC(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_HasBroken_ReturnValue;                    // 0x0574(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0575(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0576(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_26;                             // 0x0577(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Select_Default_8;                           // 0x0578(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_579[0x7];                                      // 0x0579(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDisplayName_ReturnValue_2;             // 0x0580(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0590(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoesSocketExist_ReturnValue_2;            // 0x05A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x05A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x05A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue_4;       // 0x05A3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue_5;       // 0x05A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5A5[0xB];                                      // 0x05A5(0x000B)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetSocketTransform_ReturnValue_3;         // 0x05B0(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location_2;                // 0x05E0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_2;                // 0x05EC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_2;                   // 0x05F8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_604[0xC];                                      // 0x0604(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetSocketTransform_ReturnValue_4;         // 0x0610(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x0640(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64C[0x4];                                      // 0x064C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_InvertTransform_ReturnValue_1;            // 0x0650(0x0030)(IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult_1;  // 0x0680(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FHitResult                             CallFunc_K2_SetRelativeTransform_SweepHitResult_1; // 0x0708(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FTransform                             CallFunc_GetSocketTransform_ReturnValue_5;         // 0x0790(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_GetSocketTransform_ReturnValue_6;         // 0x07C0(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_InvertTransform_ReturnValue_2;            // 0x07F0(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location_3;                // 0x0820(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_3;                // 0x082C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_3;                   // 0x0838(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeTransform_SweepHitResult_2; // 0x0844(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_2;       // 0x08CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult_2;  // 0x08D8(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_Weapon_Base_C_UserConstructionScript) == 0x000010, "Wrong alignment on BP_Weapon_Base_C_UserConstructionScript");
static_assert(sizeof(BP_Weapon_Base_C_UserConstructionScript) == 0x000960, "Wrong size on BP_Weapon_Base_C_UserConstructionScript");
static_assert(offsetof(BP_Weapon_Base_C_UserConstructionScript, Temp_bool_Variable) == 0x000000, "Member 'BP_Weapon_Base_C_UserConstructionScript::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_UserConstructionScript, Temp_bool_Variable_1) == 0x000001, "Member 'BP_Weapon_Base_C_UserConstructionScript::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_UserConstructionScript, Temp_bool_Variable_2) == 0x000002, "Member 'BP_Weapon_Base_C_UserConstructionScript::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_UserConstructionScript, Temp_bool_Variable_3) == 0x000003, "Member 'BP_Weapon_Base_C_UserConstructionScript::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_UserConstructionScript, Temp_bool_Variable_4) == 0x000004, "Member 'BP_Weapon_Base_C_UserConstructionScript::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_UserConstructionScript, Temp_bool_Variable_5) == 0x000005, "Member 'BP_Weapon_Base_C_UserConstructionScript::Temp_bool_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_UserConstructionScript, Temp_bool_Variable_6) == 0x000006, "Member 'BP_Weapon_Base_C_UserConstructionScript::Temp_bool_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_UserConstructionScript, Temp_bool_Variable_7) == 0x000007, "Member 'BP_Weapon_Base_C_UserConstructionScript::Temp_bool_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_UserConstructionScript, Temp_bool_Variable_8) == 0x000008, "Member 'BP_Weapon_Base_C_UserConstructionScript::Temp_bool_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_UserConstructionScript, Temp_bool_Variable_9) == 0x000009, "Member 'BP_Weapon_Base_C_UserConstructionScript::Temp_bool_Variable_9' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_UserConstructionScript, Temp_bool_Variable_10) == 0x00000A, "Member 'BP_Weapon_Base_C_UserConstructionScript::Temp_bool_Variable_10' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_UserConstructionScript, Temp_bool_Variable_11) == 0x00000B, "Member 'BP_Weapon_Base_C_UserConstructionScript::Temp_bool_Variable_11' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_UserConstructionScript, Temp_bool_Variable_12) == 0x00000C, "Member 'BP_Weapon_Base_C_UserConstructionScript::Temp_bool_Variable_12' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_UserConstructionScript, Temp_bool_Variable_13) == 0x00000D, "Member 'BP_Weapon_Base_C_UserConstructionScript::Temp_bool_Variable_13' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_UserConstructionScript, Temp_bool_Variable_14) == 0x00000E, "Member 'BP_Weapon_Base_C_UserConstructionScript::Temp_bool_Variable_14' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_UserConstructionScript, Temp_bool_Variable_15) == 0x00000F, "Member 'BP_Weapon_Base_C_UserConstructionScript::Temp_bool_Variable_15' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_UserConstructionScript, Temp_bool_Variable_16) == 0x000010, "Member 'BP_Weapon_Base_C_UserConstructionScript::Temp_bool_Variable_16' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_UserConstructionScript, Temp_bool_Variable_17) == 0x000011, "Member 'BP_Weapon_Base_C_UserConstructionScript::Temp_bool_Variable_17' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_UserConstructionScript, CallFunc_K2_GetRootComponent_ReturnValue) == 0x000018, "Member 'BP_Weapon_Base_C_UserConstructionScript::CallFunc_K2_GetRootComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_UserConstructionScript, CallFunc_K2_GetRootComponent_ReturnValue_1) == 0x000020, "Member 'BP_Weapon_Base_C_UserConstructionScript::CallFunc_K2_GetRootComponent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_UserConstructionScript, CallFunc_K2_GetRootComponent_ReturnValue_2) == 0x000028, "Member 'BP_Weapon_Base_C_UserConstructionScript::CallFunc_K2_GetRootComponent_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_UserConstructionScript, CallFunc_IsNewBreakBlade_ReturnValue) == 0x000030, "Member 'BP_Weapon_Base_C_UserConstructionScript::CallFunc_IsNewBreakBlade_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_UserConstructionScript, CallFunc_IsNewBreakBlade_ReturnValue_1) == 0x000031, "Member 'BP_Weapon_Base_C_UserConstructionScript::CallFunc_IsNewBreakBlade_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_UserConstructionScript, CallFunc_IsNewBreakBlade_ReturnValue_2) == 0x000032, "Member 'BP_Weapon_Base_C_UserConstructionScript::CallFunc_IsNewBreakBlade_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_UserConstructionScript, Temp_bool_Variable_18) == 0x000033, "Member 'BP_Weapon_Base_C_UserConstructionScript::Temp_bool_Variable_18' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_UserConstructionScript, CallFunc_IsNewBreakBlade_ReturnValue_3) == 0x000034, "Member 'BP_Weapon_Base_C_UserConstructionScript::CallFunc_IsNewBreakBlade_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_UserConstructionScript, CallFunc_IsNewBreakBlade_ReturnValue_4) == 0x000035, "Member 'BP_Weapon_Base_C_UserConstructionScript::CallFunc_IsNewBreakBlade_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_UserConstructionScript, K2Node_Select_Default) == 0x000036, "Member 'BP_Weapon_Base_C_UserConstructionScript::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_UserConstructionScript, K2Node_Select_Default_1) == 0x000037, "Member 'BP_Weapon_Base_C_UserConstructionScript::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_UserConstructionScript, CallFunc_IsNewBreakBlade_ReturnValue_5) == 0x000038, "Member 'BP_Weapon_Base_C_UserConstructionScript::CallFunc_IsNewBreakBlade_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_UserConstructionScript, K2Node_Select_Default_2) == 0x000039, "Member 'BP_Weapon_Base_C_UserConstructionScript::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_UserConstructionScript, CallFunc_IsNewBreakBlade_ReturnValue_6) == 0x00003A, "Member 'BP_Weapon_Base_C_UserConstructionScript::CallFunc_IsNewBreakBlade_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_UserConstructionScript, CallFunc_IsNewBreakBlade_ReturnValue_7) == 0x00003B, "Member 'BP_Weapon_Base_C_UserConstructionScript::CallFunc_IsNewBreakBlade_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_UserConstructionScript, K2Node_Select_Default_3) == 0x00003C, "Member 'BP_Weapon_Base_C_UserConstructionScript::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_UserConstructionScript, K2Node_Select_Default_4) == 0x00003D, "Member 'BP_Weapon_Base_C_UserConstructionScript::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_UserConstructionScript, CallFunc_IsNewBreakBlade_ReturnValue_8) == 0x00003E, "Member 'BP_Weapon_Base_C_UserConstructionScript::CallFunc_IsNewBreakBlade_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_UserConstructionScript, Temp_bool_Variable_19) == 0x00003F, "Member 'BP_Weapon_Base_C_UserConstructionScript::Temp_bool_Variable_19' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_UserConstructionScript, K2Node_Select_Default_5) == 0x000040, "Member 'BP_Weapon_Base_C_UserConstructionScript::K2Node_Select_Default_5' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_UserConstructionScript, Temp_bool_Variable_20) == 0x000041, "Member 'BP_Weapon_Base_C_UserConstructionScript::Temp_bool_Variable_20' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_UserConstructionScript, Temp_bool_Variable_21) == 0x000042, "Member 'BP_Weapon_Base_C_UserConstructionScript::Temp_bool_Variable_21' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_UserConstructionScript, K2Node_Select_Default_6) == 0x000043, "Member 'BP_Weapon_Base_C_UserConstructionScript::K2Node_Select_Default_6' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_UserConstructionScript, Temp_bool_Variable_22) == 0x000044, "Member 'BP_Weapon_Base_C_UserConstructionScript::Temp_bool_Variable_22' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_UserConstructionScript, Temp_bool_Variable_23) == 0x000045, "Member 'BP_Weapon_Base_C_UserConstructionScript::Temp_bool_Variable_23' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_UserConstructionScript, Temp_bool_Variable_24) == 0x000046, "Member 'BP_Weapon_Base_C_UserConstructionScript::Temp_bool_Variable_24' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_UserConstructionScript, K2Node_Select_Default_7) == 0x000047, "Member 'BP_Weapon_Base_C_UserConstructionScript::K2Node_Select_Default_7' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_UserConstructionScript, CallFunc_K2_AttachToComponent_ReturnValue) == 0x000048, "Member 'BP_Weapon_Base_C_UserConstructionScript::CallFunc_K2_AttachToComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_UserConstructionScript, CallFunc_K2_AttachToComponent_ReturnValue_1) == 0x000049, "Member 'BP_Weapon_Base_C_UserConstructionScript::CallFunc_K2_AttachToComponent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_UserConstructionScript, CallFunc_K2_AttachToComponent_ReturnValue_2) == 0x00004A, "Member 'BP_Weapon_Base_C_UserConstructionScript::CallFunc_K2_AttachToComponent_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_UserConstructionScript, CallFunc_GetSocketTransform_ReturnValue) == 0x000050, "Member 'BP_Weapon_Base_C_UserConstructionScript::CallFunc_GetSocketTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_UserConstructionScript, CallFunc_GetSocketTransform_ReturnValue_1) == 0x000080, "Member 'BP_Weapon_Base_C_UserConstructionScript::CallFunc_GetSocketTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_UserConstructionScript, CallFunc_BreakTransform_Location) == 0x0000B0, "Member 'BP_Weapon_Base_C_UserConstructionScript::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_UserConstructionScript, CallFunc_BreakTransform_Rotation) == 0x0000BC, "Member 'BP_Weapon_Base_C_UserConstructionScript::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_UserConstructionScript, CallFunc_BreakTransform_Scale) == 0x0000C8, "Member 'BP_Weapon_Base_C_UserConstructionScript::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_UserConstructionScript, CallFunc_InvertTransform_ReturnValue) == 0x0000E0, "Member 'BP_Weapon_Base_C_UserConstructionScript::CallFunc_InvertTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_UserConstructionScript, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000110, "Member 'BP_Weapon_Base_C_UserConstructionScript::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_UserConstructionScript, CallFunc_K2_SetRelativeTransform_SweepHitResult) == 0x00011C, "Member 'BP_Weapon_Base_C_UserConstructionScript::CallFunc_K2_SetRelativeTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_UserConstructionScript, CallFunc_K2_SetRelativeLocation_SweepHitResult) == 0x0001A4, "Member 'BP_Weapon_Base_C_UserConstructionScript::CallFunc_K2_SetRelativeLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_UserConstructionScript, CallFunc_DoesSocketExist_ReturnValue) == 0x00022C, "Member 'BP_Weapon_Base_C_UserConstructionScript::CallFunc_DoesSocketExist_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_UserConstructionScript, CallFunc_DoesSocketExist_ReturnValue_1) == 0x00022D, "Member 'BP_Weapon_Base_C_UserConstructionScript::CallFunc_DoesSocketExist_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_UserConstructionScript, CallFunc_GetDisplayName_ReturnValue) == 0x000230, "Member 'BP_Weapon_Base_C_UserConstructionScript::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_UserConstructionScript, CallFunc_Concat_StrStr_ReturnValue) == 0x000240, "Member 'BP_Weapon_Base_C_UserConstructionScript::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_UserConstructionScript, CallFunc_GetSocketTransform_ReturnValue_2) == 0x000250, "Member 'BP_Weapon_Base_C_UserConstructionScript::CallFunc_GetSocketTransform_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_UserConstructionScript, CallFunc_BreakTransform_Location_1) == 0x000280, "Member 'BP_Weapon_Base_C_UserConstructionScript::CallFunc_BreakTransform_Location_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_UserConstructionScript, CallFunc_BreakTransform_Rotation_1) == 0x00028C, "Member 'BP_Weapon_Base_C_UserConstructionScript::CallFunc_BreakTransform_Rotation_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_UserConstructionScript, CallFunc_BreakTransform_Scale_1) == 0x000298, "Member 'BP_Weapon_Base_C_UserConstructionScript::CallFunc_BreakTransform_Scale_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_UserConstructionScript, CallFunc_K2_SetRelativeLocationAndRotation_SweepHitResult) == 0x0002A4, "Member 'BP_Weapon_Base_C_UserConstructionScript::CallFunc_K2_SetRelativeLocationAndRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_UserConstructionScript, CallFunc_GetDisplayName_ReturnValue_1) == 0x000330, "Member 'BP_Weapon_Base_C_UserConstructionScript::CallFunc_GetDisplayName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_UserConstructionScript, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000340, "Member 'BP_Weapon_Base_C_UserConstructionScript::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_UserConstructionScript, CallFunc_K2_SetRelativeLocationAndRotation_SweepHitResult_1) == 0x000350, "Member 'BP_Weapon_Base_C_UserConstructionScript::CallFunc_K2_SetRelativeLocationAndRotation_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_UserConstructionScript, CallFunc_K2_SetRelativeLocationAndRotation_SweepHitResult_2) == 0x0003D8, "Member 'BP_Weapon_Base_C_UserConstructionScript::CallFunc_K2_SetRelativeLocationAndRotation_SweepHitResult_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_UserConstructionScript, CallFunc_K2_SetRelativeLocationAndRotation_SweepHitResult_3) == 0x000460, "Member 'BP_Weapon_Base_C_UserConstructionScript::CallFunc_K2_SetRelativeLocationAndRotation_SweepHitResult_3' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_UserConstructionScript, Temp_bool_Variable_25) == 0x0004E8, "Member 'BP_Weapon_Base_C_UserConstructionScript::Temp_bool_Variable_25' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_UserConstructionScript, CallFunc_K2_AttachToComponent_ReturnValue_3) == 0x0004E9, "Member 'BP_Weapon_Base_C_UserConstructionScript::CallFunc_K2_AttachToComponent_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_UserConstructionScript, CallFunc_K2_SetRelativeLocationAndRotation_SweepHitResult_4) == 0x0004EC, "Member 'BP_Weapon_Base_C_UserConstructionScript::CallFunc_K2_SetRelativeLocationAndRotation_SweepHitResult_4' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_UserConstructionScript, CallFunc_HasBroken_ReturnValue) == 0x000574, "Member 'BP_Weapon_Base_C_UserConstructionScript::CallFunc_HasBroken_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_UserConstructionScript, CallFunc_IsValid_ReturnValue) == 0x000575, "Member 'BP_Weapon_Base_C_UserConstructionScript::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_UserConstructionScript, CallFunc_IsValid_ReturnValue_1) == 0x000576, "Member 'BP_Weapon_Base_C_UserConstructionScript::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_UserConstructionScript, Temp_bool_Variable_26) == 0x000577, "Member 'BP_Weapon_Base_C_UserConstructionScript::Temp_bool_Variable_26' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_UserConstructionScript, K2Node_Select_Default_8) == 0x000578, "Member 'BP_Weapon_Base_C_UserConstructionScript::K2Node_Select_Default_8' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_UserConstructionScript, CallFunc_GetDisplayName_ReturnValue_2) == 0x000580, "Member 'BP_Weapon_Base_C_UserConstructionScript::CallFunc_GetDisplayName_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_UserConstructionScript, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000590, "Member 'BP_Weapon_Base_C_UserConstructionScript::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_UserConstructionScript, CallFunc_DoesSocketExist_ReturnValue_2) == 0x0005A0, "Member 'BP_Weapon_Base_C_UserConstructionScript::CallFunc_DoesSocketExist_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_UserConstructionScript, CallFunc_IsValid_ReturnValue_2) == 0x0005A1, "Member 'BP_Weapon_Base_C_UserConstructionScript::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_UserConstructionScript, CallFunc_IsValid_ReturnValue_3) == 0x0005A2, "Member 'BP_Weapon_Base_C_UserConstructionScript::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_UserConstructionScript, CallFunc_K2_AttachToComponent_ReturnValue_4) == 0x0005A3, "Member 'BP_Weapon_Base_C_UserConstructionScript::CallFunc_K2_AttachToComponent_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_UserConstructionScript, CallFunc_K2_AttachToComponent_ReturnValue_5) == 0x0005A4, "Member 'BP_Weapon_Base_C_UserConstructionScript::CallFunc_K2_AttachToComponent_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_UserConstructionScript, CallFunc_GetSocketTransform_ReturnValue_3) == 0x0005B0, "Member 'BP_Weapon_Base_C_UserConstructionScript::CallFunc_GetSocketTransform_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_UserConstructionScript, CallFunc_BreakTransform_Location_2) == 0x0005E0, "Member 'BP_Weapon_Base_C_UserConstructionScript::CallFunc_BreakTransform_Location_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_UserConstructionScript, CallFunc_BreakTransform_Rotation_2) == 0x0005EC, "Member 'BP_Weapon_Base_C_UserConstructionScript::CallFunc_BreakTransform_Rotation_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_UserConstructionScript, CallFunc_BreakTransform_Scale_2) == 0x0005F8, "Member 'BP_Weapon_Base_C_UserConstructionScript::CallFunc_BreakTransform_Scale_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_UserConstructionScript, CallFunc_GetSocketTransform_ReturnValue_4) == 0x000610, "Member 'BP_Weapon_Base_C_UserConstructionScript::CallFunc_GetSocketTransform_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_UserConstructionScript, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x000640, "Member 'BP_Weapon_Base_C_UserConstructionScript::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_UserConstructionScript, CallFunc_InvertTransform_ReturnValue_1) == 0x000650, "Member 'BP_Weapon_Base_C_UserConstructionScript::CallFunc_InvertTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_UserConstructionScript, CallFunc_K2_SetRelativeLocation_SweepHitResult_1) == 0x000680, "Member 'BP_Weapon_Base_C_UserConstructionScript::CallFunc_K2_SetRelativeLocation_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_UserConstructionScript, CallFunc_K2_SetRelativeTransform_SweepHitResult_1) == 0x000708, "Member 'BP_Weapon_Base_C_UserConstructionScript::CallFunc_K2_SetRelativeTransform_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_UserConstructionScript, CallFunc_GetSocketTransform_ReturnValue_5) == 0x000790, "Member 'BP_Weapon_Base_C_UserConstructionScript::CallFunc_GetSocketTransform_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_UserConstructionScript, CallFunc_GetSocketTransform_ReturnValue_6) == 0x0007C0, "Member 'BP_Weapon_Base_C_UserConstructionScript::CallFunc_GetSocketTransform_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_UserConstructionScript, CallFunc_InvertTransform_ReturnValue_2) == 0x0007F0, "Member 'BP_Weapon_Base_C_UserConstructionScript::CallFunc_InvertTransform_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_UserConstructionScript, CallFunc_BreakTransform_Location_3) == 0x000820, "Member 'BP_Weapon_Base_C_UserConstructionScript::CallFunc_BreakTransform_Location_3' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_UserConstructionScript, CallFunc_BreakTransform_Rotation_3) == 0x00082C, "Member 'BP_Weapon_Base_C_UserConstructionScript::CallFunc_BreakTransform_Rotation_3' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_UserConstructionScript, CallFunc_BreakTransform_Scale_3) == 0x000838, "Member 'BP_Weapon_Base_C_UserConstructionScript::CallFunc_BreakTransform_Scale_3' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_UserConstructionScript, CallFunc_K2_SetRelativeTransform_SweepHitResult_2) == 0x000844, "Member 'BP_Weapon_Base_C_UserConstructionScript::CallFunc_K2_SetRelativeTransform_SweepHitResult_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_UserConstructionScript, CallFunc_Multiply_VectorFloat_ReturnValue_2) == 0x0008CC, "Member 'BP_Weapon_Base_C_UserConstructionScript::CallFunc_Multiply_VectorFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_UserConstructionScript, CallFunc_K2_SetRelativeLocation_SweepHitResult_2) == 0x0008D8, "Member 'BP_Weapon_Base_C_UserConstructionScript::CallFunc_K2_SetRelativeLocation_SweepHitResult_2' has a wrong offset!");

// Function BP_Weapon_Base.BP_Weapon_Base_C.Duplicate Handle
// 0x0280 (0x0280 - 0x0000)
struct BP_Weapon_Base_C_Duplicate_Handle final
{
public:
	class ALWeapon*                               HandleTemplateActor;                               // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ULWeaponHandleComponent*>        SelfHandleArray;                                   // 0x0008(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	TArray<class ULWeaponHandleComponent*>        TemplateHandleArray;                               // 0x0018(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D[0x3];                                       // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ULWeaponHandleComponent*>        CallFunc_K2_GetComponentsByClass_ReturnValue;      // 0x0050(0x0010)(ReferenceParm, ContainsInstancedReference)
	class ULWeaponHandleComponent*                CallFunc_Array_Get_Item;                           // 0x0060(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0072(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_73[0x1];                                       // 0x0073(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ALWeapon*                               CallFunc_CreateHandleTemplateActor_ReturnValue;    // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_82[0x6];                                       // 0x0082(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ULWeaponHandleComponent*                CallFunc_Array_Get_Item_1;                         // 0x0088(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULWeaponHandleComponent*                CallFunc_Array_Get_Item_2;                         // 0x0098(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue_1;         // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A2[0x2];                                       // 0x00A2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULWeaponHandleComponent*                CallFunc_AddComponentByClass_ReturnValue;          // 0x00A8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULWeaponHandleComponent*                CallFunc_Array_Get_Item_3;                         // 0x00B0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetAttachSocketName_ReturnValue;          // 0x00BC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C4[0xC];                                       // 0x00C4(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetRelativeTransform_ReturnValue;         // 0x00D0(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue;         // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_101[0x3];                                      // 0x0101(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetRelativeTransform_SweepHitResult;   // 0x0104(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class FName                                   CallFunc_GetAttachSocketName_ReturnValue_1;        // 0x018C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_194[0xC];                                      // 0x0194(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetRelativeTransform_ReturnValue_1;       // 0x01A0(0x0030)(IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetRelativeTransform_SweepHitResult_1; // 0x01D0(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0258(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x025C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue_1;       // 0x025D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25E[0x2];                                      // 0x025E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ULWeaponHandleComponent*>        CallFunc_K2_GetComponentsByClass_ReturnValue_1;    // 0x0260(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x0270(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x0274(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_275[0x3];                                      // 0x0275(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0278(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ClassClass_ReturnValue;          // 0x027C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Weapon_Base_C_Duplicate_Handle) == 0x000010, "Wrong alignment on BP_Weapon_Base_C_Duplicate_Handle");
static_assert(sizeof(BP_Weapon_Base_C_Duplicate_Handle) == 0x000280, "Wrong size on BP_Weapon_Base_C_Duplicate_Handle");
static_assert(offsetof(BP_Weapon_Base_C_Duplicate_Handle, HandleTemplateActor) == 0x000000, "Member 'BP_Weapon_Base_C_Duplicate_Handle::HandleTemplateActor' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_Duplicate_Handle, SelfHandleArray) == 0x000008, "Member 'BP_Weapon_Base_C_Duplicate_Handle::SelfHandleArray' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_Duplicate_Handle, TemplateHandleArray) == 0x000018, "Member 'BP_Weapon_Base_C_Duplicate_Handle::TemplateHandleArray' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_Duplicate_Handle, Temp_int_Loop_Counter_Variable) == 0x000028, "Member 'BP_Weapon_Base_C_Duplicate_Handle::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_Duplicate_Handle, CallFunc_Add_IntInt_ReturnValue) == 0x00002C, "Member 'BP_Weapon_Base_C_Duplicate_Handle::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_Duplicate_Handle, Temp_int_Loop_Counter_Variable_1) == 0x000030, "Member 'BP_Weapon_Base_C_Duplicate_Handle::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_Duplicate_Handle, CallFunc_Add_IntInt_ReturnValue_1) == 0x000034, "Member 'BP_Weapon_Base_C_Duplicate_Handle::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_Duplicate_Handle, Temp_int_Array_Index_Variable) == 0x000038, "Member 'BP_Weapon_Base_C_Duplicate_Handle::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_Duplicate_Handle, Temp_int_Loop_Counter_Variable_2) == 0x00003C, "Member 'BP_Weapon_Base_C_Duplicate_Handle::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_Duplicate_Handle, CallFunc_Add_IntInt_ReturnValue_2) == 0x000040, "Member 'BP_Weapon_Base_C_Duplicate_Handle::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_Duplicate_Handle, Temp_int_Array_Index_Variable_1) == 0x000044, "Member 'BP_Weapon_Base_C_Duplicate_Handle::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_Duplicate_Handle, Temp_int_Array_Index_Variable_2) == 0x000048, "Member 'BP_Weapon_Base_C_Duplicate_Handle::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_Duplicate_Handle, CallFunc_IsValid_ReturnValue) == 0x00004C, "Member 'BP_Weapon_Base_C_Duplicate_Handle::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_Duplicate_Handle, CallFunc_K2_GetComponentsByClass_ReturnValue) == 0x000050, "Member 'BP_Weapon_Base_C_Duplicate_Handle::CallFunc_K2_GetComponentsByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_Duplicate_Handle, CallFunc_Array_Get_Item) == 0x000060, "Member 'BP_Weapon_Base_C_Duplicate_Handle::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_Duplicate_Handle, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000068, "Member 'BP_Weapon_Base_C_Duplicate_Handle::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_Duplicate_Handle, CallFunc_Array_Length_ReturnValue) == 0x00006C, "Member 'BP_Weapon_Base_C_Duplicate_Handle::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_Duplicate_Handle, CallFunc_Less_IntInt_ReturnValue) == 0x000070, "Member 'BP_Weapon_Base_C_Duplicate_Handle::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_Duplicate_Handle, CallFunc_IsValid_ReturnValue_1) == 0x000071, "Member 'BP_Weapon_Base_C_Duplicate_Handle::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_Duplicate_Handle, CallFunc_IsValid_ReturnValue_2) == 0x000072, "Member 'BP_Weapon_Base_C_Duplicate_Handle::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_Duplicate_Handle, Temp_int_Array_Index_Variable_3) == 0x000074, "Member 'BP_Weapon_Base_C_Duplicate_Handle::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_Duplicate_Handle, CallFunc_CreateHandleTemplateActor_ReturnValue) == 0x000078, "Member 'BP_Weapon_Base_C_Duplicate_Handle::CallFunc_CreateHandleTemplateActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_Duplicate_Handle, CallFunc_IsValid_ReturnValue_3) == 0x000080, "Member 'BP_Weapon_Base_C_Duplicate_Handle::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_Duplicate_Handle, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000081, "Member 'BP_Weapon_Base_C_Duplicate_Handle::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_Duplicate_Handle, CallFunc_Array_Get_Item_1) == 0x000088, "Member 'BP_Weapon_Base_C_Duplicate_Handle::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_Duplicate_Handle, CallFunc_Array_Length_ReturnValue_1) == 0x000090, "Member 'BP_Weapon_Base_C_Duplicate_Handle::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_Duplicate_Handle, Temp_int_Loop_Counter_Variable_3) == 0x000094, "Member 'BP_Weapon_Base_C_Duplicate_Handle::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_Duplicate_Handle, CallFunc_Array_Get_Item_2) == 0x000098, "Member 'BP_Weapon_Base_C_Duplicate_Handle::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_Duplicate_Handle, CallFunc_Array_IsValidIndex_ReturnValue_1) == 0x0000A0, "Member 'BP_Weapon_Base_C_Duplicate_Handle::CallFunc_Array_IsValidIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_Duplicate_Handle, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000A1, "Member 'BP_Weapon_Base_C_Duplicate_Handle::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_Duplicate_Handle, CallFunc_Add_IntInt_ReturnValue_3) == 0x0000A4, "Member 'BP_Weapon_Base_C_Duplicate_Handle::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_Duplicate_Handle, CallFunc_AddComponentByClass_ReturnValue) == 0x0000A8, "Member 'BP_Weapon_Base_C_Duplicate_Handle::CallFunc_AddComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_Duplicate_Handle, CallFunc_Array_Get_Item_3) == 0x0000B0, "Member 'BP_Weapon_Base_C_Duplicate_Handle::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_Duplicate_Handle, CallFunc_Array_Add_ReturnValue) == 0x0000B8, "Member 'BP_Weapon_Base_C_Duplicate_Handle::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_Duplicate_Handle, CallFunc_GetAttachSocketName_ReturnValue) == 0x0000BC, "Member 'BP_Weapon_Base_C_Duplicate_Handle::CallFunc_GetAttachSocketName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_Duplicate_Handle, CallFunc_GetRelativeTransform_ReturnValue) == 0x0000D0, "Member 'BP_Weapon_Base_C_Duplicate_Handle::CallFunc_GetRelativeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_Duplicate_Handle, CallFunc_K2_AttachToComponent_ReturnValue) == 0x000100, "Member 'BP_Weapon_Base_C_Duplicate_Handle::CallFunc_K2_AttachToComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_Duplicate_Handle, CallFunc_K2_SetRelativeTransform_SweepHitResult) == 0x000104, "Member 'BP_Weapon_Base_C_Duplicate_Handle::CallFunc_K2_SetRelativeTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_Duplicate_Handle, CallFunc_GetAttachSocketName_ReturnValue_1) == 0x00018C, "Member 'BP_Weapon_Base_C_Duplicate_Handle::CallFunc_GetAttachSocketName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_Duplicate_Handle, CallFunc_GetRelativeTransform_ReturnValue_1) == 0x0001A0, "Member 'BP_Weapon_Base_C_Duplicate_Handle::CallFunc_GetRelativeTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_Duplicate_Handle, CallFunc_K2_SetRelativeTransform_SweepHitResult_1) == 0x0001D0, "Member 'BP_Weapon_Base_C_Duplicate_Handle::CallFunc_K2_SetRelativeTransform_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_Duplicate_Handle, CallFunc_Array_Length_ReturnValue_2) == 0x000258, "Member 'BP_Weapon_Base_C_Duplicate_Handle::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_Duplicate_Handle, CallFunc_Less_IntInt_ReturnValue_2) == 0x00025C, "Member 'BP_Weapon_Base_C_Duplicate_Handle::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_Duplicate_Handle, CallFunc_K2_AttachToComponent_ReturnValue_1) == 0x00025D, "Member 'BP_Weapon_Base_C_Duplicate_Handle::CallFunc_K2_AttachToComponent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_Duplicate_Handle, CallFunc_K2_GetComponentsByClass_ReturnValue_1) == 0x000260, "Member 'BP_Weapon_Base_C_Duplicate_Handle::CallFunc_K2_GetComponentsByClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_Duplicate_Handle, CallFunc_Array_Length_ReturnValue_3) == 0x000270, "Member 'BP_Weapon_Base_C_Duplicate_Handle::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_Duplicate_Handle, CallFunc_Less_IntInt_ReturnValue_3) == 0x000274, "Member 'BP_Weapon_Base_C_Duplicate_Handle::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_Duplicate_Handle, CallFunc_Array_Add_ReturnValue_1) == 0x000278, "Member 'BP_Weapon_Base_C_Duplicate_Handle::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_Duplicate_Handle, CallFunc_NotEqual_ClassClass_ReturnValue) == 0x00027C, "Member 'BP_Weapon_Base_C_Duplicate_Handle::CallFunc_NotEqual_ClassClass_ReturnValue' has a wrong offset!");

// Function BP_Weapon_Base.BP_Weapon_Base_C.Join Handle And  Blade Mesh Component
// 0x0970 (0x0970 - 0x0000)
struct BP_Weapon_Base_C_Join_Handle_And__Blade_Mesh_Component final
{
public:
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue;          // 0x0000(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_2;                              // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_3;                              // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_4;                              // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_5;                              // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E[0x2];                                        // 0x000E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue_1;        // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_6;                              // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_7;                              // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_8;                              // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B[0x5];                                       // 0x001B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue_2;        // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_9;                              // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_10;                             // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_11;                             // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_12;                             // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_13;                             // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_14;                             // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_15;                             // 0x002E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_16;                             // 0x002F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_17;                             // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_18;                             // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsNewBreakBlade_ReturnValue;              // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Select_Default;                             // 0x0033(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsNewBreakBlade_ReturnValue_1;            // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsNewBreakBlade_ReturnValue_2;            // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsNewBreakBlade_ReturnValue_3;            // 0x0036(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_19;                             // 0x0037(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_20;                             // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_21;                             // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Select_Default_1;                           // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_22;                             // 0x003B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_23;                             // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue;         // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue_1;       // 0x003E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue_2;       // 0x003F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_GetSocketTransform_ReturnValue;           // 0x0040(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_GetSocketTransform_ReturnValue_1;         // 0x0070(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x00A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x00AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x00B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C4[0xC];                                       // 0x00C4(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_InvertTransform_ReturnValue;              // 0x00D0(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0100(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeTransform_SweepHitResult;   // 0x010C(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult;    // 0x0194(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_DoesSocketExist_ReturnValue;              // 0x021C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_DoesSocketExist_ReturnValue_1;            // 0x021D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21E[0x2];                                      // 0x021E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0220(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0230(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetSocketTransform_ReturnValue_2;         // 0x0240(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location_1;                // 0x0270(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_1;                // 0x027C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_1;                   // 0x0288(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeLocationAndRotation_SweepHitResult; // 0x0294(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	uint8                                         Pad_31C[0x4];                                      // 0x031C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDisplayName_ReturnValue_1;             // 0x0320(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0330(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeLocationAndRotation_SweepHitResult_1; // 0x0340(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FHitResult                             CallFunc_K2_SetRelativeLocationAndRotation_SweepHitResult_2; // 0x03C8(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FHitResult                             CallFunc_K2_SetRelativeLocationAndRotation_SweepHitResult_3; // 0x0450(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_IsNewBreakBlade_ReturnValue_4;            // 0x04D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsNewBreakBlade_ReturnValue_5;            // 0x04D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Select_Default_2;                           // 0x04DA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Select_Default_3;                           // 0x04DB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_24;                             // 0x04DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue_3;       // 0x04DD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4DE[0x2];                                      // 0x04DE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetRelativeLocationAndRotation_SweepHitResult_4; // 0x04E0(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_HasBroken_ReturnValue;                    // 0x0568(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0569(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x056A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_25;                             // 0x056B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsNewBreakBlade_ReturnValue_6;            // 0x056C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Select_Default_4;                           // 0x056D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Select_Default_5;                           // 0x056E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_56F[0x1];                                      // 0x056F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDisplayName_ReturnValue_2;             // 0x0570(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoesSocketExist_ReturnValue_2;            // 0x0580(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_581[0x7];                                      // 0x0581(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0588(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0598(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0599(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue_4;       // 0x059A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue_5;       // 0x059B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59C[0x4];                                      // 0x059C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetSocketTransform_ReturnValue_3;         // 0x05A0(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_GetSocketTransform_ReturnValue_4;         // 0x05D0(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location_2;                // 0x0600(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_2;                // 0x060C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_2;                   // 0x0618(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_624[0xC];                                      // 0x0624(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_InvertTransform_ReturnValue_1;            // 0x0630(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x0660(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeTransform_SweepHitResult_1; // 0x066C(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult_1;  // 0x06F4(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	uint8                                         Pad_77C[0x4];                                      // 0x077C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetSocketTransform_ReturnValue_5;         // 0x0780(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location_3;                // 0x07B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_3;                // 0x07BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_3;                   // 0x07C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7D4[0xC];                                      // 0x07D4(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetSocketTransform_ReturnValue_6;         // 0x07E0(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_2;       // 0x0810(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81C[0x4];                                      // 0x081C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_InvertTransform_ReturnValue_2;            // 0x0820(0x0030)(IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult_2;  // 0x0850(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FHitResult                             CallFunc_K2_SetRelativeTransform_SweepHitResult_2; // 0x08D8(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          Temp_bool_Variable_26;                             // 0x0960(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsNewBreakBlade_ReturnValue_7;            // 0x0961(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Select_Default_6;                           // 0x0962(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Select_Default_7;                           // 0x0963(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsNewBreakBlade_ReturnValue_8;            // 0x0964(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Select_Default_8;                           // 0x0965(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Weapon_Base_C_Join_Handle_And__Blade_Mesh_Component) == 0x000010, "Wrong alignment on BP_Weapon_Base_C_Join_Handle_And__Blade_Mesh_Component");
static_assert(sizeof(BP_Weapon_Base_C_Join_Handle_And__Blade_Mesh_Component) == 0x000970, "Wrong size on BP_Weapon_Base_C_Join_Handle_And__Blade_Mesh_Component");
static_assert(offsetof(BP_Weapon_Base_C_Join_Handle_And__Blade_Mesh_Component, CallFunc_K2_GetRootComponent_ReturnValue) == 0x000000, "Member 'BP_Weapon_Base_C_Join_Handle_And__Blade_Mesh_Component::CallFunc_K2_GetRootComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_Join_Handle_And__Blade_Mesh_Component, Temp_bool_Variable) == 0x000008, "Member 'BP_Weapon_Base_C_Join_Handle_And__Blade_Mesh_Component::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_Join_Handle_And__Blade_Mesh_Component, Temp_bool_Variable_1) == 0x000009, "Member 'BP_Weapon_Base_C_Join_Handle_And__Blade_Mesh_Component::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_Join_Handle_And__Blade_Mesh_Component, Temp_bool_Variable_2) == 0x00000A, "Member 'BP_Weapon_Base_C_Join_Handle_And__Blade_Mesh_Component::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_Join_Handle_And__Blade_Mesh_Component, Temp_bool_Variable_3) == 0x00000B, "Member 'BP_Weapon_Base_C_Join_Handle_And__Blade_Mesh_Component::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_Join_Handle_And__Blade_Mesh_Component, Temp_bool_Variable_4) == 0x00000C, "Member 'BP_Weapon_Base_C_Join_Handle_And__Blade_Mesh_Component::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_Join_Handle_And__Blade_Mesh_Component, Temp_bool_Variable_5) == 0x00000D, "Member 'BP_Weapon_Base_C_Join_Handle_And__Blade_Mesh_Component::Temp_bool_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_Join_Handle_And__Blade_Mesh_Component, CallFunc_K2_GetRootComponent_ReturnValue_1) == 0x000010, "Member 'BP_Weapon_Base_C_Join_Handle_And__Blade_Mesh_Component::CallFunc_K2_GetRootComponent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_Join_Handle_And__Blade_Mesh_Component, Temp_bool_Variable_6) == 0x000018, "Member 'BP_Weapon_Base_C_Join_Handle_And__Blade_Mesh_Component::Temp_bool_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_Join_Handle_And__Blade_Mesh_Component, Temp_bool_Variable_7) == 0x000019, "Member 'BP_Weapon_Base_C_Join_Handle_And__Blade_Mesh_Component::Temp_bool_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_Join_Handle_And__Blade_Mesh_Component, Temp_bool_Variable_8) == 0x00001A, "Member 'BP_Weapon_Base_C_Join_Handle_And__Blade_Mesh_Component::Temp_bool_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_Join_Handle_And__Blade_Mesh_Component, CallFunc_K2_GetRootComponent_ReturnValue_2) == 0x000020, "Member 'BP_Weapon_Base_C_Join_Handle_And__Blade_Mesh_Component::CallFunc_K2_GetRootComponent_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_Join_Handle_And__Blade_Mesh_Component, Temp_bool_Variable_9) == 0x000028, "Member 'BP_Weapon_Base_C_Join_Handle_And__Blade_Mesh_Component::Temp_bool_Variable_9' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_Join_Handle_And__Blade_Mesh_Component, Temp_bool_Variable_10) == 0x000029, "Member 'BP_Weapon_Base_C_Join_Handle_And__Blade_Mesh_Component::Temp_bool_Variable_10' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_Join_Handle_And__Blade_Mesh_Component, Temp_bool_Variable_11) == 0x00002A, "Member 'BP_Weapon_Base_C_Join_Handle_And__Blade_Mesh_Component::Temp_bool_Variable_11' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_Join_Handle_And__Blade_Mesh_Component, Temp_bool_Variable_12) == 0x00002B, "Member 'BP_Weapon_Base_C_Join_Handle_And__Blade_Mesh_Component::Temp_bool_Variable_12' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_Join_Handle_And__Blade_Mesh_Component, Temp_bool_Variable_13) == 0x00002C, "Member 'BP_Weapon_Base_C_Join_Handle_And__Blade_Mesh_Component::Temp_bool_Variable_13' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_Join_Handle_And__Blade_Mesh_Component, Temp_bool_Variable_14) == 0x00002D, "Member 'BP_Weapon_Base_C_Join_Handle_And__Blade_Mesh_Component::Temp_bool_Variable_14' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_Join_Handle_And__Blade_Mesh_Component, Temp_bool_Variable_15) == 0x00002E, "Member 'BP_Weapon_Base_C_Join_Handle_And__Blade_Mesh_Component::Temp_bool_Variable_15' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_Join_Handle_And__Blade_Mesh_Component, Temp_bool_Variable_16) == 0x00002F, "Member 'BP_Weapon_Base_C_Join_Handle_And__Blade_Mesh_Component::Temp_bool_Variable_16' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_Join_Handle_And__Blade_Mesh_Component, Temp_bool_Variable_17) == 0x000030, "Member 'BP_Weapon_Base_C_Join_Handle_And__Blade_Mesh_Component::Temp_bool_Variable_17' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_Join_Handle_And__Blade_Mesh_Component, Temp_bool_Variable_18) == 0x000031, "Member 'BP_Weapon_Base_C_Join_Handle_And__Blade_Mesh_Component::Temp_bool_Variable_18' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_Join_Handle_And__Blade_Mesh_Component, CallFunc_IsNewBreakBlade_ReturnValue) == 0x000032, "Member 'BP_Weapon_Base_C_Join_Handle_And__Blade_Mesh_Component::CallFunc_IsNewBreakBlade_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_Join_Handle_And__Blade_Mesh_Component, K2Node_Select_Default) == 0x000033, "Member 'BP_Weapon_Base_C_Join_Handle_And__Blade_Mesh_Component::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_Join_Handle_And__Blade_Mesh_Component, CallFunc_IsNewBreakBlade_ReturnValue_1) == 0x000034, "Member 'BP_Weapon_Base_C_Join_Handle_And__Blade_Mesh_Component::CallFunc_IsNewBreakBlade_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_Join_Handle_And__Blade_Mesh_Component, CallFunc_IsNewBreakBlade_ReturnValue_2) == 0x000035, "Member 'BP_Weapon_Base_C_Join_Handle_And__Blade_Mesh_Component::CallFunc_IsNewBreakBlade_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_Join_Handle_And__Blade_Mesh_Component, CallFunc_IsNewBreakBlade_ReturnValue_3) == 0x000036, "Member 'BP_Weapon_Base_C_Join_Handle_And__Blade_Mesh_Component::CallFunc_IsNewBreakBlade_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_Join_Handle_And__Blade_Mesh_Component, Temp_bool_Variable_19) == 0x000037, "Member 'BP_Weapon_Base_C_Join_Handle_And__Blade_Mesh_Component::Temp_bool_Variable_19' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_Join_Handle_And__Blade_Mesh_Component, Temp_bool_Variable_20) == 0x000038, "Member 'BP_Weapon_Base_C_Join_Handle_And__Blade_Mesh_Component::Temp_bool_Variable_20' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_Join_Handle_And__Blade_Mesh_Component, Temp_bool_Variable_21) == 0x000039, "Member 'BP_Weapon_Base_C_Join_Handle_And__Blade_Mesh_Component::Temp_bool_Variable_21' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_Join_Handle_And__Blade_Mesh_Component, K2Node_Select_Default_1) == 0x00003A, "Member 'BP_Weapon_Base_C_Join_Handle_And__Blade_Mesh_Component::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_Join_Handle_And__Blade_Mesh_Component, Temp_bool_Variable_22) == 0x00003B, "Member 'BP_Weapon_Base_C_Join_Handle_And__Blade_Mesh_Component::Temp_bool_Variable_22' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_Join_Handle_And__Blade_Mesh_Component, Temp_bool_Variable_23) == 0x00003C, "Member 'BP_Weapon_Base_C_Join_Handle_And__Blade_Mesh_Component::Temp_bool_Variable_23' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_Join_Handle_And__Blade_Mesh_Component, CallFunc_K2_AttachToComponent_ReturnValue) == 0x00003D, "Member 'BP_Weapon_Base_C_Join_Handle_And__Blade_Mesh_Component::CallFunc_K2_AttachToComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_Join_Handle_And__Blade_Mesh_Component, CallFunc_K2_AttachToComponent_ReturnValue_1) == 0x00003E, "Member 'BP_Weapon_Base_C_Join_Handle_And__Blade_Mesh_Component::CallFunc_K2_AttachToComponent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_Join_Handle_And__Blade_Mesh_Component, CallFunc_K2_AttachToComponent_ReturnValue_2) == 0x00003F, "Member 'BP_Weapon_Base_C_Join_Handle_And__Blade_Mesh_Component::CallFunc_K2_AttachToComponent_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_Join_Handle_And__Blade_Mesh_Component, CallFunc_GetSocketTransform_ReturnValue) == 0x000040, "Member 'BP_Weapon_Base_C_Join_Handle_And__Blade_Mesh_Component::CallFunc_GetSocketTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_Join_Handle_And__Blade_Mesh_Component, CallFunc_GetSocketTransform_ReturnValue_1) == 0x000070, "Member 'BP_Weapon_Base_C_Join_Handle_And__Blade_Mesh_Component::CallFunc_GetSocketTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_Join_Handle_And__Blade_Mesh_Component, CallFunc_BreakTransform_Location) == 0x0000A0, "Member 'BP_Weapon_Base_C_Join_Handle_And__Blade_Mesh_Component::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_Join_Handle_And__Blade_Mesh_Component, CallFunc_BreakTransform_Rotation) == 0x0000AC, "Member 'BP_Weapon_Base_C_Join_Handle_And__Blade_Mesh_Component::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_Join_Handle_And__Blade_Mesh_Component, CallFunc_BreakTransform_Scale) == 0x0000B8, "Member 'BP_Weapon_Base_C_Join_Handle_And__Blade_Mesh_Component::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_Join_Handle_And__Blade_Mesh_Component, CallFunc_InvertTransform_ReturnValue) == 0x0000D0, "Member 'BP_Weapon_Base_C_Join_Handle_And__Blade_Mesh_Component::CallFunc_InvertTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_Join_Handle_And__Blade_Mesh_Component, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000100, "Member 'BP_Weapon_Base_C_Join_Handle_And__Blade_Mesh_Component::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_Join_Handle_And__Blade_Mesh_Component, CallFunc_K2_SetRelativeTransform_SweepHitResult) == 0x00010C, "Member 'BP_Weapon_Base_C_Join_Handle_And__Blade_Mesh_Component::CallFunc_K2_SetRelativeTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_Join_Handle_And__Blade_Mesh_Component, CallFunc_K2_SetRelativeLocation_SweepHitResult) == 0x000194, "Member 'BP_Weapon_Base_C_Join_Handle_And__Blade_Mesh_Component::CallFunc_K2_SetRelativeLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_Join_Handle_And__Blade_Mesh_Component, CallFunc_DoesSocketExist_ReturnValue) == 0x00021C, "Member 'BP_Weapon_Base_C_Join_Handle_And__Blade_Mesh_Component::CallFunc_DoesSocketExist_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_Join_Handle_And__Blade_Mesh_Component, CallFunc_DoesSocketExist_ReturnValue_1) == 0x00021D, "Member 'BP_Weapon_Base_C_Join_Handle_And__Blade_Mesh_Component::CallFunc_DoesSocketExist_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_Join_Handle_And__Blade_Mesh_Component, CallFunc_GetDisplayName_ReturnValue) == 0x000220, "Member 'BP_Weapon_Base_C_Join_Handle_And__Blade_Mesh_Component::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_Join_Handle_And__Blade_Mesh_Component, CallFunc_Concat_StrStr_ReturnValue) == 0x000230, "Member 'BP_Weapon_Base_C_Join_Handle_And__Blade_Mesh_Component::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_Join_Handle_And__Blade_Mesh_Component, CallFunc_GetSocketTransform_ReturnValue_2) == 0x000240, "Member 'BP_Weapon_Base_C_Join_Handle_And__Blade_Mesh_Component::CallFunc_GetSocketTransform_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_Join_Handle_And__Blade_Mesh_Component, CallFunc_BreakTransform_Location_1) == 0x000270, "Member 'BP_Weapon_Base_C_Join_Handle_And__Blade_Mesh_Component::CallFunc_BreakTransform_Location_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_Join_Handle_And__Blade_Mesh_Component, CallFunc_BreakTransform_Rotation_1) == 0x00027C, "Member 'BP_Weapon_Base_C_Join_Handle_And__Blade_Mesh_Component::CallFunc_BreakTransform_Rotation_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_Join_Handle_And__Blade_Mesh_Component, CallFunc_BreakTransform_Scale_1) == 0x000288, "Member 'BP_Weapon_Base_C_Join_Handle_And__Blade_Mesh_Component::CallFunc_BreakTransform_Scale_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_Join_Handle_And__Blade_Mesh_Component, CallFunc_K2_SetRelativeLocationAndRotation_SweepHitResult) == 0x000294, "Member 'BP_Weapon_Base_C_Join_Handle_And__Blade_Mesh_Component::CallFunc_K2_SetRelativeLocationAndRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_Join_Handle_And__Blade_Mesh_Component, CallFunc_GetDisplayName_ReturnValue_1) == 0x000320, "Member 'BP_Weapon_Base_C_Join_Handle_And__Blade_Mesh_Component::CallFunc_GetDisplayName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_Join_Handle_And__Blade_Mesh_Component, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000330, "Member 'BP_Weapon_Base_C_Join_Handle_And__Blade_Mesh_Component::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_Join_Handle_And__Blade_Mesh_Component, CallFunc_K2_SetRelativeLocationAndRotation_SweepHitResult_1) == 0x000340, "Member 'BP_Weapon_Base_C_Join_Handle_And__Blade_Mesh_Component::CallFunc_K2_SetRelativeLocationAndRotation_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_Join_Handle_And__Blade_Mesh_Component, CallFunc_K2_SetRelativeLocationAndRotation_SweepHitResult_2) == 0x0003C8, "Member 'BP_Weapon_Base_C_Join_Handle_And__Blade_Mesh_Component::CallFunc_K2_SetRelativeLocationAndRotation_SweepHitResult_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_Join_Handle_And__Blade_Mesh_Component, CallFunc_K2_SetRelativeLocationAndRotation_SweepHitResult_3) == 0x000450, "Member 'BP_Weapon_Base_C_Join_Handle_And__Blade_Mesh_Component::CallFunc_K2_SetRelativeLocationAndRotation_SweepHitResult_3' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_Join_Handle_And__Blade_Mesh_Component, CallFunc_IsNewBreakBlade_ReturnValue_4) == 0x0004D8, "Member 'BP_Weapon_Base_C_Join_Handle_And__Blade_Mesh_Component::CallFunc_IsNewBreakBlade_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_Join_Handle_And__Blade_Mesh_Component, CallFunc_IsNewBreakBlade_ReturnValue_5) == 0x0004D9, "Member 'BP_Weapon_Base_C_Join_Handle_And__Blade_Mesh_Component::CallFunc_IsNewBreakBlade_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_Join_Handle_And__Blade_Mesh_Component, K2Node_Select_Default_2) == 0x0004DA, "Member 'BP_Weapon_Base_C_Join_Handle_And__Blade_Mesh_Component::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_Join_Handle_And__Blade_Mesh_Component, K2Node_Select_Default_3) == 0x0004DB, "Member 'BP_Weapon_Base_C_Join_Handle_And__Blade_Mesh_Component::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_Join_Handle_And__Blade_Mesh_Component, Temp_bool_Variable_24) == 0x0004DC, "Member 'BP_Weapon_Base_C_Join_Handle_And__Blade_Mesh_Component::Temp_bool_Variable_24' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_Join_Handle_And__Blade_Mesh_Component, CallFunc_K2_AttachToComponent_ReturnValue_3) == 0x0004DD, "Member 'BP_Weapon_Base_C_Join_Handle_And__Blade_Mesh_Component::CallFunc_K2_AttachToComponent_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_Join_Handle_And__Blade_Mesh_Component, CallFunc_K2_SetRelativeLocationAndRotation_SweepHitResult_4) == 0x0004E0, "Member 'BP_Weapon_Base_C_Join_Handle_And__Blade_Mesh_Component::CallFunc_K2_SetRelativeLocationAndRotation_SweepHitResult_4' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_Join_Handle_And__Blade_Mesh_Component, CallFunc_HasBroken_ReturnValue) == 0x000568, "Member 'BP_Weapon_Base_C_Join_Handle_And__Blade_Mesh_Component::CallFunc_HasBroken_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_Join_Handle_And__Blade_Mesh_Component, CallFunc_IsValid_ReturnValue) == 0x000569, "Member 'BP_Weapon_Base_C_Join_Handle_And__Blade_Mesh_Component::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_Join_Handle_And__Blade_Mesh_Component, CallFunc_IsValid_ReturnValue_1) == 0x00056A, "Member 'BP_Weapon_Base_C_Join_Handle_And__Blade_Mesh_Component::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_Join_Handle_And__Blade_Mesh_Component, Temp_bool_Variable_25) == 0x00056B, "Member 'BP_Weapon_Base_C_Join_Handle_And__Blade_Mesh_Component::Temp_bool_Variable_25' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_Join_Handle_And__Blade_Mesh_Component, CallFunc_IsNewBreakBlade_ReturnValue_6) == 0x00056C, "Member 'BP_Weapon_Base_C_Join_Handle_And__Blade_Mesh_Component::CallFunc_IsNewBreakBlade_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_Join_Handle_And__Blade_Mesh_Component, K2Node_Select_Default_4) == 0x00056D, "Member 'BP_Weapon_Base_C_Join_Handle_And__Blade_Mesh_Component::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_Join_Handle_And__Blade_Mesh_Component, K2Node_Select_Default_5) == 0x00056E, "Member 'BP_Weapon_Base_C_Join_Handle_And__Blade_Mesh_Component::K2Node_Select_Default_5' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_Join_Handle_And__Blade_Mesh_Component, CallFunc_GetDisplayName_ReturnValue_2) == 0x000570, "Member 'BP_Weapon_Base_C_Join_Handle_And__Blade_Mesh_Component::CallFunc_GetDisplayName_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_Join_Handle_And__Blade_Mesh_Component, CallFunc_DoesSocketExist_ReturnValue_2) == 0x000580, "Member 'BP_Weapon_Base_C_Join_Handle_And__Blade_Mesh_Component::CallFunc_DoesSocketExist_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_Join_Handle_And__Blade_Mesh_Component, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000588, "Member 'BP_Weapon_Base_C_Join_Handle_And__Blade_Mesh_Component::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_Join_Handle_And__Blade_Mesh_Component, CallFunc_IsValid_ReturnValue_2) == 0x000598, "Member 'BP_Weapon_Base_C_Join_Handle_And__Blade_Mesh_Component::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_Join_Handle_And__Blade_Mesh_Component, CallFunc_IsValid_ReturnValue_3) == 0x000599, "Member 'BP_Weapon_Base_C_Join_Handle_And__Blade_Mesh_Component::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_Join_Handle_And__Blade_Mesh_Component, CallFunc_K2_AttachToComponent_ReturnValue_4) == 0x00059A, "Member 'BP_Weapon_Base_C_Join_Handle_And__Blade_Mesh_Component::CallFunc_K2_AttachToComponent_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_Join_Handle_And__Blade_Mesh_Component, CallFunc_K2_AttachToComponent_ReturnValue_5) == 0x00059B, "Member 'BP_Weapon_Base_C_Join_Handle_And__Blade_Mesh_Component::CallFunc_K2_AttachToComponent_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_Join_Handle_And__Blade_Mesh_Component, CallFunc_GetSocketTransform_ReturnValue_3) == 0x0005A0, "Member 'BP_Weapon_Base_C_Join_Handle_And__Blade_Mesh_Component::CallFunc_GetSocketTransform_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_Join_Handle_And__Blade_Mesh_Component, CallFunc_GetSocketTransform_ReturnValue_4) == 0x0005D0, "Member 'BP_Weapon_Base_C_Join_Handle_And__Blade_Mesh_Component::CallFunc_GetSocketTransform_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_Join_Handle_And__Blade_Mesh_Component, CallFunc_BreakTransform_Location_2) == 0x000600, "Member 'BP_Weapon_Base_C_Join_Handle_And__Blade_Mesh_Component::CallFunc_BreakTransform_Location_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_Join_Handle_And__Blade_Mesh_Component, CallFunc_BreakTransform_Rotation_2) == 0x00060C, "Member 'BP_Weapon_Base_C_Join_Handle_And__Blade_Mesh_Component::CallFunc_BreakTransform_Rotation_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_Join_Handle_And__Blade_Mesh_Component, CallFunc_BreakTransform_Scale_2) == 0x000618, "Member 'BP_Weapon_Base_C_Join_Handle_And__Blade_Mesh_Component::CallFunc_BreakTransform_Scale_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_Join_Handle_And__Blade_Mesh_Component, CallFunc_InvertTransform_ReturnValue_1) == 0x000630, "Member 'BP_Weapon_Base_C_Join_Handle_And__Blade_Mesh_Component::CallFunc_InvertTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_Join_Handle_And__Blade_Mesh_Component, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x000660, "Member 'BP_Weapon_Base_C_Join_Handle_And__Blade_Mesh_Component::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_Join_Handle_And__Blade_Mesh_Component, CallFunc_K2_SetRelativeTransform_SweepHitResult_1) == 0x00066C, "Member 'BP_Weapon_Base_C_Join_Handle_And__Blade_Mesh_Component::CallFunc_K2_SetRelativeTransform_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_Join_Handle_And__Blade_Mesh_Component, CallFunc_K2_SetRelativeLocation_SweepHitResult_1) == 0x0006F4, "Member 'BP_Weapon_Base_C_Join_Handle_And__Blade_Mesh_Component::CallFunc_K2_SetRelativeLocation_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_Join_Handle_And__Blade_Mesh_Component, CallFunc_GetSocketTransform_ReturnValue_5) == 0x000780, "Member 'BP_Weapon_Base_C_Join_Handle_And__Blade_Mesh_Component::CallFunc_GetSocketTransform_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_Join_Handle_And__Blade_Mesh_Component, CallFunc_BreakTransform_Location_3) == 0x0007B0, "Member 'BP_Weapon_Base_C_Join_Handle_And__Blade_Mesh_Component::CallFunc_BreakTransform_Location_3' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_Join_Handle_And__Blade_Mesh_Component, CallFunc_BreakTransform_Rotation_3) == 0x0007BC, "Member 'BP_Weapon_Base_C_Join_Handle_And__Blade_Mesh_Component::CallFunc_BreakTransform_Rotation_3' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_Join_Handle_And__Blade_Mesh_Component, CallFunc_BreakTransform_Scale_3) == 0x0007C8, "Member 'BP_Weapon_Base_C_Join_Handle_And__Blade_Mesh_Component::CallFunc_BreakTransform_Scale_3' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_Join_Handle_And__Blade_Mesh_Component, CallFunc_GetSocketTransform_ReturnValue_6) == 0x0007E0, "Member 'BP_Weapon_Base_C_Join_Handle_And__Blade_Mesh_Component::CallFunc_GetSocketTransform_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_Join_Handle_And__Blade_Mesh_Component, CallFunc_Multiply_VectorFloat_ReturnValue_2) == 0x000810, "Member 'BP_Weapon_Base_C_Join_Handle_And__Blade_Mesh_Component::CallFunc_Multiply_VectorFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_Join_Handle_And__Blade_Mesh_Component, CallFunc_InvertTransform_ReturnValue_2) == 0x000820, "Member 'BP_Weapon_Base_C_Join_Handle_And__Blade_Mesh_Component::CallFunc_InvertTransform_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_Join_Handle_And__Blade_Mesh_Component, CallFunc_K2_SetRelativeLocation_SweepHitResult_2) == 0x000850, "Member 'BP_Weapon_Base_C_Join_Handle_And__Blade_Mesh_Component::CallFunc_K2_SetRelativeLocation_SweepHitResult_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_Join_Handle_And__Blade_Mesh_Component, CallFunc_K2_SetRelativeTransform_SweepHitResult_2) == 0x0008D8, "Member 'BP_Weapon_Base_C_Join_Handle_And__Blade_Mesh_Component::CallFunc_K2_SetRelativeTransform_SweepHitResult_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_Join_Handle_And__Blade_Mesh_Component, Temp_bool_Variable_26) == 0x000960, "Member 'BP_Weapon_Base_C_Join_Handle_And__Blade_Mesh_Component::Temp_bool_Variable_26' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_Join_Handle_And__Blade_Mesh_Component, CallFunc_IsNewBreakBlade_ReturnValue_7) == 0x000961, "Member 'BP_Weapon_Base_C_Join_Handle_And__Blade_Mesh_Component::CallFunc_IsNewBreakBlade_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_Join_Handle_And__Blade_Mesh_Component, K2Node_Select_Default_6) == 0x000962, "Member 'BP_Weapon_Base_C_Join_Handle_And__Blade_Mesh_Component::K2Node_Select_Default_6' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_Join_Handle_And__Blade_Mesh_Component, K2Node_Select_Default_7) == 0x000963, "Member 'BP_Weapon_Base_C_Join_Handle_And__Blade_Mesh_Component::K2Node_Select_Default_7' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_Join_Handle_And__Blade_Mesh_Component, CallFunc_IsNewBreakBlade_ReturnValue_8) == 0x000964, "Member 'BP_Weapon_Base_C_Join_Handle_And__Blade_Mesh_Component::CallFunc_IsNewBreakBlade_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_Join_Handle_And__Blade_Mesh_Component, K2Node_Select_Default_8) == 0x000965, "Member 'BP_Weapon_Base_C_Join_Handle_And__Blade_Mesh_Component::K2Node_Select_Default_8' has a wrong offset!");

// Function BP_Weapon_Base.BP_Weapon_Base_C.OnImpl Break Blade
// 0x0018 (0x0018 - 0x0000)
struct BP_Weapon_Base_C_OnImpl_Break_Blade final
{
public:
	class AActor*                                 CallFunc_GetWeaponOwner_ReturnValue;               // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ALCharacter*                            K2Node_DynamicCast_AsLCharacter;                   // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Weapon_Base_C_OnImpl_Break_Blade) == 0x000008, "Wrong alignment on BP_Weapon_Base_C_OnImpl_Break_Blade");
static_assert(sizeof(BP_Weapon_Base_C_OnImpl_Break_Blade) == 0x000018, "Wrong size on BP_Weapon_Base_C_OnImpl_Break_Blade");
static_assert(offsetof(BP_Weapon_Base_C_OnImpl_Break_Blade, CallFunc_GetWeaponOwner_ReturnValue) == 0x000000, "Member 'BP_Weapon_Base_C_OnImpl_Break_Blade::CallFunc_GetWeaponOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_OnImpl_Break_Blade, K2Node_DynamicCast_AsLCharacter) == 0x000008, "Member 'BP_Weapon_Base_C_OnImpl_Break_Blade::K2Node_DynamicCast_AsLCharacter' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_OnImpl_Break_Blade, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'BP_Weapon_Base_C_OnImpl_Break_Blade::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_OnImpl_Break_Blade, CallFunc_IsValid_ReturnValue) == 0x000011, "Member 'BP_Weapon_Base_C_OnImpl_Break_Blade::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_Weapon_Base.BP_Weapon_Base_C.OnImpl Apply Running Abnormal
// 0x000C (0x000C - 0x0000)
struct BP_Weapon_Base_C_OnImpl_Apply_Running_Abnormal final
{
public:
	bool                                          IsApply;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Abnormal_Code_Name;                                // 0x0004(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Weapon_Base_C_OnImpl_Apply_Running_Abnormal) == 0x000004, "Wrong alignment on BP_Weapon_Base_C_OnImpl_Apply_Running_Abnormal");
static_assert(sizeof(BP_Weapon_Base_C_OnImpl_Apply_Running_Abnormal) == 0x00000C, "Wrong size on BP_Weapon_Base_C_OnImpl_Apply_Running_Abnormal");
static_assert(offsetof(BP_Weapon_Base_C_OnImpl_Apply_Running_Abnormal, IsApply) == 0x000000, "Member 'BP_Weapon_Base_C_OnImpl_Apply_Running_Abnormal::IsApply' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_OnImpl_Apply_Running_Abnormal, Abnormal_Code_Name) == 0x000004, "Member 'BP_Weapon_Base_C_OnImpl_Apply_Running_Abnormal::Abnormal_Code_Name' has a wrong offset!");

// Function BP_Weapon_Base.BP_Weapon_Base_C.PutOnAbnormal
// 0x0030 (0x0030 - 0x0000)
struct BP_Weapon_Base_C_PutOnAbnormal final
{
public:
	class FName                                   InAbnormalCodeName;                                // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetWeaponOwner_ReturnValue;               // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsWeaponOn_ReturnValue;                   // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ALCharacter*                            K2Node_DynamicCast_AsLCharacter;                   // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         CallFunc_PutOnWithInstigator_ReturnValue;          // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Weapon_Base_C_PutOnAbnormal) == 0x000008, "Wrong alignment on BP_Weapon_Base_C_PutOnAbnormal");
static_assert(sizeof(BP_Weapon_Base_C_PutOnAbnormal) == 0x000030, "Wrong size on BP_Weapon_Base_C_PutOnAbnormal");
static_assert(offsetof(BP_Weapon_Base_C_PutOnAbnormal, InAbnormalCodeName) == 0x000000, "Member 'BP_Weapon_Base_C_PutOnAbnormal::InAbnormalCodeName' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_PutOnAbnormal, CallFunc_GetWeaponOwner_ReturnValue) == 0x000008, "Member 'BP_Weapon_Base_C_PutOnAbnormal::CallFunc_GetWeaponOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_PutOnAbnormal, CallFunc_IsWeaponOn_ReturnValue) == 0x000010, "Member 'BP_Weapon_Base_C_PutOnAbnormal::CallFunc_IsWeaponOn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_PutOnAbnormal, K2Node_DynamicCast_AsLCharacter) == 0x000018, "Member 'BP_Weapon_Base_C_PutOnAbnormal::K2Node_DynamicCast_AsLCharacter' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_PutOnAbnormal, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_Weapon_Base_C_PutOnAbnormal::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_PutOnAbnormal, CallFunc_PutOnWithInstigator_ReturnValue) == 0x000028, "Member 'BP_Weapon_Base_C_PutOnAbnormal::CallFunc_PutOnWithInstigator_ReturnValue' has a wrong offset!");

// Function BP_Weapon_Base.BP_Weapon_Base_C.IsAppliedGroupAbnormal
// 0x0028 (0x0028 - 0x0000)
struct BP_Weapon_Base_C_IsAppliedGroupAbnormal final
{
public:
	class FName                                   GroupCodename;                                     // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetWeaponOwner_ReturnValue;               // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ALCharacter*                            K2Node_DynamicCast_AsLCharacter;                   // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAppliedGroupAbnormal_ReturnValue;       // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Weapon_Base_C_IsAppliedGroupAbnormal) == 0x000008, "Wrong alignment on BP_Weapon_Base_C_IsAppliedGroupAbnormal");
static_assert(sizeof(BP_Weapon_Base_C_IsAppliedGroupAbnormal) == 0x000028, "Wrong size on BP_Weapon_Base_C_IsAppliedGroupAbnormal");
static_assert(offsetof(BP_Weapon_Base_C_IsAppliedGroupAbnormal, GroupCodename) == 0x000000, "Member 'BP_Weapon_Base_C_IsAppliedGroupAbnormal::GroupCodename' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_IsAppliedGroupAbnormal, Result) == 0x000008, "Member 'BP_Weapon_Base_C_IsAppliedGroupAbnormal::Result' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_IsAppliedGroupAbnormal, CallFunc_GetWeaponOwner_ReturnValue) == 0x000010, "Member 'BP_Weapon_Base_C_IsAppliedGroupAbnormal::CallFunc_GetWeaponOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_IsAppliedGroupAbnormal, K2Node_DynamicCast_AsLCharacter) == 0x000018, "Member 'BP_Weapon_Base_C_IsAppliedGroupAbnormal::K2Node_DynamicCast_AsLCharacter' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_IsAppliedGroupAbnormal, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_Weapon_Base_C_IsAppliedGroupAbnormal::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_IsAppliedGroupAbnormal, CallFunc_IsAppliedGroupAbnormal_ReturnValue) == 0x000021, "Member 'BP_Weapon_Base_C_IsAppliedGroupAbnormal::CallFunc_IsAppliedGroupAbnormal_ReturnValue' has a wrong offset!");

// Function BP_Weapon_Base.BP_Weapon_Base_C.TakeOffbyGroupAbnormal
// 0x0020 (0x0020 - 0x0000)
struct BP_Weapon_Base_C_TakeOffbyGroupAbnormal final
{
public:
	class FName                                   GroupCodename;                                     // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetWeaponOwner_ReturnValue;               // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ALCharacter*                            K2Node_DynamicCast_AsLCharacter;                   // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Weapon_Base_C_TakeOffbyGroupAbnormal) == 0x000008, "Wrong alignment on BP_Weapon_Base_C_TakeOffbyGroupAbnormal");
static_assert(sizeof(BP_Weapon_Base_C_TakeOffbyGroupAbnormal) == 0x000020, "Wrong size on BP_Weapon_Base_C_TakeOffbyGroupAbnormal");
static_assert(offsetof(BP_Weapon_Base_C_TakeOffbyGroupAbnormal, GroupCodename) == 0x000000, "Member 'BP_Weapon_Base_C_TakeOffbyGroupAbnormal::GroupCodename' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_TakeOffbyGroupAbnormal, CallFunc_GetWeaponOwner_ReturnValue) == 0x000008, "Member 'BP_Weapon_Base_C_TakeOffbyGroupAbnormal::CallFunc_GetWeaponOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_TakeOffbyGroupAbnormal, K2Node_DynamicCast_AsLCharacter) == 0x000010, "Member 'BP_Weapon_Base_C_TakeOffbyGroupAbnormal::K2Node_DynamicCast_AsLCharacter' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_TakeOffbyGroupAbnormal, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_Weapon_Base_C_TakeOffbyGroupAbnormal::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_Weapon_Base.BP_Weapon_Base_C.OnImpl Weapon OnOff
// 0x0001 (0x0001 - 0x0000)
struct BP_Weapon_Base_C_OnImpl_Weapon_OnOff final
{
public:
	bool                                          bOn;                                               // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Weapon_Base_C_OnImpl_Weapon_OnOff) == 0x000001, "Wrong alignment on BP_Weapon_Base_C_OnImpl_Weapon_OnOff");
static_assert(sizeof(BP_Weapon_Base_C_OnImpl_Weapon_OnOff) == 0x000001, "Wrong size on BP_Weapon_Base_C_OnImpl_Weapon_OnOff");
static_assert(offsetof(BP_Weapon_Base_C_OnImpl_Weapon_OnOff, bOn) == 0x000000, "Member 'BP_Weapon_Base_C_OnImpl_Weapon_OnOff::bOn' has a wrong offset!");

// Function BP_Weapon_Base.BP_Weapon_Base_C.PutOn_TakeOff_EquipAbnormal
// 0x0030 (0x0030 - 0x0000)
struct BP_Weapon_Base_C_PutOn_TakeOff_EquipAbnormal final
{
public:
	bool                                          bPutOn;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetWeaponOwner_ReturnValue;               // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetEquipAbnormalCodeName_ReturnValue;     // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ALCharacter*                            K2Node_DynamicCast_AsLCharacter;                   // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue;            // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22[0x6];                                       // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         CallFunc_PutOnWithInstigator_ReturnValue;          // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Weapon_Base_C_PutOn_TakeOff_EquipAbnormal) == 0x000008, "Wrong alignment on BP_Weapon_Base_C_PutOn_TakeOff_EquipAbnormal");
static_assert(sizeof(BP_Weapon_Base_C_PutOn_TakeOff_EquipAbnormal) == 0x000030, "Wrong size on BP_Weapon_Base_C_PutOn_TakeOff_EquipAbnormal");
static_assert(offsetof(BP_Weapon_Base_C_PutOn_TakeOff_EquipAbnormal, bPutOn) == 0x000000, "Member 'BP_Weapon_Base_C_PutOn_TakeOff_EquipAbnormal::bPutOn' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_PutOn_TakeOff_EquipAbnormal, CallFunc_GetWeaponOwner_ReturnValue) == 0x000008, "Member 'BP_Weapon_Base_C_PutOn_TakeOff_EquipAbnormal::CallFunc_GetWeaponOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_PutOn_TakeOff_EquipAbnormal, CallFunc_GetEquipAbnormalCodeName_ReturnValue) == 0x000010, "Member 'BP_Weapon_Base_C_PutOn_TakeOff_EquipAbnormal::CallFunc_GetEquipAbnormalCodeName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_PutOn_TakeOff_EquipAbnormal, K2Node_DynamicCast_AsLCharacter) == 0x000018, "Member 'BP_Weapon_Base_C_PutOn_TakeOff_EquipAbnormal::K2Node_DynamicCast_AsLCharacter' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_PutOn_TakeOff_EquipAbnormal, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_Weapon_Base_C_PutOn_TakeOff_EquipAbnormal::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_PutOn_TakeOff_EquipAbnormal, CallFunc_NotEqual_NameName_ReturnValue) == 0x000021, "Member 'BP_Weapon_Base_C_PutOn_TakeOff_EquipAbnormal::CallFunc_NotEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_PutOn_TakeOff_EquipAbnormal, CallFunc_PutOnWithInstigator_ReturnValue) == 0x000028, "Member 'BP_Weapon_Base_C_PutOn_TakeOff_EquipAbnormal::CallFunc_PutOnWithInstigator_ReturnValue' has a wrong offset!");

// Function BP_Weapon_Base.BP_Weapon_Base_C.CreateHandleTemplateActor
// 0x0060 (0x0060 - 0x0000)
struct BP_Weapon_Base_C_CreateHandleTemplateActor final
{
public:
	class ALWeapon*                               ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8[0x8];                                        // 0x0008(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0010(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ALWeapon*                               CallFunc_FinishSpawningActor_ReturnValue;          // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Weapon_Base_C_CreateHandleTemplateActor) == 0x000010, "Wrong alignment on BP_Weapon_Base_C_CreateHandleTemplateActor");
static_assert(sizeof(BP_Weapon_Base_C_CreateHandleTemplateActor) == 0x000060, "Wrong size on BP_Weapon_Base_C_CreateHandleTemplateActor");
static_assert(offsetof(BP_Weapon_Base_C_CreateHandleTemplateActor, ReturnValue) == 0x000000, "Member 'BP_Weapon_Base_C_CreateHandleTemplateActor::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_CreateHandleTemplateActor, CallFunc_MakeTransform_ReturnValue) == 0x000010, "Member 'BP_Weapon_Base_C_CreateHandleTemplateActor::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_CreateHandleTemplateActor, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000040, "Member 'BP_Weapon_Base_C_CreateHandleTemplateActor::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_CreateHandleTemplateActor, CallFunc_FinishSpawningActor_ReturnValue) == 0x000048, "Member 'BP_Weapon_Base_C_CreateHandleTemplateActor::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_CreateHandleTemplateActor, CallFunc_IsValid_ReturnValue) == 0x000050, "Member 'BP_Weapon_Base_C_CreateHandleTemplateActor::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_Weapon_Base.BP_Weapon_Base_C.MoveWeaponActorOnPenetrait
// 0x04A0 (0x04A0 - 0x0000)
struct BP_Weapon_Base_C_MoveWeaponActorOnPenetrait final
{
public:
	struct FVector                                TracePoint2;                                       // 0x0000(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TracePoint1;                                       // 0x000C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0020(0x0010)(ConstParm, ReferenceParm)
	bool                                          Temp_bool_Variable_1;                              // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable_1;                             // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         Temp_object_Variable_1;                            // 0x0038(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0048(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x0054(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x00DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_DoesSocketExist_ReturnValue;              // 0x00DD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x00DE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x00DF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakHitResult_Time;                      // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x00E8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x00F4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0100(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x010C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0128(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0144(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0150(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x015C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoesSocketExist_ReturnValue_1;            // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_169[0x3];                                      // 0x0169(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x016C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_179[0x3];                                      // 0x0179(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector_X;                            // 0x017C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0184(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue;                          // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x018C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_199[0x3];                                      // 0x0199(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x019C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x01AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x01B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x01B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C4[0x4];                                      // 0x01C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldLocation_SweepHitResult;       // 0x01D0(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0258(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Vector_DistanceSquared_ReturnValue;       // 0x0264(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_1;                   // 0x0268(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0270(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_1;    // 0x027C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Vector_DistanceSquared_ReturnValue_1;     // 0x0288(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x028C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_28D[0x3];                                      // 0x028D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit_1;                 // 0x0290(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue_1;            // 0x0318(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit_1;            // 0x0319(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap_1;         // 0x031A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31B[0x1];                                      // 0x031B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time_1;                    // 0x031C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance_1;                // 0x0320(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location_1;                // 0x0324(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint_1;             // 0x0330(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal_1;                  // 0x033C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal_1;            // 0x0348(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_354[0x4];                                      // 0x0354(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat_1;                 // 0x0358(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor_1;                // 0x0360(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent_1;            // 0x0368(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName_1;             // 0x0370(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem_1;                 // 0x0378(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex_1;            // 0x037C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex_1;               // 0x0380(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart_1;              // 0x0384(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd_1;                // 0x0390(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_1;      // 0x039C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue;            // 0x03A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue_1;                     // 0x03B4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_2;                          // 0x03C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_2;                          // 0x03C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_2;                          // 0x03C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x03CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue_1;                        // 0x03D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x03DC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x03E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3E9[0x3];                                      // 0x03E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector_X_3;                          // 0x03EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_3;                          // 0x03F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_3;                          // 0x03F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_1;                           // 0x03F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue_1;          // 0x03FC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0408(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldLocation_SweepHitResult_1;     // 0x0414(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_Weapon_Base_C_MoveWeaponActorOnPenetrait) == 0x000008, "Wrong alignment on BP_Weapon_Base_C_MoveWeaponActorOnPenetrait");
static_assert(sizeof(BP_Weapon_Base_C_MoveWeaponActorOnPenetrait) == 0x0004A0, "Wrong size on BP_Weapon_Base_C_MoveWeaponActorOnPenetrait");
static_assert(offsetof(BP_Weapon_Base_C_MoveWeaponActorOnPenetrait, TracePoint2) == 0x000000, "Member 'BP_Weapon_Base_C_MoveWeaponActorOnPenetrait::TracePoint2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_MoveWeaponActorOnPenetrait, TracePoint1) == 0x00000C, "Member 'BP_Weapon_Base_C_MoveWeaponActorOnPenetrait::TracePoint1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_MoveWeaponActorOnPenetrait, Temp_bool_Variable) == 0x000018, "Member 'BP_Weapon_Base_C_MoveWeaponActorOnPenetrait::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_MoveWeaponActorOnPenetrait, Temp_float_Variable) == 0x00001C, "Member 'BP_Weapon_Base_C_MoveWeaponActorOnPenetrait::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_MoveWeaponActorOnPenetrait, Temp_object_Variable) == 0x000020, "Member 'BP_Weapon_Base_C_MoveWeaponActorOnPenetrait::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_MoveWeaponActorOnPenetrait, Temp_bool_Variable_1) == 0x000030, "Member 'BP_Weapon_Base_C_MoveWeaponActorOnPenetrait::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_MoveWeaponActorOnPenetrait, Temp_float_Variable_1) == 0x000034, "Member 'BP_Weapon_Base_C_MoveWeaponActorOnPenetrait::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_MoveWeaponActorOnPenetrait, Temp_object_Variable_1) == 0x000038, "Member 'BP_Weapon_Base_C_MoveWeaponActorOnPenetrait::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_MoveWeaponActorOnPenetrait, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000048, "Member 'BP_Weapon_Base_C_MoveWeaponActorOnPenetrait::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_MoveWeaponActorOnPenetrait, CallFunc_LineTraceSingle_OutHit) == 0x000054, "Member 'BP_Weapon_Base_C_MoveWeaponActorOnPenetrait::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_MoveWeaponActorOnPenetrait, CallFunc_LineTraceSingle_ReturnValue) == 0x0000DC, "Member 'BP_Weapon_Base_C_MoveWeaponActorOnPenetrait::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_MoveWeaponActorOnPenetrait, CallFunc_DoesSocketExist_ReturnValue) == 0x0000DD, "Member 'BP_Weapon_Base_C_MoveWeaponActorOnPenetrait::CallFunc_DoesSocketExist_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_MoveWeaponActorOnPenetrait, CallFunc_BreakHitResult_bBlockingHit) == 0x0000DE, "Member 'BP_Weapon_Base_C_MoveWeaponActorOnPenetrait::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_MoveWeaponActorOnPenetrait, CallFunc_BreakHitResult_bInitialOverlap) == 0x0000DF, "Member 'BP_Weapon_Base_C_MoveWeaponActorOnPenetrait::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_MoveWeaponActorOnPenetrait, CallFunc_BreakHitResult_Time) == 0x0000E0, "Member 'BP_Weapon_Base_C_MoveWeaponActorOnPenetrait::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_MoveWeaponActorOnPenetrait, CallFunc_BreakHitResult_Distance) == 0x0000E4, "Member 'BP_Weapon_Base_C_MoveWeaponActorOnPenetrait::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_MoveWeaponActorOnPenetrait, CallFunc_BreakHitResult_Location) == 0x0000E8, "Member 'BP_Weapon_Base_C_MoveWeaponActorOnPenetrait::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_MoveWeaponActorOnPenetrait, CallFunc_BreakHitResult_ImpactPoint) == 0x0000F4, "Member 'BP_Weapon_Base_C_MoveWeaponActorOnPenetrait::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_MoveWeaponActorOnPenetrait, CallFunc_BreakHitResult_Normal) == 0x000100, "Member 'BP_Weapon_Base_C_MoveWeaponActorOnPenetrait::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_MoveWeaponActorOnPenetrait, CallFunc_BreakHitResult_ImpactNormal) == 0x00010C, "Member 'BP_Weapon_Base_C_MoveWeaponActorOnPenetrait::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_MoveWeaponActorOnPenetrait, CallFunc_BreakHitResult_PhysMat) == 0x000118, "Member 'BP_Weapon_Base_C_MoveWeaponActorOnPenetrait::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_MoveWeaponActorOnPenetrait, CallFunc_BreakHitResult_HitActor) == 0x000120, "Member 'BP_Weapon_Base_C_MoveWeaponActorOnPenetrait::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_MoveWeaponActorOnPenetrait, CallFunc_BreakHitResult_HitComponent) == 0x000128, "Member 'BP_Weapon_Base_C_MoveWeaponActorOnPenetrait::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_MoveWeaponActorOnPenetrait, CallFunc_BreakHitResult_HitBoneName) == 0x000130, "Member 'BP_Weapon_Base_C_MoveWeaponActorOnPenetrait::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_MoveWeaponActorOnPenetrait, CallFunc_BreakHitResult_HitItem) == 0x000138, "Member 'BP_Weapon_Base_C_MoveWeaponActorOnPenetrait::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_MoveWeaponActorOnPenetrait, CallFunc_BreakHitResult_ElementIndex) == 0x00013C, "Member 'BP_Weapon_Base_C_MoveWeaponActorOnPenetrait::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_MoveWeaponActorOnPenetrait, CallFunc_BreakHitResult_FaceIndex) == 0x000140, "Member 'BP_Weapon_Base_C_MoveWeaponActorOnPenetrait::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_MoveWeaponActorOnPenetrait, CallFunc_BreakHitResult_TraceStart) == 0x000144, "Member 'BP_Weapon_Base_C_MoveWeaponActorOnPenetrait::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_MoveWeaponActorOnPenetrait, CallFunc_BreakHitResult_TraceEnd) == 0x000150, "Member 'BP_Weapon_Base_C_MoveWeaponActorOnPenetrait::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_MoveWeaponActorOnPenetrait, CallFunc_Subtract_VectorVector_ReturnValue) == 0x00015C, "Member 'BP_Weapon_Base_C_MoveWeaponActorOnPenetrait::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_MoveWeaponActorOnPenetrait, CallFunc_DoesSocketExist_ReturnValue_1) == 0x000168, "Member 'BP_Weapon_Base_C_MoveWeaponActorOnPenetrait::CallFunc_DoesSocketExist_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_MoveWeaponActorOnPenetrait, CallFunc_Normal_ReturnValue) == 0x00016C, "Member 'BP_Weapon_Base_C_MoveWeaponActorOnPenetrait::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_MoveWeaponActorOnPenetrait, CallFunc_BooleanAND_ReturnValue) == 0x000178, "Member 'BP_Weapon_Base_C_MoveWeaponActorOnPenetrait::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_MoveWeaponActorOnPenetrait, CallFunc_BreakVector_X) == 0x00017C, "Member 'BP_Weapon_Base_C_MoveWeaponActorOnPenetrait::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_MoveWeaponActorOnPenetrait, CallFunc_BreakVector_Y) == 0x000180, "Member 'BP_Weapon_Base_C_MoveWeaponActorOnPenetrait::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_MoveWeaponActorOnPenetrait, CallFunc_BreakVector_Z) == 0x000184, "Member 'BP_Weapon_Base_C_MoveWeaponActorOnPenetrait::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_MoveWeaponActorOnPenetrait, CallFunc_Abs_ReturnValue) == 0x000188, "Member 'BP_Weapon_Base_C_MoveWeaponActorOnPenetrait::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_MoveWeaponActorOnPenetrait, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x00018C, "Member 'BP_Weapon_Base_C_MoveWeaponActorOnPenetrait::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_MoveWeaponActorOnPenetrait, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000198, "Member 'BP_Weapon_Base_C_MoveWeaponActorOnPenetrait::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_MoveWeaponActorOnPenetrait, CallFunc_Add_VectorVector_ReturnValue) == 0x00019C, "Member 'BP_Weapon_Base_C_MoveWeaponActorOnPenetrait::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_MoveWeaponActorOnPenetrait, CallFunc_BreakVector_X_1) == 0x0001A8, "Member 'BP_Weapon_Base_C_MoveWeaponActorOnPenetrait::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_MoveWeaponActorOnPenetrait, CallFunc_BreakVector_Y_1) == 0x0001AC, "Member 'BP_Weapon_Base_C_MoveWeaponActorOnPenetrait::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_MoveWeaponActorOnPenetrait, CallFunc_BreakVector_Z_1) == 0x0001B0, "Member 'BP_Weapon_Base_C_MoveWeaponActorOnPenetrait::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_MoveWeaponActorOnPenetrait, K2Node_Select_Default) == 0x0001B4, "Member 'BP_Weapon_Base_C_MoveWeaponActorOnPenetrait::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_MoveWeaponActorOnPenetrait, CallFunc_MakeVector_ReturnValue) == 0x0001B8, "Member 'BP_Weapon_Base_C_MoveWeaponActorOnPenetrait::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_MoveWeaponActorOnPenetrait, CallFunc_GetOwner_ReturnValue) == 0x0001C8, "Member 'BP_Weapon_Base_C_MoveWeaponActorOnPenetrait::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_MoveWeaponActorOnPenetrait, CallFunc_K2_SetWorldLocation_SweepHitResult) == 0x0001D0, "Member 'BP_Weapon_Base_C_MoveWeaponActorOnPenetrait::CallFunc_K2_SetWorldLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_MoveWeaponActorOnPenetrait, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000258, "Member 'BP_Weapon_Base_C_MoveWeaponActorOnPenetrait::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_MoveWeaponActorOnPenetrait, CallFunc_Vector_DistanceSquared_ReturnValue) == 0x000264, "Member 'BP_Weapon_Base_C_MoveWeaponActorOnPenetrait::CallFunc_Vector_DistanceSquared_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_MoveWeaponActorOnPenetrait, CallFunc_GetOwner_ReturnValue_1) == 0x000268, "Member 'BP_Weapon_Base_C_MoveWeaponActorOnPenetrait::CallFunc_GetOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_MoveWeaponActorOnPenetrait, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000270, "Member 'BP_Weapon_Base_C_MoveWeaponActorOnPenetrait::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_MoveWeaponActorOnPenetrait, CallFunc_K2_GetComponentLocation_ReturnValue_1) == 0x00027C, "Member 'BP_Weapon_Base_C_MoveWeaponActorOnPenetrait::CallFunc_K2_GetComponentLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_MoveWeaponActorOnPenetrait, CallFunc_Vector_DistanceSquared_ReturnValue_1) == 0x000288, "Member 'BP_Weapon_Base_C_MoveWeaponActorOnPenetrait::CallFunc_Vector_DistanceSquared_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_MoveWeaponActorOnPenetrait, CallFunc_Less_FloatFloat_ReturnValue) == 0x00028C, "Member 'BP_Weapon_Base_C_MoveWeaponActorOnPenetrait::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_MoveWeaponActorOnPenetrait, CallFunc_LineTraceSingle_OutHit_1) == 0x000290, "Member 'BP_Weapon_Base_C_MoveWeaponActorOnPenetrait::CallFunc_LineTraceSingle_OutHit_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_MoveWeaponActorOnPenetrait, CallFunc_LineTraceSingle_ReturnValue_1) == 0x000318, "Member 'BP_Weapon_Base_C_MoveWeaponActorOnPenetrait::CallFunc_LineTraceSingle_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_MoveWeaponActorOnPenetrait, CallFunc_BreakHitResult_bBlockingHit_1) == 0x000319, "Member 'BP_Weapon_Base_C_MoveWeaponActorOnPenetrait::CallFunc_BreakHitResult_bBlockingHit_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_MoveWeaponActorOnPenetrait, CallFunc_BreakHitResult_bInitialOverlap_1) == 0x00031A, "Member 'BP_Weapon_Base_C_MoveWeaponActorOnPenetrait::CallFunc_BreakHitResult_bInitialOverlap_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_MoveWeaponActorOnPenetrait, CallFunc_BreakHitResult_Time_1) == 0x00031C, "Member 'BP_Weapon_Base_C_MoveWeaponActorOnPenetrait::CallFunc_BreakHitResult_Time_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_MoveWeaponActorOnPenetrait, CallFunc_BreakHitResult_Distance_1) == 0x000320, "Member 'BP_Weapon_Base_C_MoveWeaponActorOnPenetrait::CallFunc_BreakHitResult_Distance_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_MoveWeaponActorOnPenetrait, CallFunc_BreakHitResult_Location_1) == 0x000324, "Member 'BP_Weapon_Base_C_MoveWeaponActorOnPenetrait::CallFunc_BreakHitResult_Location_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_MoveWeaponActorOnPenetrait, CallFunc_BreakHitResult_ImpactPoint_1) == 0x000330, "Member 'BP_Weapon_Base_C_MoveWeaponActorOnPenetrait::CallFunc_BreakHitResult_ImpactPoint_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_MoveWeaponActorOnPenetrait, CallFunc_BreakHitResult_Normal_1) == 0x00033C, "Member 'BP_Weapon_Base_C_MoveWeaponActorOnPenetrait::CallFunc_BreakHitResult_Normal_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_MoveWeaponActorOnPenetrait, CallFunc_BreakHitResult_ImpactNormal_1) == 0x000348, "Member 'BP_Weapon_Base_C_MoveWeaponActorOnPenetrait::CallFunc_BreakHitResult_ImpactNormal_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_MoveWeaponActorOnPenetrait, CallFunc_BreakHitResult_PhysMat_1) == 0x000358, "Member 'BP_Weapon_Base_C_MoveWeaponActorOnPenetrait::CallFunc_BreakHitResult_PhysMat_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_MoveWeaponActorOnPenetrait, CallFunc_BreakHitResult_HitActor_1) == 0x000360, "Member 'BP_Weapon_Base_C_MoveWeaponActorOnPenetrait::CallFunc_BreakHitResult_HitActor_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_MoveWeaponActorOnPenetrait, CallFunc_BreakHitResult_HitComponent_1) == 0x000368, "Member 'BP_Weapon_Base_C_MoveWeaponActorOnPenetrait::CallFunc_BreakHitResult_HitComponent_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_MoveWeaponActorOnPenetrait, CallFunc_BreakHitResult_HitBoneName_1) == 0x000370, "Member 'BP_Weapon_Base_C_MoveWeaponActorOnPenetrait::CallFunc_BreakHitResult_HitBoneName_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_MoveWeaponActorOnPenetrait, CallFunc_BreakHitResult_HitItem_1) == 0x000378, "Member 'BP_Weapon_Base_C_MoveWeaponActorOnPenetrait::CallFunc_BreakHitResult_HitItem_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_MoveWeaponActorOnPenetrait, CallFunc_BreakHitResult_ElementIndex_1) == 0x00037C, "Member 'BP_Weapon_Base_C_MoveWeaponActorOnPenetrait::CallFunc_BreakHitResult_ElementIndex_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_MoveWeaponActorOnPenetrait, CallFunc_BreakHitResult_FaceIndex_1) == 0x000380, "Member 'BP_Weapon_Base_C_MoveWeaponActorOnPenetrait::CallFunc_BreakHitResult_FaceIndex_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_MoveWeaponActorOnPenetrait, CallFunc_BreakHitResult_TraceStart_1) == 0x000384, "Member 'BP_Weapon_Base_C_MoveWeaponActorOnPenetrait::CallFunc_BreakHitResult_TraceStart_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_MoveWeaponActorOnPenetrait, CallFunc_BreakHitResult_TraceEnd_1) == 0x000390, "Member 'BP_Weapon_Base_C_MoveWeaponActorOnPenetrait::CallFunc_BreakHitResult_TraceEnd_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_MoveWeaponActorOnPenetrait, CallFunc_Subtract_VectorVector_ReturnValue_1) == 0x00039C, "Member 'BP_Weapon_Base_C_MoveWeaponActorOnPenetrait::CallFunc_Subtract_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_MoveWeaponActorOnPenetrait, CallFunc_GetSocketLocation_ReturnValue) == 0x0003A8, "Member 'BP_Weapon_Base_C_MoveWeaponActorOnPenetrait::CallFunc_GetSocketLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_MoveWeaponActorOnPenetrait, CallFunc_Normal_ReturnValue_1) == 0x0003B4, "Member 'BP_Weapon_Base_C_MoveWeaponActorOnPenetrait::CallFunc_Normal_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_MoveWeaponActorOnPenetrait, CallFunc_BreakVector_X_2) == 0x0003C0, "Member 'BP_Weapon_Base_C_MoveWeaponActorOnPenetrait::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_MoveWeaponActorOnPenetrait, CallFunc_BreakVector_Y_2) == 0x0003C4, "Member 'BP_Weapon_Base_C_MoveWeaponActorOnPenetrait::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_MoveWeaponActorOnPenetrait, CallFunc_BreakVector_Z_2) == 0x0003C8, "Member 'BP_Weapon_Base_C_MoveWeaponActorOnPenetrait::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_MoveWeaponActorOnPenetrait, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x0003CC, "Member 'BP_Weapon_Base_C_MoveWeaponActorOnPenetrait::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_MoveWeaponActorOnPenetrait, CallFunc_Abs_ReturnValue_1) == 0x0003D8, "Member 'BP_Weapon_Base_C_MoveWeaponActorOnPenetrait::CallFunc_Abs_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_MoveWeaponActorOnPenetrait, CallFunc_Add_VectorVector_ReturnValue_1) == 0x0003DC, "Member 'BP_Weapon_Base_C_MoveWeaponActorOnPenetrait::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_MoveWeaponActorOnPenetrait, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x0003E8, "Member 'BP_Weapon_Base_C_MoveWeaponActorOnPenetrait::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_MoveWeaponActorOnPenetrait, CallFunc_BreakVector_X_3) == 0x0003EC, "Member 'BP_Weapon_Base_C_MoveWeaponActorOnPenetrait::CallFunc_BreakVector_X_3' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_MoveWeaponActorOnPenetrait, CallFunc_BreakVector_Y_3) == 0x0003F0, "Member 'BP_Weapon_Base_C_MoveWeaponActorOnPenetrait::CallFunc_BreakVector_Y_3' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_MoveWeaponActorOnPenetrait, CallFunc_BreakVector_Z_3) == 0x0003F4, "Member 'BP_Weapon_Base_C_MoveWeaponActorOnPenetrait::CallFunc_BreakVector_Z_3' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_MoveWeaponActorOnPenetrait, K2Node_Select_Default_1) == 0x0003F8, "Member 'BP_Weapon_Base_C_MoveWeaponActorOnPenetrait::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_MoveWeaponActorOnPenetrait, CallFunc_GetSocketLocation_ReturnValue_1) == 0x0003FC, "Member 'BP_Weapon_Base_C_MoveWeaponActorOnPenetrait::CallFunc_GetSocketLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_MoveWeaponActorOnPenetrait, CallFunc_MakeVector_ReturnValue_1) == 0x000408, "Member 'BP_Weapon_Base_C_MoveWeaponActorOnPenetrait::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_MoveWeaponActorOnPenetrait, CallFunc_K2_SetWorldLocation_SweepHitResult_1) == 0x000414, "Member 'BP_Weapon_Base_C_MoveWeaponActorOnPenetrait::CallFunc_K2_SetWorldLocation_SweepHitResult_1' has a wrong offset!");

// Function BP_Weapon_Base.BP_Weapon_Base_C.OnImpl Weapon Changed
// 0x0010 (0x0010 - 0x0000)
struct BP_Weapon_Base_C_OnImpl_Weapon_Changed final
{
public:
	class ALWeapon*                               From;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ALWeapon*                               To;                                                // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Weapon_Base_C_OnImpl_Weapon_Changed) == 0x000008, "Wrong alignment on BP_Weapon_Base_C_OnImpl_Weapon_Changed");
static_assert(sizeof(BP_Weapon_Base_C_OnImpl_Weapon_Changed) == 0x000010, "Wrong size on BP_Weapon_Base_C_OnImpl_Weapon_Changed");
static_assert(offsetof(BP_Weapon_Base_C_OnImpl_Weapon_Changed, From) == 0x000000, "Member 'BP_Weapon_Base_C_OnImpl_Weapon_Changed::From' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_OnImpl_Weapon_Changed, To) == 0x000008, "Member 'BP_Weapon_Base_C_OnImpl_Weapon_Changed::To' has a wrong offset!");

// Function BP_Weapon_Base.BP_Weapon_Base_C.TakeOffAbnormal
// 0x0030 (0x0030 - 0x0000)
struct BP_Weapon_Base_C_TakeOffAbnormal final
{
public:
	class FName                                   InAbnormalCodeName;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Immediately;                                       // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetWeaponOwner_ReturnValue;               // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsWeaponOn_ReturnValue;                   // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ALCharacter*                            K2Node_DynamicCast_AsLCharacter;                   // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Weapon_Base_C_TakeOffAbnormal) == 0x000008, "Wrong alignment on BP_Weapon_Base_C_TakeOffAbnormal");
static_assert(sizeof(BP_Weapon_Base_C_TakeOffAbnormal) == 0x000030, "Wrong size on BP_Weapon_Base_C_TakeOffAbnormal");
static_assert(offsetof(BP_Weapon_Base_C_TakeOffAbnormal, InAbnormalCodeName) == 0x000000, "Member 'BP_Weapon_Base_C_TakeOffAbnormal::InAbnormalCodeName' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_TakeOffAbnormal, Immediately) == 0x000008, "Member 'BP_Weapon_Base_C_TakeOffAbnormal::Immediately' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_TakeOffAbnormal, CallFunc_GetWeaponOwner_ReturnValue) == 0x000010, "Member 'BP_Weapon_Base_C_TakeOffAbnormal::CallFunc_GetWeaponOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_TakeOffAbnormal, CallFunc_IsWeaponOn_ReturnValue) == 0x000018, "Member 'BP_Weapon_Base_C_TakeOffAbnormal::CallFunc_IsWeaponOn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_TakeOffAbnormal, K2Node_DynamicCast_AsLCharacter) == 0x000020, "Member 'BP_Weapon_Base_C_TakeOffAbnormal::K2Node_DynamicCast_AsLCharacter' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_TakeOffAbnormal, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_Weapon_Base_C_TakeOffAbnormal::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_Weapon_Base.BP_Weapon_Base_C.SetWeaponFableArtsSkill
// 0x0040 (0x0040 - 0x0000)
struct BP_Weapon_Base_C_SetWeaponFableArtsSkill final
{
public:
	class FName                                   OverrideBladeSkillCodeName;                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   OverrideHandleSkillCodeName;                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FItemHandleInfoPtr                     CallFunc_GetHandleInfo_ReturnValue;                // 0x0010(0x0008)(NoDestructor)
	class FName                                   CallFunc_GetFrenzySkillCodeName_ReturnValue;       // 0x0018(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue;            // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue_1;          // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_23[0x5];                                       // 0x0023(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FItemBladeInfoPtr                      CallFunc_GetBladeInfo_ReturnValue;                 // 0x0028(0x0008)(NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetFrenzySkillCodeName_ReturnValue_1;     // 0x0034(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Weapon_Base_C_SetWeaponFableArtsSkill) == 0x000008, "Wrong alignment on BP_Weapon_Base_C_SetWeaponFableArtsSkill");
static_assert(sizeof(BP_Weapon_Base_C_SetWeaponFableArtsSkill) == 0x000040, "Wrong size on BP_Weapon_Base_C_SetWeaponFableArtsSkill");
static_assert(offsetof(BP_Weapon_Base_C_SetWeaponFableArtsSkill, OverrideBladeSkillCodeName) == 0x000000, "Member 'BP_Weapon_Base_C_SetWeaponFableArtsSkill::OverrideBladeSkillCodeName' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_SetWeaponFableArtsSkill, OverrideHandleSkillCodeName) == 0x000008, "Member 'BP_Weapon_Base_C_SetWeaponFableArtsSkill::OverrideHandleSkillCodeName' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_SetWeaponFableArtsSkill, CallFunc_GetHandleInfo_ReturnValue) == 0x000010, "Member 'BP_Weapon_Base_C_SetWeaponFableArtsSkill::CallFunc_GetHandleInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_SetWeaponFableArtsSkill, CallFunc_GetFrenzySkillCodeName_ReturnValue) == 0x000018, "Member 'BP_Weapon_Base_C_SetWeaponFableArtsSkill::CallFunc_GetFrenzySkillCodeName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_SetWeaponFableArtsSkill, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'BP_Weapon_Base_C_SetWeaponFableArtsSkill::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_SetWeaponFableArtsSkill, CallFunc_NotEqual_NameName_ReturnValue) == 0x000021, "Member 'BP_Weapon_Base_C_SetWeaponFableArtsSkill::CallFunc_NotEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_SetWeaponFableArtsSkill, CallFunc_NotEqual_NameName_ReturnValue_1) == 0x000022, "Member 'BP_Weapon_Base_C_SetWeaponFableArtsSkill::CallFunc_NotEqual_NameName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_SetWeaponFableArtsSkill, CallFunc_GetBladeInfo_ReturnValue) == 0x000028, "Member 'BP_Weapon_Base_C_SetWeaponFableArtsSkill::CallFunc_GetBladeInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_SetWeaponFableArtsSkill, CallFunc_IsValid_ReturnValue_1) == 0x000030, "Member 'BP_Weapon_Base_C_SetWeaponFableArtsSkill::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Weapon_Base_C_SetWeaponFableArtsSkill, CallFunc_GetFrenzySkillCodeName_ReturnValue_1) == 0x000034, "Member 'BP_Weapon_Base_C_SetWeaponFableArtsSkill::CallFunc_GetFrenzySkillCodeName_ReturnValue_1' has a wrong offset!");

}


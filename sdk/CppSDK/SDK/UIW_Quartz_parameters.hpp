#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UIW_Quartz

#include "Basic.hpp"

#include "UIST_PocketNavi_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "ProjectP_structs.hpp"
#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"
#include "ProjectPContentInfo_structs.hpp"
#include "InputCore_structs.hpp"


namespace SDK::Params
{

// Function UIW_Quartz.UIW_Quartz_C.ExecuteUbergraph_UIW_Quartz
// 0x0090 (0x0090 - 0x0000)
struct UIW_Quartz_C_ExecuteUbergraph_UIW_Quartz final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUIW_Btn_Key_C*                         K2Node_ComponentBoundEvent_BtnKey_1;               // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUIW_Btn_Key_C*                         K2Node_ComponentBoundEvent_BtnKey_2;               // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUIW_Btn_Key_C*                         K2Node_ComponentBoundEvent_BtnKey;                 // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_ComponentBoundEvent_AxisX;                  // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_ComponentBoundEvent_AxisY;                  // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_ComponentBoundEvent_AxisXY;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_ComponentBoundEvent_Angle;                  // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue;        // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue_1;      // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A[0x2];                                       // 0x003A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_GetMousePositionOnViewport_ReturnValue;   // 0x003C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue;                  // 0x0048(0x0008)(NoDestructor, HasGetValueTypeHash)
	class ULGameDataSystem*                       CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue_2;      // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsVisible_ReturnValue_1;                  // 0x005B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsVisible_ReturnValue_2;                  // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsVisible_ReturnValue_3;                  // 0x005D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsVisible_ReturnValue_4;                  // 0x005E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x005F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<class UWidget*>                        K2Node_MakeArray_Array;                            // 0x0060(0x0010)(ReferenceParm, ContainsInstancedReference)
	float                                         K2Node_ComponentBoundEvent_Delta;                  // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue;            // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UUIW_Quartz_Pocket_C*>           K2Node_MakeArray_Array_1;                          // 0x0078(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UIW_Quartz_C_ExecuteUbergraph_UIW_Quartz) == 0x000008, "Wrong alignment on UIW_Quartz_C_ExecuteUbergraph_UIW_Quartz");
static_assert(sizeof(UIW_Quartz_C_ExecuteUbergraph_UIW_Quartz) == 0x000090, "Wrong size on UIW_Quartz_C_ExecuteUbergraph_UIW_Quartz");
static_assert(offsetof(UIW_Quartz_C_ExecuteUbergraph_UIW_Quartz, EntryPoint) == 0x000000, "Member 'UIW_Quartz_C_ExecuteUbergraph_UIW_Quartz::EntryPoint' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_ExecuteUbergraph_UIW_Quartz, K2Node_ComponentBoundEvent_BtnKey_1) == 0x000008, "Member 'UIW_Quartz_C_ExecuteUbergraph_UIW_Quartz::K2Node_ComponentBoundEvent_BtnKey_1' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_ExecuteUbergraph_UIW_Quartz, K2Node_ComponentBoundEvent_BtnKey_2) == 0x000010, "Member 'UIW_Quartz_C_ExecuteUbergraph_UIW_Quartz::K2Node_ComponentBoundEvent_BtnKey_2' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_ExecuteUbergraph_UIW_Quartz, CallFunc_IsVisible_ReturnValue) == 0x000018, "Member 'UIW_Quartz_C_ExecuteUbergraph_UIW_Quartz::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_ExecuteUbergraph_UIW_Quartz, K2Node_ComponentBoundEvent_BtnKey) == 0x000020, "Member 'UIW_Quartz_C_ExecuteUbergraph_UIW_Quartz::K2Node_ComponentBoundEvent_BtnKey' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_ExecuteUbergraph_UIW_Quartz, K2Node_ComponentBoundEvent_AxisX) == 0x000028, "Member 'UIW_Quartz_C_ExecuteUbergraph_UIW_Quartz::K2Node_ComponentBoundEvent_AxisX' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_ExecuteUbergraph_UIW_Quartz, K2Node_ComponentBoundEvent_AxisY) == 0x00002C, "Member 'UIW_Quartz_C_ExecuteUbergraph_UIW_Quartz::K2Node_ComponentBoundEvent_AxisY' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_ExecuteUbergraph_UIW_Quartz, K2Node_ComponentBoundEvent_AxisXY) == 0x000030, "Member 'UIW_Quartz_C_ExecuteUbergraph_UIW_Quartz::K2Node_ComponentBoundEvent_AxisXY' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_ExecuteUbergraph_UIW_Quartz, K2Node_ComponentBoundEvent_Angle) == 0x000034, "Member 'UIW_Quartz_C_ExecuteUbergraph_UIW_Quartz::K2Node_ComponentBoundEvent_Angle' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_ExecuteUbergraph_UIW_Quartz, CallFunc_EqualEqual_FloatFloat_ReturnValue) == 0x000038, "Member 'UIW_Quartz_C_ExecuteUbergraph_UIW_Quartz::CallFunc_EqualEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_ExecuteUbergraph_UIW_Quartz, CallFunc_EqualEqual_FloatFloat_ReturnValue_1) == 0x000039, "Member 'UIW_Quartz_C_ExecuteUbergraph_UIW_Quartz::CallFunc_EqualEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_ExecuteUbergraph_UIW_Quartz, CallFunc_GetMousePositionOnViewport_ReturnValue) == 0x00003C, "Member 'UIW_Quartz_C_ExecuteUbergraph_UIW_Quartz::CallFunc_GetMousePositionOnViewport_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_ExecuteUbergraph_UIW_Quartz, CallFunc_K2_SetTimer_ReturnValue) == 0x000048, "Member 'UIW_Quartz_C_ExecuteUbergraph_UIW_Quartz::CallFunc_K2_SetTimer_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_ExecuteUbergraph_UIW_Quartz, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000050, "Member 'UIW_Quartz_C_ExecuteUbergraph_UIW_Quartz::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_ExecuteUbergraph_UIW_Quartz, CallFunc_IsValid_ReturnValue) == 0x000058, "Member 'UIW_Quartz_C_ExecuteUbergraph_UIW_Quartz::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_ExecuteUbergraph_UIW_Quartz, CallFunc_EqualEqual_FloatFloat_ReturnValue_2) == 0x000059, "Member 'UIW_Quartz_C_ExecuteUbergraph_UIW_Quartz::CallFunc_EqualEqual_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_ExecuteUbergraph_UIW_Quartz, CallFunc_BooleanAND_ReturnValue) == 0x00005A, "Member 'UIW_Quartz_C_ExecuteUbergraph_UIW_Quartz::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_ExecuteUbergraph_UIW_Quartz, CallFunc_IsVisible_ReturnValue_1) == 0x00005B, "Member 'UIW_Quartz_C_ExecuteUbergraph_UIW_Quartz::CallFunc_IsVisible_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_ExecuteUbergraph_UIW_Quartz, CallFunc_IsVisible_ReturnValue_2) == 0x00005C, "Member 'UIW_Quartz_C_ExecuteUbergraph_UIW_Quartz::CallFunc_IsVisible_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_ExecuteUbergraph_UIW_Quartz, CallFunc_IsVisible_ReturnValue_3) == 0x00005D, "Member 'UIW_Quartz_C_ExecuteUbergraph_UIW_Quartz::CallFunc_IsVisible_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_ExecuteUbergraph_UIW_Quartz, CallFunc_IsVisible_ReturnValue_4) == 0x00005E, "Member 'UIW_Quartz_C_ExecuteUbergraph_UIW_Quartz::CallFunc_IsVisible_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_ExecuteUbergraph_UIW_Quartz, CallFunc_IsValid_ReturnValue_1) == 0x00005F, "Member 'UIW_Quartz_C_ExecuteUbergraph_UIW_Quartz::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_ExecuteUbergraph_UIW_Quartz, K2Node_MakeArray_Array) == 0x000060, "Member 'UIW_Quartz_C_ExecuteUbergraph_UIW_Quartz::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_ExecuteUbergraph_UIW_Quartz, K2Node_ComponentBoundEvent_Delta) == 0x000070, "Member 'UIW_Quartz_C_ExecuteUbergraph_UIW_Quartz::K2Node_ComponentBoundEvent_Delta' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_ExecuteUbergraph_UIW_Quartz, CallFunc_Multiply_IntFloat_ReturnValue) == 0x000074, "Member 'UIW_Quartz_C_ExecuteUbergraph_UIW_Quartz::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_ExecuteUbergraph_UIW_Quartz, K2Node_MakeArray_Array_1) == 0x000078, "Member 'UIW_Quartz_C_ExecuteUbergraph_UIW_Quartz::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_ExecuteUbergraph_UIW_Quartz, CallFunc_IsValid_ReturnValue_2) == 0x000088, "Member 'UIW_Quartz_C_ExecuteUbergraph_UIW_Quartz::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");

// Function UIW_Quartz.UIW_Quartz_C.BndEvt__UIW_Quartz_Btn_Zoom_K2Node_ComponentBoundEvent_5_OnScroll__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct UIW_Quartz_C_BndEvt__UIW_Quartz_Btn_Zoom_K2Node_ComponentBoundEvent_5_OnScroll__DelegateSignature final
{
public:
	float                                         Delta;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UIW_Quartz_C_BndEvt__UIW_Quartz_Btn_Zoom_K2Node_ComponentBoundEvent_5_OnScroll__DelegateSignature) == 0x000004, "Wrong alignment on UIW_Quartz_C_BndEvt__UIW_Quartz_Btn_Zoom_K2Node_ComponentBoundEvent_5_OnScroll__DelegateSignature");
static_assert(sizeof(UIW_Quartz_C_BndEvt__UIW_Quartz_Btn_Zoom_K2Node_ComponentBoundEvent_5_OnScroll__DelegateSignature) == 0x000004, "Wrong size on UIW_Quartz_C_BndEvt__UIW_Quartz_Btn_Zoom_K2Node_ComponentBoundEvent_5_OnScroll__DelegateSignature");
static_assert(offsetof(UIW_Quartz_C_BndEvt__UIW_Quartz_Btn_Zoom_K2Node_ComponentBoundEvent_5_OnScroll__DelegateSignature, Delta) == 0x000000, "Member 'UIW_Quartz_C_BndEvt__UIW_Quartz_Btn_Zoom_K2Node_ComponentBoundEvent_5_OnScroll__DelegateSignature::Delta' has a wrong offset!");

// Function UIW_Quartz.UIW_Quartz_C.BndEvt__Btn_Move_K2Node_ComponentBoundEvent_2_OnAxis__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct UIW_Quartz_C_BndEvt__Btn_Move_K2Node_ComponentBoundEvent_2_OnAxis__DelegateSignature final
{
public:
	class UUIW_Btn_Key_C*                         BtnKey;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AxisX;                                             // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AxisY;                                             // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AxisXY;                                            // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Angle;                                             // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UIW_Quartz_C_BndEvt__Btn_Move_K2Node_ComponentBoundEvent_2_OnAxis__DelegateSignature) == 0x000008, "Wrong alignment on UIW_Quartz_C_BndEvt__Btn_Move_K2Node_ComponentBoundEvent_2_OnAxis__DelegateSignature");
static_assert(sizeof(UIW_Quartz_C_BndEvt__Btn_Move_K2Node_ComponentBoundEvent_2_OnAxis__DelegateSignature) == 0x000018, "Wrong size on UIW_Quartz_C_BndEvt__Btn_Move_K2Node_ComponentBoundEvent_2_OnAxis__DelegateSignature");
static_assert(offsetof(UIW_Quartz_C_BndEvt__Btn_Move_K2Node_ComponentBoundEvent_2_OnAxis__DelegateSignature, BtnKey) == 0x000000, "Member 'UIW_Quartz_C_BndEvt__Btn_Move_K2Node_ComponentBoundEvent_2_OnAxis__DelegateSignature::BtnKey' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_BndEvt__Btn_Move_K2Node_ComponentBoundEvent_2_OnAxis__DelegateSignature, AxisX) == 0x000008, "Member 'UIW_Quartz_C_BndEvt__Btn_Move_K2Node_ComponentBoundEvent_2_OnAxis__DelegateSignature::AxisX' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_BndEvt__Btn_Move_K2Node_ComponentBoundEvent_2_OnAxis__DelegateSignature, AxisY) == 0x00000C, "Member 'UIW_Quartz_C_BndEvt__Btn_Move_K2Node_ComponentBoundEvent_2_OnAxis__DelegateSignature::AxisY' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_BndEvt__Btn_Move_K2Node_ComponentBoundEvent_2_OnAxis__DelegateSignature, AxisXY) == 0x000010, "Member 'UIW_Quartz_C_BndEvt__Btn_Move_K2Node_ComponentBoundEvent_2_OnAxis__DelegateSignature::AxisXY' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_BndEvt__Btn_Move_K2Node_ComponentBoundEvent_2_OnAxis__DelegateSignature, Angle) == 0x000014, "Member 'UIW_Quartz_C_BndEvt__Btn_Move_K2Node_ComponentBoundEvent_2_OnAxis__DelegateSignature::Angle' has a wrong offset!");

// Function UIW_Quartz.UIW_Quartz_C.BndEvt__Btn_Select_K2Node_ComponentBoundEvent_1_OnActive__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct UIW_Quartz_C_BndEvt__Btn_Select_K2Node_ComponentBoundEvent_1_OnActive__DelegateSignature final
{
public:
	class UUIW_Btn_Key_C*                         BtnKey;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UIW_Quartz_C_BndEvt__Btn_Select_K2Node_ComponentBoundEvent_1_OnActive__DelegateSignature) == 0x000008, "Wrong alignment on UIW_Quartz_C_BndEvt__Btn_Select_K2Node_ComponentBoundEvent_1_OnActive__DelegateSignature");
static_assert(sizeof(UIW_Quartz_C_BndEvt__Btn_Select_K2Node_ComponentBoundEvent_1_OnActive__DelegateSignature) == 0x000008, "Wrong size on UIW_Quartz_C_BndEvt__Btn_Select_K2Node_ComponentBoundEvent_1_OnActive__DelegateSignature");
static_assert(offsetof(UIW_Quartz_C_BndEvt__Btn_Select_K2Node_ComponentBoundEvent_1_OnActive__DelegateSignature, BtnKey) == 0x000000, "Member 'UIW_Quartz_C_BndEvt__Btn_Select_K2Node_ComponentBoundEvent_1_OnActive__DelegateSignature::BtnKey' has a wrong offset!");

// Function UIW_Quartz.UIW_Quartz_C.BndEvt__Btn_Back_K2Node_ComponentBoundEvent_0_OnActive__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct UIW_Quartz_C_BndEvt__Btn_Back_K2Node_ComponentBoundEvent_0_OnActive__DelegateSignature final
{
public:
	class UUIW_Btn_Key_C*                         BtnKey;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UIW_Quartz_C_BndEvt__Btn_Back_K2Node_ComponentBoundEvent_0_OnActive__DelegateSignature) == 0x000008, "Wrong alignment on UIW_Quartz_C_BndEvt__Btn_Back_K2Node_ComponentBoundEvent_0_OnActive__DelegateSignature");
static_assert(sizeof(UIW_Quartz_C_BndEvt__Btn_Back_K2Node_ComponentBoundEvent_0_OnActive__DelegateSignature) == 0x000008, "Wrong size on UIW_Quartz_C_BndEvt__Btn_Back_K2Node_ComponentBoundEvent_0_OnActive__DelegateSignature");
static_assert(offsetof(UIW_Quartz_C_BndEvt__Btn_Back_K2Node_ComponentBoundEvent_0_OnActive__DelegateSignature, BtnKey) == 0x000000, "Member 'UIW_Quartz_C_BndEvt__Btn_Back_K2Node_ComponentBoundEvent_0_OnActive__DelegateSignature::BtnKey' has a wrong offset!");

// Function UIW_Quartz.UIW_Quartz_C.RefreshQuartzCount
// 0x0028 (0x0028 - 0x0000)
struct UIW_Quartz_C_RefreshQuartzCount final
{
public:
	class ULQuartzSystem*                         CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetQuartzItemCount_ReturnValue;           // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0010(0x0018)()
};
static_assert(alignof(UIW_Quartz_C_RefreshQuartzCount) == 0x000008, "Wrong alignment on UIW_Quartz_C_RefreshQuartzCount");
static_assert(sizeof(UIW_Quartz_C_RefreshQuartzCount) == 0x000028, "Wrong size on UIW_Quartz_C_RefreshQuartzCount");
static_assert(offsetof(UIW_Quartz_C_RefreshQuartzCount, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000000, "Member 'UIW_Quartz_C_RefreshQuartzCount::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_RefreshQuartzCount, CallFunc_GetQuartzItemCount_ReturnValue) == 0x000008, "Member 'UIW_Quartz_C_RefreshQuartzCount::CallFunc_GetQuartzItemCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_RefreshQuartzCount, CallFunc_Conv_IntToText_ReturnValue) == 0x000010, "Member 'UIW_Quartz_C_RefreshQuartzCount::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");

// Function UIW_Quartz.UIW_Quartz_C.RefreshPocketData
// 0x00A8 (0x00A8 - 0x0000)
struct UIW_Quartz_C_RefreshPocketData final
{
public:
	bool                                          NowInstalled;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         InstallSlotIndex;                                  // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LocalStep;                                         // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULQuartzSystem*                         CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULQuartzSystem*                         CallFunc_GetGameInstanceSubsystem_ReturnValue_1;   // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetMaxLevelLimit_ReturnValue;             // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetMaxLevelLimit_ReturnValue_1;           // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32[0x2];                                       // 0x0032(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x003E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsVisible_ReturnValue_1;                  // 0x003F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsVisible_ReturnValue_2;                  // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsVisible_ReturnValue_3;                  // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_42[0x6];                                       // 0x0042(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ULQuartzSystem*                         CallFunc_GetGameInstanceSubsystem_ReturnValue_2;   // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetMaxLevelLimit_ReturnValue_2;           // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_2;             // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ULQuartzSystem*                         CallFunc_GetGameInstanceSubsystem_ReturnValue_3;   // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetMaxLevelLimit_ReturnValue_3;           // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_3;             // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsVisible_ReturnValue_4;                  // 0x006D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsVisible_ReturnValue_5;                  // 0x006E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsVisible_ReturnValue_6;                  // 0x006F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsVisible_ReturnValue_7;                  // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsVisible_ReturnValue_8;                  // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsVisible_ReturnValue_9;                  // 0x0072(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsVisible_ReturnValue_10;                 // 0x0073(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsVisible_ReturnValue_11;                 // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_75[0x3];                                       // 0x0075(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_Map_Keys_Keys;                            // 0x0078(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x008C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_95[0x3];                                       // 0x0095(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UUIW_Quartz_Pocket_C*                   CallFunc_Map_Find_Value;                           // 0x0098(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A2[0x2];                                       // 0x00A2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default;                             // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UIW_Quartz_C_RefreshPocketData) == 0x000008, "Wrong alignment on UIW_Quartz_C_RefreshPocketData");
static_assert(sizeof(UIW_Quartz_C_RefreshPocketData) == 0x0000A8, "Wrong size on UIW_Quartz_C_RefreshPocketData");
static_assert(offsetof(UIW_Quartz_C_RefreshPocketData, NowInstalled) == 0x000000, "Member 'UIW_Quartz_C_RefreshPocketData::NowInstalled' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_RefreshPocketData, InstallSlotIndex) == 0x000004, "Member 'UIW_Quartz_C_RefreshPocketData::InstallSlotIndex' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_RefreshPocketData, LocalStep) == 0x000008, "Member 'UIW_Quartz_C_RefreshPocketData::LocalStep' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_RefreshPocketData, Temp_int_Array_Index_Variable) == 0x00000C, "Member 'UIW_Quartz_C_RefreshPocketData::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_RefreshPocketData, Temp_int_Loop_Counter_Variable) == 0x000010, "Member 'UIW_Quartz_C_RefreshPocketData::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_RefreshPocketData, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'UIW_Quartz_C_RefreshPocketData::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_RefreshPocketData, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000018, "Member 'UIW_Quartz_C_RefreshPocketData::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_RefreshPocketData, CallFunc_GetGameInstanceSubsystem_ReturnValue_1) == 0x000020, "Member 'UIW_Quartz_C_RefreshPocketData::CallFunc_GetGameInstanceSubsystem_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_RefreshPocketData, CallFunc_GetMaxLevelLimit_ReturnValue) == 0x000028, "Member 'UIW_Quartz_C_RefreshPocketData::CallFunc_GetMaxLevelLimit_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_RefreshPocketData, CallFunc_GetMaxLevelLimit_ReturnValue_1) == 0x00002C, "Member 'UIW_Quartz_C_RefreshPocketData::CallFunc_GetMaxLevelLimit_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_RefreshPocketData, CallFunc_Greater_IntInt_ReturnValue) == 0x000030, "Member 'UIW_Quartz_C_RefreshPocketData::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_RefreshPocketData, CallFunc_Greater_IntInt_ReturnValue_1) == 0x000031, "Member 'UIW_Quartz_C_RefreshPocketData::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_RefreshPocketData, Temp_int_Variable) == 0x000034, "Member 'UIW_Quartz_C_RefreshPocketData::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_RefreshPocketData, Temp_int_Variable_1) == 0x000038, "Member 'UIW_Quartz_C_RefreshPocketData::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_RefreshPocketData, K2Node_SwitchInteger_CmpSuccess) == 0x00003C, "Member 'UIW_Quartz_C_RefreshPocketData::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_RefreshPocketData, Temp_bool_Variable) == 0x00003D, "Member 'UIW_Quartz_C_RefreshPocketData::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_RefreshPocketData, CallFunc_IsVisible_ReturnValue) == 0x00003E, "Member 'UIW_Quartz_C_RefreshPocketData::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_RefreshPocketData, CallFunc_IsVisible_ReturnValue_1) == 0x00003F, "Member 'UIW_Quartz_C_RefreshPocketData::CallFunc_IsVisible_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_RefreshPocketData, CallFunc_IsVisible_ReturnValue_2) == 0x000040, "Member 'UIW_Quartz_C_RefreshPocketData::CallFunc_IsVisible_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_RefreshPocketData, CallFunc_IsVisible_ReturnValue_3) == 0x000041, "Member 'UIW_Quartz_C_RefreshPocketData::CallFunc_IsVisible_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_RefreshPocketData, CallFunc_GetGameInstanceSubsystem_ReturnValue_2) == 0x000048, "Member 'UIW_Quartz_C_RefreshPocketData::CallFunc_GetGameInstanceSubsystem_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_RefreshPocketData, CallFunc_GetMaxLevelLimit_ReturnValue_2) == 0x000050, "Member 'UIW_Quartz_C_RefreshPocketData::CallFunc_GetMaxLevelLimit_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_RefreshPocketData, CallFunc_Add_IntInt_ReturnValue_1) == 0x000054, "Member 'UIW_Quartz_C_RefreshPocketData::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_RefreshPocketData, CallFunc_Greater_IntInt_ReturnValue_2) == 0x000058, "Member 'UIW_Quartz_C_RefreshPocketData::CallFunc_Greater_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_RefreshPocketData, CallFunc_GetGameInstanceSubsystem_ReturnValue_3) == 0x000060, "Member 'UIW_Quartz_C_RefreshPocketData::CallFunc_GetGameInstanceSubsystem_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_RefreshPocketData, CallFunc_GetMaxLevelLimit_ReturnValue_3) == 0x000068, "Member 'UIW_Quartz_C_RefreshPocketData::CallFunc_GetMaxLevelLimit_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_RefreshPocketData, CallFunc_Greater_IntInt_ReturnValue_3) == 0x00006C, "Member 'UIW_Quartz_C_RefreshPocketData::CallFunc_Greater_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_RefreshPocketData, CallFunc_IsVisible_ReturnValue_4) == 0x00006D, "Member 'UIW_Quartz_C_RefreshPocketData::CallFunc_IsVisible_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_RefreshPocketData, CallFunc_IsVisible_ReturnValue_5) == 0x00006E, "Member 'UIW_Quartz_C_RefreshPocketData::CallFunc_IsVisible_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_RefreshPocketData, CallFunc_IsVisible_ReturnValue_6) == 0x00006F, "Member 'UIW_Quartz_C_RefreshPocketData::CallFunc_IsVisible_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_RefreshPocketData, CallFunc_IsVisible_ReturnValue_7) == 0x000070, "Member 'UIW_Quartz_C_RefreshPocketData::CallFunc_IsVisible_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_RefreshPocketData, CallFunc_IsVisible_ReturnValue_8) == 0x000071, "Member 'UIW_Quartz_C_RefreshPocketData::CallFunc_IsVisible_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_RefreshPocketData, CallFunc_IsVisible_ReturnValue_9) == 0x000072, "Member 'UIW_Quartz_C_RefreshPocketData::CallFunc_IsVisible_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_RefreshPocketData, CallFunc_IsVisible_ReturnValue_10) == 0x000073, "Member 'UIW_Quartz_C_RefreshPocketData::CallFunc_IsVisible_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_RefreshPocketData, CallFunc_IsVisible_ReturnValue_11) == 0x000074, "Member 'UIW_Quartz_C_RefreshPocketData::CallFunc_IsVisible_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_RefreshPocketData, CallFunc_Map_Keys_Keys) == 0x000078, "Member 'UIW_Quartz_C_RefreshPocketData::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_RefreshPocketData, CallFunc_Array_Length_ReturnValue) == 0x000088, "Member 'UIW_Quartz_C_RefreshPocketData::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_RefreshPocketData, CallFunc_Array_Get_Item) == 0x00008C, "Member 'UIW_Quartz_C_RefreshPocketData::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_RefreshPocketData, CallFunc_Less_IntInt_ReturnValue) == 0x000094, "Member 'UIW_Quartz_C_RefreshPocketData::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_RefreshPocketData, CallFunc_Map_Find_Value) == 0x000098, "Member 'UIW_Quartz_C_RefreshPocketData::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_RefreshPocketData, CallFunc_Map_Find_ReturnValue) == 0x0000A0, "Member 'UIW_Quartz_C_RefreshPocketData::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_RefreshPocketData, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x0000A1, "Member 'UIW_Quartz_C_RefreshPocketData::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_RefreshPocketData, K2Node_Select_Default) == 0x0000A4, "Member 'UIW_Quartz_C_RefreshPocketData::K2Node_Select_Default' has a wrong offset!");

// Function UIW_Quartz.UIW_Quartz_C.RefreshRightData
// 0x0190 (0x0190 - 0x0000)
struct UIW_Quartz_C_RefreshRightData final
{
public:
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULQuartzSystem*                         CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetEnabledCoreLevel_ReturnValue;          // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetGameStrWithName_ReturnValue;           // 0x0040(0x0018)()
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUIW_Quartz_Slot_C*                     CallFunc_Array_Get_Item;                           // 0x0060(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6D[0x3];                                       // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UUIW_Quartz_Listbar_C*                  CallFunc_Array_Get_Item_1;                         // 0x0070(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7D[0x3];                                       // 0x007D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_85[0x3];                                       // 0x0085(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetNumberOverlappingSynergy_ReturnValue;  // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_BoolToInt_ReturnValue;               // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_GetSpecialBuffLocalText_OutName;          // 0x0090(0x0018)()
	class FText                                   CallFunc_GetSpecialBuffLocalText_OutTooltip;       // 0x00A8(0x0018)()
	class FText                                   CallFunc_GetSynergyNameWithNumber_ReturnValue;     // 0x00C0(0x0018)()
	ESlateVisibility                              CallFunc_GetVisibility_ReturnValue;                // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00DA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              CallFunc_GetVisibility_ReturnValue_1;              // 0x00DB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetPocketLevel_ReturnValue;               // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x00E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E2[0x2];                                       // 0x00E2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetPocketLevel_ReturnValue_1;             // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x00E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x00F8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_GetGameStrWithName_ReturnValue_1;         // 0x0110(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0128(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0168(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0178(0x0018)()
};
static_assert(alignof(UIW_Quartz_C_RefreshRightData) == 0x000008, "Wrong alignment on UIW_Quartz_C_RefreshRightData");
static_assert(sizeof(UIW_Quartz_C_RefreshRightData) == 0x000190, "Wrong size on UIW_Quartz_C_RefreshRightData");
static_assert(offsetof(UIW_Quartz_C_RefreshRightData, Temp_int_Loop_Counter_Variable) == 0x000000, "Member 'UIW_Quartz_C_RefreshRightData::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_RefreshRightData, CallFunc_Add_IntInt_ReturnValue) == 0x000004, "Member 'UIW_Quartz_C_RefreshRightData::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_RefreshRightData, Temp_int_Array_Index_Variable) == 0x000008, "Member 'UIW_Quartz_C_RefreshRightData::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_RefreshRightData, Temp_int_Loop_Counter_Variable_1) == 0x00000C, "Member 'UIW_Quartz_C_RefreshRightData::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_RefreshRightData, CallFunc_Add_IntInt_ReturnValue_1) == 0x000010, "Member 'UIW_Quartz_C_RefreshRightData::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_RefreshRightData, CallFunc_PlayAnimation_ReturnValue) == 0x000018, "Member 'UIW_Quartz_C_RefreshRightData::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_RefreshRightData, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000020, "Member 'UIW_Quartz_C_RefreshRightData::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_RefreshRightData, CallFunc_PlayAnimation_ReturnValue_1) == 0x000028, "Member 'UIW_Quartz_C_RefreshRightData::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_RefreshRightData, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000030, "Member 'UIW_Quartz_C_RefreshRightData::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_RefreshRightData, CallFunc_GetEnabledCoreLevel_ReturnValue) == 0x000038, "Member 'UIW_Quartz_C_RefreshRightData::CallFunc_GetEnabledCoreLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_RefreshRightData, CallFunc_GetGameStrWithName_ReturnValue) == 0x000040, "Member 'UIW_Quartz_C_RefreshRightData::CallFunc_GetGameStrWithName_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_RefreshRightData, Temp_int_Array_Index_Variable_1) == 0x000058, "Member 'UIW_Quartz_C_RefreshRightData::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_RefreshRightData, CallFunc_Array_Get_Item) == 0x000060, "Member 'UIW_Quartz_C_RefreshRightData::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_RefreshRightData, CallFunc_Array_Length_ReturnValue) == 0x000068, "Member 'UIW_Quartz_C_RefreshRightData::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_RefreshRightData, CallFunc_Less_IntInt_ReturnValue) == 0x00006C, "Member 'UIW_Quartz_C_RefreshRightData::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_RefreshRightData, CallFunc_Array_Get_Item_1) == 0x000070, "Member 'UIW_Quartz_C_RefreshRightData::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_RefreshRightData, CallFunc_Array_Length_ReturnValue_1) == 0x000078, "Member 'UIW_Quartz_C_RefreshRightData::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_RefreshRightData, CallFunc_Less_IntInt_ReturnValue_1) == 0x00007C, "Member 'UIW_Quartz_C_RefreshRightData::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_RefreshRightData, CallFunc_Array_Length_ReturnValue_2) == 0x000080, "Member 'UIW_Quartz_C_RefreshRightData::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_RefreshRightData, CallFunc_Less_IntInt_ReturnValue_2) == 0x000084, "Member 'UIW_Quartz_C_RefreshRightData::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_RefreshRightData, CallFunc_GetNumberOverlappingSynergy_ReturnValue) == 0x000088, "Member 'UIW_Quartz_C_RefreshRightData::CallFunc_GetNumberOverlappingSynergy_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_RefreshRightData, CallFunc_Conv_BoolToInt_ReturnValue) == 0x00008C, "Member 'UIW_Quartz_C_RefreshRightData::CallFunc_Conv_BoolToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_RefreshRightData, CallFunc_GetSpecialBuffLocalText_OutName) == 0x000090, "Member 'UIW_Quartz_C_RefreshRightData::CallFunc_GetSpecialBuffLocalText_OutName' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_RefreshRightData, CallFunc_GetSpecialBuffLocalText_OutTooltip) == 0x0000A8, "Member 'UIW_Quartz_C_RefreshRightData::CallFunc_GetSpecialBuffLocalText_OutTooltip' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_RefreshRightData, CallFunc_GetSynergyNameWithNumber_ReturnValue) == 0x0000C0, "Member 'UIW_Quartz_C_RefreshRightData::CallFunc_GetSynergyNameWithNumber_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_RefreshRightData, CallFunc_GetVisibility_ReturnValue) == 0x0000D8, "Member 'UIW_Quartz_C_RefreshRightData::CallFunc_GetVisibility_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_RefreshRightData, CallFunc_IsValid_ReturnValue) == 0x0000D9, "Member 'UIW_Quartz_C_RefreshRightData::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_RefreshRightData, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000DA, "Member 'UIW_Quartz_C_RefreshRightData::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_RefreshRightData, CallFunc_GetVisibility_ReturnValue_1) == 0x0000DB, "Member 'UIW_Quartz_C_RefreshRightData::CallFunc_GetVisibility_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_RefreshRightData, CallFunc_GetPocketLevel_ReturnValue) == 0x0000DC, "Member 'UIW_Quartz_C_RefreshRightData::CallFunc_GetPocketLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_RefreshRightData, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x0000E0, "Member 'UIW_Quartz_C_RefreshRightData::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_RefreshRightData, CallFunc_Less_IntInt_ReturnValue_3) == 0x0000E1, "Member 'UIW_Quartz_C_RefreshRightData::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_RefreshRightData, CallFunc_GetPocketLevel_ReturnValue_1) == 0x0000E4, "Member 'UIW_Quartz_C_RefreshRightData::CallFunc_GetPocketLevel_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_RefreshRightData, CallFunc_Conv_IntToString_ReturnValue) == 0x0000E8, "Member 'UIW_Quartz_C_RefreshRightData::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_RefreshRightData, CallFunc_Concat_StrStr_ReturnValue) == 0x0000F8, "Member 'UIW_Quartz_C_RefreshRightData::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_RefreshRightData, CallFunc_Conv_StringToName_ReturnValue) == 0x000108, "Member 'UIW_Quartz_C_RefreshRightData::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_RefreshRightData, CallFunc_GetGameStrWithName_ReturnValue_1) == 0x000110, "Member 'UIW_Quartz_C_RefreshRightData::CallFunc_GetGameStrWithName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_RefreshRightData, K2Node_MakeStruct_FormatArgumentData) == 0x000128, "Member 'UIW_Quartz_C_RefreshRightData::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_RefreshRightData, K2Node_MakeArray_Array) == 0x000168, "Member 'UIW_Quartz_C_RefreshRightData::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_RefreshRightData, CallFunc_Format_ReturnValue) == 0x000178, "Member 'UIW_Quartz_C_RefreshRightData::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function UIW_Quartz.UIW_Quartz_C.SetFocusedPocket
// 0x00E8 (0x00E8 - 0x0000)
struct UIW_Quartz_C_SetFocusedPocket final
{
public:
	class UUIW_Quartz_Pocket_C*                   Pocket;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          WithTween;                                         // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ForceUpdate;                                       // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             LocalTexutre;                                      // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTweenEase                             K2Node_MakeStruct_TweenEase;                       // 0x0018(0x000C)(NoDestructor)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULQuartzSystem*                         CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetEnabledCoreLevel_ReturnValue;          // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UUIW_Quartz_Pocket_C*                   CallFunc_Array_Get_Item;                           // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D[0x3];                                       // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetPocketLevel_ReturnValue;               // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_55[0x3];                                       // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UObject>                 CallFunc_GetImage_ReturnValue;                     // 0x0058(0x0028)(ConstParm, UObjectWrapper, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue;   // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0082(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_83[0x1];                                       // 0x0083(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetRenderOpacity_ReturnValue;             // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetRenderOpacity_ReturnValue_1;           // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_91[0x3];                                       // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTweenEase                             K2Node_MakeStruct_TweenEase_1;                     // 0x0094(0x000C)(NoDestructor)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A2[0x6];                                       // 0x00A2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x00A8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetPosition_ReturnValue;                  // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B9[0x3];                                       // 0x00B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_Multiply_Vector2DFloat_ReturnValue;       // 0x00BC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C4[0x4];                                       // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUIW_Main_C*                            CallFunc_GetMainWidget_MainWidget;                 // 0x00C8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPocketUnlocked_ReturnValue;             // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D1[0x3];                                       // 0x00D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_Multiply_Vector2DVector2D_ReturnValue;    // 0x00D4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Multiply_Vector2DFloat_ReturnValue_1;     // 0x00DC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UIW_Quartz_C_SetFocusedPocket) == 0x000008, "Wrong alignment on UIW_Quartz_C_SetFocusedPocket");
static_assert(sizeof(UIW_Quartz_C_SetFocusedPocket) == 0x0000E8, "Wrong size on UIW_Quartz_C_SetFocusedPocket");
static_assert(offsetof(UIW_Quartz_C_SetFocusedPocket, Pocket) == 0x000000, "Member 'UIW_Quartz_C_SetFocusedPocket::Pocket' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_SetFocusedPocket, WithTween) == 0x000008, "Member 'UIW_Quartz_C_SetFocusedPocket::WithTween' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_SetFocusedPocket, ForceUpdate) == 0x000009, "Member 'UIW_Quartz_C_SetFocusedPocket::ForceUpdate' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_SetFocusedPocket, LocalTexutre) == 0x000010, "Member 'UIW_Quartz_C_SetFocusedPocket::LocalTexutre' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_SetFocusedPocket, K2Node_MakeStruct_TweenEase) == 0x000018, "Member 'UIW_Quartz_C_SetFocusedPocket::K2Node_MakeStruct_TweenEase' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_SetFocusedPocket, Temp_int_Array_Index_Variable) == 0x000024, "Member 'UIW_Quartz_C_SetFocusedPocket::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_SetFocusedPocket, Temp_int_Loop_Counter_Variable) == 0x000028, "Member 'UIW_Quartz_C_SetFocusedPocket::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_SetFocusedPocket, CallFunc_Add_IntInt_ReturnValue) == 0x00002C, "Member 'UIW_Quartz_C_SetFocusedPocket::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_SetFocusedPocket, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000030, "Member 'UIW_Quartz_C_SetFocusedPocket::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_SetFocusedPocket, CallFunc_GetEnabledCoreLevel_ReturnValue) == 0x000038, "Member 'UIW_Quartz_C_SetFocusedPocket::CallFunc_GetEnabledCoreLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_SetFocusedPocket, CallFunc_IsValid_ReturnValue) == 0x00003C, "Member 'UIW_Quartz_C_SetFocusedPocket::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_SetFocusedPocket, CallFunc_Array_Get_Item) == 0x000040, "Member 'UIW_Quartz_C_SetFocusedPocket::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_SetFocusedPocket, CallFunc_Array_Length_ReturnValue) == 0x000048, "Member 'UIW_Quartz_C_SetFocusedPocket::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_SetFocusedPocket, CallFunc_Less_IntInt_ReturnValue) == 0x00004C, "Member 'UIW_Quartz_C_SetFocusedPocket::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_SetFocusedPocket, CallFunc_GetPocketLevel_ReturnValue) == 0x000050, "Member 'UIW_Quartz_C_SetFocusedPocket::CallFunc_GetPocketLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_SetFocusedPocket, CallFunc_Less_IntInt_ReturnValue_1) == 0x000054, "Member 'UIW_Quartz_C_SetFocusedPocket::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_SetFocusedPocket, CallFunc_GetImage_ReturnValue) == 0x000058, "Member 'UIW_Quartz_C_SetFocusedPocket::CallFunc_GetImage_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_SetFocusedPocket, CallFunc_Not_PreBool_ReturnValue) == 0x000080, "Member 'UIW_Quartz_C_SetFocusedPocket::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_SetFocusedPocket, CallFunc_IsValidSoftObjectReference_ReturnValue) == 0x000081, "Member 'UIW_Quartz_C_SetFocusedPocket::CallFunc_IsValidSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_SetFocusedPocket, CallFunc_BooleanAND_ReturnValue) == 0x000082, "Member 'UIW_Quartz_C_SetFocusedPocket::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_SetFocusedPocket, CallFunc_GetRenderOpacity_ReturnValue) == 0x000084, "Member 'UIW_Quartz_C_SetFocusedPocket::CallFunc_GetRenderOpacity_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_SetFocusedPocket, CallFunc_GetRenderOpacity_ReturnValue_1) == 0x000088, "Member 'UIW_Quartz_C_SetFocusedPocket::CallFunc_GetRenderOpacity_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_SetFocusedPocket, CallFunc_Array_Find_ReturnValue) == 0x00008C, "Member 'UIW_Quartz_C_SetFocusedPocket::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_SetFocusedPocket, K2Node_SwitchInteger_CmpSuccess) == 0x000090, "Member 'UIW_Quartz_C_SetFocusedPocket::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_SetFocusedPocket, K2Node_MakeStruct_TweenEase_1) == 0x000094, "Member 'UIW_Quartz_C_SetFocusedPocket::K2Node_MakeStruct_TweenEase_1' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_SetFocusedPocket, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x0000A0, "Member 'UIW_Quartz_C_SetFocusedPocket::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_SetFocusedPocket, CallFunc_BooleanOR_ReturnValue) == 0x0000A1, "Member 'UIW_Quartz_C_SetFocusedPocket::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_SetFocusedPocket, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x0000A8, "Member 'UIW_Quartz_C_SetFocusedPocket::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_SetFocusedPocket, CallFunc_GetPosition_ReturnValue) == 0x0000B0, "Member 'UIW_Quartz_C_SetFocusedPocket::CallFunc_GetPosition_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_SetFocusedPocket, CallFunc_IsValid_ReturnValue_1) == 0x0000B8, "Member 'UIW_Quartz_C_SetFocusedPocket::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_SetFocusedPocket, CallFunc_Multiply_Vector2DFloat_ReturnValue) == 0x0000BC, "Member 'UIW_Quartz_C_SetFocusedPocket::CallFunc_Multiply_Vector2DFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_SetFocusedPocket, CallFunc_GetMainWidget_MainWidget) == 0x0000C8, "Member 'UIW_Quartz_C_SetFocusedPocket::CallFunc_GetMainWidget_MainWidget' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_SetFocusedPocket, CallFunc_IsPocketUnlocked_ReturnValue) == 0x0000D0, "Member 'UIW_Quartz_C_SetFocusedPocket::CallFunc_IsPocketUnlocked_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_SetFocusedPocket, CallFunc_Multiply_Vector2DVector2D_ReturnValue) == 0x0000D4, "Member 'UIW_Quartz_C_SetFocusedPocket::CallFunc_Multiply_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_SetFocusedPocket, CallFunc_Multiply_Vector2DFloat_ReturnValue_1) == 0x0000DC, "Member 'UIW_Quartz_C_SetFocusedPocket::CallFunc_Multiply_Vector2DFloat_ReturnValue_1' has a wrong offset!");

// Function UIW_Quartz.UIW_Quartz_C.FocusManage
// 0x02D8 (0x02D8 - 0x0000)
struct UIW_Quartz_C_FocusManage final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0070)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FEventReply                            ReturnValue;                                       // 0x00A8(0x00B8)(Parm, OutParm, ReturnParm)
	struct FEventReply                            CallFunc_FocusManage_ReturnValue;                  // 0x0160(0x00B8)()
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0218(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0219(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x021A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21B[0x5];                                      // 0x021B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x0220(0x00B8)()
};
static_assert(alignof(UIW_Quartz_C_FocusManage) == 0x000008, "Wrong alignment on UIW_Quartz_C_FocusManage");
static_assert(sizeof(UIW_Quartz_C_FocusManage) == 0x0002D8, "Wrong size on UIW_Quartz_C_FocusManage");
static_assert(offsetof(UIW_Quartz_C_FocusManage, MyGeometry) == 0x000000, "Member 'UIW_Quartz_C_FocusManage::MyGeometry' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_FocusManage, MouseEvent) == 0x000038, "Member 'UIW_Quartz_C_FocusManage::MouseEvent' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_FocusManage, ReturnValue) == 0x0000A8, "Member 'UIW_Quartz_C_FocusManage::ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_FocusManage, CallFunc_FocusManage_ReturnValue) == 0x000160, "Member 'UIW_Quartz_C_FocusManage::CallFunc_FocusManage_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_FocusManage, CallFunc_IsValid_ReturnValue) == 0x000218, "Member 'UIW_Quartz_C_FocusManage::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_FocusManage, CallFunc_IsVisible_ReturnValue) == 0x000219, "Member 'UIW_Quartz_C_FocusManage::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_FocusManage, CallFunc_IsValid_ReturnValue_1) == 0x00021A, "Member 'UIW_Quartz_C_FocusManage::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_FocusManage, CallFunc_Handled_ReturnValue) == 0x000220, "Member 'UIW_Quartz_C_FocusManage::CallFunc_Handled_ReturnValue' has a wrong offset!");

// Function UIW_Quartz.UIW_Quartz_C.SetFocusedQuartzListBar
// 0x0018 (0x0018 - 0x0000)
struct UIW_Quartz_C_SetFocusedQuartzListBar final
{
public:
	class UUIW_Quartz_Listbar_C*                  QuartzListBar;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B[0x5];                                        // 0x000B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UUIW_Main_C*                            CallFunc_GetMainWidget_MainWidget;                 // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UIW_Quartz_C_SetFocusedQuartzListBar) == 0x000008, "Wrong alignment on UIW_Quartz_C_SetFocusedQuartzListBar");
static_assert(sizeof(UIW_Quartz_C_SetFocusedQuartzListBar) == 0x000018, "Wrong size on UIW_Quartz_C_SetFocusedQuartzListBar");
static_assert(offsetof(UIW_Quartz_C_SetFocusedQuartzListBar, QuartzListBar) == 0x000000, "Member 'UIW_Quartz_C_SetFocusedQuartzListBar::QuartzListBar' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_SetFocusedQuartzListBar, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'UIW_Quartz_C_SetFocusedQuartzListBar::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_SetFocusedQuartzListBar, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000009, "Member 'UIW_Quartz_C_SetFocusedQuartzListBar::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_SetFocusedQuartzListBar, CallFunc_IsValid_ReturnValue_1) == 0x00000A, "Member 'UIW_Quartz_C_SetFocusedQuartzListBar::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_SetFocusedQuartzListBar, CallFunc_GetMainWidget_MainWidget) == 0x000010, "Member 'UIW_Quartz_C_SetFocusedQuartzListBar::CallFunc_GetMainWidget_MainWidget' has a wrong offset!");

// Function UIW_Quartz.UIW_Quartz_C.SetSelectedQuartzListBar
// 0x0010 (0x0010 - 0x0000)
struct UIW_Quartz_C_SetSelectedQuartzListBar final
{
public:
	class UUIW_Quartz_Listbar_C*                  QuartzListBar;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UIW_Quartz_C_SetSelectedQuartzListBar) == 0x000008, "Wrong alignment on UIW_Quartz_C_SetSelectedQuartzListBar");
static_assert(sizeof(UIW_Quartz_C_SetSelectedQuartzListBar) == 0x000010, "Wrong size on UIW_Quartz_C_SetSelectedQuartzListBar");
static_assert(offsetof(UIW_Quartz_C_SetSelectedQuartzListBar, QuartzListBar) == 0x000000, "Member 'UIW_Quartz_C_SetSelectedQuartzListBar::QuartzListBar' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_SetSelectedQuartzListBar, CallFunc_IsVisible_ReturnValue) == 0x000008, "Member 'UIW_Quartz_C_SetSelectedQuartzListBar::CallFunc_IsVisible_ReturnValue' has a wrong offset!");

// Function UIW_Quartz.UIW_Quartz_C.InstallQuartzEffect
// 0x0001 (0x0001 - 0x0000)
struct UIW_Quartz_C_InstallQuartzEffect final
{
public:
	bool                                          CallFunc_InstallSlotFromUI_ReturnValue;            // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UIW_Quartz_C_InstallQuartzEffect) == 0x000001, "Wrong alignment on UIW_Quartz_C_InstallQuartzEffect");
static_assert(sizeof(UIW_Quartz_C_InstallQuartzEffect) == 0x000001, "Wrong size on UIW_Quartz_C_InstallQuartzEffect");
static_assert(offsetof(UIW_Quartz_C_InstallQuartzEffect, CallFunc_InstallSlotFromUI_ReturnValue) == 0x000000, "Member 'UIW_Quartz_C_InstallQuartzEffect::CallFunc_InstallSlotFromUI_ReturnValue' has a wrong offset!");

// Function UIW_Quartz.UIW_Quartz_C.GetSnapPosition
// 0x0070 (0x0070 - 0x0000)
struct UIW_Quartz_C_GetSnapPosition final
{
public:
	struct FVector2D                              InputPosition;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              OutputPosition;                                    // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsSnapping;                                        // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector2D_X;                          // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue;            // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Add_Vector2DVector2D_ReturnValue;         // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUIW_Quartz_Pocket_C*                   CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_46[0x2];                                       // 0x0046(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetPosition_ReturnValue;                  // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Multiply_Vector2DVector2D_ReturnValue;    // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Multiply_Vector2DFloat_ReturnValue;       // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Distance2D_ReturnValue;                   // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UIW_Quartz_C_GetSnapPosition) == 0x000008, "Wrong alignment on UIW_Quartz_C_GetSnapPosition");
static_assert(sizeof(UIW_Quartz_C_GetSnapPosition) == 0x000070, "Wrong size on UIW_Quartz_C_GetSnapPosition");
static_assert(offsetof(UIW_Quartz_C_GetSnapPosition, InputPosition) == 0x000000, "Member 'UIW_Quartz_C_GetSnapPosition::InputPosition' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_GetSnapPosition, OutputPosition) == 0x000008, "Member 'UIW_Quartz_C_GetSnapPosition::OutputPosition' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_GetSnapPosition, IsSnapping) == 0x000010, "Member 'UIW_Quartz_C_GetSnapPosition::IsSnapping' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_GetSnapPosition, Temp_int_Array_Index_Variable) == 0x000014, "Member 'UIW_Quartz_C_GetSnapPosition::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_GetSnapPosition, Temp_int_Loop_Counter_Variable) == 0x000018, "Member 'UIW_Quartz_C_GetSnapPosition::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_GetSnapPosition, CallFunc_Add_IntInt_ReturnValue) == 0x00001C, "Member 'UIW_Quartz_C_GetSnapPosition::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_GetSnapPosition, CallFunc_Not_PreBool_ReturnValue) == 0x000020, "Member 'UIW_Quartz_C_GetSnapPosition::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_GetSnapPosition, CallFunc_BreakVector2D_X) == 0x000024, "Member 'UIW_Quartz_C_GetSnapPosition::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_GetSnapPosition, CallFunc_BreakVector2D_Y) == 0x000028, "Member 'UIW_Quartz_C_GetSnapPosition::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_GetSnapPosition, CallFunc_Multiply_IntFloat_ReturnValue) == 0x00002C, "Member 'UIW_Quartz_C_GetSnapPosition::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_GetSnapPosition, CallFunc_Add_Vector2DVector2D_ReturnValue) == 0x000030, "Member 'UIW_Quartz_C_GetSnapPosition::CallFunc_Add_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_GetSnapPosition, CallFunc_Array_Get_Item) == 0x000038, "Member 'UIW_Quartz_C_GetSnapPosition::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_GetSnapPosition, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'UIW_Quartz_C_GetSnapPosition::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_GetSnapPosition, CallFunc_Less_IntInt_ReturnValue) == 0x000044, "Member 'UIW_Quartz_C_GetSnapPosition::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_GetSnapPosition, CallFunc_IsVisible_ReturnValue) == 0x000045, "Member 'UIW_Quartz_C_GetSnapPosition::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_GetSnapPosition, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x000048, "Member 'UIW_Quartz_C_GetSnapPosition::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_GetSnapPosition, CallFunc_GetPosition_ReturnValue) == 0x000050, "Member 'UIW_Quartz_C_GetSnapPosition::CallFunc_GetPosition_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_GetSnapPosition, CallFunc_Multiply_Vector2DVector2D_ReturnValue) == 0x000058, "Member 'UIW_Quartz_C_GetSnapPosition::CallFunc_Multiply_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_GetSnapPosition, CallFunc_Multiply_Vector2DFloat_ReturnValue) == 0x000060, "Member 'UIW_Quartz_C_GetSnapPosition::CallFunc_Multiply_Vector2DFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_GetSnapPosition, CallFunc_Distance2D_ReturnValue) == 0x000068, "Member 'UIW_Quartz_C_GetSnapPosition::CallFunc_Distance2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_GetSnapPosition, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x00006C, "Member 'UIW_Quartz_C_GetSnapPosition::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");

// Function UIW_Quartz.UIW_Quartz_C.MovePocketFocus
// 0x0020 (0x0020 - 0x0000)
struct UIW_Quartz_C_MovePocketFocus final
{
public:
	EUINavigation                                 Direction;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UUIW_Quartz_Pocket_C*                   CallFunc_GetSnapPositionNearOne_NewParam;          // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsVisible_ReturnValue_1;                  // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x0017(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsVisible_ReturnValue_2;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsVisible_ReturnValue_3;                  // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsVisible_ReturnValue_4;                  // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UIW_Quartz_C_MovePocketFocus) == 0x000008, "Wrong alignment on UIW_Quartz_C_MovePocketFocus");
static_assert(sizeof(UIW_Quartz_C_MovePocketFocus) == 0x000020, "Wrong size on UIW_Quartz_C_MovePocketFocus");
static_assert(offsetof(UIW_Quartz_C_MovePocketFocus, Direction) == 0x000000, "Member 'UIW_Quartz_C_MovePocketFocus::Direction' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_MovePocketFocus, K2Node_SwitchEnum_CmpSuccess) == 0x000001, "Member 'UIW_Quartz_C_MovePocketFocus::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_MovePocketFocus, CallFunc_GetSnapPositionNearOne_NewParam) == 0x000008, "Member 'UIW_Quartz_C_MovePocketFocus::CallFunc_GetSnapPositionNearOne_NewParam' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_MovePocketFocus, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'UIW_Quartz_C_MovePocketFocus::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_MovePocketFocus, CallFunc_IsValid_ReturnValue_1) == 0x000011, "Member 'UIW_Quartz_C_MovePocketFocus::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_MovePocketFocus, CallFunc_IsVisible_ReturnValue) == 0x000012, "Member 'UIW_Quartz_C_MovePocketFocus::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_MovePocketFocus, CallFunc_IsValid_ReturnValue_2) == 0x000013, "Member 'UIW_Quartz_C_MovePocketFocus::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_MovePocketFocus, CallFunc_IsValid_ReturnValue_3) == 0x000014, "Member 'UIW_Quartz_C_MovePocketFocus::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_MovePocketFocus, CallFunc_IsVisible_ReturnValue_1) == 0x000015, "Member 'UIW_Quartz_C_MovePocketFocus::CallFunc_IsVisible_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_MovePocketFocus, CallFunc_IsValid_ReturnValue_4) == 0x000016, "Member 'UIW_Quartz_C_MovePocketFocus::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_MovePocketFocus, CallFunc_IsValid_ReturnValue_5) == 0x000017, "Member 'UIW_Quartz_C_MovePocketFocus::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_MovePocketFocus, CallFunc_IsVisible_ReturnValue_2) == 0x000018, "Member 'UIW_Quartz_C_MovePocketFocus::CallFunc_IsVisible_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_MovePocketFocus, CallFunc_IsVisible_ReturnValue_3) == 0x000019, "Member 'UIW_Quartz_C_MovePocketFocus::CallFunc_IsVisible_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_MovePocketFocus, CallFunc_IsValid_ReturnValue_6) == 0x00001A, "Member 'UIW_Quartz_C_MovePocketFocus::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_MovePocketFocus, CallFunc_IsVisible_ReturnValue_4) == 0x00001B, "Member 'UIW_Quartz_C_MovePocketFocus::CallFunc_IsVisible_ReturnValue_4' has a wrong offset!");

// Function UIW_Quartz.UIW_Quartz_C.DragPocket
// 0x0074 (0x0074 - 0x0000)
struct UIW_Quartz_C_DragPocket final
{
public:
	struct FTweenEase                             K2Node_MakeStruct_TweenEase;                       // 0x0000(0x000C)(NoDestructor)
	struct FTweenEase                             K2Node_MakeStruct_TweenEase_1;                     // 0x000C(0x000C)(NoDestructor)
	struct FVector2D                              CallFunc_Multiply_Vector2DFloat_ReturnValue;       // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue;            // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue_1;          // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue_2;          // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue_3;          // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Add_Vector2DVector2D_ReturnValue;         // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetMousePositionOnViewport_ReturnValue;   // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_1;                        // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_1;                        // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Subtract_Vector2DVector2D_ReturnValue;    // 0x0054(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue_1;                     // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetSnapPosition_OutputPosition;           // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetSnapPosition_IsSnapping;               // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UIW_Quartz_C_DragPocket) == 0x000004, "Wrong alignment on UIW_Quartz_C_DragPocket");
static_assert(sizeof(UIW_Quartz_C_DragPocket) == 0x000074, "Wrong size on UIW_Quartz_C_DragPocket");
static_assert(offsetof(UIW_Quartz_C_DragPocket, K2Node_MakeStruct_TweenEase) == 0x000000, "Member 'UIW_Quartz_C_DragPocket::K2Node_MakeStruct_TweenEase' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_DragPocket, K2Node_MakeStruct_TweenEase_1) == 0x00000C, "Member 'UIW_Quartz_C_DragPocket::K2Node_MakeStruct_TweenEase_1' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_DragPocket, CallFunc_Multiply_Vector2DFloat_ReturnValue) == 0x000018, "Member 'UIW_Quartz_C_DragPocket::CallFunc_Multiply_Vector2DFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_DragPocket, CallFunc_BreakVector2D_X) == 0x000020, "Member 'UIW_Quartz_C_DragPocket::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_DragPocket, CallFunc_BreakVector2D_Y) == 0x000024, "Member 'UIW_Quartz_C_DragPocket::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_DragPocket, CallFunc_Multiply_IntFloat_ReturnValue) == 0x000028, "Member 'UIW_Quartz_C_DragPocket::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_DragPocket, CallFunc_Multiply_IntFloat_ReturnValue_1) == 0x00002C, "Member 'UIW_Quartz_C_DragPocket::CallFunc_Multiply_IntFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_DragPocket, CallFunc_Multiply_IntFloat_ReturnValue_2) == 0x000030, "Member 'UIW_Quartz_C_DragPocket::CallFunc_Multiply_IntFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_DragPocket, CallFunc_Multiply_IntFloat_ReturnValue_3) == 0x000034, "Member 'UIW_Quartz_C_DragPocket::CallFunc_Multiply_IntFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_DragPocket, CallFunc_Add_Vector2DVector2D_ReturnValue) == 0x000038, "Member 'UIW_Quartz_C_DragPocket::CallFunc_Add_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_DragPocket, CallFunc_GetMousePositionOnViewport_ReturnValue) == 0x000040, "Member 'UIW_Quartz_C_DragPocket::CallFunc_GetMousePositionOnViewport_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_DragPocket, CallFunc_BreakVector2D_X_1) == 0x000048, "Member 'UIW_Quartz_C_DragPocket::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_DragPocket, CallFunc_BreakVector2D_Y_1) == 0x00004C, "Member 'UIW_Quartz_C_DragPocket::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_DragPocket, CallFunc_FClamp_ReturnValue) == 0x000050, "Member 'UIW_Quartz_C_DragPocket::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_DragPocket, CallFunc_Subtract_Vector2DVector2D_ReturnValue) == 0x000054, "Member 'UIW_Quartz_C_DragPocket::CallFunc_Subtract_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_DragPocket, CallFunc_FClamp_ReturnValue_1) == 0x00005C, "Member 'UIW_Quartz_C_DragPocket::CallFunc_FClamp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_DragPocket, CallFunc_MakeVector2D_ReturnValue) == 0x000060, "Member 'UIW_Quartz_C_DragPocket::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_DragPocket, CallFunc_GetSnapPosition_OutputPosition) == 0x000068, "Member 'UIW_Quartz_C_DragPocket::CallFunc_GetSnapPosition_OutputPosition' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_DragPocket, CallFunc_GetSnapPosition_IsSnapping) == 0x000070, "Member 'UIW_Quartz_C_DragPocket::CallFunc_GetSnapPosition_IsSnapping' has a wrong offset!");

// Function UIW_Quartz.UIW_Quartz_C.ThumbStickPocket
// 0x007C (0x007C - 0x0000)
struct UIW_Quartz_C_ThumbStickPocket final
{
public:
	float                                         AxisX;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AxisY;                                             // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Multiply_Vector2DFloat_ReturnValue;       // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue;            // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue_1;          // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue_2;          // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_3;        // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue_3;          // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_1;               // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Add_Vector2DVector2D_ReturnValue;         // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Add_Vector2DVector2D_ReturnValue_1;       // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_1;                        // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_1;                        // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue_1;                     // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_2;               // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetSnapPosition_OutputPosition;           // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetSnapPosition_IsSnapping;               // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UIW_Quartz_C_ThumbStickPocket) == 0x000004, "Wrong alignment on UIW_Quartz_C_ThumbStickPocket");
static_assert(sizeof(UIW_Quartz_C_ThumbStickPocket) == 0x00007C, "Wrong size on UIW_Quartz_C_ThumbStickPocket");
static_assert(offsetof(UIW_Quartz_C_ThumbStickPocket, AxisX) == 0x000000, "Member 'UIW_Quartz_C_ThumbStickPocket::AxisX' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_ThumbStickPocket, AxisY) == 0x000004, "Member 'UIW_Quartz_C_ThumbStickPocket::AxisY' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_ThumbStickPocket, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000008, "Member 'UIW_Quartz_C_ThumbStickPocket::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_ThumbStickPocket, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x00000C, "Member 'UIW_Quartz_C_ThumbStickPocket::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_ThumbStickPocket, CallFunc_Multiply_Vector2DFloat_ReturnValue) == 0x000010, "Member 'UIW_Quartz_C_ThumbStickPocket::CallFunc_Multiply_Vector2DFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_ThumbStickPocket, CallFunc_BreakVector2D_X) == 0x000018, "Member 'UIW_Quartz_C_ThumbStickPocket::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_ThumbStickPocket, CallFunc_BreakVector2D_Y) == 0x00001C, "Member 'UIW_Quartz_C_ThumbStickPocket::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_ThumbStickPocket, CallFunc_Multiply_IntFloat_ReturnValue) == 0x000020, "Member 'UIW_Quartz_C_ThumbStickPocket::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_ThumbStickPocket, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x000024, "Member 'UIW_Quartz_C_ThumbStickPocket::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_ThumbStickPocket, CallFunc_Multiply_IntFloat_ReturnValue_1) == 0x000028, "Member 'UIW_Quartz_C_ThumbStickPocket::CallFunc_Multiply_IntFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_ThumbStickPocket, CallFunc_Multiply_IntFloat_ReturnValue_2) == 0x00002C, "Member 'UIW_Quartz_C_ThumbStickPocket::CallFunc_Multiply_IntFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_ThumbStickPocket, CallFunc_Multiply_FloatFloat_ReturnValue_3) == 0x000030, "Member 'UIW_Quartz_C_ThumbStickPocket::CallFunc_Multiply_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_ThumbStickPocket, CallFunc_Multiply_IntFloat_ReturnValue_3) == 0x000034, "Member 'UIW_Quartz_C_ThumbStickPocket::CallFunc_Multiply_IntFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_ThumbStickPocket, CallFunc_MakeVector2D_ReturnValue) == 0x000038, "Member 'UIW_Quartz_C_ThumbStickPocket::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_ThumbStickPocket, CallFunc_MakeVector2D_ReturnValue_1) == 0x000040, "Member 'UIW_Quartz_C_ThumbStickPocket::CallFunc_MakeVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_ThumbStickPocket, CallFunc_Add_Vector2DVector2D_ReturnValue) == 0x000048, "Member 'UIW_Quartz_C_ThumbStickPocket::CallFunc_Add_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_ThumbStickPocket, CallFunc_Add_Vector2DVector2D_ReturnValue_1) == 0x000050, "Member 'UIW_Quartz_C_ThumbStickPocket::CallFunc_Add_Vector2DVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_ThumbStickPocket, CallFunc_BreakVector2D_X_1) == 0x000058, "Member 'UIW_Quartz_C_ThumbStickPocket::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_ThumbStickPocket, CallFunc_BreakVector2D_Y_1) == 0x00005C, "Member 'UIW_Quartz_C_ThumbStickPocket::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_ThumbStickPocket, CallFunc_FClamp_ReturnValue) == 0x000060, "Member 'UIW_Quartz_C_ThumbStickPocket::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_ThumbStickPocket, CallFunc_FClamp_ReturnValue_1) == 0x000064, "Member 'UIW_Quartz_C_ThumbStickPocket::CallFunc_FClamp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_ThumbStickPocket, CallFunc_MakeVector2D_ReturnValue_2) == 0x000068, "Member 'UIW_Quartz_C_ThumbStickPocket::CallFunc_MakeVector2D_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_ThumbStickPocket, CallFunc_GetSnapPosition_OutputPosition) == 0x000070, "Member 'UIW_Quartz_C_ThumbStickPocket::CallFunc_GetSnapPosition_OutputPosition' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_ThumbStickPocket, CallFunc_GetSnapPosition_IsSnapping) == 0x000078, "Member 'UIW_Quartz_C_ThumbStickPocket::CallFunc_GetSnapPosition_IsSnapping' has a wrong offset!");

// Function UIW_Quartz.UIW_Quartz_C.OnKeyUp
// 0x02B8 (0x02B8 - 0x0000)
struct UIW_Quartz_C_OnKeyUp final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FKeyEvent                              InKeyEvent;                                        // 0x0038(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FEventReply                            ReturnValue;                                       // 0x0070(0x00B8)(Parm, OutParm, ReturnParm)
	struct FEventReply                            CallFunc_Unhandled_ReturnValue;                    // 0x0128(0x00B8)()
	struct FKey                                   CallFunc_GetKey_ReturnValue;                       // 0x01E0(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_Key_IsButtonAxis_ReturnValue;             // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EUINavigation                                 CallFunc_Key_GetNavigationDirectionFromKey_ReturnValue; // 0x01F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x01FA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1FB[0x5];                                      // 0x01FB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x0200(0x00B8)()
};
static_assert(alignof(UIW_Quartz_C_OnKeyUp) == 0x000008, "Wrong alignment on UIW_Quartz_C_OnKeyUp");
static_assert(sizeof(UIW_Quartz_C_OnKeyUp) == 0x0002B8, "Wrong size on UIW_Quartz_C_OnKeyUp");
static_assert(offsetof(UIW_Quartz_C_OnKeyUp, MyGeometry) == 0x000000, "Member 'UIW_Quartz_C_OnKeyUp::MyGeometry' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_OnKeyUp, InKeyEvent) == 0x000038, "Member 'UIW_Quartz_C_OnKeyUp::InKeyEvent' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_OnKeyUp, ReturnValue) == 0x000070, "Member 'UIW_Quartz_C_OnKeyUp::ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_OnKeyUp, CallFunc_Unhandled_ReturnValue) == 0x000128, "Member 'UIW_Quartz_C_OnKeyUp::CallFunc_Unhandled_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_OnKeyUp, CallFunc_GetKey_ReturnValue) == 0x0001E0, "Member 'UIW_Quartz_C_OnKeyUp::CallFunc_GetKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_OnKeyUp, CallFunc_Key_IsButtonAxis_ReturnValue) == 0x0001F8, "Member 'UIW_Quartz_C_OnKeyUp::CallFunc_Key_IsButtonAxis_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_OnKeyUp, CallFunc_Key_GetNavigationDirectionFromKey_ReturnValue) == 0x0001F9, "Member 'UIW_Quartz_C_OnKeyUp::CallFunc_Key_GetNavigationDirectionFromKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_OnKeyUp, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0001FA, "Member 'UIW_Quartz_C_OnKeyUp::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_OnKeyUp, CallFunc_Handled_ReturnValue) == 0x000200, "Member 'UIW_Quartz_C_OnKeyUp::CallFunc_Handled_ReturnValue' has a wrong offset!");

// Function UIW_Quartz.UIW_Quartz_C.ListBarNavigationUp
// 0x0048 (0x0048 - 0x0000)
struct UIW_Quartz_C_ListBarNavigationUp final
{
public:
	EUINavigation                                 Navigation_0;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue;                          // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UIW_Quartz_C_ListBarNavigationUp) == 0x000008, "Wrong alignment on UIW_Quartz_C_ListBarNavigationUp");
static_assert(sizeof(UIW_Quartz_C_ListBarNavigationUp) == 0x000048, "Wrong size on UIW_Quartz_C_ListBarNavigationUp");
static_assert(offsetof(UIW_Quartz_C_ListBarNavigationUp, Navigation_0) == 0x000000, "Member 'UIW_Quartz_C_ListBarNavigationUp::Navigation_0' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_ListBarNavigationUp, ReturnValue) == 0x000008, "Member 'UIW_Quartz_C_ListBarNavigationUp::ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_ListBarNavigationUp, K2Node_SwitchEnum_CmpSuccess) == 0x000010, "Member 'UIW_Quartz_C_ListBarNavigationUp::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_ListBarNavigationUp, CallFunc_Array_Length_ReturnValue) == 0x000014, "Member 'UIW_Quartz_C_ListBarNavigationUp::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_ListBarNavigationUp, Temp_int_Array_Index_Variable) == 0x000018, "Member 'UIW_Quartz_C_ListBarNavigationUp::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_ListBarNavigationUp, CallFunc_Subtract_IntInt_ReturnValue) == 0x00001C, "Member 'UIW_Quartz_C_ListBarNavigationUp::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_ListBarNavigationUp, CallFunc_Array_Get_Item) == 0x000020, "Member 'UIW_Quartz_C_ListBarNavigationUp::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_ListBarNavigationUp, CallFunc_Max_ReturnValue) == 0x000028, "Member 'UIW_Quartz_C_ListBarNavigationUp::CallFunc_Max_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_ListBarNavigationUp, CallFunc_IsVisible_ReturnValue) == 0x00002C, "Member 'UIW_Quartz_C_ListBarNavigationUp::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_ListBarNavigationUp, Temp_int_Loop_Counter_Variable) == 0x000030, "Member 'UIW_Quartz_C_ListBarNavigationUp::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_ListBarNavigationUp, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000034, "Member 'UIW_Quartz_C_ListBarNavigationUp::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_ListBarNavigationUp, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000038, "Member 'UIW_Quartz_C_ListBarNavigationUp::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_ListBarNavigationUp, CallFunc_Array_Find_ReturnValue) == 0x00003C, "Member 'UIW_Quartz_C_ListBarNavigationUp::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_ListBarNavigationUp, CallFunc_Less_IntInt_ReturnValue) == 0x000040, "Member 'UIW_Quartz_C_ListBarNavigationUp::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function UIW_Quartz.UIW_Quartz_C.ListBarNavigationDown
// 0x0040 (0x0040 - 0x0000)
struct UIW_Quartz_C_ListBarNavigationDown final
{
public:
	EUINavigation                                 Navigation_0;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UIW_Quartz_C_ListBarNavigationDown) == 0x000008, "Wrong alignment on UIW_Quartz_C_ListBarNavigationDown");
static_assert(sizeof(UIW_Quartz_C_ListBarNavigationDown) == 0x000040, "Wrong size on UIW_Quartz_C_ListBarNavigationDown");
static_assert(offsetof(UIW_Quartz_C_ListBarNavigationDown, Navigation_0) == 0x000000, "Member 'UIW_Quartz_C_ListBarNavigationDown::Navigation_0' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_ListBarNavigationDown, ReturnValue) == 0x000008, "Member 'UIW_Quartz_C_ListBarNavigationDown::ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_ListBarNavigationDown, Temp_int_Loop_Counter_Variable) == 0x000010, "Member 'UIW_Quartz_C_ListBarNavigationDown::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_ListBarNavigationDown, K2Node_SwitchEnum_CmpSuccess) == 0x000014, "Member 'UIW_Quartz_C_ListBarNavigationDown::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_ListBarNavigationDown, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'UIW_Quartz_C_ListBarNavigationDown::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_ListBarNavigationDown, CallFunc_Array_Length_ReturnValue) == 0x00001C, "Member 'UIW_Quartz_C_ListBarNavigationDown::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_ListBarNavigationDown, CallFunc_Array_Find_ReturnValue) == 0x000020, "Member 'UIW_Quartz_C_ListBarNavigationDown::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_ListBarNavigationDown, CallFunc_Less_IntInt_ReturnValue) == 0x000024, "Member 'UIW_Quartz_C_ListBarNavigationDown::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_ListBarNavigationDown, Temp_int_Array_Index_Variable) == 0x000028, "Member 'UIW_Quartz_C_ListBarNavigationDown::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_ListBarNavigationDown, CallFunc_Array_Get_Item) == 0x000030, "Member 'UIW_Quartz_C_ListBarNavigationDown::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_ListBarNavigationDown, CallFunc_Greater_IntInt_ReturnValue) == 0x000038, "Member 'UIW_Quartz_C_ListBarNavigationDown::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_ListBarNavigationDown, CallFunc_IsVisible_ReturnValue) == 0x000039, "Member 'UIW_Quartz_C_ListBarNavigationDown::CallFunc_IsVisible_ReturnValue' has a wrong offset!");

// Function UIW_Quartz.UIW_Quartz_C.OnReady
// 0x0288 (0x0288 - 0x0000)
struct UIW_Quartz_C_OnReady final
{
public:
	int32                                         LocalEnabledCoreLevel;                             // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FItemCommonInfoPtr                     LocalItemCommonInfo;                               // 0x0008(0x0008)(Edit, BlueprintVisible, NoDestructor)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UBorder*>                        K2Node_MakeArray_Array;                            // 0x0020(0x0010)(ReferenceParm, ContainsInstancedReference)
	TDelegate<void(class UUIW_Quartz_Pocket_C* SelfPocket)> K2Node_CreateDelegate_OutputDelegate;              // 0x0030(0x0010)(ZeroConstructor, NoDestructor)
	TArray<class UBorder*>                        K2Node_MakeArray_Array_1;                          // 0x0040(0x0010)(ReferenceParm, ContainsInstancedReference)
	class FText                                   CallFunc_GetGameStrWithName_ReturnValue;           // 0x0050(0x0018)()
	class FText                                   CallFunc_GetGameStrWithName_ReturnValue_1;         // 0x0068(0x0018)()
	float                                         CallFunc_GetEndTime_ReturnValue;                   // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetEndTime_ReturnValue_1;                 // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_94[0x4];                                       // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue;                  // 0x00A0(0x0008)(NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetEndTime_ReturnValue_2;                 // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetEndTime_ReturnValue_3;                 // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_2;              // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_3;              // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetEndTime_ReturnValue_4;                 // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetEndTime_ReturnValue_5;                 // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_4;              // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_5;              // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_GetGameStrWithName_ReturnValue_2;         // 0x00D8(0x0018)()
	float                                         CallFunc_GetEndTime_ReturnValue_6;                 // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F4[0x4];                                       // 0x00F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_6;              // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_GetGameStrWithName_ReturnValue_3;         // 0x0100(0x0018)()
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0118(0x0010)(ZeroConstructor, NoDestructor)
	class FText                                   CallFunc_GetGameStrWithName_ReturnValue_4;         // 0x0128(0x0018)()
	class FText                                   CallFunc_GetGameStrWithName_ReturnValue_5;         // 0x0140(0x0018)()
	class FText                                   CallFunc_GetGameStrWithName_ReturnValue_6;         // 0x0158(0x0018)()
	struct FItemCommonInfoPtr                     CallFunc_FindItemCommonInfoByNameBP_ReturnValue;   // 0x0170(0x0008)(NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x0178(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         Temp_int_Variable;                                 // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_18C[0x4];                                      // 0x018C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBorder*                                CallFunc_Array_Get_Item;                           // 0x0190(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x019C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19D[0x3];                                      // 0x019D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A4[0x4];                                      // 0x01A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UUIW_Quartz_Listbar_C*>          K2Node_MakeArray_Array_2;                          // 0x01A8(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UBorder*                                CallFunc_Array_Get_Item_1;                         // 0x01B8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue_1;         // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1C1[0x7];                                      // 0x01C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ULQuartzSystem*                         CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           CallFunc_Map_Keys_Keys;                            // 0x01D0(0x0010)(ReferenceParm)
	TSoftObjectPtr<class UObject>                 CallFunc_GetImageResource_ReturnValue;             // 0x01E0(0x0028)(ConstParm, UObjectWrapper, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item_2;                         // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0210(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_214[0x4];                                      // 0x0214(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetLocalTextItemNameLocalize_ReturnValue; // 0x0218(0x0018)()
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0230(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_231[0x7];                                      // 0x0231(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUIW_Quartz_Pocket_C*                   CallFunc_Array_Get_Item_3;                         // 0x0238(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULQuartzSystem*                         CallFunc_GetGameInstanceSubsystem_ReturnValue_1;   // 0x0240(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetEnabledCoreLevel_ReturnValue;          // 0x0248(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UUIW_Quartz_Listbar_C* QuartzListBar)> K2Node_CreateDelegate_OutputDelegate_3;            // 0x024C(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(class UUIW_Quartz_Listbar_C* QuartzListBar)> K2Node_CreateDelegate_OutputDelegate_4;            // 0x025C(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x026C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_26D[0x3];                                      // 0x026D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0270(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UUIW_Quartz_Pocket_C* Pocket, bool WithTween, bool ForceUpdate)> K2Node_CreateDelegate_OutputDelegate_5;            // 0x0274(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0284(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UIW_Quartz_C_OnReady) == 0x000008, "Wrong alignment on UIW_Quartz_C_OnReady");
static_assert(sizeof(UIW_Quartz_C_OnReady) == 0x000288, "Wrong size on UIW_Quartz_C_OnReady");
static_assert(offsetof(UIW_Quartz_C_OnReady, LocalEnabledCoreLevel) == 0x000000, "Member 'UIW_Quartz_C_OnReady::LocalEnabledCoreLevel' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_OnReady, LocalItemCommonInfo) == 0x000008, "Member 'UIW_Quartz_C_OnReady::LocalItemCommonInfo' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_OnReady, Temp_int_Loop_Counter_Variable) == 0x000010, "Member 'UIW_Quartz_C_OnReady::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_OnReady, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'UIW_Quartz_C_OnReady::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_OnReady, Temp_int_Array_Index_Variable) == 0x000018, "Member 'UIW_Quartz_C_OnReady::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_OnReady, K2Node_MakeArray_Array) == 0x000020, "Member 'UIW_Quartz_C_OnReady::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_OnReady, K2Node_CreateDelegate_OutputDelegate) == 0x000030, "Member 'UIW_Quartz_C_OnReady::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_OnReady, K2Node_MakeArray_Array_1) == 0x000040, "Member 'UIW_Quartz_C_OnReady::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_OnReady, CallFunc_GetGameStrWithName_ReturnValue) == 0x000050, "Member 'UIW_Quartz_C_OnReady::CallFunc_GetGameStrWithName_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_OnReady, CallFunc_GetGameStrWithName_ReturnValue_1) == 0x000068, "Member 'UIW_Quartz_C_OnReady::CallFunc_GetGameStrWithName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_OnReady, CallFunc_GetEndTime_ReturnValue) == 0x000080, "Member 'UIW_Quartz_C_OnReady::CallFunc_GetEndTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_OnReady, CallFunc_PlayAnimation_ReturnValue) == 0x000088, "Member 'UIW_Quartz_C_OnReady::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_OnReady, CallFunc_GetEndTime_ReturnValue_1) == 0x000090, "Member 'UIW_Quartz_C_OnReady::CallFunc_GetEndTime_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_OnReady, CallFunc_PlayAnimation_ReturnValue_1) == 0x000098, "Member 'UIW_Quartz_C_OnReady::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_OnReady, CallFunc_K2_SetTimer_ReturnValue) == 0x0000A0, "Member 'UIW_Quartz_C_OnReady::CallFunc_K2_SetTimer_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_OnReady, CallFunc_GetEndTime_ReturnValue_2) == 0x0000A8, "Member 'UIW_Quartz_C_OnReady::CallFunc_GetEndTime_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_OnReady, CallFunc_GetEndTime_ReturnValue_3) == 0x0000AC, "Member 'UIW_Quartz_C_OnReady::CallFunc_GetEndTime_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_OnReady, CallFunc_PlayAnimation_ReturnValue_2) == 0x0000B0, "Member 'UIW_Quartz_C_OnReady::CallFunc_PlayAnimation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_OnReady, CallFunc_PlayAnimation_ReturnValue_3) == 0x0000B8, "Member 'UIW_Quartz_C_OnReady::CallFunc_PlayAnimation_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_OnReady, CallFunc_GetEndTime_ReturnValue_4) == 0x0000C0, "Member 'UIW_Quartz_C_OnReady::CallFunc_GetEndTime_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_OnReady, CallFunc_GetEndTime_ReturnValue_5) == 0x0000C4, "Member 'UIW_Quartz_C_OnReady::CallFunc_GetEndTime_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_OnReady, CallFunc_PlayAnimation_ReturnValue_4) == 0x0000C8, "Member 'UIW_Quartz_C_OnReady::CallFunc_PlayAnimation_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_OnReady, CallFunc_PlayAnimation_ReturnValue_5) == 0x0000D0, "Member 'UIW_Quartz_C_OnReady::CallFunc_PlayAnimation_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_OnReady, CallFunc_GetGameStrWithName_ReturnValue_2) == 0x0000D8, "Member 'UIW_Quartz_C_OnReady::CallFunc_GetGameStrWithName_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_OnReady, CallFunc_GetEndTime_ReturnValue_6) == 0x0000F0, "Member 'UIW_Quartz_C_OnReady::CallFunc_GetEndTime_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_OnReady, CallFunc_PlayAnimation_ReturnValue_6) == 0x0000F8, "Member 'UIW_Quartz_C_OnReady::CallFunc_PlayAnimation_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_OnReady, CallFunc_GetGameStrWithName_ReturnValue_3) == 0x000100, "Member 'UIW_Quartz_C_OnReady::CallFunc_GetGameStrWithName_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_OnReady, K2Node_CreateDelegate_OutputDelegate_1) == 0x000118, "Member 'UIW_Quartz_C_OnReady::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_OnReady, CallFunc_GetGameStrWithName_ReturnValue_4) == 0x000128, "Member 'UIW_Quartz_C_OnReady::CallFunc_GetGameStrWithName_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_OnReady, CallFunc_GetGameStrWithName_ReturnValue_5) == 0x000140, "Member 'UIW_Quartz_C_OnReady::CallFunc_GetGameStrWithName_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_OnReady, CallFunc_GetGameStrWithName_ReturnValue_6) == 0x000158, "Member 'UIW_Quartz_C_OnReady::CallFunc_GetGameStrWithName_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_OnReady, CallFunc_FindItemCommonInfoByNameBP_ReturnValue) == 0x000170, "Member 'UIW_Quartz_C_OnReady::CallFunc_FindItemCommonInfoByNameBP_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_OnReady, K2Node_CreateDelegate_OutputDelegate_2) == 0x000178, "Member 'UIW_Quartz_C_OnReady::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_OnReady, Temp_int_Variable) == 0x000188, "Member 'UIW_Quartz_C_OnReady::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_OnReady, CallFunc_Array_Get_Item) == 0x000190, "Member 'UIW_Quartz_C_OnReady::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_OnReady, CallFunc_Subtract_IntInt_ReturnValue) == 0x000198, "Member 'UIW_Quartz_C_OnReady::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_OnReady, CallFunc_Array_IsValidIndex_ReturnValue) == 0x00019C, "Member 'UIW_Quartz_C_OnReady::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_OnReady, CallFunc_Add_IntInt_ReturnValue_1) == 0x0001A0, "Member 'UIW_Quartz_C_OnReady::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_OnReady, K2Node_MakeArray_Array_2) == 0x0001A8, "Member 'UIW_Quartz_C_OnReady::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_OnReady, CallFunc_Array_Get_Item_1) == 0x0001B8, "Member 'UIW_Quartz_C_OnReady::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_OnReady, CallFunc_Array_IsValidIndex_ReturnValue_1) == 0x0001C0, "Member 'UIW_Quartz_C_OnReady::CallFunc_Array_IsValidIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_OnReady, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x0001C8, "Member 'UIW_Quartz_C_OnReady::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_OnReady, CallFunc_Map_Keys_Keys) == 0x0001D0, "Member 'UIW_Quartz_C_OnReady::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_OnReady, CallFunc_GetImageResource_ReturnValue) == 0x0001E0, "Member 'UIW_Quartz_C_OnReady::CallFunc_GetImageResource_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_OnReady, CallFunc_Array_Get_Item_2) == 0x000208, "Member 'UIW_Quartz_C_OnReady::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_OnReady, CallFunc_Array_Length_ReturnValue) == 0x000210, "Member 'UIW_Quartz_C_OnReady::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_OnReady, CallFunc_GetLocalTextItemNameLocalize_ReturnValue) == 0x000218, "Member 'UIW_Quartz_C_OnReady::CallFunc_GetLocalTextItemNameLocalize_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_OnReady, CallFunc_Less_IntInt_ReturnValue) == 0x000230, "Member 'UIW_Quartz_C_OnReady::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_OnReady, CallFunc_Array_Get_Item_3) == 0x000238, "Member 'UIW_Quartz_C_OnReady::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_OnReady, CallFunc_GetGameInstanceSubsystem_ReturnValue_1) == 0x000240, "Member 'UIW_Quartz_C_OnReady::CallFunc_GetGameInstanceSubsystem_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_OnReady, CallFunc_GetEnabledCoreLevel_ReturnValue) == 0x000248, "Member 'UIW_Quartz_C_OnReady::CallFunc_GetEnabledCoreLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_OnReady, K2Node_CreateDelegate_OutputDelegate_3) == 0x00024C, "Member 'UIW_Quartz_C_OnReady::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_OnReady, K2Node_CreateDelegate_OutputDelegate_4) == 0x00025C, "Member 'UIW_Quartz_C_OnReady::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_OnReady, K2Node_SwitchInteger_CmpSuccess) == 0x00026C, "Member 'UIW_Quartz_C_OnReady::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_OnReady, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000270, "Member 'UIW_Quartz_C_OnReady::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_OnReady, K2Node_CreateDelegate_OutputDelegate_5) == 0x000274, "Member 'UIW_Quartz_C_OnReady::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_OnReady, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000284, "Member 'UIW_Quartz_C_OnReady::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");

// Function UIW_Quartz.UIW_Quartz_C.VisibleEffectList
// 0x0014 (0x0014 - 0x0000)
struct UIW_Quartz_C_VisibleEffectList final
{
public:
	bool                                          IsVisible_0;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3[0x1];                                        // 0x0003(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTweenEase                             K2Node_MakeStruct_TweenEase;                       // 0x0004(0x000C)(NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UIW_Quartz_C_VisibleEffectList) == 0x000004, "Wrong alignment on UIW_Quartz_C_VisibleEffectList");
static_assert(sizeof(UIW_Quartz_C_VisibleEffectList) == 0x000014, "Wrong size on UIW_Quartz_C_VisibleEffectList");
static_assert(offsetof(UIW_Quartz_C_VisibleEffectList, IsVisible_0) == 0x000000, "Member 'UIW_Quartz_C_VisibleEffectList::IsVisible_0' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_VisibleEffectList, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'UIW_Quartz_C_VisibleEffectList::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_VisibleEffectList, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000002, "Member 'UIW_Quartz_C_VisibleEffectList::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_VisibleEffectList, K2Node_MakeStruct_TweenEase) == 0x000004, "Member 'UIW_Quartz_C_VisibleEffectList::K2Node_MakeStruct_TweenEase' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_VisibleEffectList, CallFunc_IsValid_ReturnValue_1) == 0x000010, "Member 'UIW_Quartz_C_VisibleEffectList::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function UIW_Quartz.UIW_Quartz_C.SetQuartzEffectLevel
// 0x0010 (0x0010 - 0x0000)
struct UIW_Quartz_C_SetQuartzEffectLevel final
{
public:
	class ULQuartzSystem*                         CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetEnabledCoreLevel_ReturnValue;          // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UIW_Quartz_C_SetQuartzEffectLevel) == 0x000008, "Wrong alignment on UIW_Quartz_C_SetQuartzEffectLevel");
static_assert(sizeof(UIW_Quartz_C_SetQuartzEffectLevel) == 0x000010, "Wrong size on UIW_Quartz_C_SetQuartzEffectLevel");
static_assert(offsetof(UIW_Quartz_C_SetQuartzEffectLevel, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000000, "Member 'UIW_Quartz_C_SetQuartzEffectLevel::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_SetQuartzEffectLevel, CallFunc_GetEnabledCoreLevel_ReturnValue) == 0x000008, "Member 'UIW_Quartz_C_SetQuartzEffectLevel::CallFunc_GetEnabledCoreLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_SetQuartzEffectLevel, K2Node_SwitchInteger_CmpSuccess) == 0x00000C, "Member 'UIW_Quartz_C_SetQuartzEffectLevel::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");

// Function UIW_Quartz.UIW_Quartz_C.OnLevelUp
// 0x0010 (0x0010 - 0x0000)
struct UIW_Quartz_C_OnLevelUp final
{
public:
	float                                         CallFunc_GetEndTime_ReturnValue;                   // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue;                  // 0x0008(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UIW_Quartz_C_OnLevelUp) == 0x000008, "Wrong alignment on UIW_Quartz_C_OnLevelUp");
static_assert(sizeof(UIW_Quartz_C_OnLevelUp) == 0x000010, "Wrong size on UIW_Quartz_C_OnLevelUp");
static_assert(offsetof(UIW_Quartz_C_OnLevelUp, CallFunc_GetEndTime_ReturnValue) == 0x000000, "Member 'UIW_Quartz_C_OnLevelUp::CallFunc_GetEndTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_OnLevelUp, CallFunc_K2_SetTimer_ReturnValue) == 0x000008, "Member 'UIW_Quartz_C_OnLevelUp::CallFunc_K2_SetTimer_ReturnValue' has a wrong offset!");

// Function UIW_Quartz.UIW_Quartz_C.LevelUpEventFunction
// 0x00A0 (0x00A0 - 0x0000)
struct UIW_Quartz_C_LevelUpEventFunction final
{
public:
	int32                                         LocalEnabledCoreLevel;                             // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBorder*                                CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBorder*                                CallFunc_Array_Get_Item_1;                         // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue_1;         // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4A[0x6];                                       // 0x004A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ULQuartzSystem*                         CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetEnabledCoreLevel_ReturnValue;          // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUIW_Quartz_Pocket_C*                   CallFunc_Array_Get_Item_2;                         // 0x0060(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_2;              // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetPocketLevel_ReturnValue;               // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7A[0x6];                                       // 0x007A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_3;              // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_4;              // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_5;              // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_6;              // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UIW_Quartz_C_LevelUpEventFunction) == 0x000008, "Wrong alignment on UIW_Quartz_C_LevelUpEventFunction");
static_assert(sizeof(UIW_Quartz_C_LevelUpEventFunction) == 0x0000A0, "Wrong size on UIW_Quartz_C_LevelUpEventFunction");
static_assert(offsetof(UIW_Quartz_C_LevelUpEventFunction, LocalEnabledCoreLevel) == 0x000000, "Member 'UIW_Quartz_C_LevelUpEventFunction::LocalEnabledCoreLevel' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_LevelUpEventFunction, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'UIW_Quartz_C_LevelUpEventFunction::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_LevelUpEventFunction, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'UIW_Quartz_C_LevelUpEventFunction::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_LevelUpEventFunction, Temp_int_Array_Index_Variable) == 0x00000C, "Member 'UIW_Quartz_C_LevelUpEventFunction::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_LevelUpEventFunction, Temp_int_Variable) == 0x000010, "Member 'UIW_Quartz_C_LevelUpEventFunction::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_LevelUpEventFunction, K2Node_SwitchInteger_CmpSuccess) == 0x000014, "Member 'UIW_Quartz_C_LevelUpEventFunction::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_LevelUpEventFunction, CallFunc_Subtract_IntInt_ReturnValue) == 0x000018, "Member 'UIW_Quartz_C_LevelUpEventFunction::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_LevelUpEventFunction, CallFunc_Add_IntInt_ReturnValue_1) == 0x00001C, "Member 'UIW_Quartz_C_LevelUpEventFunction::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_LevelUpEventFunction, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000020, "Member 'UIW_Quartz_C_LevelUpEventFunction::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_LevelUpEventFunction, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000024, "Member 'UIW_Quartz_C_LevelUpEventFunction::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_LevelUpEventFunction, CallFunc_PlayAnimation_ReturnValue) == 0x000028, "Member 'UIW_Quartz_C_LevelUpEventFunction::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_LevelUpEventFunction, CallFunc_PlayAnimation_ReturnValue_1) == 0x000030, "Member 'UIW_Quartz_C_LevelUpEventFunction::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_LevelUpEventFunction, CallFunc_Array_Get_Item) == 0x000038, "Member 'UIW_Quartz_C_LevelUpEventFunction::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_LevelUpEventFunction, CallFunc_Array_Get_Item_1) == 0x000040, "Member 'UIW_Quartz_C_LevelUpEventFunction::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_LevelUpEventFunction, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000048, "Member 'UIW_Quartz_C_LevelUpEventFunction::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_LevelUpEventFunction, CallFunc_Array_IsValidIndex_ReturnValue_1) == 0x000049, "Member 'UIW_Quartz_C_LevelUpEventFunction::CallFunc_Array_IsValidIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_LevelUpEventFunction, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000050, "Member 'UIW_Quartz_C_LevelUpEventFunction::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_LevelUpEventFunction, CallFunc_GetEnabledCoreLevel_ReturnValue) == 0x000058, "Member 'UIW_Quartz_C_LevelUpEventFunction::CallFunc_GetEnabledCoreLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_LevelUpEventFunction, CallFunc_Array_Get_Item_2) == 0x000060, "Member 'UIW_Quartz_C_LevelUpEventFunction::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_LevelUpEventFunction, CallFunc_PlayAnimation_ReturnValue_2) == 0x000068, "Member 'UIW_Quartz_C_LevelUpEventFunction::CallFunc_PlayAnimation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_LevelUpEventFunction, CallFunc_Array_Length_ReturnValue) == 0x000070, "Member 'UIW_Quartz_C_LevelUpEventFunction::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_LevelUpEventFunction, CallFunc_GetPocketLevel_ReturnValue) == 0x000074, "Member 'UIW_Quartz_C_LevelUpEventFunction::CallFunc_GetPocketLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_LevelUpEventFunction, CallFunc_Less_IntInt_ReturnValue) == 0x000078, "Member 'UIW_Quartz_C_LevelUpEventFunction::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_LevelUpEventFunction, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000079, "Member 'UIW_Quartz_C_LevelUpEventFunction::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_LevelUpEventFunction, CallFunc_PlayAnimation_ReturnValue_3) == 0x000080, "Member 'UIW_Quartz_C_LevelUpEventFunction::CallFunc_PlayAnimation_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_LevelUpEventFunction, CallFunc_PlayAnimation_ReturnValue_4) == 0x000088, "Member 'UIW_Quartz_C_LevelUpEventFunction::CallFunc_PlayAnimation_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_LevelUpEventFunction, CallFunc_PlayAnimation_ReturnValue_5) == 0x000090, "Member 'UIW_Quartz_C_LevelUpEventFunction::CallFunc_PlayAnimation_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_LevelUpEventFunction, CallFunc_PlayAnimation_ReturnValue_6) == 0x000098, "Member 'UIW_Quartz_C_LevelUpEventFunction::CallFunc_PlayAnimation_ReturnValue_6' has a wrong offset!");

// Function UIW_Quartz.UIW_Quartz_C.AddEventBinding
// 0x0018 (0x0018 - 0x0000)
struct UIW_Quartz_C_AddEventBinding final
{
public:
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor)
	class ULQuartzSystem*                         CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UIW_Quartz_C_AddEventBinding) == 0x000008, "Wrong alignment on UIW_Quartz_C_AddEventBinding");
static_assert(sizeof(UIW_Quartz_C_AddEventBinding) == 0x000018, "Wrong size on UIW_Quartz_C_AddEventBinding");
static_assert(offsetof(UIW_Quartz_C_AddEventBinding, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'UIW_Quartz_C_AddEventBinding::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_AddEventBinding, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000010, "Member 'UIW_Quartz_C_AddEventBinding::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");

// Function UIW_Quartz.UIW_Quartz_C.ClearEventBinding
// 0x0018 (0x0018 - 0x0000)
struct UIW_Quartz_C_ClearEventBinding final
{
public:
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor)
	class ULQuartzSystem*                         CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UIW_Quartz_C_ClearEventBinding) == 0x000008, "Wrong alignment on UIW_Quartz_C_ClearEventBinding");
static_assert(sizeof(UIW_Quartz_C_ClearEventBinding) == 0x000018, "Wrong size on UIW_Quartz_C_ClearEventBinding");
static_assert(offsetof(UIW_Quartz_C_ClearEventBinding, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'UIW_Quartz_C_ClearEventBinding::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_ClearEventBinding, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000010, "Member 'UIW_Quartz_C_ClearEventBinding::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");

// Function UIW_Quartz.UIW_Quartz_C.OnMouseWheel
// 0x0220 (0x0220 - 0x0000)
struct UIW_Quartz_C_OnMouseWheel final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0070)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FEventReply                            ReturnValue;                                       // 0x00A8(0x00B8)(Parm, OutParm, ReturnParm)
	float                                         CallFunc_PointerEvent_GetWheelDelta_ReturnValue;   // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0164(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_165[0x3];                                      // 0x0165(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x0168(0x00B8)()
};
static_assert(alignof(UIW_Quartz_C_OnMouseWheel) == 0x000008, "Wrong alignment on UIW_Quartz_C_OnMouseWheel");
static_assert(sizeof(UIW_Quartz_C_OnMouseWheel) == 0x000220, "Wrong size on UIW_Quartz_C_OnMouseWheel");
static_assert(offsetof(UIW_Quartz_C_OnMouseWheel, MyGeometry) == 0x000000, "Member 'UIW_Quartz_C_OnMouseWheel::MyGeometry' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_OnMouseWheel, MouseEvent) == 0x000038, "Member 'UIW_Quartz_C_OnMouseWheel::MouseEvent' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_OnMouseWheel, ReturnValue) == 0x0000A8, "Member 'UIW_Quartz_C_OnMouseWheel::ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_OnMouseWheel, CallFunc_PointerEvent_GetWheelDelta_ReturnValue) == 0x000160, "Member 'UIW_Quartz_C_OnMouseWheel::CallFunc_PointerEvent_GetWheelDelta_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_OnMouseWheel, CallFunc_IsVisible_ReturnValue) == 0x000164, "Member 'UIW_Quartz_C_OnMouseWheel::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_OnMouseWheel, CallFunc_Handled_ReturnValue) == 0x000168, "Member 'UIW_Quartz_C_OnMouseWheel::CallFunc_Handled_ReturnValue' has a wrong offset!");

// Function UIW_Quartz.UIW_Quartz_C.SetZoom
// 0x0030 (0x0030 - 0x0000)
struct UIW_Quartz_C_SetZoom final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue;                  // 0x0008(0x0008)(NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Add_Vector2DFloat_ReturnValue;            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_ClampAxes2D_ReturnValue;                  // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_1;                        // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_1;                        // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UIW_Quartz_C_SetZoom) == 0x000008, "Wrong alignment on UIW_Quartz_C_SetZoom");
static_assert(sizeof(UIW_Quartz_C_SetZoom) == 0x000030, "Wrong size on UIW_Quartz_C_SetZoom");
static_assert(offsetof(UIW_Quartz_C_SetZoom, Value) == 0x000000, "Member 'UIW_Quartz_C_SetZoom::Value' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_SetZoom, CallFunc_K2_SetTimer_ReturnValue) == 0x000008, "Member 'UIW_Quartz_C_SetZoom::CallFunc_K2_SetTimer_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_SetZoom, CallFunc_BreakVector2D_X) == 0x000010, "Member 'UIW_Quartz_C_SetZoom::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_SetZoom, CallFunc_BreakVector2D_Y) == 0x000014, "Member 'UIW_Quartz_C_SetZoom::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_SetZoom, CallFunc_Add_Vector2DFloat_ReturnValue) == 0x000018, "Member 'UIW_Quartz_C_SetZoom::CallFunc_Add_Vector2DFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_SetZoom, CallFunc_ClampAxes2D_ReturnValue) == 0x000020, "Member 'UIW_Quartz_C_SetZoom::CallFunc_ClampAxes2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_SetZoom, CallFunc_BreakVector2D_X_1) == 0x000028, "Member 'UIW_Quartz_C_SetZoom::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_SetZoom, CallFunc_BreakVector2D_Y_1) == 0x00002C, "Member 'UIW_Quartz_C_SetZoom::CallFunc_BreakVector2D_Y_1' has a wrong offset!");

// Function UIW_Quartz.UIW_Quartz_C.UpdateZoom
// 0x001C (0x001C - 0x0000)
struct UIW_Quartz_C_UpdateZoom final
{
public:
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_Multiply_Vector2DVector2D_ReturnValue;    // 0x0004(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Ease_ReturnValue;                         // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0014(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UIW_Quartz_C_UpdateZoom) == 0x000004, "Wrong alignment on UIW_Quartz_C_UpdateZoom");
static_assert(sizeof(UIW_Quartz_C_UpdateZoom) == 0x00001C, "Wrong size on UIW_Quartz_C_UpdateZoom");
static_assert(offsetof(UIW_Quartz_C_UpdateZoom, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000000, "Member 'UIW_Quartz_C_UpdateZoom::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_UpdateZoom, CallFunc_Multiply_Vector2DVector2D_ReturnValue) == 0x000004, "Member 'UIW_Quartz_C_UpdateZoom::CallFunc_Multiply_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_UpdateZoom, CallFunc_Add_FloatFloat_ReturnValue) == 0x00000C, "Member 'UIW_Quartz_C_UpdateZoom::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_UpdateZoom, CallFunc_Ease_ReturnValue) == 0x000010, "Member 'UIW_Quartz_C_UpdateZoom::CallFunc_Ease_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_UpdateZoom, CallFunc_MakeVector2D_ReturnValue) == 0x000014, "Member 'UIW_Quartz_C_UpdateZoom::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");

// Function UIW_Quartz.UIW_Quartz_C.LinkTween
// 0x0050 (0x0050 - 0x0000)
struct UIW_Quartz_C_LinkTween final
{
public:
	class UImage*                                 Image;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NowInstalled;                                      // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTweenEase                             K2Node_MakeStruct_TweenEase;                       // 0x000C(0x000C)(NoDestructor)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetPosition_ReturnValue;                  // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue_1;           // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTweenEase                             K2Node_MakeStruct_TweenEase_1;                     // 0x0030(0x000C)(NoDestructor)
	struct FVector2D                              CallFunc_GetPosition_ReturnValue_1;                // 0x003C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTweenEase                             K2Node_MakeStruct_TweenEase_2;                     // 0x0044(0x000C)(NoDestructor)
};
static_assert(alignof(UIW_Quartz_C_LinkTween) == 0x000008, "Wrong alignment on UIW_Quartz_C_LinkTween");
static_assert(sizeof(UIW_Quartz_C_LinkTween) == 0x000050, "Wrong size on UIW_Quartz_C_LinkTween");
static_assert(offsetof(UIW_Quartz_C_LinkTween, Image) == 0x000000, "Member 'UIW_Quartz_C_LinkTween::Image' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_LinkTween, NowInstalled) == 0x000008, "Member 'UIW_Quartz_C_LinkTween::NowInstalled' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_LinkTween, K2Node_MakeStruct_TweenEase) == 0x00000C, "Member 'UIW_Quartz_C_LinkTween::K2Node_MakeStruct_TweenEase' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_LinkTween, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x000018, "Member 'UIW_Quartz_C_LinkTween::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_LinkTween, CallFunc_GetPosition_ReturnValue) == 0x000020, "Member 'UIW_Quartz_C_LinkTween::CallFunc_GetPosition_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_LinkTween, CallFunc_SlotAsCanvasSlot_ReturnValue_1) == 0x000028, "Member 'UIW_Quartz_C_LinkTween::CallFunc_SlotAsCanvasSlot_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_LinkTween, K2Node_MakeStruct_TweenEase_1) == 0x000030, "Member 'UIW_Quartz_C_LinkTween::K2Node_MakeStruct_TweenEase_1' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_LinkTween, CallFunc_GetPosition_ReturnValue_1) == 0x00003C, "Member 'UIW_Quartz_C_LinkTween::CallFunc_GetPosition_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_LinkTween, K2Node_MakeStruct_TweenEase_2) == 0x000044, "Member 'UIW_Quartz_C_LinkTween::K2Node_MakeStruct_TweenEase_2' has a wrong offset!");

// Function UIW_Quartz.UIW_Quartz_C.OnCompleteTweenEvent
// 0x000C (0x000C - 0x0000)
struct UIW_Quartz_C_OnCompleteTweenEvent final
{
public:
	class FName                                   Name_0;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchName_CmpSuccess;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UIW_Quartz_C_OnCompleteTweenEvent) == 0x000004, "Wrong alignment on UIW_Quartz_C_OnCompleteTweenEvent");
static_assert(sizeof(UIW_Quartz_C_OnCompleteTweenEvent) == 0x00000C, "Wrong size on UIW_Quartz_C_OnCompleteTweenEvent");
static_assert(offsetof(UIW_Quartz_C_OnCompleteTweenEvent, Name_0) == 0x000000, "Member 'UIW_Quartz_C_OnCompleteTweenEvent::Name_0' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_OnCompleteTweenEvent, K2Node_SwitchName_CmpSuccess) == 0x000008, "Member 'UIW_Quartz_C_OnCompleteTweenEvent::K2Node_SwitchName_CmpSuccess' has a wrong offset!");

// Function UIW_Quartz.UIW_Quartz_C.InitPocketFocus
// 0x0030 (0x0030 - 0x0000)
struct UIW_Quartz_C_InitPocketFocus final
{
public:
	class ULQuartzSystem*                         CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetEnabledCoreLevel_ReturnValue;          // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ULQuartzSystem*                         CallFunc_GetGameInstanceSubsystem_ReturnValue_1;   // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUIW_Quartz_Pocket_C*                   CallFunc_Map_Find_Value;                           // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UIW_Quartz_C_InitPocketFocus) == 0x000008, "Wrong alignment on UIW_Quartz_C_InitPocketFocus");
static_assert(sizeof(UIW_Quartz_C_InitPocketFocus) == 0x000030, "Wrong size on UIW_Quartz_C_InitPocketFocus");
static_assert(offsetof(UIW_Quartz_C_InitPocketFocus, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000000, "Member 'UIW_Quartz_C_InitPocketFocus::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_InitPocketFocus, CallFunc_GetEnabledCoreLevel_ReturnValue) == 0x000008, "Member 'UIW_Quartz_C_InitPocketFocus::CallFunc_GetEnabledCoreLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_InitPocketFocus, K2Node_SwitchInteger_CmpSuccess) == 0x00000C, "Member 'UIW_Quartz_C_InitPocketFocus::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_InitPocketFocus, CallFunc_GetGameInstanceSubsystem_ReturnValue_1) == 0x000010, "Member 'UIW_Quartz_C_InitPocketFocus::CallFunc_GetGameInstanceSubsystem_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_InitPocketFocus, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000018, "Member 'UIW_Quartz_C_InitPocketFocus::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_InitPocketFocus, CallFunc_Map_Find_Value) == 0x000020, "Member 'UIW_Quartz_C_InitPocketFocus::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_InitPocketFocus, CallFunc_Map_Find_ReturnValue) == 0x000028, "Member 'UIW_Quartz_C_InitPocketFocus::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function UIW_Quartz.UIW_Quartz_C.SetUnlockView
// 0x0010 (0x0010 - 0x0000)
struct UIW_Quartz_C_SetUnlockView final
{
public:
	class ULQuartzSystem*                         CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetMaxLevelLimit_ReturnValue;             // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UIW_Quartz_C_SetUnlockView) == 0x000008, "Wrong alignment on UIW_Quartz_C_SetUnlockView");
static_assert(sizeof(UIW_Quartz_C_SetUnlockView) == 0x000010, "Wrong size on UIW_Quartz_C_SetUnlockView");
static_assert(offsetof(UIW_Quartz_C_SetUnlockView, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000000, "Member 'UIW_Quartz_C_SetUnlockView::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_SetUnlockView, CallFunc_GetMaxLevelLimit_ReturnValue) == 0x000008, "Member 'UIW_Quartz_C_SetUnlockView::CallFunc_GetMaxLevelLimit_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_SetUnlockView, CallFunc_Greater_IntInt_ReturnValue) == 0x00000C, "Member 'UIW_Quartz_C_SetUnlockView::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_SetUnlockView, CallFunc_Greater_IntInt_ReturnValue_1) == 0x00000D, "Member 'UIW_Quartz_C_SetUnlockView::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");

// Function UIW_Quartz.UIW_Quartz_C.GetSnapPositionNearOne
// 0x0068 (0x0068 - 0x0000)
struct UIW_Quartz_C_GetSnapPositionNearOne final
{
public:
	class UUIW_Quartz_Pocket_C*                   NewParam;                                          // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUIW_Quartz_Pocket_C*                   LocalPocket;                                       // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LocalPrevDistance;                                 // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue;        // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_Add_Vector2DVector2D_ReturnValue;         // 0x0024(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUIW_Quartz_Pocket_C*                   CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A[0x6];                                       // 0x003A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetPosition_ReturnValue;                  // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Multiply_Vector2DVector2D_ReturnValue;    // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Multiply_Vector2DFloat_ReturnValue;       // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Distance2D_ReturnValue;                   // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UIW_Quartz_C_GetSnapPositionNearOne) == 0x000008, "Wrong alignment on UIW_Quartz_C_GetSnapPositionNearOne");
static_assert(sizeof(UIW_Quartz_C_GetSnapPositionNearOne) == 0x000068, "Wrong size on UIW_Quartz_C_GetSnapPositionNearOne");
static_assert(offsetof(UIW_Quartz_C_GetSnapPositionNearOne, NewParam) == 0x000000, "Member 'UIW_Quartz_C_GetSnapPositionNearOne::NewParam' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_GetSnapPositionNearOne, LocalPocket) == 0x000008, "Member 'UIW_Quartz_C_GetSnapPositionNearOne::LocalPocket' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_GetSnapPositionNearOne, LocalPrevDistance) == 0x000010, "Member 'UIW_Quartz_C_GetSnapPositionNearOne::LocalPrevDistance' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_GetSnapPositionNearOne, Temp_int_Array_Index_Variable) == 0x000014, "Member 'UIW_Quartz_C_GetSnapPositionNearOne::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_GetSnapPositionNearOne, Temp_int_Loop_Counter_Variable) == 0x000018, "Member 'UIW_Quartz_C_GetSnapPositionNearOne::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_GetSnapPositionNearOne, CallFunc_Add_IntInt_ReturnValue) == 0x00001C, "Member 'UIW_Quartz_C_GetSnapPositionNearOne::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_GetSnapPositionNearOne, CallFunc_EqualEqual_FloatFloat_ReturnValue) == 0x000020, "Member 'UIW_Quartz_C_GetSnapPositionNearOne::CallFunc_EqualEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_GetSnapPositionNearOne, CallFunc_Add_Vector2DVector2D_ReturnValue) == 0x000024, "Member 'UIW_Quartz_C_GetSnapPositionNearOne::CallFunc_Add_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_GetSnapPositionNearOne, CallFunc_Array_Length_ReturnValue) == 0x00002C, "Member 'UIW_Quartz_C_GetSnapPositionNearOne::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_GetSnapPositionNearOne, CallFunc_Array_Get_Item) == 0x000030, "Member 'UIW_Quartz_C_GetSnapPositionNearOne::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_GetSnapPositionNearOne, CallFunc_Less_IntInt_ReturnValue) == 0x000038, "Member 'UIW_Quartz_C_GetSnapPositionNearOne::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_GetSnapPositionNearOne, CallFunc_IsVisible_ReturnValue) == 0x000039, "Member 'UIW_Quartz_C_GetSnapPositionNearOne::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_GetSnapPositionNearOne, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x000040, "Member 'UIW_Quartz_C_GetSnapPositionNearOne::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_GetSnapPositionNearOne, CallFunc_GetPosition_ReturnValue) == 0x000048, "Member 'UIW_Quartz_C_GetSnapPositionNearOne::CallFunc_GetPosition_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_GetSnapPositionNearOne, CallFunc_Multiply_Vector2DVector2D_ReturnValue) == 0x000050, "Member 'UIW_Quartz_C_GetSnapPositionNearOne::CallFunc_Multiply_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_GetSnapPositionNearOne, CallFunc_Multiply_Vector2DFloat_ReturnValue) == 0x000058, "Member 'UIW_Quartz_C_GetSnapPositionNearOne::CallFunc_Multiply_Vector2DFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_GetSnapPositionNearOne, CallFunc_Distance2D_ReturnValue) == 0x000060, "Member 'UIW_Quartz_C_GetSnapPositionNearOne::CallFunc_Distance2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_GetSnapPositionNearOne, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000064, "Member 'UIW_Quartz_C_GetSnapPositionNearOne::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");

// Function UIW_Quartz.UIW_Quartz_C.OnPocketDoubleClicked
// 0x0010 (0x0010 - 0x0000)
struct UIW_Quartz_C_OnPocketDoubleClicked final
{
public:
	class UUIW_Quartz_Pocket_C*                   Pocket;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UIW_Quartz_C_OnPocketDoubleClicked) == 0x000008, "Wrong alignment on UIW_Quartz_C_OnPocketDoubleClicked");
static_assert(sizeof(UIW_Quartz_C_OnPocketDoubleClicked) == 0x000010, "Wrong size on UIW_Quartz_C_OnPocketDoubleClicked");
static_assert(offsetof(UIW_Quartz_C_OnPocketDoubleClicked, Pocket) == 0x000000, "Member 'UIW_Quartz_C_OnPocketDoubleClicked::Pocket' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_OnPocketDoubleClicked, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'UIW_Quartz_C_OnPocketDoubleClicked::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_OnPocketDoubleClicked, CallFunc_IsValid_ReturnValue_1) == 0x000009, "Member 'UIW_Quartz_C_OnPocketDoubleClicked::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_OnPocketDoubleClicked, CallFunc_IsVisible_ReturnValue) == 0x00000A, "Member 'UIW_Quartz_C_OnPocketDoubleClicked::CallFunc_IsVisible_ReturnValue' has a wrong offset!");

// Function UIW_Quartz.UIW_Quartz_C.SetPocketNavi
// 0x00F0 (0x00F0 - 0x0000)
struct UIW_Quartz_C_SetPocketNavi final
{
public:
	class UUIW_Quartz_Pocket_C*                   LocalPocket;                                       // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LocalIndex;                                        // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UUIW_Quartz_Pocket_C*                   Temp_object_Variable;                              // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUIW_Quartz_Pocket_C*                   Temp_object_Variable_1;                            // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUIW_Quartz_Pocket_C*                   Temp_object_Variable_2;                            // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUIW_Quartz_Pocket_C*                   Temp_object_Variable_3;                            // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUIW_Quartz_Pocket_C*                   CallFunc_Array_Get_Item;                           // 0x0058(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FUIST_PocketNavi>               CallFunc_Map_Values_Values;                        // 0x0060(0x0010)(ReferenceParm)
	struct FUIST_PocketNavi                       CallFunc_Array_Get_Item_1;                         // 0x0070(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_85[0x3];                                       // 0x0085(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUIW_Quartz_Pocket_C*                   CallFunc_Array_Get_Item_2;                         // 0x0090(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99[0x3];                                       // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUIW_Quartz_Pocket_C*                   CallFunc_Array_Get_Item_3;                         // 0x00A0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUIW_Quartz_Pocket_C*                   K2Node_Select_Default;                             // 0x00A8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_1;        // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B1[0x3];                                       // 0x00B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_2;            // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUIW_Quartz_Pocket_C*                   K2Node_Select_Default_1;                           // 0x00B8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUIW_Quartz_Pocket_C*                   CallFunc_Array_Get_Item_4;                         // 0x00C0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_2;        // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C9[0x3];                                       // 0x00C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_3;            // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUIW_Quartz_Pocket_C*                   CallFunc_Array_Get_Item_5;                         // 0x00D0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUIW_Quartz_Pocket_C*                   K2Node_Select_Default_2;                           // 0x00D8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_3;        // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E1[0x7];                                       // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUIW_Quartz_Pocket_C*                   K2Node_Select_Default_3;                           // 0x00E8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UIW_Quartz_C_SetPocketNavi) == 0x000008, "Wrong alignment on UIW_Quartz_C_SetPocketNavi");
static_assert(sizeof(UIW_Quartz_C_SetPocketNavi) == 0x0000F0, "Wrong size on UIW_Quartz_C_SetPocketNavi");
static_assert(offsetof(UIW_Quartz_C_SetPocketNavi, LocalPocket) == 0x000000, "Member 'UIW_Quartz_C_SetPocketNavi::LocalPocket' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_SetPocketNavi, LocalIndex) == 0x000008, "Member 'UIW_Quartz_C_SetPocketNavi::LocalIndex' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_SetPocketNavi, Temp_bool_Variable) == 0x00000C, "Member 'UIW_Quartz_C_SetPocketNavi::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_SetPocketNavi, Temp_object_Variable) == 0x000010, "Member 'UIW_Quartz_C_SetPocketNavi::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_SetPocketNavi, Temp_bool_Variable_1) == 0x000018, "Member 'UIW_Quartz_C_SetPocketNavi::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_SetPocketNavi, Temp_object_Variable_1) == 0x000020, "Member 'UIW_Quartz_C_SetPocketNavi::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_SetPocketNavi, Temp_int_Array_Index_Variable) == 0x000028, "Member 'UIW_Quartz_C_SetPocketNavi::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_SetPocketNavi, Temp_int_Loop_Counter_Variable) == 0x00002C, "Member 'UIW_Quartz_C_SetPocketNavi::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_SetPocketNavi, CallFunc_Add_IntInt_ReturnValue) == 0x000030, "Member 'UIW_Quartz_C_SetPocketNavi::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_SetPocketNavi, Temp_object_Variable_2) == 0x000038, "Member 'UIW_Quartz_C_SetPocketNavi::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_SetPocketNavi, Temp_bool_Variable_2) == 0x000040, "Member 'UIW_Quartz_C_SetPocketNavi::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_SetPocketNavi, Temp_object_Variable_3) == 0x000048, "Member 'UIW_Quartz_C_SetPocketNavi::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_SetPocketNavi, Temp_bool_Variable_3) == 0x000050, "Member 'UIW_Quartz_C_SetPocketNavi::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_SetPocketNavi, CallFunc_Array_Get_Item) == 0x000058, "Member 'UIW_Quartz_C_SetPocketNavi::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_SetPocketNavi, CallFunc_Map_Values_Values) == 0x000060, "Member 'UIW_Quartz_C_SetPocketNavi::CallFunc_Map_Values_Values' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_SetPocketNavi, CallFunc_Array_Get_Item_1) == 0x000070, "Member 'UIW_Quartz_C_SetPocketNavi::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_SetPocketNavi, CallFunc_Array_Length_ReturnValue) == 0x000080, "Member 'UIW_Quartz_C_SetPocketNavi::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_SetPocketNavi, CallFunc_Less_IntInt_ReturnValue) == 0x000084, "Member 'UIW_Quartz_C_SetPocketNavi::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_SetPocketNavi, CallFunc_Subtract_IntInt_ReturnValue) == 0x000088, "Member 'UIW_Quartz_C_SetPocketNavi::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_SetPocketNavi, CallFunc_Array_Get_Item_2) == 0x000090, "Member 'UIW_Quartz_C_SetPocketNavi::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_SetPocketNavi, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000098, "Member 'UIW_Quartz_C_SetPocketNavi::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_SetPocketNavi, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x00009C, "Member 'UIW_Quartz_C_SetPocketNavi::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_SetPocketNavi, CallFunc_Array_Get_Item_3) == 0x0000A0, "Member 'UIW_Quartz_C_SetPocketNavi::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_SetPocketNavi, K2Node_Select_Default) == 0x0000A8, "Member 'UIW_Quartz_C_SetPocketNavi::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_SetPocketNavi, CallFunc_GreaterEqual_IntInt_ReturnValue_1) == 0x0000B0, "Member 'UIW_Quartz_C_SetPocketNavi::CallFunc_GreaterEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_SetPocketNavi, CallFunc_Subtract_IntInt_ReturnValue_2) == 0x0000B4, "Member 'UIW_Quartz_C_SetPocketNavi::CallFunc_Subtract_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_SetPocketNavi, K2Node_Select_Default_1) == 0x0000B8, "Member 'UIW_Quartz_C_SetPocketNavi::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_SetPocketNavi, CallFunc_Array_Get_Item_4) == 0x0000C0, "Member 'UIW_Quartz_C_SetPocketNavi::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_SetPocketNavi, CallFunc_GreaterEqual_IntInt_ReturnValue_2) == 0x0000C8, "Member 'UIW_Quartz_C_SetPocketNavi::CallFunc_GreaterEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_SetPocketNavi, CallFunc_Subtract_IntInt_ReturnValue_3) == 0x0000CC, "Member 'UIW_Quartz_C_SetPocketNavi::CallFunc_Subtract_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_SetPocketNavi, CallFunc_Array_Get_Item_5) == 0x0000D0, "Member 'UIW_Quartz_C_SetPocketNavi::CallFunc_Array_Get_Item_5' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_SetPocketNavi, K2Node_Select_Default_2) == 0x0000D8, "Member 'UIW_Quartz_C_SetPocketNavi::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_SetPocketNavi, CallFunc_GreaterEqual_IntInt_ReturnValue_3) == 0x0000E0, "Member 'UIW_Quartz_C_SetPocketNavi::CallFunc_GreaterEqual_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(UIW_Quartz_C_SetPocketNavi, K2Node_Select_Default_3) == 0x0000E8, "Member 'UIW_Quartz_C_SetPocketNavi::K2Node_Select_Default_3' has a wrong offset!");

}


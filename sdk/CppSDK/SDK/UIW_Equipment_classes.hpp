#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UIW_Equipment

#include "Basic.hpp"

#include "ProjectP_structs.hpp"
#include "Engine_structs.hpp"
#include "ProjectPContentInfo_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "UIW_Window_classes.hpp"
#include "SlateCore_structs.hpp"
#include "UIEN_EquipSlotSize_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass UIW_Equipment.UIW_Equipment_C
// 0x04B0 (0x0800 - 0x0350)
class UUIW_Equipment_C final : public UUIW_Window_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_UIW_Equipment_C;                    // 0x0350(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UUIW_Slot_Belt_C*                       Belt1_0;                                           // 0x0358(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUIW_Slot_Belt_C*                       Belt1_1;                                           // 0x0360(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUIW_Slot_Belt_C*                       Belt1_2;                                           // 0x0368(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUIW_Slot_Belt_C*                       Belt1_3;                                           // 0x0370(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUIW_Slot_Belt_C*                       Belt1_4;                                           // 0x0378(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUIW_Slot_Belt_C*                       Belt2_0;                                           // 0x0380(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUIW_Slot_Belt_C*                       Belt2_1;                                           // 0x0388(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUIW_Slot_Belt_C*                       Belt2_2;                                           // 0x0390(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUIW_Slot_Belt_C*                       Belt2_3;                                           // 0x0398(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUIW_Slot_Belt_C*                       Belt2_4;                                           // 0x03A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           Belt_Group;                                        // 0x03A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUIW_BG_Tab_C*                          BG_Sub_Tab;                                        // 0x03B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUIW_BG_Tab_C*                          BG_Tab;                                            // 0x03B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUIW_BG_Title_C*                        BG_Title;                                          // 0x03C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUIW_Btn_Key_C*                         Btn_Back;                                          // 0x03C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUIW_Btn_Key_C*                         Btn_ChaInfo;                                       // 0x03D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUIW_Btn_Key_C*                         Btn_Equip;                                         // 0x03D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUIW_Btn_Key_C*                         Btn_InvenSlotChangeTab_Left;                       // 0x03E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUIW_Btn_Key_C*                         Btn_InvenSlotChangeTab_Right;                      // 0x03E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUIW_Btn_Key_C*                         Btn_InvenTab_Left;                                 // 0x03F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUIW_Btn_Key_C*                         Btn_InvenTab_Right;                                // 0x03F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUIW_Btn_Key_C*                         Btn_ItemInfo;                                      // 0x0400(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUIW_Btn_Key_C*                         Btn_Rotate_L;                                      // 0x0408(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUIW_Btn_Key_C*                         Btn_Rotate_R;                                      // 0x0410(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                Btn_Rotation;                                      // 0x0418(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUIW_Btn_Key_C*                         Btn_Scroll;                                        // 0x0420(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUIW_Btn_Key_C*                         Btn_Tab_LeftKey;                                   // 0x0428(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUIW_Btn_Key_C*                         Btn_Tab_RightKey;                                  // 0x0430(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUIW_Btn_Key_C*                         Btn_Unequip;                                       // 0x0438(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           Costume_Group;                                     // 0x0440(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           Equip_Group;                                       // 0x0448(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Img_Key_Down;                                      // 0x0450(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Img_Key_Left;                                      // 0x0458(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Img_Key_Right;                                     // 0x0460(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Img_Key_Up;                                        // 0x0468(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Img_WeaponSlot;                                    // 0x0470(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           Inven_Group;                                       // 0x0478(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         Inven_SlotChangeTab;                               // 0x0480(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         Inven_Tab;                                         // 0x0488(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUIW_ItemInfo_C*                        ItemInfo_Equip;                                    // 0x0490(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUIW_ItemInfo_Compare_C*                ItemInfo_Focus;                                    // 0x0498(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               LeftBG_Group;                                      // 0x04A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class ULTileView*                             List_InvenItemLarge;                               // 0x04A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class ULTileView*                             List_InvenItemSmall_1;                             // 0x04B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class ULTileView*                             List_InvenItemSmall_2;                             // 0x04B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class ULTileView*                             List_InvenItemSmall_3;                             // 0x04C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class ULTileView*                             List_InvenItemSmall_4;                             // 0x04C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class ULTileView*                             List_InvenItemSmall_5;                             // 0x04D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class ULTileView*                             List_InvenItemSmall_6;                             // 0x04D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class ULTileView*                             List_InvenItemSmall_7;                             // 0x04E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class ULTileView*                             List_InvenItemSmall_8;                             // 0x04E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class ULTileView*                             List_InvenItemSmall_9;                             // 0x04F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class ULTileView*                             List_InvenItemSmall_10;                            // 0x04F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class ULListView*                             List_InvenSlotChangeTab;                           // 0x0500(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class ULListView*                             List_InvenTab;                                     // 0x0508(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class ULTileView*                             List_InvenWeapon;                                  // 0x0510(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class ULListView*                             List_Tab;                                          // 0x0518(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UScrollBox*                             ListInvenSmall_Group;                              // 0x0520(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUIW_NoContents_C*                      NoContents;                                        // 0x0528(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUIW_Slot_Pouch_C*                      Pouch_Down;                                        // 0x0530(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUIW_Slot_Pouch_C*                      Pouch_Left;                                        // 0x0538(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUIW_Slot_Pouch_C*                      Pouch_Right;                                       // 0x0540(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUIW_Slot_Pouch_C*                      Pouch_Up;                                          // 0x0548(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUIW_Slot_Large_C*                      Slot_Costume_Body;                                 // 0x0550(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUIW_Slot_Large_C*                      Slot_Costume_Eye;                                  // 0x0558(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUIW_Slot_Large_C*                      Slot_Costume_Head;                                 // 0x0560(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUIW_Slot_Small_C*                      Slot_Ear_1;                                        // 0x0568(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUIW_Slot_Small_C*                      Slot_Ear_2;                                        // 0x0570(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUIW_Slot_Small_C*                      Slot_Ear_3;                                        // 0x0578(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUIW_Slot_Small_C*                      Slot_Ear_4;                                        // 0x0580(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUIW_Slot_Small_C*                      Slot_Ear_5;                                        // 0x0588(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUIW_Slot_Small_C*                      Slot_Foot;                                         // 0x0590(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUIW_Slot_Small_C*                      Slot_Head;                                         // 0x0598(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUIW_Slot_Small_C*                      Slot_Lower;                                        // 0x05A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUIW_Slot_Large_C*                      Slot_SlaveArm_1;                                   // 0x05A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUIW_Slot_Large_C*                      Slot_SlaveArm_2;                                   // 0x05B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUIW_Slot_Large_C*                      Slot_SlaveArm_3;                                   // 0x05B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUIW_Slot_Small_C*                      Slot_Upper;                                        // 0x05C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUIW_Slot_Weapon_C*                     Slot_Weapon_1;                                     // 0x05C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUIW_Slot_Weapon_C*                     Slot_Weapon_2;                                     // 0x05D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUIW_Slot_Weapon_C*                     Slot_Weapon_3;                                     // 0x05D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUIW_SubTitle_C*                        SmallList_SubTitle_1;                              // 0x05E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUIW_SubTitle_C*                        SmallList_SubTitle_2;                              // 0x05E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUIW_SubTitle_C*                        SmallList_SubTitle_3;                              // 0x05F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUIW_SubTitle_C*                        SmallList_SubTitle_4;                              // 0x05F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUIW_SubTitle_C*                        SmallList_SubTitle_5;                              // 0x0600(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUIW_SubTitle_C*                        SmallList_SubTitle_6;                              // 0x0608(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUIW_SubTitle_C*                        SmallList_SubTitle_7;                              // 0x0610(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUIW_SubTitle_C*                        SmallList_SubTitle_8;                              // 0x0618(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUIW_SubTitle_C*                        SmallList_SubTitle_9;                              // 0x0620(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUIW_SubTitle_C*                        SmallList_SubTitle_10;                             // 0x0628(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUIW_CharacterDetailAbility_C*          Stat_Character;                                    // 0x0630(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUIW_SecondTitle_Icon_C*                SubTitle_Belt_1;                                   // 0x0638(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUIW_SecondTitle_Icon_C*                SubTitle_Belt_2;                                   // 0x0640(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUIW_SecondTitle_Icon_C*                SubTitle_Body;                                     // 0x0648(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUIW_SecondTitle_Icon_C*                SubTitle_Frame;                                    // 0x0650(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUIW_SecondTitle_Icon_C*                SubTitle_Gear;                                     // 0x0658(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUIW_SecondTitle_Icon_C*                SubTitle_Head;                                     // 0x0660(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUIW_SecondTitle_Icon_C*                SubTitle_Pouch;                                    // 0x0668(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUIW_SecondTitle_Icon_C*                SubTitle_Weapon;                                   // 0x0670(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Text_Inven;                                        // 0x0678(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUIW_HasItem_Counter_C*                 UIW_HasItem_Counter;                               // 0x0680(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class ALPCCharacter*                          LPCCharacter;                                      // 0x0688(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULStatComponent*                        LStatComponent;                                    // 0x0690(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ALPCCharacterBP_StatRoom_C*             StatRoomCharacter;                                 // 0x0698(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   SelectedSlot;                                      // 0x06A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULItem*                                 SelectedInvenItem;                                 // 0x06A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ELEquipSlotType                               LastSelectedSlotType;                              // 0x06B0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6B1[0x7];                                      // 0x06B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUIW_Slot_Belt_C*                       LastForcusedBeltSlot;                              // 0x06B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUIW_Slot_Pouch_C*                      LastForcusedPouchSlot;                             // 0x06C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsShowInven;                                       // 0x06C8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsShowStatCharacter;                               // 0x06C9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6CA[0x6];                                      // 0x06CA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UUIW_Slot_Belt_C*>               BeltList;                                          // 0x06D0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TArray<class UUIW_Slot_Pouch_C*>              PouchList;                                         // 0x06E0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	bool                                          IsFromHUDMenu;                                     // 0x06F0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6F1[0x7];                                      // 0x06F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CameraTimer;                                       // 0x06F8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              StartMousePosition;                                // 0x0700(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               StartCharacterRotation;                            // 0x0708(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	int32                                         CameraHorizontalValue;                             // 0x0714(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Progress;                                          // 0x0718(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         StartValue;                                        // 0x071C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ULTileView*>                     InvenSmallListArr;                                 // 0x0720(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TArray<class UUIW_SubTitle_C*>                InvenSmallSubTitleArr;                             // 0x0730(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	class ULTileView*                             SelectedList;                                      // 0x0740(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         PrevListSelectedIndex;                             // 0x0748(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ColumnCount;                                       // 0x074C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         EntryWidgetHeight;                                 // 0x0750(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PrevScrollBoxOffset;                               // 0x0754(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsTweening;                                        // 0x0758(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_759[0x7];                                      // 0x0759(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           ListPendingTimer;                                  // 0x0760(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	int32                                         GearUnlockCount;                                   // 0x0768(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_76C[0x4];                                      // 0x076C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UWidget*>                        GearList;                                          // 0x0770(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	class UWidget*                                SelectedSlotWidgetNullable;                        // 0x0780(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<ELEquipSlotType>                       GearOpenEquipSlotTypeArr;                          // 0x0788(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UUIBP_ListData_Default_C*>       SlotChangeWeaponTabItems;                          // 0x0798(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UUIBP_ListData_Default_C*>       SlotChangeGearEarTabItems;                         // 0x07A8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UUIBP_ListData_Default_C*>       SlotChangePartsTabItems;                           // 0x07B8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	ELEquipSlotType                               PrevSelectedSlotType;                              // 0x07C8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C9[0x3];                                      // 0x07C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   PrevSelectedSlotID;                                // 0x07CC(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NeedShowInvenItems;                                // 0x07D4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsGamPad;                                          // 0x07D5(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	ELEquipSlotType                               LastSelectedWeapon;                                // 0x07D6(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ELEquipSlotType                               LastSelectedWeaponForRefreshCheck;                 // 0x07D7(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           StartDelayTimer;                                   // 0x07D8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          ItemCharInfo;                                      // 0x07E0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          SelectedSlotItemIsValid;                           // 0x07E1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          NeedChangePageItemInfoFocus;                       // 0x07E2(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7E3[0x5];                                      // 0x07E3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UUIBP_ListData_Default_C*>       SlotChangeHeadEyeTabItems;                         // 0x07E8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UScrollBox*                             PromoteDLCItemList;                                // 0x07F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_UIW_Equipment(int32 EntryPoint);
	void BndEvt__UIW_Equipment_Slot_Costume_Eye_K2Node_ComponentBoundEvent_14_OnActive__DelegateSignature(class ULItem* LItem);
	void BndEvt__UIW_Equipment_Slot_Costume_Eye_K2Node_ComponentBoundEvent_13_OnSelected__DelegateSignature(class ULItem* LItem);
	void BndEvt__UIW_Equipment_Btn_ChaInfo_K2Node_ComponentBoundEvent_12_OnActive__DelegateSignature(class UUIW_Btn_Key_C* BtnKey);
	void OnEndStartDelay();
	void OnInputChange(bool bGamePad);
	void BndEvt__UIW_Equipment_Slot_SlaveArm_3_K2Node_ComponentBoundEvent_18_OnSelected__DelegateSignature(class ULItem* LItem);
	void BndEvt__UIW_Equipment_Slot_Ear_5_K2Node_ComponentBoundEvent_17_OnActive__DelegateSignature(class ULItem* LItem);
	void BndEvt__UIW_Equipment_Slot_SlaveArm_3_K2Node_ComponentBoundEvent_16_OnActive__DelegateSignature(class ULItem* LItem);
	void BndEvt__UIW_Equipment_Slot_Weapon_3_K2Node_ComponentBoundEvent_15_OnActive__DelegateSignature(class ULWeaponItem* LWeaponItem);
	void BndEvt__UIW_Equipment_List_InvenSlotChangeTab_K2Node_ComponentBoundEvent_11_OnListItemSelectionChangedDynamic__DelegateSignature(class UObject* Item, bool bIsSelected);
	void BndEvt__UIW_Equipment_Belt2_4_K2Node_ComponentBoundEvent_10_OnActive__DelegateSignature(class ULItem* LItem);
	void BndEvt__UIW_Equipment_Belt1_4_K2Node_ComponentBoundEvent_9_OnActive__DelegateSignature(class ULItem* LItem);
	void BndEvt__UIW_Equipment_Belt2_4_K2Node_ComponentBoundEvent_8_OnSelected__DelegateSignature(class ULItem* LItem);
	void BndEvt__UIW_Equipment_Belt1_4_K2Node_ComponentBoundEvent_7_OnSelected__DelegateSignature(class ULItem* LItem);
	void BndEvt__UIW_Equipment_Slot_Ear_5_K2Node_ComponentBoundEvent_6_OnSelected__DelegateSignature(class ULItem* LItem);
	void BndEvt__UIW_Equipment_Slot_Weapon_3_K2Node_ComponentBoundEvent_4_OnSelected__DelegateSignature(class ULWeaponItem* LWeaponItem);
	void BndEvt__UIW_Equipment_ListInvenSmall_Group_K2Node_ComponentBoundEvent_3_OnUserScrolledEvent__DelegateSignature(float CurrentOffset);
	void BndEvt__UIW_Equipment_List_InvenItemSmall_10_K2Node_ComponentBoundEvent_120_OnListItemSelectionChangedDynamic__DelegateSignature(class UObject* Item, bool bIsSelected);
	void BndEvt__UIW_Equipment_List_InvenItemSmall_9_K2Node_ComponentBoundEvent_119_OnListItemSelectionChangedDynamic__DelegateSignature(class UObject* Item, bool bIsSelected);
	void BndEvt__UIW_Equipment_List_InvenItemSmall_8_K2Node_ComponentBoundEvent_118_OnListItemSelectionChangedDynamic__DelegateSignature(class UObject* Item, bool bIsSelected);
	void BndEvt__UIW_Equipment_List_InvenItemSmall_7_K2Node_ComponentBoundEvent_117_OnListItemSelectionChangedDynamic__DelegateSignature(class UObject* Item, bool bIsSelected);
	void BndEvt__UIW_Equipment_List_InvenItemSmall_6_K2Node_ComponentBoundEvent_116_OnListItemSelectionChangedDynamic__DelegateSignature(class UObject* Item, bool bIsSelected);
	void BndEvt__UIW_Equipment_List_InvenItemSmall_5_K2Node_ComponentBoundEvent_115_OnListItemSelectionChangedDynamic__DelegateSignature(class UObject* Item, bool bIsSelected);
	void BndEvt__UIW_Equipment_List_InvenItemSmall_4_K2Node_ComponentBoundEvent_114_OnListItemSelectionChangedDynamic__DelegateSignature(class UObject* Item, bool bIsSelected);
	void BndEvt__UIW_Equipment_List_InvenItemSmall_3_K2Node_ComponentBoundEvent_113_OnListItemSelectionChangedDynamic__DelegateSignature(class UObject* Item, bool bIsSelected);
	void BndEvt__UIW_Equipment_List_InvenItemSmall_2_K2Node_ComponentBoundEvent_112_OnListItemSelectionChangedDynamic__DelegateSignature(class UObject* Item, bool bIsSelected);
	void BndEvt__UIW_Equipment_List_InvenItemSmall_1_K2Node_ComponentBoundEvent_111_OnListItemSelectionChangedDynamic__DelegateSignature(class UObject* Item, bool bIsSelected);
	void BndEvt__UIW_Equipment_List_InvenItemSmall_10_K2Node_ComponentBoundEvent_110_SimpleListItemEventDynamic__DelegateSignature(class UObject* Item);
	void BndEvt__UIW_Equipment_List_InvenItemSmall_9_K2Node_ComponentBoundEvent_109_SimpleListItemEventDynamic__DelegateSignature(class UObject* Item);
	void BndEvt__UIW_Equipment_List_InvenItemSmall_8_K2Node_ComponentBoundEvent_108_SimpleListItemEventDynamic__DelegateSignature(class UObject* Item);
	void BndEvt__UIW_Equipment_List_InvenItemSmall_7_K2Node_ComponentBoundEvent_107_SimpleListItemEventDynamic__DelegateSignature(class UObject* Item);
	void BndEvt__UIW_Equipment_List_InvenItemSmall_6_K2Node_ComponentBoundEvent_106_SimpleListItemEventDynamic__DelegateSignature(class UObject* Item);
	void BndEvt__UIW_Equipment_List_InvenItemSmall_5_K2Node_ComponentBoundEvent_105_SimpleListItemEventDynamic__DelegateSignature(class UObject* Item);
	void BndEvt__UIW_Equipment_List_InvenItemSmall_4_K2Node_ComponentBoundEvent_104_SimpleListItemEventDynamic__DelegateSignature(class UObject* Item);
	void BndEvt__UIW_Equipment_List_InvenItemSmall_3_K2Node_ComponentBoundEvent_103_SimpleListItemEventDynamic__DelegateSignature(class UObject* Item);
	void BndEvt__UIW_Equipment_List_InvenItemSmall_2_K2Node_ComponentBoundEvent_102_SimpleListItemEventDynamic__DelegateSignature(class UObject* Item);
	void BndEvt__UIW_Equipment_Belt2_3_K2Node_ComponentBoundEvent_53_OnActive__DelegateSignature(class ULItem* LItem);
	void BndEvt__UIW_Equipment_Belt1_3_K2Node_ComponentBoundEvent_52_OnActive__DelegateSignature(class ULItem* LItem);
	void BndEvt__UIW_Equipment_Belt2_3_K2Node_ComponentBoundEvent_51_OnSelected__DelegateSignature(class ULItem* LItem);
	void BndEvt__UIW_Equipment_Belt1_3_K2Node_ComponentBoundEvent_38_OnSelected__DelegateSignature(class ULItem* LItem);
	void BndEvt__UIW_Equipment_Slot_Gear_K2Node_ComponentBoundEvent_37_OnActive__DelegateSignature(class ULItem* LItem);
	void BndEvt__UIW_Equipment_Slot_Gear_K2Node_ComponentBoundEvent_36_OnSelected__DelegateSignature(class ULItem* LItem);
	void BndEvt__UIW_Equipment_Slot_Foot_K2Node_ComponentBoundEvent_13_OnActive__DelegateSignature(class ULItem* LItem);
	void BndEvt__UIW_Equipment_Slot_Foot_K2Node_ComponentBoundEvent_12_OnSelected__DelegateSignature(class ULItem* LItem);
	void BndEvt__UIW_Equipment_Btn_Unequip_K2Node_ComponentBoundEvent_35_OnActive__DelegateSignature(class UUIW_Btn_Key_C* BtnKey);
	void BndEvt__UIW_Equipment_Slot_SlaveArm_2_K2Node_ComponentBoundEvent_32_OnActive__DelegateSignature(class ULItem* LItem);
	void BndEvt__UIW_Equipment_Slot_SlaveArm_2_K2Node_ComponentBoundEvent_31_OnSelected__DelegateSignature(class ULItem* LItem);
	void BndEvt__UIW_Equipment_Slot_Costume_Head_K2Node_ComponentBoundEvent_34_OnActive__DelegateSignature(class ULItem* LItem);
	void BndEvt__UIW_Equipment_Slot_Costume_Head_K2Node_ComponentBoundEvent_33_OnSelected__DelegateSignature(class ULItem* LItem);
	void BndEvt__UIW_Equipment_List_InvenItemLarge_K2Node_ComponentBoundEvent_30_SimpleListItemEventDynamic__DelegateSignature(class UObject* Item);
	void BndEvt__UIW_Equipment_Slot_Costume_K2Node_ComponentBoundEvent_29_OnActive__DelegateSignature(class ULItem* LItem);
	void BndEvt__UIW_Equipment_Slot_Costume_K2Node_ComponentBoundEvent_28_OnSelected__DelegateSignature(class ULItem* LItem);
	void BndEvt__UIW_Equipment_Btn_Drag_K2Node_ComponentBoundEvent_16_OnButtonReleasedEvent__DelegateSignature();
	void BndEvt__UIW_Equipment_Btn_Drag_K2Node_ComponentBoundEvent_15_OnButtonPressedEvent__DelegateSignature();
	void BndEvt__UIW_Equipment_Btn_Scroll_Equip_K2Node_ComponentBoundEvent_14_OnScroll__DelegateSignature(float Delta);
	void PreConstruct(bool IsDesignTime);
	void BndEvt__UIW_Equipment_Pouch_3_K2Node_ComponentBoundEvent_64_OnActive__DelegateSignature(class ULItem* LItem);
	void BndEvt__UIW_Equipment_Pouch_2_K2Node_ComponentBoundEvent_63_OnActive__DelegateSignature(class ULItem* LItem);
	void BndEvt__UIW_Equipment_Pouch_1_K2Node_ComponentBoundEvent_62_OnActive__DelegateSignature(class ULItem* LItem);
	void BndEvt__UIW_Equipment_Pouch_0_K2Node_ComponentBoundEvent_61_OnActive__DelegateSignature(class ULItem* LItem);
	void BndEvt__UIW_Equipment_Pouch_3_K2Node_ComponentBoundEvent_60_OnSelected__DelegateSignature(class ULItem* LItem);
	void BndEvt__UIW_Equipment_Pouch_2_K2Node_ComponentBoundEvent_59_OnSelected__DelegateSignature(class ULItem* LItem);
	void BndEvt__UIW_Equipment_Pouch_1_K2Node_ComponentBoundEvent_58_OnSelected__DelegateSignature(class ULItem* LItem);
	void BndEvt__UIW_Equipment_Pouch_0_K2Node_ComponentBoundEvent_57_OnSelected__DelegateSignature(class ULItem* LItem);
	void BndEvt__UIW_Equipment_Belt2_2_K2Node_ComponentBoundEvent_50_OnActive__DelegateSignature(class ULItem* LItem);
	void BndEvt__UIW_Equipment_Belt2_1_K2Node_ComponentBoundEvent_49_OnActive__DelegateSignature(class ULItem* LItem);
	void BndEvt__UIW_Equipment_Belt2_0_K2Node_ComponentBoundEvent_48_OnActive__DelegateSignature(class ULItem* LItem);
	void BndEvt__UIW_Equipment_Belt1_2_K2Node_ComponentBoundEvent_47_OnActive__DelegateSignature(class ULItem* LItem);
	void BndEvt__UIW_Equipment_Belt1_1_K2Node_ComponentBoundEvent_46_OnActive__DelegateSignature(class ULItem* LItem);
	void BndEvt__UIW_Equipment_Belt1_0_K2Node_ComponentBoundEvent_45_OnActive__DelegateSignature(class ULItem* LItem);
	void BndEvt__UIW_Equipment_Belt2_2_K2Node_ComponentBoundEvent_44_OnSelected__DelegateSignature(class ULItem* LItem);
	void BndEvt__UIW_Equipment_Belt2_1_K2Node_ComponentBoundEvent_43_OnSelected__DelegateSignature(class ULItem* LItem);
	void BndEvt__UIW_Equipment_Belt2_0_K2Node_ComponentBoundEvent_42_OnSelected__DelegateSignature(class ULItem* LItem);
	void BndEvt__UIW_Equipment_Belt1_2_K2Node_ComponentBoundEvent_41_OnSelected__DelegateSignature(class ULItem* LItem);
	void BndEvt__UIW_Equipment_Belt1_1_K2Node_ComponentBoundEvent_17_OnSelected__DelegateSignature(class ULItem* LItem);
	void BndEvt__UIW_Equipment_Belt1_0_K2Node_ComponentBoundEvent_11_OnSelected__DelegateSignature(class ULItem* LItem);
	void BndEvt__UIW_Equipment_Btn_ItemInfo_Equip_K2Node_ComponentBoundEvent_40_OnActive__DelegateSignature(class UUIW_Btn_Key_C* BtnKey);
	void Destruct();
	void BndEvt__UIW_Equipment_Slot_SlaveArm_K2Node_ComponentBoundEvent_39_OnSelected__DelegateSignature(class ULItem* LItem);
	void BndEvt__UIW_Equipment_Slot_SlaveArm_K2Node_ComponentBoundEvent_19_OnActive__DelegateSignature(class ULItem* LItem);
	void BndEvt__List_InvenItem_K2Node_ComponentBoundEvent_10_SimpleListItemEventDynamic__DelegateSignature(class UObject* Item);
	void BndEvt__List_InvenWeapon_K2Node_ComponentBoundEvent_9_SimpleListItemEventDynamic__DelegateSignature(class UObject* Item);
	void BndEvt__UIW_Necklace_K2Node_ComponentBoundEvent_27_OnActive__DelegateSignature(class ULItem* LItem);
	void BndEvt__UIW_Bracelet_2_K2Node_ComponentBoundEvent_26_OnActive__DelegateSignature(class ULItem* LItem);
	void BndEvt__UIW_Bracelet_1_K2Node_ComponentBoundEvent_25_OnActive__DelegateSignature(class ULItem* LItem);
	void BndEvt__UIW_Arms_K2Node_ComponentBoundEvent_24_OnActive__DelegateSignature(class ULItem* LItem);
	void BndEvt__UIW_Lower_K2Node_ComponentBoundEvent_23_OnActive__DelegateSignature(class ULItem* LItem);
	void BndEvt__UIW_Upper_K2Node_ComponentBoundEvent_22_OnActive__DelegateSignature(class ULItem* LItem);
	void BndEvt__UIW_Weapon_2_K2Node_ComponentBoundEvent_21_OnActive__DelegateSignature(class ULWeaponItem* LWeaponItem);
	void BndEvt__UIW_Weapon_1_K2Node_ComponentBoundEvent_20_OnActive__DelegateSignature(class ULWeaponItem* LWeaponItem);
	void BndEvt__Btn_Equip_K2Node_ComponentBoundEvent_18_OnActive__DelegateSignature(class UUIW_Btn_Key_C* BtnKey);
	void BndEvt__UIW_Weapon_2_K2Node_ComponentBoundEvent_8_OnSelected__DelegateSignature(class ULWeaponItem* LWeaponItem);
	void BndEvt__UIW_Weapon_1_K2Node_ComponentBoundEvent_7_OnSelected__DelegateSignature(class ULWeaponItem* LWeaponItem);
	void BndEvt__UIW_Necklace_K2Node_ComponentBoundEvent_6_OnSelected__DelegateSignature(class ULItem* LItem);
	void BndEvt__UIW_Bracelet_2_K2Node_ComponentBoundEvent_5_OnSelected__DelegateSignature(class ULItem* LItem);
	void BndEvt__UIW_Bracelet_1_K2Node_ComponentBoundEvent_4_OnSelected__DelegateSignature(class ULItem* LItem);
	void BndEvt__UIW_Arms_K2Node_ComponentBoundEvent_3_OnSelected__DelegateSignature(class ULItem* LItem);
	void BndEvt__UIW_Lower_K2Node_ComponentBoundEvent_2_OnSelected__DelegateSignature(class ULItem* LItem);
	void BndEvt__UIW_Upper_K2Node_ComponentBoundEvent_1_OnSelected__DelegateSignature(class ULItem* LItem);
	void BndEvt__Btn_Back_K2Node_ComponentBoundEvent_0_OnActive__DelegateSignature(class UUIW_Btn_Key_C* BtnKey);
	void Construct();
	void InitWidget();
	void MoveLeftTab(class UUIW_Btn_Key_C* BtnKey);
	void MoveRightTab(class UUIW_Btn_Key_C* BtnKey);
	void MoveLeftInvenTab(class UUIW_Btn_Key_C* BtnKey);
	void MoveRightInvenTab(class UUIW_Btn_Key_C* BtnKey);
	void ChangeTab(class UObject* Item, bool bIsSelected);
	void ChangeInvenTab(class UObject* TabItem, bool bIsSelected);
	void RefreshEquipSlot(ELEquipSlotType EquipSlotType);
	void RefreshBeltSlot();
	void RefreshPouchSlot();
	void RefreshCostumeSlot(ELEquipSlotType EquipSlotType);
	void RefreshInven_Equip(bool* IsNoItem);
	void RefreshInven_BeltPouch(class UObject* InvenTabItem, bool IsSelected, bool NeedSetScrollOffset, bool* IsNoItem);
	void RefreshCharacterActor();
	void SetSelectedSlot(class ULItem* LItem, class UWidget* SlotWidget);
	void CallbackContextMenu(class FName EventName);
	void Set_Selected_Inven(class UObject* ListItem);
	void ActiveItem(class UObject* Item);
	struct FEventReply FocusManage(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);
	void EquipItem(bool* IsNoItem);
	void UnEquipItem();
	void OnSelectedInvenWeapon(class UObject* Item, bool IsSelected);
	void OnSelectedInvenItemLarge(class UObject* Item, bool IsSelected);
	void ShowEquipSlot();
	void ShowInvenItems(bool NeedSmallSlotTween, bool* NeedHideFocus);
	void ShowInvenWeapon();
	void ShowInvenItemSmall(bool NeedSlotTween);
	void ShowInvenItemLarge();
	void ChangeEquipItem(ELEquipSlotType EquipSlot, class ULItem* OldItem, class ULItem* NewItem);
	void ChangeUseItem(bool FirstLine, int32 SlotIndex, class FName OldItem, class FName NewItem);
	void ClearEventBinding();
	void AddEventBinding();
	void ChangeAssistUseItem(ELAssistUseItemSlotType SlotType, class FName OldItemCodeName, class FName NewItemCodeName);
	void OnUpdateItem(class ULItem* LItem);
	void OnReady();
	void ResetCamera();
	void OnCompleteTweenEvent(class FName Name_0);
	void RequestCloseWindow();
	void OnVisibleChangeLeft(ESlateVisibility InVisibility);
	void OnVisibleChangeRight(ESlateVisibility InVisibility);
	void SetPouchKeyIcon(bool bGamePad);
	void GetCompareCodeName(class ULItem* Item1, class ULItem* Item2, bool* IsSame);
	void SetCameraRotation();
	struct FEventReply OnKeyDown(const struct FGeometry& MyGeometry, const struct FKeyEvent& InKeyEvent);
	void SetCameraRotationLeft();
	struct FEventReply OnKeyUp(const struct FGeometry& MyGeometry, const struct FKeyEvent& InKeyEvent);
	void SetCameraRotationRight();
	void InitCameraRotation();
	void CheckFromHUDMenu();
	class UWidget* NavToSlaveArm1Down(EUINavigation Navigation_0);
	class UWidget* NavToSlaveArm2Down(EUINavigation Navigation_0);
	class UWidget* PouchNavigationUp(EUINavigation Navigation_0);
	void HideAllInvenList();
	void SetSelectedList(class ULTileView* ListView);
	void Add_Item(class ULItem* Item, class ULWeaponItem* Weapon, const TMap<ELItemSecondCategory, struct FUIST_SecondCategoryArr>& SecondCategoryMap, bool IsWeapon, class ULItem* EquipedItem, TMap<ELItemSecondCategory, struct FUIST_SecondCategoryArr>* ResultCategoryMap, int32* EquipedSelectedIndex, ELItemSecondCategory* EquipedSecondCategory);
	void AddListEmptyFill_SecondCategory(int32 ColumnCnt, const TMap<ELItemSecondCategory, struct FUIST_SecondCategoryArr>& SecondCategoryMap, ELItemSecondCategory SecondCategory, bool IsWeaponOrNot, TMap<ELItemSecondCategory, struct FUIST_SecondCategoryArr>* NewParam);
	void PopulateInvenListItems(const TMap<ELItemSecondCategory, struct FUIST_SecondCategoryArr>& SecondCategoryMap, TArray<class ULTileView*>& ListArr, TArray<class UUIW_SubTitle_C*>& SubTitleArr, ELItemSecondCategory SelectedSecondCategory, bool IsWeaponOrNot, class ULTileView** SelectedList_0, float* ScrollOffset);
	class UWidget* NavToTopSmall(EUINavigation Navigation_0);
	class UWidget* NavToSmall1(EUINavigation Navigation_0);
	class UWidget* NavToSmall2(EUINavigation Navigation_0);
	class UWidget* NavToSmall3(EUINavigation Navigation_0);
	class UWidget* NavToSmall4(EUINavigation Navigation_0);
	class UWidget* NavToSmall5(EUINavigation Navigation_0);
	class UWidget* NavToSmall6(EUINavigation Navigation_0);
	class UWidget* NavToSmall7(EUINavigation Navigation_0);
	class UWidget* NavToSmall8(EUINavigation Navigation_0);
	class UWidget* NavToSmall9(EUINavigation Navigation_0);
	class UWidget* NavToSmall10(EUINavigation Navigation_0);
	class UWidget* NavToBottomSmall(EUINavigation Navigation_0);
	class UWidget* NavToTopWeapon(EUINavigation Navigation_0);
	void HideFocusOnScroll(float CurerntOffset);
	void ShowTween(bool SlotShowOrNot);
	void SetEmptyList(class ULTileView* TargetList);
	class UWidget* NavToBottomWeapon(EUINavigation Navigation_0);
	class UWidget* NavToTopEquipSmall(EUINavigation Navigation_0);
	class UWidget* NavToBottomEquipSmall(EUINavigation Navigation_0);
	void GetBottomList(class UTileView** AsTile_View);
	void GetTopList(class UTileView** ListView);
	void ListPendingCheck();
	class UWidget* NavToTopLarge(EUINavigation Navigation_0);
	class UWidget* NavToBottomLarge(EUINavigation Navigation_0);
	class UWidget* NavToGear(EUINavigation Navigation_0);
	void InitGear();
	class UWidget* NavToGear3Up(EUINavigation Navigation_0);
	class UWidget* NavToGear5Up(EUINavigation Navigation_0);
	class UWidget* NavToWeapon3Down(EUINavigation Navigation_0);
	class UWidget* NavToWeapon2Right(EUINavigation Navigation_0);
	class UWidget* NavToSlaveArm1Left(EUINavigation Navigation_0);
	class UWidget* NavToLowerUp(EUINavigation Navigation_0);
	class UWidget* NavToFootUp(EUINavigation Navigation_0);
	class UWidget* NavToSlaveArm3Left(EUINavigation Navigation_0);
	class UWidget* NavToSlaveArm2Right(EUINavigation Navigation_0);
	class UWidget* NavToLRLoop(EUINavigation Navigation_0);
	class UWidget* NavToLRLoopNoEmpty(EUINavigation Navigation_0);
	void SetVisibleItemInfoBtn();
	void FindBeltSlot(bool IsFirstLine, int32 SlotIndex, class UUIW_Slot_Belt_C** SlotBelt);
	void MoveLeftSlotChangeTab(class UUIW_Btn_Key_C* BtnKey);
	void MoveRightSlotChangeTab(class UUIW_Btn_Key_C* BtnKey);
	void OnPromoteDLCItemResult(ELDLCItemReceiveResult DLCItemReceiveResult, class FName DLC_CodeName, const TArray<class ULItem*>& DLC_ItemList);
	void CallbackPromoteDLCItem(class UUIW_Popup_C* Popup, class UUIW_Btn_Key_C* BtnKey);
	void SetbuttonVisibility(bool IsGamePad);
	void DoubleClickSmall(class UObject* Item);
	void SwitchItemCharInfo();
	void CallbackPromoteDLCItemScroll(float Delta);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"UIW_Equipment_C">();
	}
	static class UUIW_Equipment_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUIW_Equipment_C>();
	}
};
static_assert(alignof(UUIW_Equipment_C) == 0x000008, "Wrong alignment on UUIW_Equipment_C");
static_assert(sizeof(UUIW_Equipment_C) == 0x000800, "Wrong size on UUIW_Equipment_C");
static_assert(offsetof(UUIW_Equipment_C, UberGraphFrame_UIW_Equipment_C) == 0x000350, "Member 'UUIW_Equipment_C::UberGraphFrame_UIW_Equipment_C' has a wrong offset!");
static_assert(offsetof(UUIW_Equipment_C, Belt1_0) == 0x000358, "Member 'UUIW_Equipment_C::Belt1_0' has a wrong offset!");
static_assert(offsetof(UUIW_Equipment_C, Belt1_1) == 0x000360, "Member 'UUIW_Equipment_C::Belt1_1' has a wrong offset!");
static_assert(offsetof(UUIW_Equipment_C, Belt1_2) == 0x000368, "Member 'UUIW_Equipment_C::Belt1_2' has a wrong offset!");
static_assert(offsetof(UUIW_Equipment_C, Belt1_3) == 0x000370, "Member 'UUIW_Equipment_C::Belt1_3' has a wrong offset!");
static_assert(offsetof(UUIW_Equipment_C, Belt1_4) == 0x000378, "Member 'UUIW_Equipment_C::Belt1_4' has a wrong offset!");
static_assert(offsetof(UUIW_Equipment_C, Belt2_0) == 0x000380, "Member 'UUIW_Equipment_C::Belt2_0' has a wrong offset!");
static_assert(offsetof(UUIW_Equipment_C, Belt2_1) == 0x000388, "Member 'UUIW_Equipment_C::Belt2_1' has a wrong offset!");
static_assert(offsetof(UUIW_Equipment_C, Belt2_2) == 0x000390, "Member 'UUIW_Equipment_C::Belt2_2' has a wrong offset!");
static_assert(offsetof(UUIW_Equipment_C, Belt2_3) == 0x000398, "Member 'UUIW_Equipment_C::Belt2_3' has a wrong offset!");
static_assert(offsetof(UUIW_Equipment_C, Belt2_4) == 0x0003A0, "Member 'UUIW_Equipment_C::Belt2_4' has a wrong offset!");
static_assert(offsetof(UUIW_Equipment_C, Belt_Group) == 0x0003A8, "Member 'UUIW_Equipment_C::Belt_Group' has a wrong offset!");
static_assert(offsetof(UUIW_Equipment_C, BG_Sub_Tab) == 0x0003B0, "Member 'UUIW_Equipment_C::BG_Sub_Tab' has a wrong offset!");
static_assert(offsetof(UUIW_Equipment_C, BG_Tab) == 0x0003B8, "Member 'UUIW_Equipment_C::BG_Tab' has a wrong offset!");
static_assert(offsetof(UUIW_Equipment_C, BG_Title) == 0x0003C0, "Member 'UUIW_Equipment_C::BG_Title' has a wrong offset!");
static_assert(offsetof(UUIW_Equipment_C, Btn_Back) == 0x0003C8, "Member 'UUIW_Equipment_C::Btn_Back' has a wrong offset!");
static_assert(offsetof(UUIW_Equipment_C, Btn_ChaInfo) == 0x0003D0, "Member 'UUIW_Equipment_C::Btn_ChaInfo' has a wrong offset!");
static_assert(offsetof(UUIW_Equipment_C, Btn_Equip) == 0x0003D8, "Member 'UUIW_Equipment_C::Btn_Equip' has a wrong offset!");
static_assert(offsetof(UUIW_Equipment_C, Btn_InvenSlotChangeTab_Left) == 0x0003E0, "Member 'UUIW_Equipment_C::Btn_InvenSlotChangeTab_Left' has a wrong offset!");
static_assert(offsetof(UUIW_Equipment_C, Btn_InvenSlotChangeTab_Right) == 0x0003E8, "Member 'UUIW_Equipment_C::Btn_InvenSlotChangeTab_Right' has a wrong offset!");
static_assert(offsetof(UUIW_Equipment_C, Btn_InvenTab_Left) == 0x0003F0, "Member 'UUIW_Equipment_C::Btn_InvenTab_Left' has a wrong offset!");
static_assert(offsetof(UUIW_Equipment_C, Btn_InvenTab_Right) == 0x0003F8, "Member 'UUIW_Equipment_C::Btn_InvenTab_Right' has a wrong offset!");
static_assert(offsetof(UUIW_Equipment_C, Btn_ItemInfo) == 0x000400, "Member 'UUIW_Equipment_C::Btn_ItemInfo' has a wrong offset!");
static_assert(offsetof(UUIW_Equipment_C, Btn_Rotate_L) == 0x000408, "Member 'UUIW_Equipment_C::Btn_Rotate_L' has a wrong offset!");
static_assert(offsetof(UUIW_Equipment_C, Btn_Rotate_R) == 0x000410, "Member 'UUIW_Equipment_C::Btn_Rotate_R' has a wrong offset!");
static_assert(offsetof(UUIW_Equipment_C, Btn_Rotation) == 0x000418, "Member 'UUIW_Equipment_C::Btn_Rotation' has a wrong offset!");
static_assert(offsetof(UUIW_Equipment_C, Btn_Scroll) == 0x000420, "Member 'UUIW_Equipment_C::Btn_Scroll' has a wrong offset!");
static_assert(offsetof(UUIW_Equipment_C, Btn_Tab_LeftKey) == 0x000428, "Member 'UUIW_Equipment_C::Btn_Tab_LeftKey' has a wrong offset!");
static_assert(offsetof(UUIW_Equipment_C, Btn_Tab_RightKey) == 0x000430, "Member 'UUIW_Equipment_C::Btn_Tab_RightKey' has a wrong offset!");
static_assert(offsetof(UUIW_Equipment_C, Btn_Unequip) == 0x000438, "Member 'UUIW_Equipment_C::Btn_Unequip' has a wrong offset!");
static_assert(offsetof(UUIW_Equipment_C, Costume_Group) == 0x000440, "Member 'UUIW_Equipment_C::Costume_Group' has a wrong offset!");
static_assert(offsetof(UUIW_Equipment_C, Equip_Group) == 0x000448, "Member 'UUIW_Equipment_C::Equip_Group' has a wrong offset!");
static_assert(offsetof(UUIW_Equipment_C, Img_Key_Down) == 0x000450, "Member 'UUIW_Equipment_C::Img_Key_Down' has a wrong offset!");
static_assert(offsetof(UUIW_Equipment_C, Img_Key_Left) == 0x000458, "Member 'UUIW_Equipment_C::Img_Key_Left' has a wrong offset!");
static_assert(offsetof(UUIW_Equipment_C, Img_Key_Right) == 0x000460, "Member 'UUIW_Equipment_C::Img_Key_Right' has a wrong offset!");
static_assert(offsetof(UUIW_Equipment_C, Img_Key_Up) == 0x000468, "Member 'UUIW_Equipment_C::Img_Key_Up' has a wrong offset!");
static_assert(offsetof(UUIW_Equipment_C, Img_WeaponSlot) == 0x000470, "Member 'UUIW_Equipment_C::Img_WeaponSlot' has a wrong offset!");
static_assert(offsetof(UUIW_Equipment_C, Inven_Group) == 0x000478, "Member 'UUIW_Equipment_C::Inven_Group' has a wrong offset!");
static_assert(offsetof(UUIW_Equipment_C, Inven_SlotChangeTab) == 0x000480, "Member 'UUIW_Equipment_C::Inven_SlotChangeTab' has a wrong offset!");
static_assert(offsetof(UUIW_Equipment_C, Inven_Tab) == 0x000488, "Member 'UUIW_Equipment_C::Inven_Tab' has a wrong offset!");
static_assert(offsetof(UUIW_Equipment_C, ItemInfo_Equip) == 0x000490, "Member 'UUIW_Equipment_C::ItemInfo_Equip' has a wrong offset!");
static_assert(offsetof(UUIW_Equipment_C, ItemInfo_Focus) == 0x000498, "Member 'UUIW_Equipment_C::ItemInfo_Focus' has a wrong offset!");
static_assert(offsetof(UUIW_Equipment_C, LeftBG_Group) == 0x0004A0, "Member 'UUIW_Equipment_C::LeftBG_Group' has a wrong offset!");
static_assert(offsetof(UUIW_Equipment_C, List_InvenItemLarge) == 0x0004A8, "Member 'UUIW_Equipment_C::List_InvenItemLarge' has a wrong offset!");
static_assert(offsetof(UUIW_Equipment_C, List_InvenItemSmall_1) == 0x0004B0, "Member 'UUIW_Equipment_C::List_InvenItemSmall_1' has a wrong offset!");
static_assert(offsetof(UUIW_Equipment_C, List_InvenItemSmall_2) == 0x0004B8, "Member 'UUIW_Equipment_C::List_InvenItemSmall_2' has a wrong offset!");
static_assert(offsetof(UUIW_Equipment_C, List_InvenItemSmall_3) == 0x0004C0, "Member 'UUIW_Equipment_C::List_InvenItemSmall_3' has a wrong offset!");
static_assert(offsetof(UUIW_Equipment_C, List_InvenItemSmall_4) == 0x0004C8, "Member 'UUIW_Equipment_C::List_InvenItemSmall_4' has a wrong offset!");
static_assert(offsetof(UUIW_Equipment_C, List_InvenItemSmall_5) == 0x0004D0, "Member 'UUIW_Equipment_C::List_InvenItemSmall_5' has a wrong offset!");
static_assert(offsetof(UUIW_Equipment_C, List_InvenItemSmall_6) == 0x0004D8, "Member 'UUIW_Equipment_C::List_InvenItemSmall_6' has a wrong offset!");
static_assert(offsetof(UUIW_Equipment_C, List_InvenItemSmall_7) == 0x0004E0, "Member 'UUIW_Equipment_C::List_InvenItemSmall_7' has a wrong offset!");
static_assert(offsetof(UUIW_Equipment_C, List_InvenItemSmall_8) == 0x0004E8, "Member 'UUIW_Equipment_C::List_InvenItemSmall_8' has a wrong offset!");
static_assert(offsetof(UUIW_Equipment_C, List_InvenItemSmall_9) == 0x0004F0, "Member 'UUIW_Equipment_C::List_InvenItemSmall_9' has a wrong offset!");
static_assert(offsetof(UUIW_Equipment_C, List_InvenItemSmall_10) == 0x0004F8, "Member 'UUIW_Equipment_C::List_InvenItemSmall_10' has a wrong offset!");
static_assert(offsetof(UUIW_Equipment_C, List_InvenSlotChangeTab) == 0x000500, "Member 'UUIW_Equipment_C::List_InvenSlotChangeTab' has a wrong offset!");
static_assert(offsetof(UUIW_Equipment_C, List_InvenTab) == 0x000508, "Member 'UUIW_Equipment_C::List_InvenTab' has a wrong offset!");
static_assert(offsetof(UUIW_Equipment_C, List_InvenWeapon) == 0x000510, "Member 'UUIW_Equipment_C::List_InvenWeapon' has a wrong offset!");
static_assert(offsetof(UUIW_Equipment_C, List_Tab) == 0x000518, "Member 'UUIW_Equipment_C::List_Tab' has a wrong offset!");
static_assert(offsetof(UUIW_Equipment_C, ListInvenSmall_Group) == 0x000520, "Member 'UUIW_Equipment_C::ListInvenSmall_Group' has a wrong offset!");
static_assert(offsetof(UUIW_Equipment_C, NoContents) == 0x000528, "Member 'UUIW_Equipment_C::NoContents' has a wrong offset!");
static_assert(offsetof(UUIW_Equipment_C, Pouch_Down) == 0x000530, "Member 'UUIW_Equipment_C::Pouch_Down' has a wrong offset!");
static_assert(offsetof(UUIW_Equipment_C, Pouch_Left) == 0x000538, "Member 'UUIW_Equipment_C::Pouch_Left' has a wrong offset!");
static_assert(offsetof(UUIW_Equipment_C, Pouch_Right) == 0x000540, "Member 'UUIW_Equipment_C::Pouch_Right' has a wrong offset!");
static_assert(offsetof(UUIW_Equipment_C, Pouch_Up) == 0x000548, "Member 'UUIW_Equipment_C::Pouch_Up' has a wrong offset!");
static_assert(offsetof(UUIW_Equipment_C, Slot_Costume_Body) == 0x000550, "Member 'UUIW_Equipment_C::Slot_Costume_Body' has a wrong offset!");
static_assert(offsetof(UUIW_Equipment_C, Slot_Costume_Eye) == 0x000558, "Member 'UUIW_Equipment_C::Slot_Costume_Eye' has a wrong offset!");
static_assert(offsetof(UUIW_Equipment_C, Slot_Costume_Head) == 0x000560, "Member 'UUIW_Equipment_C::Slot_Costume_Head' has a wrong offset!");
static_assert(offsetof(UUIW_Equipment_C, Slot_Ear_1) == 0x000568, "Member 'UUIW_Equipment_C::Slot_Ear_1' has a wrong offset!");
static_assert(offsetof(UUIW_Equipment_C, Slot_Ear_2) == 0x000570, "Member 'UUIW_Equipment_C::Slot_Ear_2' has a wrong offset!");
static_assert(offsetof(UUIW_Equipment_C, Slot_Ear_3) == 0x000578, "Member 'UUIW_Equipment_C::Slot_Ear_3' has a wrong offset!");
static_assert(offsetof(UUIW_Equipment_C, Slot_Ear_4) == 0x000580, "Member 'UUIW_Equipment_C::Slot_Ear_4' has a wrong offset!");
static_assert(offsetof(UUIW_Equipment_C, Slot_Ear_5) == 0x000588, "Member 'UUIW_Equipment_C::Slot_Ear_5' has a wrong offset!");
static_assert(offsetof(UUIW_Equipment_C, Slot_Foot) == 0x000590, "Member 'UUIW_Equipment_C::Slot_Foot' has a wrong offset!");
static_assert(offsetof(UUIW_Equipment_C, Slot_Head) == 0x000598, "Member 'UUIW_Equipment_C::Slot_Head' has a wrong offset!");
static_assert(offsetof(UUIW_Equipment_C, Slot_Lower) == 0x0005A0, "Member 'UUIW_Equipment_C::Slot_Lower' has a wrong offset!");
static_assert(offsetof(UUIW_Equipment_C, Slot_SlaveArm_1) == 0x0005A8, "Member 'UUIW_Equipment_C::Slot_SlaveArm_1' has a wrong offset!");
static_assert(offsetof(UUIW_Equipment_C, Slot_SlaveArm_2) == 0x0005B0, "Member 'UUIW_Equipment_C::Slot_SlaveArm_2' has a wrong offset!");
static_assert(offsetof(UUIW_Equipment_C, Slot_SlaveArm_3) == 0x0005B8, "Member 'UUIW_Equipment_C::Slot_SlaveArm_3' has a wrong offset!");
static_assert(offsetof(UUIW_Equipment_C, Slot_Upper) == 0x0005C0, "Member 'UUIW_Equipment_C::Slot_Upper' has a wrong offset!");
static_assert(offsetof(UUIW_Equipment_C, Slot_Weapon_1) == 0x0005C8, "Member 'UUIW_Equipment_C::Slot_Weapon_1' has a wrong offset!");
static_assert(offsetof(UUIW_Equipment_C, Slot_Weapon_2) == 0x0005D0, "Member 'UUIW_Equipment_C::Slot_Weapon_2' has a wrong offset!");
static_assert(offsetof(UUIW_Equipment_C, Slot_Weapon_3) == 0x0005D8, "Member 'UUIW_Equipment_C::Slot_Weapon_3' has a wrong offset!");
static_assert(offsetof(UUIW_Equipment_C, SmallList_SubTitle_1) == 0x0005E0, "Member 'UUIW_Equipment_C::SmallList_SubTitle_1' has a wrong offset!");
static_assert(offsetof(UUIW_Equipment_C, SmallList_SubTitle_2) == 0x0005E8, "Member 'UUIW_Equipment_C::SmallList_SubTitle_2' has a wrong offset!");
static_assert(offsetof(UUIW_Equipment_C, SmallList_SubTitle_3) == 0x0005F0, "Member 'UUIW_Equipment_C::SmallList_SubTitle_3' has a wrong offset!");
static_assert(offsetof(UUIW_Equipment_C, SmallList_SubTitle_4) == 0x0005F8, "Member 'UUIW_Equipment_C::SmallList_SubTitle_4' has a wrong offset!");
static_assert(offsetof(UUIW_Equipment_C, SmallList_SubTitle_5) == 0x000600, "Member 'UUIW_Equipment_C::SmallList_SubTitle_5' has a wrong offset!");
static_assert(offsetof(UUIW_Equipment_C, SmallList_SubTitle_6) == 0x000608, "Member 'UUIW_Equipment_C::SmallList_SubTitle_6' has a wrong offset!");
static_assert(offsetof(UUIW_Equipment_C, SmallList_SubTitle_7) == 0x000610, "Member 'UUIW_Equipment_C::SmallList_SubTitle_7' has a wrong offset!");
static_assert(offsetof(UUIW_Equipment_C, SmallList_SubTitle_8) == 0x000618, "Member 'UUIW_Equipment_C::SmallList_SubTitle_8' has a wrong offset!");
static_assert(offsetof(UUIW_Equipment_C, SmallList_SubTitle_9) == 0x000620, "Member 'UUIW_Equipment_C::SmallList_SubTitle_9' has a wrong offset!");
static_assert(offsetof(UUIW_Equipment_C, SmallList_SubTitle_10) == 0x000628, "Member 'UUIW_Equipment_C::SmallList_SubTitle_10' has a wrong offset!");
static_assert(offsetof(UUIW_Equipment_C, Stat_Character) == 0x000630, "Member 'UUIW_Equipment_C::Stat_Character' has a wrong offset!");
static_assert(offsetof(UUIW_Equipment_C, SubTitle_Belt_1) == 0x000638, "Member 'UUIW_Equipment_C::SubTitle_Belt_1' has a wrong offset!");
static_assert(offsetof(UUIW_Equipment_C, SubTitle_Belt_2) == 0x000640, "Member 'UUIW_Equipment_C::SubTitle_Belt_2' has a wrong offset!");
static_assert(offsetof(UUIW_Equipment_C, SubTitle_Body) == 0x000648, "Member 'UUIW_Equipment_C::SubTitle_Body' has a wrong offset!");
static_assert(offsetof(UUIW_Equipment_C, SubTitle_Frame) == 0x000650, "Member 'UUIW_Equipment_C::SubTitle_Frame' has a wrong offset!");
static_assert(offsetof(UUIW_Equipment_C, SubTitle_Gear) == 0x000658, "Member 'UUIW_Equipment_C::SubTitle_Gear' has a wrong offset!");
static_assert(offsetof(UUIW_Equipment_C, SubTitle_Head) == 0x000660, "Member 'UUIW_Equipment_C::SubTitle_Head' has a wrong offset!");
static_assert(offsetof(UUIW_Equipment_C, SubTitle_Pouch) == 0x000668, "Member 'UUIW_Equipment_C::SubTitle_Pouch' has a wrong offset!");
static_assert(offsetof(UUIW_Equipment_C, SubTitle_Weapon) == 0x000670, "Member 'UUIW_Equipment_C::SubTitle_Weapon' has a wrong offset!");
static_assert(offsetof(UUIW_Equipment_C, Text_Inven) == 0x000678, "Member 'UUIW_Equipment_C::Text_Inven' has a wrong offset!");
static_assert(offsetof(UUIW_Equipment_C, UIW_HasItem_Counter) == 0x000680, "Member 'UUIW_Equipment_C::UIW_HasItem_Counter' has a wrong offset!");
static_assert(offsetof(UUIW_Equipment_C, LPCCharacter) == 0x000688, "Member 'UUIW_Equipment_C::LPCCharacter' has a wrong offset!");
static_assert(offsetof(UUIW_Equipment_C, LStatComponent) == 0x000690, "Member 'UUIW_Equipment_C::LStatComponent' has a wrong offset!");
static_assert(offsetof(UUIW_Equipment_C, StatRoomCharacter) == 0x000698, "Member 'UUIW_Equipment_C::StatRoomCharacter' has a wrong offset!");
static_assert(offsetof(UUIW_Equipment_C, SelectedSlot) == 0x0006A0, "Member 'UUIW_Equipment_C::SelectedSlot' has a wrong offset!");
static_assert(offsetof(UUIW_Equipment_C, SelectedInvenItem) == 0x0006A8, "Member 'UUIW_Equipment_C::SelectedInvenItem' has a wrong offset!");
static_assert(offsetof(UUIW_Equipment_C, LastSelectedSlotType) == 0x0006B0, "Member 'UUIW_Equipment_C::LastSelectedSlotType' has a wrong offset!");
static_assert(offsetof(UUIW_Equipment_C, LastForcusedBeltSlot) == 0x0006B8, "Member 'UUIW_Equipment_C::LastForcusedBeltSlot' has a wrong offset!");
static_assert(offsetof(UUIW_Equipment_C, LastForcusedPouchSlot) == 0x0006C0, "Member 'UUIW_Equipment_C::LastForcusedPouchSlot' has a wrong offset!");
static_assert(offsetof(UUIW_Equipment_C, IsShowInven) == 0x0006C8, "Member 'UUIW_Equipment_C::IsShowInven' has a wrong offset!");
static_assert(offsetof(UUIW_Equipment_C, IsShowStatCharacter) == 0x0006C9, "Member 'UUIW_Equipment_C::IsShowStatCharacter' has a wrong offset!");
static_assert(offsetof(UUIW_Equipment_C, BeltList) == 0x0006D0, "Member 'UUIW_Equipment_C::BeltList' has a wrong offset!");
static_assert(offsetof(UUIW_Equipment_C, PouchList) == 0x0006E0, "Member 'UUIW_Equipment_C::PouchList' has a wrong offset!");
static_assert(offsetof(UUIW_Equipment_C, IsFromHUDMenu) == 0x0006F0, "Member 'UUIW_Equipment_C::IsFromHUDMenu' has a wrong offset!");
static_assert(offsetof(UUIW_Equipment_C, CameraTimer) == 0x0006F8, "Member 'UUIW_Equipment_C::CameraTimer' has a wrong offset!");
static_assert(offsetof(UUIW_Equipment_C, StartMousePosition) == 0x000700, "Member 'UUIW_Equipment_C::StartMousePosition' has a wrong offset!");
static_assert(offsetof(UUIW_Equipment_C, StartCharacterRotation) == 0x000708, "Member 'UUIW_Equipment_C::StartCharacterRotation' has a wrong offset!");
static_assert(offsetof(UUIW_Equipment_C, CameraHorizontalValue) == 0x000714, "Member 'UUIW_Equipment_C::CameraHorizontalValue' has a wrong offset!");
static_assert(offsetof(UUIW_Equipment_C, Progress) == 0x000718, "Member 'UUIW_Equipment_C::Progress' has a wrong offset!");
static_assert(offsetof(UUIW_Equipment_C, StartValue) == 0x00071C, "Member 'UUIW_Equipment_C::StartValue' has a wrong offset!");
static_assert(offsetof(UUIW_Equipment_C, InvenSmallListArr) == 0x000720, "Member 'UUIW_Equipment_C::InvenSmallListArr' has a wrong offset!");
static_assert(offsetof(UUIW_Equipment_C, InvenSmallSubTitleArr) == 0x000730, "Member 'UUIW_Equipment_C::InvenSmallSubTitleArr' has a wrong offset!");
static_assert(offsetof(UUIW_Equipment_C, SelectedList) == 0x000740, "Member 'UUIW_Equipment_C::SelectedList' has a wrong offset!");
static_assert(offsetof(UUIW_Equipment_C, PrevListSelectedIndex) == 0x000748, "Member 'UUIW_Equipment_C::PrevListSelectedIndex' has a wrong offset!");
static_assert(offsetof(UUIW_Equipment_C, ColumnCount) == 0x00074C, "Member 'UUIW_Equipment_C::ColumnCount' has a wrong offset!");
static_assert(offsetof(UUIW_Equipment_C, EntryWidgetHeight) == 0x000750, "Member 'UUIW_Equipment_C::EntryWidgetHeight' has a wrong offset!");
static_assert(offsetof(UUIW_Equipment_C, PrevScrollBoxOffset) == 0x000754, "Member 'UUIW_Equipment_C::PrevScrollBoxOffset' has a wrong offset!");
static_assert(offsetof(UUIW_Equipment_C, IsTweening) == 0x000758, "Member 'UUIW_Equipment_C::IsTweening' has a wrong offset!");
static_assert(offsetof(UUIW_Equipment_C, ListPendingTimer) == 0x000760, "Member 'UUIW_Equipment_C::ListPendingTimer' has a wrong offset!");
static_assert(offsetof(UUIW_Equipment_C, GearUnlockCount) == 0x000768, "Member 'UUIW_Equipment_C::GearUnlockCount' has a wrong offset!");
static_assert(offsetof(UUIW_Equipment_C, GearList) == 0x000770, "Member 'UUIW_Equipment_C::GearList' has a wrong offset!");
static_assert(offsetof(UUIW_Equipment_C, SelectedSlotWidgetNullable) == 0x000780, "Member 'UUIW_Equipment_C::SelectedSlotWidgetNullable' has a wrong offset!");
static_assert(offsetof(UUIW_Equipment_C, GearOpenEquipSlotTypeArr) == 0x000788, "Member 'UUIW_Equipment_C::GearOpenEquipSlotTypeArr' has a wrong offset!");
static_assert(offsetof(UUIW_Equipment_C, SlotChangeWeaponTabItems) == 0x000798, "Member 'UUIW_Equipment_C::SlotChangeWeaponTabItems' has a wrong offset!");
static_assert(offsetof(UUIW_Equipment_C, SlotChangeGearEarTabItems) == 0x0007A8, "Member 'UUIW_Equipment_C::SlotChangeGearEarTabItems' has a wrong offset!");
static_assert(offsetof(UUIW_Equipment_C, SlotChangePartsTabItems) == 0x0007B8, "Member 'UUIW_Equipment_C::SlotChangePartsTabItems' has a wrong offset!");
static_assert(offsetof(UUIW_Equipment_C, PrevSelectedSlotType) == 0x0007C8, "Member 'UUIW_Equipment_C::PrevSelectedSlotType' has a wrong offset!");
static_assert(offsetof(UUIW_Equipment_C, PrevSelectedSlotID) == 0x0007CC, "Member 'UUIW_Equipment_C::PrevSelectedSlotID' has a wrong offset!");
static_assert(offsetof(UUIW_Equipment_C, NeedShowInvenItems) == 0x0007D4, "Member 'UUIW_Equipment_C::NeedShowInvenItems' has a wrong offset!");
static_assert(offsetof(UUIW_Equipment_C, IsGamPad) == 0x0007D5, "Member 'UUIW_Equipment_C::IsGamPad' has a wrong offset!");
static_assert(offsetof(UUIW_Equipment_C, LastSelectedWeapon) == 0x0007D6, "Member 'UUIW_Equipment_C::LastSelectedWeapon' has a wrong offset!");
static_assert(offsetof(UUIW_Equipment_C, LastSelectedWeaponForRefreshCheck) == 0x0007D7, "Member 'UUIW_Equipment_C::LastSelectedWeaponForRefreshCheck' has a wrong offset!");
static_assert(offsetof(UUIW_Equipment_C, StartDelayTimer) == 0x0007D8, "Member 'UUIW_Equipment_C::StartDelayTimer' has a wrong offset!");
static_assert(offsetof(UUIW_Equipment_C, ItemCharInfo) == 0x0007E0, "Member 'UUIW_Equipment_C::ItemCharInfo' has a wrong offset!");
static_assert(offsetof(UUIW_Equipment_C, SelectedSlotItemIsValid) == 0x0007E1, "Member 'UUIW_Equipment_C::SelectedSlotItemIsValid' has a wrong offset!");
static_assert(offsetof(UUIW_Equipment_C, NeedChangePageItemInfoFocus) == 0x0007E2, "Member 'UUIW_Equipment_C::NeedChangePageItemInfoFocus' has a wrong offset!");
static_assert(offsetof(UUIW_Equipment_C, SlotChangeHeadEyeTabItems) == 0x0007E8, "Member 'UUIW_Equipment_C::SlotChangeHeadEyeTabItems' has a wrong offset!");
static_assert(offsetof(UUIW_Equipment_C, PromoteDLCItemList) == 0x0007F8, "Member 'UUIW_Equipment_C::PromoteDLCItemList' has a wrong offset!");

}


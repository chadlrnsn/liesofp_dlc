#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_LightProp_StreetLight_03

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_LightProp_StreetLight_03.BP_LightProp_StreetLight_03_C
// 0x0030 (0x0210 - 0x01E0)
class ABP_LightProp_StreetLight_03_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x01E0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USpotLightComponent*                    SpotLight;                                         // 0x01E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Lamp;                                              // 0x01F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x01F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             NewEventDispatcher_0;                              // 0x0200(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)

public:
	void NewEventDispatcher_0__DelegateSignature();
	void ExecuteUbergraph_BP_LightProp_StreetLight_03(int32 EntryPoint);
	void ReceiveTick(float DeltaSeconds);
	void ReceiveBeginPlay();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_LightProp_StreetLight_03_C">();
	}
	static class ABP_LightProp_StreetLight_03_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_LightProp_StreetLight_03_C>();
	}
};
static_assert(alignof(ABP_LightProp_StreetLight_03_C) == 0x000008, "Wrong alignment on ABP_LightProp_StreetLight_03_C");
static_assert(sizeof(ABP_LightProp_StreetLight_03_C) == 0x000210, "Wrong size on ABP_LightProp_StreetLight_03_C");
static_assert(offsetof(ABP_LightProp_StreetLight_03_C, UberGraphFrame) == 0x0001E0, "Member 'ABP_LightProp_StreetLight_03_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_LightProp_StreetLight_03_C, SpotLight) == 0x0001E8, "Member 'ABP_LightProp_StreetLight_03_C::SpotLight' has a wrong offset!");
static_assert(offsetof(ABP_LightProp_StreetLight_03_C, Lamp) == 0x0001F0, "Member 'ABP_LightProp_StreetLight_03_C::Lamp' has a wrong offset!");
static_assert(offsetof(ABP_LightProp_StreetLight_03_C, DefaultSceneRoot) == 0x0001F8, "Member 'ABP_LightProp_StreetLight_03_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_LightProp_StreetLight_03_C, NewEventDispatcher_0) == 0x000200, "Member 'ABP_LightProp_StreetLight_03_C::NewEventDispatcher_0' has a wrong offset!");

}


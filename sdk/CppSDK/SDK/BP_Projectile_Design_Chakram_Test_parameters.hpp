#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Projectile_Design_Chakram_Test

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "ProjectP_structs.hpp"


namespace SDK::Params
{

// Function BP_Projectile_Design_Chakram_Test.BP_Projectile_Design_Chakram_Test_C.CheckUseSubstituteSkillHit
// 0x0150 (0x0150 - 0x0000)
struct BP_Projectile_Design_Chakram_Test_C_CheckUseSubstituteSkillHit final
{
public:
	struct FLProjectileHitInfo                    ProjectileHitInfo;                                 // 0x0000(0x0090)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
	struct FHitResult                             HitResult;                                         // 0x0090(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class FName                                   ReturnValue;                                       // 0x0118(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_CheckUseSubstituteSkillHit_ReturnValue;   // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ALProjectile*                           CallFunc_GetProjectile_ReturnValue;                // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_131[0x7];                                      // 0x0131(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Projectile_Chakram_C*               K2Node_DynamicCast_AsBP_Projectile_Chakram;        // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue_1;        // 0x0141(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Projectile_Design_Chakram_Test_C_CheckUseSubstituteSkillHit) == 0x000010, "Wrong alignment on BP_Projectile_Design_Chakram_Test_C_CheckUseSubstituteSkillHit");
static_assert(sizeof(BP_Projectile_Design_Chakram_Test_C_CheckUseSubstituteSkillHit) == 0x000150, "Wrong size on BP_Projectile_Design_Chakram_Test_C_CheckUseSubstituteSkillHit");
static_assert(offsetof(BP_Projectile_Design_Chakram_Test_C_CheckUseSubstituteSkillHit, ProjectileHitInfo) == 0x000000, "Member 'BP_Projectile_Design_Chakram_Test_C_CheckUseSubstituteSkillHit::ProjectileHitInfo' has a wrong offset!");
static_assert(offsetof(BP_Projectile_Design_Chakram_Test_C_CheckUseSubstituteSkillHit, HitResult) == 0x000090, "Member 'BP_Projectile_Design_Chakram_Test_C_CheckUseSubstituteSkillHit::HitResult' has a wrong offset!");
static_assert(offsetof(BP_Projectile_Design_Chakram_Test_C_CheckUseSubstituteSkillHit, ReturnValue) == 0x000118, "Member 'BP_Projectile_Design_Chakram_Test_C_CheckUseSubstituteSkillHit::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Projectile_Design_Chakram_Test_C_CheckUseSubstituteSkillHit, CallFunc_CheckUseSubstituteSkillHit_ReturnValue) == 0x000120, "Member 'BP_Projectile_Design_Chakram_Test_C_CheckUseSubstituteSkillHit::CallFunc_CheckUseSubstituteSkillHit_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Projectile_Design_Chakram_Test_C_CheckUseSubstituteSkillHit, CallFunc_GetProjectile_ReturnValue) == 0x000128, "Member 'BP_Projectile_Design_Chakram_Test_C_CheckUseSubstituteSkillHit::CallFunc_GetProjectile_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Projectile_Design_Chakram_Test_C_CheckUseSubstituteSkillHit, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000130, "Member 'BP_Projectile_Design_Chakram_Test_C_CheckUseSubstituteSkillHit::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Projectile_Design_Chakram_Test_C_CheckUseSubstituteSkillHit, K2Node_DynamicCast_AsBP_Projectile_Chakram) == 0x000138, "Member 'BP_Projectile_Design_Chakram_Test_C_CheckUseSubstituteSkillHit::K2Node_DynamicCast_AsBP_Projectile_Chakram' has a wrong offset!");
static_assert(offsetof(BP_Projectile_Design_Chakram_Test_C_CheckUseSubstituteSkillHit, K2Node_DynamicCast_bSuccess) == 0x000140, "Member 'BP_Projectile_Design_Chakram_Test_C_CheckUseSubstituteSkillHit::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Projectile_Design_Chakram_Test_C_CheckUseSubstituteSkillHit, CallFunc_EqualEqual_NameName_ReturnValue_1) == 0x000141, "Member 'BP_Projectile_Design_Chakram_Test_C_CheckUseSubstituteSkillHit::CallFunc_EqualEqual_NameName_ReturnValue_1' has a wrong offset!");

// Function BP_Projectile_Design_Chakram_Test.BP_Projectile_Design_Chakram_Test_C.Start Periodic Hit
// 0x0180 (0x0180 - 0x0000)
struct BP_Projectile_Design_Chakram_Test_C_Start_Periodic_Hit final
{
public:
	class ALProjectile*                           CallFunc_GetProjectile_ReturnValue;                // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8[0x8];                                        // 0x0008(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLProjectileHitInfo                    K2Node_MakeStruct_LProjectileHitInfo;              // 0x0010(0x0090)(NoDestructor)
	class FName                                   CallFunc_MakeLiteralName_ReturnValue;              // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ALCharacter*                            K2Node_DynamicCast_AsLCharacter;                   // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B1[0x7];                                       // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ALProjectile*                           CallFunc_GetProjectile_ReturnValue_1;              // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULProjectileHit_PeriodicHandler*        CallFunc_SpawnObject_ReturnValue;                  // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAppliedAbnormal_ReturnValue;            // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_CA[0x6];                                       // 0x00CA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ALProjectile*                           CallFunc_GetProjectile_ReturnValue_2;              // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D8[0x8];                                       // 0x00D8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLProjectileHitInfo                    K2Node_MakeStruct_LProjectileHitInfo_1;            // 0x00E0(0x0090)(NoDestructor)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Projectile_Design_Chakram_Test_C_Start_Periodic_Hit) == 0x000010, "Wrong alignment on BP_Projectile_Design_Chakram_Test_C_Start_Periodic_Hit");
static_assert(sizeof(BP_Projectile_Design_Chakram_Test_C_Start_Periodic_Hit) == 0x000180, "Wrong size on BP_Projectile_Design_Chakram_Test_C_Start_Periodic_Hit");
static_assert(offsetof(BP_Projectile_Design_Chakram_Test_C_Start_Periodic_Hit, CallFunc_GetProjectile_ReturnValue) == 0x000000, "Member 'BP_Projectile_Design_Chakram_Test_C_Start_Periodic_Hit::CallFunc_GetProjectile_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Projectile_Design_Chakram_Test_C_Start_Periodic_Hit, K2Node_MakeStruct_LProjectileHitInfo) == 0x000010, "Member 'BP_Projectile_Design_Chakram_Test_C_Start_Periodic_Hit::K2Node_MakeStruct_LProjectileHitInfo' has a wrong offset!");
static_assert(offsetof(BP_Projectile_Design_Chakram_Test_C_Start_Periodic_Hit, CallFunc_MakeLiteralName_ReturnValue) == 0x0000A0, "Member 'BP_Projectile_Design_Chakram_Test_C_Start_Periodic_Hit::CallFunc_MakeLiteralName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Projectile_Design_Chakram_Test_C_Start_Periodic_Hit, K2Node_DynamicCast_AsLCharacter) == 0x0000A8, "Member 'BP_Projectile_Design_Chakram_Test_C_Start_Periodic_Hit::K2Node_DynamicCast_AsLCharacter' has a wrong offset!");
static_assert(offsetof(BP_Projectile_Design_Chakram_Test_C_Start_Periodic_Hit, K2Node_DynamicCast_bSuccess) == 0x0000B0, "Member 'BP_Projectile_Design_Chakram_Test_C_Start_Periodic_Hit::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Projectile_Design_Chakram_Test_C_Start_Periodic_Hit, CallFunc_GetProjectile_ReturnValue_1) == 0x0000B8, "Member 'BP_Projectile_Design_Chakram_Test_C_Start_Periodic_Hit::CallFunc_GetProjectile_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Projectile_Design_Chakram_Test_C_Start_Periodic_Hit, CallFunc_SpawnObject_ReturnValue) == 0x0000C0, "Member 'BP_Projectile_Design_Chakram_Test_C_Start_Periodic_Hit::CallFunc_SpawnObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Projectile_Design_Chakram_Test_C_Start_Periodic_Hit, CallFunc_IsValid_ReturnValue) == 0x0000C8, "Member 'BP_Projectile_Design_Chakram_Test_C_Start_Periodic_Hit::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Projectile_Design_Chakram_Test_C_Start_Periodic_Hit, CallFunc_IsAppliedAbnormal_ReturnValue) == 0x0000C9, "Member 'BP_Projectile_Design_Chakram_Test_C_Start_Periodic_Hit::CallFunc_IsAppliedAbnormal_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Projectile_Design_Chakram_Test_C_Start_Periodic_Hit, CallFunc_GetProjectile_ReturnValue_2) == 0x0000D0, "Member 'BP_Projectile_Design_Chakram_Test_C_Start_Periodic_Hit::CallFunc_GetProjectile_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Projectile_Design_Chakram_Test_C_Start_Periodic_Hit, K2Node_MakeStruct_LProjectileHitInfo_1) == 0x0000E0, "Member 'BP_Projectile_Design_Chakram_Test_C_Start_Periodic_Hit::K2Node_MakeStruct_LProjectileHitInfo_1' has a wrong offset!");
static_assert(offsetof(BP_Projectile_Design_Chakram_Test_C_Start_Periodic_Hit, CallFunc_Array_Add_ReturnValue) == 0x000170, "Member 'BP_Projectile_Design_Chakram_Test_C_Start_Periodic_Hit::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Projectile_Design_Chakram_Test_C_Start_Periodic_Hit, CallFunc_Array_Add_ReturnValue_1) == 0x000174, "Member 'BP_Projectile_Design_Chakram_Test_C_Start_Periodic_Hit::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");

// Function BP_Projectile_Design_Chakram_Test.BP_Projectile_Design_Chakram_Test_C.StopPeriodicHit
// 0x0008 (0x0008 - 0x0000)
struct BP_Projectile_Design_Chakram_Test_C_StopPeriodicHit final
{
public:
	class ALProjectile*                           CallFunc_GetProjectile_ReturnValue;                // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Projectile_Design_Chakram_Test_C_StopPeriodicHit) == 0x000008, "Wrong alignment on BP_Projectile_Design_Chakram_Test_C_StopPeriodicHit");
static_assert(sizeof(BP_Projectile_Design_Chakram_Test_C_StopPeriodicHit) == 0x000008, "Wrong size on BP_Projectile_Design_Chakram_Test_C_StopPeriodicHit");
static_assert(offsetof(BP_Projectile_Design_Chakram_Test_C_StopPeriodicHit, CallFunc_GetProjectile_ReturnValue) == 0x000000, "Member 'BP_Projectile_Design_Chakram_Test_C_StopPeriodicHit::CallFunc_GetProjectile_ReturnValue' has a wrong offset!");

}


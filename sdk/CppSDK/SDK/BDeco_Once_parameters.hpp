#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BDeco_Once

#include "Basic.hpp"

#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BDeco_Once.BDeco_Once_C.ExecuteUbergraph_BDeco_Once
// 0x0098 (0x0098 - 0x0000)
struct BDeco_Once_C_ExecuteUbergraph_BDeco_Once final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_NameToText_ReturnValue;              // 0x0008(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0020(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0060(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0070(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0088(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BDeco_Once_C_ExecuteUbergraph_BDeco_Once) == 0x000008, "Wrong alignment on BDeco_Once_C_ExecuteUbergraph_BDeco_Once");
static_assert(sizeof(BDeco_Once_C_ExecuteUbergraph_BDeco_Once) == 0x000098, "Wrong size on BDeco_Once_C_ExecuteUbergraph_BDeco_Once");
static_assert(offsetof(BDeco_Once_C_ExecuteUbergraph_BDeco_Once, EntryPoint) == 0x000000, "Member 'BDeco_Once_C_ExecuteUbergraph_BDeco_Once::EntryPoint' has a wrong offset!");
static_assert(offsetof(BDeco_Once_C_ExecuteUbergraph_BDeco_Once, CallFunc_Conv_NameToText_ReturnValue) == 0x000008, "Member 'BDeco_Once_C_ExecuteUbergraph_BDeco_Once::CallFunc_Conv_NameToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BDeco_Once_C_ExecuteUbergraph_BDeco_Once, K2Node_MakeStruct_FormatArgumentData) == 0x000020, "Member 'BDeco_Once_C_ExecuteUbergraph_BDeco_Once::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BDeco_Once_C_ExecuteUbergraph_BDeco_Once, K2Node_MakeArray_Array) == 0x000060, "Member 'BDeco_Once_C_ExecuteUbergraph_BDeco_Once::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BDeco_Once_C_ExecuteUbergraph_BDeco_Once, CallFunc_Format_ReturnValue) == 0x000070, "Member 'BDeco_Once_C_ExecuteUbergraph_BDeco_Once::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BDeco_Once_C_ExecuteUbergraph_BDeco_Once, CallFunc_Conv_TextToString_ReturnValue) == 0x000088, "Member 'BDeco_Once_C_ExecuteUbergraph_BDeco_Once::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");

// Function BDeco_Once.BDeco_Once_C.PerformConditionCheckAI
// 0x0028 (0x0028 - 0x0000)
struct BDeco_Once_C_PerformConditionCheckAI final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ALNPCController*                        K2Node_DynamicCast_AsLNPCController;               // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckOnceCondition_ReturnValue;           // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BDeco_Once_C_PerformConditionCheckAI) == 0x000008, "Wrong alignment on BDeco_Once_C_PerformConditionCheckAI");
static_assert(sizeof(BDeco_Once_C_PerformConditionCheckAI) == 0x000028, "Wrong size on BDeco_Once_C_PerformConditionCheckAI");
static_assert(offsetof(BDeco_Once_C_PerformConditionCheckAI, OwnerController) == 0x000000, "Member 'BDeco_Once_C_PerformConditionCheckAI::OwnerController' has a wrong offset!");
static_assert(offsetof(BDeco_Once_C_PerformConditionCheckAI, ControlledPawn) == 0x000008, "Member 'BDeco_Once_C_PerformConditionCheckAI::ControlledPawn' has a wrong offset!");
static_assert(offsetof(BDeco_Once_C_PerformConditionCheckAI, ReturnValue) == 0x000010, "Member 'BDeco_Once_C_PerformConditionCheckAI::ReturnValue' has a wrong offset!");
static_assert(offsetof(BDeco_Once_C_PerformConditionCheckAI, K2Node_DynamicCast_AsLNPCController) == 0x000018, "Member 'BDeco_Once_C_PerformConditionCheckAI::K2Node_DynamicCast_AsLNPCController' has a wrong offset!");
static_assert(offsetof(BDeco_Once_C_PerformConditionCheckAI, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BDeco_Once_C_PerformConditionCheckAI::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BDeco_Once_C_PerformConditionCheckAI, CallFunc_CheckOnceCondition_ReturnValue) == 0x000021, "Member 'BDeco_Once_C_PerformConditionCheckAI::CallFunc_CheckOnceCondition_ReturnValue' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Action_Sprint

#include "Basic.hpp"

#include "ProjectP_structs.hpp"
#include "ProjectP_classes.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Action_Sprint.BP_Action_Sprint_C
// 0x0020 (0x0278 - 0x0258)
class UBP_Action_Sprint_C final : public ULAction_LoopAnim
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0258(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FTimerHandle                           Cached_TimerHandle_Stop;                           // 0x0260(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          Cached_CheckRunningStop;                           // 0x0268(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_269[0x7];                                      // 0x0269(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           Cached_TimerHandle_StopSprint;                     // 0x0270(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_Action_Sprint(int32 EntryPoint);
	void OnSprintStopped();
	void OnStart();
	void OnTick(float DeltaTime);
	void DelayedStop();
	void OnStop(class ULActBase* ReasonAction, class FName Reason);
	void OnCommandOccured(class ULActMgrComponent* ActMgrComponent, class AActor* TargetActor, class FName Command, const struct FVector& Lever, bool SkipCommandPrerequisitiesCheck);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Action_Sprint_C">();
	}
	static class UBP_Action_Sprint_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_Action_Sprint_C>();
	}
};
static_assert(alignof(UBP_Action_Sprint_C) == 0x000008, "Wrong alignment on UBP_Action_Sprint_C");
static_assert(sizeof(UBP_Action_Sprint_C) == 0x000278, "Wrong size on UBP_Action_Sprint_C");
static_assert(offsetof(UBP_Action_Sprint_C, UberGraphFrame) == 0x000258, "Member 'UBP_Action_Sprint_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_Action_Sprint_C, Cached_TimerHandle_Stop) == 0x000260, "Member 'UBP_Action_Sprint_C::Cached_TimerHandle_Stop' has a wrong offset!");
static_assert(offsetof(UBP_Action_Sprint_C, Cached_CheckRunningStop) == 0x000268, "Member 'UBP_Action_Sprint_C::Cached_CheckRunningStop' has a wrong offset!");
static_assert(offsetof(UBP_Action_Sprint_C, Cached_TimerHandle_StopSprint) == 0x000270, "Member 'UBP_Action_Sprint_C::Cached_TimerHandle_StopSprint' has a wrong offset!");

}


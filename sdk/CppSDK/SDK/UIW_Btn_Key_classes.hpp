#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UIW_Btn_Key

#include "Basic.hpp"

#include "ProjectP_classes.hpp"
#include "Engine_structs.hpp"
#include "UIEN_InputAction_structs.hpp"
#include "UIEN_Controller_structs.hpp"
#include "SlateCore_structs.hpp"
#include "ProjectPContentInfo_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass UIW_Btn_Key.UIW_Btn_Key_C
// 0x0128 (0x03D0 - 0x02A8)
class UUIW_Btn_Key_C final : public ULWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02A8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UButton*                                Btn;                                               // 0x02B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Circle;                                            // 0x02B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 CircleBG;                                          // 0x02C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               HoldGroup;                                         // 0x02C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Icon;                                              // 0x02D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Img_Arrow;                                         // 0x02D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Quadrangle;                                        // 0x02E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 QuadrangleBG;                                      // 0x02E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUIW_Fx_Btn_Bg_C*                       SelectedBG;                                        // 0x02F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Text_Label;                                        // 0x02F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               TextGroup;                                         // 0x0300(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	float                                         CurrentProgress;                                   // 0x0308(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_30C[0x4];                                      // 0x030C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           GaugeTimer;                                        // 0x0310(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	float                                         HoldTime;                                          // 0x0318(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31C[0x4];                                      // 0x031C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             OnActive;                                          // 0x0320(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class UImage*                                 TargetGauge;                                       // 0x0330(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUIEN_InputAction                             InputName;                                         // 0x0338(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_339[0x7];                                      // 0x0339(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             OnRepeat;                                          // 0x0340(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             OnStartHold;                                       // 0x0350(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             OnCancelHold;                                      // 0x0360(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             OnAxis;                                            // 0x0370(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	float                                         AxisX;                                             // 0x0380(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AxisY;                                             // 0x0384(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   InputType;                                         // 0x0388(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             OnScroll;                                          // 0x0390(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          IsViewContents;                                    // 0x03A0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	EUIEN_Controller                              VisibleType;                                       // 0x03A1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A2[0x6];                                      // 0x03A2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Label;                                             // 0x03A8(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	int32                                         IgnoreCount;                                       // 0x03C0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         IgnoreCount_Repeat;                                // 0x03C4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         IgnoreCount_Repeat_Delay;                          // 0x03C8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsPressed;                                         // 0x03CC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void OnActive__DelegateSignature(class UUIW_Btn_Key_C* BtnKey);
	void OnStartHold__DelegateSignature();
	void OnCancelHold__DelegateSignature();
	void OnAxis__DelegateSignature(class UUIW_Btn_Key_C* BtnKey, float AxisX_0, float AxisY_0, float AxisXY, float Angle);
	void OnScroll__DelegateSignature(float Delta);
	void OnRepeat__DelegateSignature(class UUIW_Btn_Key_C* BtnKey);
	void ExecuteUbergraph_UIW_Btn_Key(int32 EntryPoint);
	void StopForceFeedback();
	void StartForceFeedback();
	void BndEvt__Btn_K2Node_ComponentBoundEvent_3_OnButtonHoverEvent__DelegateSignature();
	void BndEvt__Btn_K2Node_ComponentBoundEvent_1_OnButtonHoverEvent__DelegateSignature();
	void Construct();
	void Destruct();
	void BndEvt__Btn_K2Node_ComponentBoundEvent_2_OnButtonReleasedEvent__DelegateSignature();
	void BndEvt__Btn_K2Node_ComponentBoundEvent_0_OnButtonPressedEvent__DelegateSignature();
	void InitButton();
	void Set_Button_by_Action_Name(EUIEN_InputAction InputAction, float HoldTime_0, class FName Label_0, EUIEN_Controller VisibleType_0);
	void Set_Button_by_Axis_Name(EUIEN_InputAction InputAxis, bool All_Directions__XY_, class FName Label_0);
	void Set_Button_by_Thumbstick_Scroll(class FName Label_0);
	void Set_Button_Only_Icon(const struct FKey& Key, class FName Label_0, EUIEN_Controller Visible_Type);
	void Set_Label(class FName Label_0);
	void PressKey();
	void GaugeLoop();
	void SetGaugeType();
	void ReleaseKey();
	void RepeatKey();
	void Set_Icon(const struct FKey& Key);
	void Action_Key_Update(bool IsGamePad);
	void Axis_Key_Update();
	void AxisKey(float Axis);
	void AxisXKey(float AxisValue);
	void AxisYKey(float AxisValue);
	void CalculationAxis();
	void ScrollUpPressKey();
	void ScrollUpRepeatKey();
	void ScrollDownPressKey();
	void Set_Visibility_Button(bool IsViewContents_0);
	void ScrollDownRepeatKey();
	void ListenForNavigationKey(EUINavigation Navigation_0, EInputEvent EventType);
	void GaugeReset();
	void ChangeInputMode(bool IsGamePad);
	void SetHoldControlGuide(bool IsHoldType);
	void UnsetButtonByActionName(class FName Action);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"UIW_Btn_Key_C">();
	}
	static class UUIW_Btn_Key_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUIW_Btn_Key_C>();
	}
};
static_assert(alignof(UUIW_Btn_Key_C) == 0x000008, "Wrong alignment on UUIW_Btn_Key_C");
static_assert(sizeof(UUIW_Btn_Key_C) == 0x0003D0, "Wrong size on UUIW_Btn_Key_C");
static_assert(offsetof(UUIW_Btn_Key_C, UberGraphFrame) == 0x0002A8, "Member 'UUIW_Btn_Key_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UUIW_Btn_Key_C, Btn) == 0x0002B0, "Member 'UUIW_Btn_Key_C::Btn' has a wrong offset!");
static_assert(offsetof(UUIW_Btn_Key_C, Circle) == 0x0002B8, "Member 'UUIW_Btn_Key_C::Circle' has a wrong offset!");
static_assert(offsetof(UUIW_Btn_Key_C, CircleBG) == 0x0002C0, "Member 'UUIW_Btn_Key_C::CircleBG' has a wrong offset!");
static_assert(offsetof(UUIW_Btn_Key_C, HoldGroup) == 0x0002C8, "Member 'UUIW_Btn_Key_C::HoldGroup' has a wrong offset!");
static_assert(offsetof(UUIW_Btn_Key_C, Icon) == 0x0002D0, "Member 'UUIW_Btn_Key_C::Icon' has a wrong offset!");
static_assert(offsetof(UUIW_Btn_Key_C, Img_Arrow) == 0x0002D8, "Member 'UUIW_Btn_Key_C::Img_Arrow' has a wrong offset!");
static_assert(offsetof(UUIW_Btn_Key_C, Quadrangle) == 0x0002E0, "Member 'UUIW_Btn_Key_C::Quadrangle' has a wrong offset!");
static_assert(offsetof(UUIW_Btn_Key_C, QuadrangleBG) == 0x0002E8, "Member 'UUIW_Btn_Key_C::QuadrangleBG' has a wrong offset!");
static_assert(offsetof(UUIW_Btn_Key_C, SelectedBG) == 0x0002F0, "Member 'UUIW_Btn_Key_C::SelectedBG' has a wrong offset!");
static_assert(offsetof(UUIW_Btn_Key_C, Text_Label) == 0x0002F8, "Member 'UUIW_Btn_Key_C::Text_Label' has a wrong offset!");
static_assert(offsetof(UUIW_Btn_Key_C, TextGroup) == 0x000300, "Member 'UUIW_Btn_Key_C::TextGroup' has a wrong offset!");
static_assert(offsetof(UUIW_Btn_Key_C, CurrentProgress) == 0x000308, "Member 'UUIW_Btn_Key_C::CurrentProgress' has a wrong offset!");
static_assert(offsetof(UUIW_Btn_Key_C, GaugeTimer) == 0x000310, "Member 'UUIW_Btn_Key_C::GaugeTimer' has a wrong offset!");
static_assert(offsetof(UUIW_Btn_Key_C, HoldTime) == 0x000318, "Member 'UUIW_Btn_Key_C::HoldTime' has a wrong offset!");
static_assert(offsetof(UUIW_Btn_Key_C, OnActive) == 0x000320, "Member 'UUIW_Btn_Key_C::OnActive' has a wrong offset!");
static_assert(offsetof(UUIW_Btn_Key_C, TargetGauge) == 0x000330, "Member 'UUIW_Btn_Key_C::TargetGauge' has a wrong offset!");
static_assert(offsetof(UUIW_Btn_Key_C, InputName) == 0x000338, "Member 'UUIW_Btn_Key_C::InputName' has a wrong offset!");
static_assert(offsetof(UUIW_Btn_Key_C, OnRepeat) == 0x000340, "Member 'UUIW_Btn_Key_C::OnRepeat' has a wrong offset!");
static_assert(offsetof(UUIW_Btn_Key_C, OnStartHold) == 0x000350, "Member 'UUIW_Btn_Key_C::OnStartHold' has a wrong offset!");
static_assert(offsetof(UUIW_Btn_Key_C, OnCancelHold) == 0x000360, "Member 'UUIW_Btn_Key_C::OnCancelHold' has a wrong offset!");
static_assert(offsetof(UUIW_Btn_Key_C, OnAxis) == 0x000370, "Member 'UUIW_Btn_Key_C::OnAxis' has a wrong offset!");
static_assert(offsetof(UUIW_Btn_Key_C, AxisX) == 0x000380, "Member 'UUIW_Btn_Key_C::AxisX' has a wrong offset!");
static_assert(offsetof(UUIW_Btn_Key_C, AxisY) == 0x000384, "Member 'UUIW_Btn_Key_C::AxisY' has a wrong offset!");
static_assert(offsetof(UUIW_Btn_Key_C, InputType) == 0x000388, "Member 'UUIW_Btn_Key_C::InputType' has a wrong offset!");
static_assert(offsetof(UUIW_Btn_Key_C, OnScroll) == 0x000390, "Member 'UUIW_Btn_Key_C::OnScroll' has a wrong offset!");
static_assert(offsetof(UUIW_Btn_Key_C, IsViewContents) == 0x0003A0, "Member 'UUIW_Btn_Key_C::IsViewContents' has a wrong offset!");
static_assert(offsetof(UUIW_Btn_Key_C, VisibleType) == 0x0003A1, "Member 'UUIW_Btn_Key_C::VisibleType' has a wrong offset!");
static_assert(offsetof(UUIW_Btn_Key_C, Label) == 0x0003A8, "Member 'UUIW_Btn_Key_C::Label' has a wrong offset!");
static_assert(offsetof(UUIW_Btn_Key_C, IgnoreCount) == 0x0003C0, "Member 'UUIW_Btn_Key_C::IgnoreCount' has a wrong offset!");
static_assert(offsetof(UUIW_Btn_Key_C, IgnoreCount_Repeat) == 0x0003C4, "Member 'UUIW_Btn_Key_C::IgnoreCount_Repeat' has a wrong offset!");
static_assert(offsetof(UUIW_Btn_Key_C, IgnoreCount_Repeat_Delay) == 0x0003C8, "Member 'UUIW_Btn_Key_C::IgnoreCount_Repeat_Delay' has a wrong offset!");
static_assert(offsetof(UUIW_Btn_Key_C, IsPressed) == 0x0003CC, "Member 'UUIW_Btn_Key_C::IsPressed' has a wrong offset!");

}


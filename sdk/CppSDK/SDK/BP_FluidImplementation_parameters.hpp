#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_FluidImplementation

#include "Basic.hpp"

#include "PhysicsCore_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "ProjectP_structs.hpp"


namespace SDK::Params
{

// Function BP_FluidImplementation.BP_FluidImplementation_C.ExecuteUbergraph_BP_FluidImplementation
// 0x0158 (0x0158 - 0x0000)
struct BP_FluidImplementation_C_ExecuteUbergraph_BP_FluidImplementation final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeLiteralFloat_ReturnValue;             // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable;                               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_2;                             // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_3;                             // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_4;                             // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_5;                             // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_6;                             // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_7;                             // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_8;                             // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_9;                             // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_10;                            // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_11;                            // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_12;                            // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable_13;                            // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_WasRecentlyRendered_ReturnValue;          // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6A[0x2];                                       // 0x006A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetVelocity_ReturnValue;                  // 0x006C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0078(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FluidTrace_Valid;                         // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPhysicalSurface                              CallFunc_FluidTrace_Surface_Type;                  // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8A[0x2];                                       // 0x008A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Abs_ReturnValue;                          // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_95[0x3];                                       // 0x0095(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue;       // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A1[0x3];                                       // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x00A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B1[0x3];                                       // 0x00B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_DistanceCheck_Distance;                   // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DistanceCheck_OutOfRadius;                // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMeshComponent*                         CallFunc_Array_Get_Item;                           // 0x00C0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_CA[0x2];                                       // 0x00CA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_1;                   // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x00DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x00DD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_DE[0x2];                                       // 0x00DE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UMeshComponent*>                 CallFunc_GetComponentsByTag_ReturnValue;           // 0x00E0(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F2[0x2];                                       // 0x00F2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable_14;                            // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_15;                            // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPhysicalSurface                              Temp_byte_Variable;                                // 0x00FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FD[0x3];                                       // 0x00FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_104[0x4];                                      // 0x0104(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_111[0x3];                                      // 0x0111(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item_1;                         // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0124(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_125[0x3];                                      // 0x0125(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Array_Get_Item_2;                         // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_131[0x3];                                      // 0x0131(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable_16;                            // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeLiteralFloat_ReturnValue_1;           // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeLiteralFloat_ReturnValue_2;           // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_1;                           // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FluidImplementation_C_ExecuteUbergraph_BP_FluidImplementation) == 0x000008, "Wrong alignment on BP_FluidImplementation_C_ExecuteUbergraph_BP_FluidImplementation");
static_assert(sizeof(BP_FluidImplementation_C_ExecuteUbergraph_BP_FluidImplementation) == 0x000158, "Wrong size on BP_FluidImplementation_C_ExecuteUbergraph_BP_FluidImplementation");
static_assert(offsetof(BP_FluidImplementation_C_ExecuteUbergraph_BP_FluidImplementation, EntryPoint) == 0x000000, "Member 'BP_FluidImplementation_C_ExecuteUbergraph_BP_FluidImplementation::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_FluidImplementation_C_ExecuteUbergraph_BP_FluidImplementation, CallFunc_MakeLiteralFloat_ReturnValue) == 0x000004, "Member 'BP_FluidImplementation_C_ExecuteUbergraph_BP_FluidImplementation::CallFunc_MakeLiteralFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluidImplementation_C_ExecuteUbergraph_BP_FluidImplementation, Temp_float_Variable) == 0x000008, "Member 'BP_FluidImplementation_C_ExecuteUbergraph_BP_FluidImplementation::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(BP_FluidImplementation_C_ExecuteUbergraph_BP_FluidImplementation, Temp_float_Variable_1) == 0x00000C, "Member 'BP_FluidImplementation_C_ExecuteUbergraph_BP_FluidImplementation::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_FluidImplementation_C_ExecuteUbergraph_BP_FluidImplementation, Temp_float_Variable_2) == 0x000010, "Member 'BP_FluidImplementation_C_ExecuteUbergraph_BP_FluidImplementation::Temp_float_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_FluidImplementation_C_ExecuteUbergraph_BP_FluidImplementation, Temp_float_Variable_3) == 0x000014, "Member 'BP_FluidImplementation_C_ExecuteUbergraph_BP_FluidImplementation::Temp_float_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_FluidImplementation_C_ExecuteUbergraph_BP_FluidImplementation, Temp_float_Variable_4) == 0x000018, "Member 'BP_FluidImplementation_C_ExecuteUbergraph_BP_FluidImplementation::Temp_float_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_FluidImplementation_C_ExecuteUbergraph_BP_FluidImplementation, Temp_float_Variable_5) == 0x00001C, "Member 'BP_FluidImplementation_C_ExecuteUbergraph_BP_FluidImplementation::Temp_float_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_FluidImplementation_C_ExecuteUbergraph_BP_FluidImplementation, Temp_float_Variable_6) == 0x000020, "Member 'BP_FluidImplementation_C_ExecuteUbergraph_BP_FluidImplementation::Temp_float_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_FluidImplementation_C_ExecuteUbergraph_BP_FluidImplementation, Temp_float_Variable_7) == 0x000024, "Member 'BP_FluidImplementation_C_ExecuteUbergraph_BP_FluidImplementation::Temp_float_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_FluidImplementation_C_ExecuteUbergraph_BP_FluidImplementation, Temp_float_Variable_8) == 0x000028, "Member 'BP_FluidImplementation_C_ExecuteUbergraph_BP_FluidImplementation::Temp_float_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_FluidImplementation_C_ExecuteUbergraph_BP_FluidImplementation, Temp_float_Variable_9) == 0x00002C, "Member 'BP_FluidImplementation_C_ExecuteUbergraph_BP_FluidImplementation::Temp_float_Variable_9' has a wrong offset!");
static_assert(offsetof(BP_FluidImplementation_C_ExecuteUbergraph_BP_FluidImplementation, Temp_float_Variable_10) == 0x000030, "Member 'BP_FluidImplementation_C_ExecuteUbergraph_BP_FluidImplementation::Temp_float_Variable_10' has a wrong offset!");
static_assert(offsetof(BP_FluidImplementation_C_ExecuteUbergraph_BP_FluidImplementation, Temp_float_Variable_11) == 0x000034, "Member 'BP_FluidImplementation_C_ExecuteUbergraph_BP_FluidImplementation::Temp_float_Variable_11' has a wrong offset!");
static_assert(offsetof(BP_FluidImplementation_C_ExecuteUbergraph_BP_FluidImplementation, Temp_float_Variable_12) == 0x000038, "Member 'BP_FluidImplementation_C_ExecuteUbergraph_BP_FluidImplementation::Temp_float_Variable_12' has a wrong offset!");
static_assert(offsetof(BP_FluidImplementation_C_ExecuteUbergraph_BP_FluidImplementation, Temp_bool_Variable) == 0x00003C, "Member 'BP_FluidImplementation_C_ExecuteUbergraph_BP_FluidImplementation::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_FluidImplementation_C_ExecuteUbergraph_BP_FluidImplementation, Temp_float_Variable_13) == 0x000040, "Member 'BP_FluidImplementation_C_ExecuteUbergraph_BP_FluidImplementation::Temp_float_Variable_13' has a wrong offset!");
static_assert(offsetof(BP_FluidImplementation_C_ExecuteUbergraph_BP_FluidImplementation, CallFunc_IsValid_ReturnValue) == 0x000044, "Member 'BP_FluidImplementation_C_ExecuteUbergraph_BP_FluidImplementation::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluidImplementation_C_ExecuteUbergraph_BP_FluidImplementation, Temp_int_Array_Index_Variable) == 0x000048, "Member 'BP_FluidImplementation_C_ExecuteUbergraph_BP_FluidImplementation::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_FluidImplementation_C_ExecuteUbergraph_BP_FluidImplementation, Temp_int_Loop_Counter_Variable) == 0x00004C, "Member 'BP_FluidImplementation_C_ExecuteUbergraph_BP_FluidImplementation::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_FluidImplementation_C_ExecuteUbergraph_BP_FluidImplementation, CallFunc_Add_IntInt_ReturnValue) == 0x000050, "Member 'BP_FluidImplementation_C_ExecuteUbergraph_BP_FluidImplementation::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluidImplementation_C_ExecuteUbergraph_BP_FluidImplementation, Temp_int_Array_Index_Variable_1) == 0x000054, "Member 'BP_FluidImplementation_C_ExecuteUbergraph_BP_FluidImplementation::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_FluidImplementation_C_ExecuteUbergraph_BP_FluidImplementation, K2Node_Event_DeltaSeconds) == 0x000058, "Member 'BP_FluidImplementation_C_ExecuteUbergraph_BP_FluidImplementation::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_FluidImplementation_C_ExecuteUbergraph_BP_FluidImplementation, CallFunc_GetOwner_ReturnValue) == 0x000060, "Member 'BP_FluidImplementation_C_ExecuteUbergraph_BP_FluidImplementation::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluidImplementation_C_ExecuteUbergraph_BP_FluidImplementation, CallFunc_IsValid_ReturnValue_1) == 0x000068, "Member 'BP_FluidImplementation_C_ExecuteUbergraph_BP_FluidImplementation::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FluidImplementation_C_ExecuteUbergraph_BP_FluidImplementation, CallFunc_WasRecentlyRendered_ReturnValue) == 0x000069, "Member 'BP_FluidImplementation_C_ExecuteUbergraph_BP_FluidImplementation::CallFunc_WasRecentlyRendered_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluidImplementation_C_ExecuteUbergraph_BP_FluidImplementation, CallFunc_GetVelocity_ReturnValue) == 0x00006C, "Member 'BP_FluidImplementation_C_ExecuteUbergraph_BP_FluidImplementation::CallFunc_GetVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluidImplementation_C_ExecuteUbergraph_BP_FluidImplementation, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000078, "Member 'BP_FluidImplementation_C_ExecuteUbergraph_BP_FluidImplementation::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluidImplementation_C_ExecuteUbergraph_BP_FluidImplementation, CallFunc_VSize_ReturnValue) == 0x000084, "Member 'BP_FluidImplementation_C_ExecuteUbergraph_BP_FluidImplementation::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluidImplementation_C_ExecuteUbergraph_BP_FluidImplementation, CallFunc_FluidTrace_Valid) == 0x000088, "Member 'BP_FluidImplementation_C_ExecuteUbergraph_BP_FluidImplementation::CallFunc_FluidTrace_Valid' has a wrong offset!");
static_assert(offsetof(BP_FluidImplementation_C_ExecuteUbergraph_BP_FluidImplementation, CallFunc_FluidTrace_Surface_Type) == 0x000089, "Member 'BP_FluidImplementation_C_ExecuteUbergraph_BP_FluidImplementation::CallFunc_FluidTrace_Surface_Type' has a wrong offset!");
static_assert(offsetof(BP_FluidImplementation_C_ExecuteUbergraph_BP_FluidImplementation, CallFunc_Abs_ReturnValue) == 0x00008C, "Member 'BP_FluidImplementation_C_ExecuteUbergraph_BP_FluidImplementation::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluidImplementation_C_ExecuteUbergraph_BP_FluidImplementation, CallFunc_MapRangeClamped_ReturnValue) == 0x000090, "Member 'BP_FluidImplementation_C_ExecuteUbergraph_BP_FluidImplementation::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluidImplementation_C_ExecuteUbergraph_BP_FluidImplementation, CallFunc_Less_FloatFloat_ReturnValue) == 0x000094, "Member 'BP_FluidImplementation_C_ExecuteUbergraph_BP_FluidImplementation::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluidImplementation_C_ExecuteUbergraph_BP_FluidImplementation, CallFunc_GetPlayerCameraManager_ReturnValue) == 0x000098, "Member 'BP_FluidImplementation_C_ExecuteUbergraph_BP_FluidImplementation::CallFunc_GetPlayerCameraManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluidImplementation_C_ExecuteUbergraph_BP_FluidImplementation, CallFunc_IsValid_ReturnValue_2) == 0x0000A0, "Member 'BP_FluidImplementation_C_ExecuteUbergraph_BP_FluidImplementation::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_FluidImplementation_C_ExecuteUbergraph_BP_FluidImplementation, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x0000A4, "Member 'BP_FluidImplementation_C_ExecuteUbergraph_BP_FluidImplementation::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FluidImplementation_C_ExecuteUbergraph_BP_FluidImplementation, CallFunc_IsValid_ReturnValue_3) == 0x0000B0, "Member 'BP_FluidImplementation_C_ExecuteUbergraph_BP_FluidImplementation::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_FluidImplementation_C_ExecuteUbergraph_BP_FluidImplementation, CallFunc_DistanceCheck_Distance) == 0x0000B4, "Member 'BP_FluidImplementation_C_ExecuteUbergraph_BP_FluidImplementation::CallFunc_DistanceCheck_Distance' has a wrong offset!");
static_assert(offsetof(BP_FluidImplementation_C_ExecuteUbergraph_BP_FluidImplementation, CallFunc_DistanceCheck_OutOfRadius) == 0x0000B8, "Member 'BP_FluidImplementation_C_ExecuteUbergraph_BP_FluidImplementation::CallFunc_DistanceCheck_OutOfRadius' has a wrong offset!");
static_assert(offsetof(BP_FluidImplementation_C_ExecuteUbergraph_BP_FluidImplementation, CallFunc_Array_Get_Item) == 0x0000C0, "Member 'BP_FluidImplementation_C_ExecuteUbergraph_BP_FluidImplementation::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_FluidImplementation_C_ExecuteUbergraph_BP_FluidImplementation, CallFunc_Not_PreBool_ReturnValue) == 0x0000C8, "Member 'BP_FluidImplementation_C_ExecuteUbergraph_BP_FluidImplementation::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluidImplementation_C_ExecuteUbergraph_BP_FluidImplementation, CallFunc_IsValid_ReturnValue_4) == 0x0000C9, "Member 'BP_FluidImplementation_C_ExecuteUbergraph_BP_FluidImplementation::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_FluidImplementation_C_ExecuteUbergraph_BP_FluidImplementation, CallFunc_Array_Length_ReturnValue) == 0x0000CC, "Member 'BP_FluidImplementation_C_ExecuteUbergraph_BP_FluidImplementation::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluidImplementation_C_ExecuteUbergraph_BP_FluidImplementation, CallFunc_GetOwner_ReturnValue_1) == 0x0000D0, "Member 'BP_FluidImplementation_C_ExecuteUbergraph_BP_FluidImplementation::CallFunc_GetOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FluidImplementation_C_ExecuteUbergraph_BP_FluidImplementation, CallFunc_Array_Length_ReturnValue_1) == 0x0000D8, "Member 'BP_FluidImplementation_C_ExecuteUbergraph_BP_FluidImplementation::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FluidImplementation_C_ExecuteUbergraph_BP_FluidImplementation, CallFunc_IsValid_ReturnValue_5) == 0x0000DC, "Member 'BP_FluidImplementation_C_ExecuteUbergraph_BP_FluidImplementation::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_FluidImplementation_C_ExecuteUbergraph_BP_FluidImplementation, CallFunc_Greater_IntInt_ReturnValue) == 0x0000DD, "Member 'BP_FluidImplementation_C_ExecuteUbergraph_BP_FluidImplementation::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluidImplementation_C_ExecuteUbergraph_BP_FluidImplementation, CallFunc_GetComponentsByTag_ReturnValue) == 0x0000E0, "Member 'BP_FluidImplementation_C_ExecuteUbergraph_BP_FluidImplementation::CallFunc_GetComponentsByTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluidImplementation_C_ExecuteUbergraph_BP_FluidImplementation, CallFunc_Greater_FloatFloat_ReturnValue) == 0x0000F0, "Member 'BP_FluidImplementation_C_ExecuteUbergraph_BP_FluidImplementation::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluidImplementation_C_ExecuteUbergraph_BP_FluidImplementation, CallFunc_BooleanAND_ReturnValue) == 0x0000F1, "Member 'BP_FluidImplementation_C_ExecuteUbergraph_BP_FluidImplementation::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluidImplementation_C_ExecuteUbergraph_BP_FluidImplementation, Temp_float_Variable_14) == 0x0000F4, "Member 'BP_FluidImplementation_C_ExecuteUbergraph_BP_FluidImplementation::Temp_float_Variable_14' has a wrong offset!");
static_assert(offsetof(BP_FluidImplementation_C_ExecuteUbergraph_BP_FluidImplementation, Temp_float_Variable_15) == 0x0000F8, "Member 'BP_FluidImplementation_C_ExecuteUbergraph_BP_FluidImplementation::Temp_float_Variable_15' has a wrong offset!");
static_assert(offsetof(BP_FluidImplementation_C_ExecuteUbergraph_BP_FluidImplementation, Temp_byte_Variable) == 0x0000FC, "Member 'BP_FluidImplementation_C_ExecuteUbergraph_BP_FluidImplementation::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_FluidImplementation_C_ExecuteUbergraph_BP_FluidImplementation, Temp_int_Loop_Counter_Variable_1) == 0x000100, "Member 'BP_FluidImplementation_C_ExecuteUbergraph_BP_FluidImplementation::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_FluidImplementation_C_ExecuteUbergraph_BP_FluidImplementation, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000108, "Member 'BP_FluidImplementation_C_ExecuteUbergraph_BP_FluidImplementation::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluidImplementation_C_ExecuteUbergraph_BP_FluidImplementation, CallFunc_Less_IntInt_ReturnValue) == 0x000110, "Member 'BP_FluidImplementation_C_ExecuteUbergraph_BP_FluidImplementation::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluidImplementation_C_ExecuteUbergraph_BP_FluidImplementation, CallFunc_Add_IntInt_ReturnValue_1) == 0x000114, "Member 'BP_FluidImplementation_C_ExecuteUbergraph_BP_FluidImplementation::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FluidImplementation_C_ExecuteUbergraph_BP_FluidImplementation, CallFunc_Array_Get_Item_1) == 0x000118, "Member 'BP_FluidImplementation_C_ExecuteUbergraph_BP_FluidImplementation::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_FluidImplementation_C_ExecuteUbergraph_BP_FluidImplementation, CallFunc_Array_Length_ReturnValue_2) == 0x000120, "Member 'BP_FluidImplementation_C_ExecuteUbergraph_BP_FluidImplementation::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_FluidImplementation_C_ExecuteUbergraph_BP_FluidImplementation, CallFunc_Less_IntInt_ReturnValue_1) == 0x000124, "Member 'BP_FluidImplementation_C_ExecuteUbergraph_BP_FluidImplementation::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FluidImplementation_C_ExecuteUbergraph_BP_FluidImplementation, CallFunc_Array_Get_Item_2) == 0x000128, "Member 'BP_FluidImplementation_C_ExecuteUbergraph_BP_FluidImplementation::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_FluidImplementation_C_ExecuteUbergraph_BP_FluidImplementation, CallFunc_Array_Length_ReturnValue_3) == 0x00012C, "Member 'BP_FluidImplementation_C_ExecuteUbergraph_BP_FluidImplementation::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_FluidImplementation_C_ExecuteUbergraph_BP_FluidImplementation, CallFunc_Less_IntInt_ReturnValue_2) == 0x000130, "Member 'BP_FluidImplementation_C_ExecuteUbergraph_BP_FluidImplementation::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_FluidImplementation_C_ExecuteUbergraph_BP_FluidImplementation, Temp_float_Variable_16) == 0x000134, "Member 'BP_FluidImplementation_C_ExecuteUbergraph_BP_FluidImplementation::Temp_float_Variable_16' has a wrong offset!");
static_assert(offsetof(BP_FluidImplementation_C_ExecuteUbergraph_BP_FluidImplementation, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000138, "Member 'BP_FluidImplementation_C_ExecuteUbergraph_BP_FluidImplementation::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluidImplementation_C_ExecuteUbergraph_BP_FluidImplementation, CallFunc_MakeLiteralFloat_ReturnValue_1) == 0x00013C, "Member 'BP_FluidImplementation_C_ExecuteUbergraph_BP_FluidImplementation::CallFunc_MakeLiteralFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FluidImplementation_C_ExecuteUbergraph_BP_FluidImplementation, K2Node_Select_Default) == 0x000140, "Member 'BP_FluidImplementation_C_ExecuteUbergraph_BP_FluidImplementation::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_FluidImplementation_C_ExecuteUbergraph_BP_FluidImplementation, CallFunc_MakeLiteralFloat_ReturnValue_2) == 0x000144, "Member 'BP_FluidImplementation_C_ExecuteUbergraph_BP_FluidImplementation::CallFunc_MakeLiteralFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_FluidImplementation_C_ExecuteUbergraph_BP_FluidImplementation, K2Node_Select_Default_1) == 0x000148, "Member 'BP_FluidImplementation_C_ExecuteUbergraph_BP_FluidImplementation::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_FluidImplementation_C_ExecuteUbergraph_BP_FluidImplementation, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00014C, "Member 'BP_FluidImplementation_C_ExecuteUbergraph_BP_FluidImplementation::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluidImplementation_C_ExecuteUbergraph_BP_FluidImplementation, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000150, "Member 'BP_FluidImplementation_C_ExecuteUbergraph_BP_FluidImplementation::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");

// Function BP_FluidImplementation.BP_FluidImplementation_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_FluidImplementation_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FluidImplementation_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_FluidImplementation_C_ReceiveTick");
static_assert(sizeof(BP_FluidImplementation_C_ReceiveTick) == 0x000004, "Wrong size on BP_FluidImplementation_C_ReceiveTick");
static_assert(offsetof(BP_FluidImplementation_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_FluidImplementation_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_FluidImplementation.BP_FluidImplementation_C.FluidTrace
// 0x01A0 (0x01A0 - 0x0000)
struct BP_FluidImplementation_C_FluidTrace final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Valid;                                             // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	EPhysicalSurface                              Surface_Type;                                      // 0x000D(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDrawDebugTrace                               Temp_byte_Variable;                                // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDrawDebugTrace                               Temp_byte_Variable_1;                              // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0010(0x0010)(ConstParm, ReferenceParm)
	bool                                          Temp_bool_Variable;                                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22[0x6];                                       // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetGameTimeSinceCreation_ReturnValue;     // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MultiplyByPi_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Sin_ReturnValue;                          // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDrawDebugTrace                               K2Node_Select_Default;                             // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x004C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0058(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0064(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0070(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Select_Default_1;                           // 0x007C(0x000C)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x0088(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0111(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0112(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_113[0x1];                                      // 0x0113(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x011C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0128(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0134(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0140(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14C[0x4];                                      // 0x014C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0160(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x0174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x017C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0188(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0194(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ComponentHasTag_ReturnValue;              // 0x0195(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ActorHasTag_ReturnValue;                  // 0x0196(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0197(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_FluidImplementation_C_FluidTrace) == 0x000008, "Wrong alignment on BP_FluidImplementation_C_FluidTrace");
static_assert(sizeof(BP_FluidImplementation_C_FluidTrace) == 0x0001A0, "Wrong size on BP_FluidImplementation_C_FluidTrace");
static_assert(offsetof(BP_FluidImplementation_C_FluidTrace, Location) == 0x000000, "Member 'BP_FluidImplementation_C_FluidTrace::Location' has a wrong offset!");
static_assert(offsetof(BP_FluidImplementation_C_FluidTrace, Valid) == 0x00000C, "Member 'BP_FluidImplementation_C_FluidTrace::Valid' has a wrong offset!");
static_assert(offsetof(BP_FluidImplementation_C_FluidTrace, Surface_Type) == 0x00000D, "Member 'BP_FluidImplementation_C_FluidTrace::Surface_Type' has a wrong offset!");
static_assert(offsetof(BP_FluidImplementation_C_FluidTrace, Temp_byte_Variable) == 0x00000E, "Member 'BP_FluidImplementation_C_FluidTrace::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_FluidImplementation_C_FluidTrace, Temp_byte_Variable_1) == 0x00000F, "Member 'BP_FluidImplementation_C_FluidTrace::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_FluidImplementation_C_FluidTrace, Temp_object_Variable) == 0x000010, "Member 'BP_FluidImplementation_C_FluidTrace::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_FluidImplementation_C_FluidTrace, Temp_bool_Variable) == 0x000020, "Member 'BP_FluidImplementation_C_FluidTrace::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_FluidImplementation_C_FluidTrace, Temp_bool_Variable_1) == 0x000021, "Member 'BP_FluidImplementation_C_FluidTrace::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_FluidImplementation_C_FluidTrace, CallFunc_GetOwner_ReturnValue) == 0x000028, "Member 'BP_FluidImplementation_C_FluidTrace::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluidImplementation_C_FluidTrace, CallFunc_GetGameTimeSinceCreation_ReturnValue) == 0x000030, "Member 'BP_FluidImplementation_C_FluidTrace::CallFunc_GetGameTimeSinceCreation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluidImplementation_C_FluidTrace, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000034, "Member 'BP_FluidImplementation_C_FluidTrace::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluidImplementation_C_FluidTrace, CallFunc_MultiplyByPi_ReturnValue) == 0x000038, "Member 'BP_FluidImplementation_C_FluidTrace::CallFunc_MultiplyByPi_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluidImplementation_C_FluidTrace, CallFunc_Sin_ReturnValue) == 0x00003C, "Member 'BP_FluidImplementation_C_FluidTrace::CallFunc_Sin_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluidImplementation_C_FluidTrace, K2Node_Select_Default) == 0x000040, "Member 'BP_FluidImplementation_C_FluidTrace::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_FluidImplementation_C_FluidTrace, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000044, "Member 'BP_FluidImplementation_C_FluidTrace::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FluidImplementation_C_FluidTrace, CallFunc_Add_FloatFloat_ReturnValue) == 0x000048, "Member 'BP_FluidImplementation_C_FluidTrace::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluidImplementation_C_FluidTrace, CallFunc_MakeVector_ReturnValue) == 0x00004C, "Member 'BP_FluidImplementation_C_FluidTrace::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluidImplementation_C_FluidTrace, CallFunc_MakeVector_ReturnValue_1) == 0x000058, "Member 'BP_FluidImplementation_C_FluidTrace::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FluidImplementation_C_FluidTrace, CallFunc_Add_VectorVector_ReturnValue) == 0x000064, "Member 'BP_FluidImplementation_C_FluidTrace::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluidImplementation_C_FluidTrace, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000070, "Member 'BP_FluidImplementation_C_FluidTrace::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FluidImplementation_C_FluidTrace, K2Node_Select_Default_1) == 0x00007C, "Member 'BP_FluidImplementation_C_FluidTrace::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_FluidImplementation_C_FluidTrace, CallFunc_LineTraceSingle_OutHit) == 0x000088, "Member 'BP_FluidImplementation_C_FluidTrace::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(BP_FluidImplementation_C_FluidTrace, CallFunc_LineTraceSingle_ReturnValue) == 0x000110, "Member 'BP_FluidImplementation_C_FluidTrace::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluidImplementation_C_FluidTrace, CallFunc_BreakHitResult_bBlockingHit) == 0x000111, "Member 'BP_FluidImplementation_C_FluidTrace::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_FluidImplementation_C_FluidTrace, CallFunc_BreakHitResult_bInitialOverlap) == 0x000112, "Member 'BP_FluidImplementation_C_FluidTrace::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_FluidImplementation_C_FluidTrace, CallFunc_BreakHitResult_Time) == 0x000114, "Member 'BP_FluidImplementation_C_FluidTrace::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_FluidImplementation_C_FluidTrace, CallFunc_BreakHitResult_Distance) == 0x000118, "Member 'BP_FluidImplementation_C_FluidTrace::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_FluidImplementation_C_FluidTrace, CallFunc_BreakHitResult_Location) == 0x00011C, "Member 'BP_FluidImplementation_C_FluidTrace::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_FluidImplementation_C_FluidTrace, CallFunc_BreakHitResult_ImpactPoint) == 0x000128, "Member 'BP_FluidImplementation_C_FluidTrace::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_FluidImplementation_C_FluidTrace, CallFunc_BreakHitResult_Normal) == 0x000134, "Member 'BP_FluidImplementation_C_FluidTrace::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_FluidImplementation_C_FluidTrace, CallFunc_BreakHitResult_ImpactNormal) == 0x000140, "Member 'BP_FluidImplementation_C_FluidTrace::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_FluidImplementation_C_FluidTrace, CallFunc_BreakHitResult_PhysMat) == 0x000150, "Member 'BP_FluidImplementation_C_FluidTrace::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_FluidImplementation_C_FluidTrace, CallFunc_BreakHitResult_HitActor) == 0x000158, "Member 'BP_FluidImplementation_C_FluidTrace::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_FluidImplementation_C_FluidTrace, CallFunc_BreakHitResult_HitComponent) == 0x000160, "Member 'BP_FluidImplementation_C_FluidTrace::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_FluidImplementation_C_FluidTrace, CallFunc_BreakHitResult_HitBoneName) == 0x000168, "Member 'BP_FluidImplementation_C_FluidTrace::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_FluidImplementation_C_FluidTrace, CallFunc_BreakHitResult_HitItem) == 0x000170, "Member 'BP_FluidImplementation_C_FluidTrace::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_FluidImplementation_C_FluidTrace, CallFunc_BreakHitResult_ElementIndex) == 0x000174, "Member 'BP_FluidImplementation_C_FluidTrace::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BP_FluidImplementation_C_FluidTrace, CallFunc_BreakHitResult_FaceIndex) == 0x000178, "Member 'BP_FluidImplementation_C_FluidTrace::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_FluidImplementation_C_FluidTrace, CallFunc_BreakHitResult_TraceStart) == 0x00017C, "Member 'BP_FluidImplementation_C_FluidTrace::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_FluidImplementation_C_FluidTrace, CallFunc_BreakHitResult_TraceEnd) == 0x000188, "Member 'BP_FluidImplementation_C_FluidTrace::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_FluidImplementation_C_FluidTrace, CallFunc_BooleanAND_ReturnValue) == 0x000194, "Member 'BP_FluidImplementation_C_FluidTrace::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluidImplementation_C_FluidTrace, CallFunc_ComponentHasTag_ReturnValue) == 0x000195, "Member 'BP_FluidImplementation_C_FluidTrace::CallFunc_ComponentHasTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluidImplementation_C_FluidTrace, CallFunc_ActorHasTag_ReturnValue) == 0x000196, "Member 'BP_FluidImplementation_C_FluidTrace::CallFunc_ActorHasTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluidImplementation_C_FluidTrace, CallFunc_IsValid_ReturnValue) == 0x000197, "Member 'BP_FluidImplementation_C_FluidTrace::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluidImplementation_C_FluidTrace, CallFunc_BooleanOR_ReturnValue) == 0x000198, "Member 'BP_FluidImplementation_C_FluidTrace::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function BP_FluidImplementation.BP_FluidImplementation_C.FindFluidController
// 0x0030 (0x0030 - 0x0000)
struct BP_FluidImplementation_C_FindFluidController final
{
public:
	class ULObjectManagementSystem*               CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EExecutePin                                   CallFunc_GetFluidController_Branches;              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetFluidController_ReturnValue;           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_FluidController_C*                  K2Node_DynamicCast_AsBP_Fluid_Controller;          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_FluidImplementation_C_FindFluidController) == 0x000008, "Wrong alignment on BP_FluidImplementation_C_FindFluidController");
static_assert(sizeof(BP_FluidImplementation_C_FindFluidController) == 0x000030, "Wrong size on BP_FluidImplementation_C_FindFluidController");
static_assert(offsetof(BP_FluidImplementation_C_FindFluidController, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000000, "Member 'BP_FluidImplementation_C_FindFluidController::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluidImplementation_C_FindFluidController, CallFunc_GetFluidController_Branches) == 0x000008, "Member 'BP_FluidImplementation_C_FindFluidController::CallFunc_GetFluidController_Branches' has a wrong offset!");
static_assert(offsetof(BP_FluidImplementation_C_FindFluidController, CallFunc_GetFluidController_ReturnValue) == 0x000010, "Member 'BP_FluidImplementation_C_FindFluidController::CallFunc_GetFluidController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluidImplementation_C_FindFluidController, K2Node_SwitchEnum_CmpSuccess) == 0x000018, "Member 'BP_FluidImplementation_C_FindFluidController::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_FluidImplementation_C_FindFluidController, CallFunc_IsValid_ReturnValue) == 0x000019, "Member 'BP_FluidImplementation_C_FindFluidController::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluidImplementation_C_FindFluidController, K2Node_DynamicCast_AsBP_Fluid_Controller) == 0x000020, "Member 'BP_FluidImplementation_C_FindFluidController::K2Node_DynamicCast_AsBP_Fluid_Controller' has a wrong offset!");
static_assert(offsetof(BP_FluidImplementation_C_FindFluidController, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_FluidImplementation_C_FindFluidController::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_FluidImplementation.BP_FluidImplementation_C.PerBoneDraw
// 0x00C0 (0x00C0 - 0x0000)
struct BP_FluidImplementation_C_PerBoneDraw final
{
public:
	class FName                                   Bone_Name;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMeshComponent*                         Mesh_Component;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ZOffset;                                           // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable;                               // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoesSocketExist_ReturnValue;              // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetPhysicsLinearVelocity_ReturnValue;     // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue;            // 0x0038(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue;                          // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0048(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FluidTrace_Valid;                         // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPhysicalSurface                              CallFunc_FluidTrace_Surface_Type;                  // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A[0x2];                                       // 0x005A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable_1;                             // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_2;                             // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_3;                             // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_4;                             // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_5;                             // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_6;                             // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_7;                             // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_8;                             // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_9;                             // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_10;                            // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_11;                            // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_12;                            // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_13;                            // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_14;                            // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_15;                            // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99[0x3];                                       // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable_16;                            // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeLiteralFloat_ReturnValue;             // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeLiteralFloat_ReturnValue_1;           // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeLiteralFloat_ReturnValue_2;           // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPhysicalSurface                              Temp_byte_Variable;                                // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x00AD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_AE[0x2];                                       // 0x00AE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_1;                           // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FluidImplementation_C_PerBoneDraw) == 0x000008, "Wrong alignment on BP_FluidImplementation_C_PerBoneDraw");
static_assert(sizeof(BP_FluidImplementation_C_PerBoneDraw) == 0x0000C0, "Wrong size on BP_FluidImplementation_C_PerBoneDraw");
static_assert(offsetof(BP_FluidImplementation_C_PerBoneDraw, Bone_Name) == 0x000000, "Member 'BP_FluidImplementation_C_PerBoneDraw::Bone_Name' has a wrong offset!");
static_assert(offsetof(BP_FluidImplementation_C_PerBoneDraw, Mesh_Component) == 0x000008, "Member 'BP_FluidImplementation_C_PerBoneDraw::Mesh_Component' has a wrong offset!");
static_assert(offsetof(BP_FluidImplementation_C_PerBoneDraw, ZOffset) == 0x000010, "Member 'BP_FluidImplementation_C_PerBoneDraw::ZOffset' has a wrong offset!");
static_assert(offsetof(BP_FluidImplementation_C_PerBoneDraw, Temp_float_Variable) == 0x000014, "Member 'BP_FluidImplementation_C_PerBoneDraw::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(BP_FluidImplementation_C_PerBoneDraw, CallFunc_MakeVector_ReturnValue) == 0x000018, "Member 'BP_FluidImplementation_C_PerBoneDraw::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluidImplementation_C_PerBoneDraw, CallFunc_DoesSocketExist_ReturnValue) == 0x000024, "Member 'BP_FluidImplementation_C_PerBoneDraw::CallFunc_DoesSocketExist_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluidImplementation_C_PerBoneDraw, CallFunc_GetPhysicsLinearVelocity_ReturnValue) == 0x000028, "Member 'BP_FluidImplementation_C_PerBoneDraw::CallFunc_GetPhysicsLinearVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluidImplementation_C_PerBoneDraw, CallFunc_VSize_ReturnValue) == 0x000034, "Member 'BP_FluidImplementation_C_PerBoneDraw::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluidImplementation_C_PerBoneDraw, CallFunc_GetSocketLocation_ReturnValue) == 0x000038, "Member 'BP_FluidImplementation_C_PerBoneDraw::CallFunc_GetSocketLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluidImplementation_C_PerBoneDraw, CallFunc_Abs_ReturnValue) == 0x000044, "Member 'BP_FluidImplementation_C_PerBoneDraw::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluidImplementation_C_PerBoneDraw, CallFunc_Add_VectorVector_ReturnValue) == 0x000048, "Member 'BP_FluidImplementation_C_PerBoneDraw::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluidImplementation_C_PerBoneDraw, CallFunc_MapRangeClamped_ReturnValue) == 0x000054, "Member 'BP_FluidImplementation_C_PerBoneDraw::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluidImplementation_C_PerBoneDraw, CallFunc_FluidTrace_Valid) == 0x000058, "Member 'BP_FluidImplementation_C_PerBoneDraw::CallFunc_FluidTrace_Valid' has a wrong offset!");
static_assert(offsetof(BP_FluidImplementation_C_PerBoneDraw, CallFunc_FluidTrace_Surface_Type) == 0x000059, "Member 'BP_FluidImplementation_C_PerBoneDraw::CallFunc_FluidTrace_Surface_Type' has a wrong offset!");
static_assert(offsetof(BP_FluidImplementation_C_PerBoneDraw, Temp_float_Variable_1) == 0x00005C, "Member 'BP_FluidImplementation_C_PerBoneDraw::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_FluidImplementation_C_PerBoneDraw, Temp_float_Variable_2) == 0x000060, "Member 'BP_FluidImplementation_C_PerBoneDraw::Temp_float_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_FluidImplementation_C_PerBoneDraw, Temp_float_Variable_3) == 0x000064, "Member 'BP_FluidImplementation_C_PerBoneDraw::Temp_float_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_FluidImplementation_C_PerBoneDraw, Temp_float_Variable_4) == 0x000068, "Member 'BP_FluidImplementation_C_PerBoneDraw::Temp_float_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_FluidImplementation_C_PerBoneDraw, Temp_float_Variable_5) == 0x00006C, "Member 'BP_FluidImplementation_C_PerBoneDraw::Temp_float_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_FluidImplementation_C_PerBoneDraw, Temp_float_Variable_6) == 0x000070, "Member 'BP_FluidImplementation_C_PerBoneDraw::Temp_float_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_FluidImplementation_C_PerBoneDraw, Temp_float_Variable_7) == 0x000074, "Member 'BP_FluidImplementation_C_PerBoneDraw::Temp_float_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_FluidImplementation_C_PerBoneDraw, Temp_float_Variable_8) == 0x000078, "Member 'BP_FluidImplementation_C_PerBoneDraw::Temp_float_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_FluidImplementation_C_PerBoneDraw, Temp_float_Variable_9) == 0x00007C, "Member 'BP_FluidImplementation_C_PerBoneDraw::Temp_float_Variable_9' has a wrong offset!");
static_assert(offsetof(BP_FluidImplementation_C_PerBoneDraw, Temp_float_Variable_10) == 0x000080, "Member 'BP_FluidImplementation_C_PerBoneDraw::Temp_float_Variable_10' has a wrong offset!");
static_assert(offsetof(BP_FluidImplementation_C_PerBoneDraw, Temp_float_Variable_11) == 0x000084, "Member 'BP_FluidImplementation_C_PerBoneDraw::Temp_float_Variable_11' has a wrong offset!");
static_assert(offsetof(BP_FluidImplementation_C_PerBoneDraw, Temp_float_Variable_12) == 0x000088, "Member 'BP_FluidImplementation_C_PerBoneDraw::Temp_float_Variable_12' has a wrong offset!");
static_assert(offsetof(BP_FluidImplementation_C_PerBoneDraw, Temp_float_Variable_13) == 0x00008C, "Member 'BP_FluidImplementation_C_PerBoneDraw::Temp_float_Variable_13' has a wrong offset!");
static_assert(offsetof(BP_FluidImplementation_C_PerBoneDraw, Temp_float_Variable_14) == 0x000090, "Member 'BP_FluidImplementation_C_PerBoneDraw::Temp_float_Variable_14' has a wrong offset!");
static_assert(offsetof(BP_FluidImplementation_C_PerBoneDraw, Temp_float_Variable_15) == 0x000094, "Member 'BP_FluidImplementation_C_PerBoneDraw::Temp_float_Variable_15' has a wrong offset!");
static_assert(offsetof(BP_FluidImplementation_C_PerBoneDraw, Temp_bool_Variable) == 0x000098, "Member 'BP_FluidImplementation_C_PerBoneDraw::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_FluidImplementation_C_PerBoneDraw, Temp_float_Variable_16) == 0x00009C, "Member 'BP_FluidImplementation_C_PerBoneDraw::Temp_float_Variable_16' has a wrong offset!");
static_assert(offsetof(BP_FluidImplementation_C_PerBoneDraw, CallFunc_MakeLiteralFloat_ReturnValue) == 0x0000A0, "Member 'BP_FluidImplementation_C_PerBoneDraw::CallFunc_MakeLiteralFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluidImplementation_C_PerBoneDraw, CallFunc_MakeLiteralFloat_ReturnValue_1) == 0x0000A4, "Member 'BP_FluidImplementation_C_PerBoneDraw::CallFunc_MakeLiteralFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FluidImplementation_C_PerBoneDraw, CallFunc_MakeLiteralFloat_ReturnValue_2) == 0x0000A8, "Member 'BP_FluidImplementation_C_PerBoneDraw::CallFunc_MakeLiteralFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_FluidImplementation_C_PerBoneDraw, Temp_byte_Variable) == 0x0000AC, "Member 'BP_FluidImplementation_C_PerBoneDraw::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_FluidImplementation_C_PerBoneDraw, CallFunc_Greater_FloatFloat_ReturnValue) == 0x0000AD, "Member 'BP_FluidImplementation_C_PerBoneDraw::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluidImplementation_C_PerBoneDraw, K2Node_Select_Default) == 0x0000B0, "Member 'BP_FluidImplementation_C_PerBoneDraw::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_FluidImplementation_C_PerBoneDraw, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0000B4, "Member 'BP_FluidImplementation_C_PerBoneDraw::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluidImplementation_C_PerBoneDraw, CallFunc_Divide_FloatFloat_ReturnValue) == 0x0000B8, "Member 'BP_FluidImplementation_C_PerBoneDraw::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluidImplementation_C_PerBoneDraw, K2Node_Select_Default_1) == 0x0000BC, "Member 'BP_FluidImplementation_C_PerBoneDraw::K2Node_Select_Default_1' has a wrong offset!");

}


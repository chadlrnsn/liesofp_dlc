#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AutomationController

#include "Basic.hpp"

#include "AutomationController_structs.hpp"
#include "CoreUObject_classes.hpp"


namespace SDK
{

// Class AutomationController.AutomationControllerSettings
// 0x0020 (0x0048 - 0x0028)
class UAutomationControllerSettings final : public UObject
{
public:
	TArray<struct FAutomatedTestGroup>            Groups;                                            // 0x0028(0x0010)(ZeroConstructor, Config, NativeAccessSpecifierPublic)
	bool                                          bSuppressLogErrors;                                // 0x0038(0x0001)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bSuppressLogWarnings;                              // 0x0039(0x0001)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bTreatLogWarningsAsTestErrors;                     // 0x003A(0x0001)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3B[0x1];                                       // 0x003B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CheckTestIntervalSeconds;                          // 0x003C(0x0004)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         GameInstanceLostTimerSeconds;                      // 0x0040(0x0004)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"AutomationControllerSettings">();
	}
	static class UAutomationControllerSettings* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAutomationControllerSettings>();
	}
};
static_assert(alignof(UAutomationControllerSettings) == 0x000008, "Wrong alignment on UAutomationControllerSettings");
static_assert(sizeof(UAutomationControllerSettings) == 0x000048, "Wrong size on UAutomationControllerSettings");
static_assert(offsetof(UAutomationControllerSettings, Groups) == 0x000028, "Member 'UAutomationControllerSettings::Groups' has a wrong offset!");
static_assert(offsetof(UAutomationControllerSettings, bSuppressLogErrors) == 0x000038, "Member 'UAutomationControllerSettings::bSuppressLogErrors' has a wrong offset!");
static_assert(offsetof(UAutomationControllerSettings, bSuppressLogWarnings) == 0x000039, "Member 'UAutomationControllerSettings::bSuppressLogWarnings' has a wrong offset!");
static_assert(offsetof(UAutomationControllerSettings, bTreatLogWarningsAsTestErrors) == 0x00003A, "Member 'UAutomationControllerSettings::bTreatLogWarningsAsTestErrors' has a wrong offset!");
static_assert(offsetof(UAutomationControllerSettings, CheckTestIntervalSeconds) == 0x00003C, "Member 'UAutomationControllerSettings::CheckTestIntervalSeconds' has a wrong offset!");
static_assert(offsetof(UAutomationControllerSettings, GameInstanceLostTimerSeconds) == 0x000040, "Member 'UAutomationControllerSettings::GameInstanceLostTimerSeconds' has a wrong offset!");

}


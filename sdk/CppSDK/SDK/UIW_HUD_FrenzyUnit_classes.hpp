#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UIW_HUD_FrenzyUnit

#include "Basic.hpp"

#include "ProjectP_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass UIW_HUD_FrenzyUnit.UIW_HUD_FrenzyUnit_C
// 0x0028 (0x02D0 - 0x02A8)
class UUIW_HUD_FrenzyUnit_C final : public ULWidget
{
public:
	class UWidgetAnimation*                       Ani_Effect;                                        // 0x02A8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 Active;                                            // 0x02B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Frame;                                             // 0x02B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Inactive;                                          // 0x02C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Use;                                               // 0x02C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	void SetActive(bool IsActive);
	void SetUse(bool IsUse);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"UIW_HUD_FrenzyUnit_C">();
	}
	static class UUIW_HUD_FrenzyUnit_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUIW_HUD_FrenzyUnit_C>();
	}
};
static_assert(alignof(UUIW_HUD_FrenzyUnit_C) == 0x000008, "Wrong alignment on UUIW_HUD_FrenzyUnit_C");
static_assert(sizeof(UUIW_HUD_FrenzyUnit_C) == 0x0002D0, "Wrong size on UUIW_HUD_FrenzyUnit_C");
static_assert(offsetof(UUIW_HUD_FrenzyUnit_C, Ani_Effect) == 0x0002A8, "Member 'UUIW_HUD_FrenzyUnit_C::Ani_Effect' has a wrong offset!");
static_assert(offsetof(UUIW_HUD_FrenzyUnit_C, Active) == 0x0002B0, "Member 'UUIW_HUD_FrenzyUnit_C::Active' has a wrong offset!");
static_assert(offsetof(UUIW_HUD_FrenzyUnit_C, Frame) == 0x0002B8, "Member 'UUIW_HUD_FrenzyUnit_C::Frame' has a wrong offset!");
static_assert(offsetof(UUIW_HUD_FrenzyUnit_C, Inactive) == 0x0002C0, "Member 'UUIW_HUD_FrenzyUnit_C::Inactive' has a wrong offset!");
static_assert(offsetof(UUIW_HUD_FrenzyUnit_C, Use) == 0x0002C8, "Member 'UUIW_HUD_FrenzyUnit_C::Use' has a wrong offset!");

}


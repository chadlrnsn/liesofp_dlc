#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UIW_HeadTag

#include "Basic.hpp"

#include "UIST_Time_structs.hpp"
#include "ProjectPContentInfo_structs.hpp"
#include "UIST_AbnormalVisible_structs.hpp"
#include "ProjectP_structs.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"
#include "UIST_Color_structs.hpp"


namespace SDK::Params
{

// Function UIW_HeadTag.UIW_HeadTag_C.ExecuteUbergraph_UIW_HeadTag
// 0x01A8 (0x01A8 - 0x0000)
struct UIW_HeadTag_C_ExecuteUbergraph_UIW_HeadTag final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0008(0x0028)()
	struct FUIST_Time                             CallFunc_GetDataTableRowFromName_OutRow;           // 0x0030(0x0018)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_1;                    // 0x0050(0x0028)()
	class ALNPCCharacter*                         K2Node_DynamicCast_AsLNPCCharacter;                // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x3];                                       // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FUIST_Color                            CallFunc_GetDataTableRowFromName_OutRow_1;         // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_1;    // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89[0x3];                                       // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_Conv_ColorToLinearColor_ReturnValue;      // 0x008C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FUIST_Color                            CallFunc_GetDataTableRowFromName_OutRow_2;         // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_2;    // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_2;                    // 0x00A8(0x0028)()
	struct FLinearColor                           CallFunc_Conv_ColorToLinearColor_ReturnValue_1;    // 0x00D0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_3;                    // 0x00E0(0x0028)()
	class UUIW_Main_C*                            CallFunc_GetMainWidget_MainWidget;                 // 0x0108(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FUIST_Color                            CallFunc_GetDataTableRowFromName_OutRow_3;         // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_3;    // 0x0114(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0115(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsOpenedWidget_IsOpened;                  // 0x0116(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_117[0x1];                                      // 0x0117(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_IsOpenedWidget_UserWidget;                // 0x0118(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_IsOpenedWidget_WidgetArrayIndex;          // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_ColorToLinearColor_ReturnValue_2;    // 0x0124(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_134[0x4];                                      // 0x0134(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUIW_HUD_C*                             K2Node_DynamicCast_AsUIW_HUD;                      // 0x0138(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_141[0x7];                                      // 0x0141(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_4;                    // 0x0148(0x0028)()
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_171[0x3];                                      // 0x0171(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class FName CategoryName)>     K2Node_CreateDelegate_OutputDelegate;              // 0x0174(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0184(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_185[0x3];                                      // 0x0185(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue;                  // 0x0188(0x0008)(NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName AbnormalName, int64 AbnormalUniqueId, bool Visible)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x0190(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          K2Node_Event_InVisible;                            // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x01A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x01A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UIW_HeadTag_C_ExecuteUbergraph_UIW_HeadTag) == 0x000008, "Wrong alignment on UIW_HeadTag_C_ExecuteUbergraph_UIW_HeadTag");
static_assert(sizeof(UIW_HeadTag_C_ExecuteUbergraph_UIW_HeadTag) == 0x0001A8, "Wrong size on UIW_HeadTag_C_ExecuteUbergraph_UIW_HeadTag");
static_assert(offsetof(UIW_HeadTag_C_ExecuteUbergraph_UIW_HeadTag, EntryPoint) == 0x000000, "Member 'UIW_HeadTag_C_ExecuteUbergraph_UIW_HeadTag::EntryPoint' has a wrong offset!");
static_assert(offsetof(UIW_HeadTag_C_ExecuteUbergraph_UIW_HeadTag, K2Node_MakeStruct_SlateColor) == 0x000008, "Member 'UIW_HeadTag_C_ExecuteUbergraph_UIW_HeadTag::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(UIW_HeadTag_C_ExecuteUbergraph_UIW_HeadTag, CallFunc_GetDataTableRowFromName_OutRow) == 0x000030, "Member 'UIW_HeadTag_C_ExecuteUbergraph_UIW_HeadTag::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(UIW_HeadTag_C_ExecuteUbergraph_UIW_HeadTag, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000048, "Member 'UIW_HeadTag_C_ExecuteUbergraph_UIW_HeadTag::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_HeadTag_C_ExecuteUbergraph_UIW_HeadTag, K2Node_MakeStruct_SlateColor_1) == 0x000050, "Member 'UIW_HeadTag_C_ExecuteUbergraph_UIW_HeadTag::K2Node_MakeStruct_SlateColor_1' has a wrong offset!");
static_assert(offsetof(UIW_HeadTag_C_ExecuteUbergraph_UIW_HeadTag, K2Node_DynamicCast_AsLNPCCharacter) == 0x000078, "Member 'UIW_HeadTag_C_ExecuteUbergraph_UIW_HeadTag::K2Node_DynamicCast_AsLNPCCharacter' has a wrong offset!");
static_assert(offsetof(UIW_HeadTag_C_ExecuteUbergraph_UIW_HeadTag, K2Node_DynamicCast_bSuccess) == 0x000080, "Member 'UIW_HeadTag_C_ExecuteUbergraph_UIW_HeadTag::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(UIW_HeadTag_C_ExecuteUbergraph_UIW_HeadTag, CallFunc_GetDataTableRowFromName_OutRow_1) == 0x000084, "Member 'UIW_HeadTag_C_ExecuteUbergraph_UIW_HeadTag::CallFunc_GetDataTableRowFromName_OutRow_1' has a wrong offset!");
static_assert(offsetof(UIW_HeadTag_C_ExecuteUbergraph_UIW_HeadTag, CallFunc_GetDataTableRowFromName_ReturnValue_1) == 0x000088, "Member 'UIW_HeadTag_C_ExecuteUbergraph_UIW_HeadTag::CallFunc_GetDataTableRowFromName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UIW_HeadTag_C_ExecuteUbergraph_UIW_HeadTag, CallFunc_Conv_ColorToLinearColor_ReturnValue) == 0x00008C, "Member 'UIW_HeadTag_C_ExecuteUbergraph_UIW_HeadTag::CallFunc_Conv_ColorToLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_HeadTag_C_ExecuteUbergraph_UIW_HeadTag, CallFunc_GetDataTableRowFromName_OutRow_2) == 0x00009C, "Member 'UIW_HeadTag_C_ExecuteUbergraph_UIW_HeadTag::CallFunc_GetDataTableRowFromName_OutRow_2' has a wrong offset!");
static_assert(offsetof(UIW_HeadTag_C_ExecuteUbergraph_UIW_HeadTag, CallFunc_GetDataTableRowFromName_ReturnValue_2) == 0x0000A0, "Member 'UIW_HeadTag_C_ExecuteUbergraph_UIW_HeadTag::CallFunc_GetDataTableRowFromName_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UIW_HeadTag_C_ExecuteUbergraph_UIW_HeadTag, K2Node_MakeStruct_SlateColor_2) == 0x0000A8, "Member 'UIW_HeadTag_C_ExecuteUbergraph_UIW_HeadTag::K2Node_MakeStruct_SlateColor_2' has a wrong offset!");
static_assert(offsetof(UIW_HeadTag_C_ExecuteUbergraph_UIW_HeadTag, CallFunc_Conv_ColorToLinearColor_ReturnValue_1) == 0x0000D0, "Member 'UIW_HeadTag_C_ExecuteUbergraph_UIW_HeadTag::CallFunc_Conv_ColorToLinearColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UIW_HeadTag_C_ExecuteUbergraph_UIW_HeadTag, K2Node_MakeStruct_SlateColor_3) == 0x0000E0, "Member 'UIW_HeadTag_C_ExecuteUbergraph_UIW_HeadTag::K2Node_MakeStruct_SlateColor_3' has a wrong offset!");
static_assert(offsetof(UIW_HeadTag_C_ExecuteUbergraph_UIW_HeadTag, CallFunc_GetMainWidget_MainWidget) == 0x000108, "Member 'UIW_HeadTag_C_ExecuteUbergraph_UIW_HeadTag::CallFunc_GetMainWidget_MainWidget' has a wrong offset!");
static_assert(offsetof(UIW_HeadTag_C_ExecuteUbergraph_UIW_HeadTag, CallFunc_GetDataTableRowFromName_OutRow_3) == 0x000110, "Member 'UIW_HeadTag_C_ExecuteUbergraph_UIW_HeadTag::CallFunc_GetDataTableRowFromName_OutRow_3' has a wrong offset!");
static_assert(offsetof(UIW_HeadTag_C_ExecuteUbergraph_UIW_HeadTag, CallFunc_GetDataTableRowFromName_ReturnValue_3) == 0x000114, "Member 'UIW_HeadTag_C_ExecuteUbergraph_UIW_HeadTag::CallFunc_GetDataTableRowFromName_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(UIW_HeadTag_C_ExecuteUbergraph_UIW_HeadTag, CallFunc_IsValid_ReturnValue) == 0x000115, "Member 'UIW_HeadTag_C_ExecuteUbergraph_UIW_HeadTag::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_HeadTag_C_ExecuteUbergraph_UIW_HeadTag, CallFunc_IsOpenedWidget_IsOpened) == 0x000116, "Member 'UIW_HeadTag_C_ExecuteUbergraph_UIW_HeadTag::CallFunc_IsOpenedWidget_IsOpened' has a wrong offset!");
static_assert(offsetof(UIW_HeadTag_C_ExecuteUbergraph_UIW_HeadTag, CallFunc_IsOpenedWidget_UserWidget) == 0x000118, "Member 'UIW_HeadTag_C_ExecuteUbergraph_UIW_HeadTag::CallFunc_IsOpenedWidget_UserWidget' has a wrong offset!");
static_assert(offsetof(UIW_HeadTag_C_ExecuteUbergraph_UIW_HeadTag, CallFunc_IsOpenedWidget_WidgetArrayIndex) == 0x000120, "Member 'UIW_HeadTag_C_ExecuteUbergraph_UIW_HeadTag::CallFunc_IsOpenedWidget_WidgetArrayIndex' has a wrong offset!");
static_assert(offsetof(UIW_HeadTag_C_ExecuteUbergraph_UIW_HeadTag, CallFunc_Conv_ColorToLinearColor_ReturnValue_2) == 0x000124, "Member 'UIW_HeadTag_C_ExecuteUbergraph_UIW_HeadTag::CallFunc_Conv_ColorToLinearColor_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UIW_HeadTag_C_ExecuteUbergraph_UIW_HeadTag, K2Node_DynamicCast_AsUIW_HUD) == 0x000138, "Member 'UIW_HeadTag_C_ExecuteUbergraph_UIW_HeadTag::K2Node_DynamicCast_AsUIW_HUD' has a wrong offset!");
static_assert(offsetof(UIW_HeadTag_C_ExecuteUbergraph_UIW_HeadTag, K2Node_DynamicCast_bSuccess_1) == 0x000140, "Member 'UIW_HeadTag_C_ExecuteUbergraph_UIW_HeadTag::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(UIW_HeadTag_C_ExecuteUbergraph_UIW_HeadTag, K2Node_MakeStruct_SlateColor_4) == 0x000148, "Member 'UIW_HeadTag_C_ExecuteUbergraph_UIW_HeadTag::K2Node_MakeStruct_SlateColor_4' has a wrong offset!");
static_assert(offsetof(UIW_HeadTag_C_ExecuteUbergraph_UIW_HeadTag, CallFunc_IsValid_ReturnValue_1) == 0x000170, "Member 'UIW_HeadTag_C_ExecuteUbergraph_UIW_HeadTag::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UIW_HeadTag_C_ExecuteUbergraph_UIW_HeadTag, K2Node_CreateDelegate_OutputDelegate) == 0x000174, "Member 'UIW_HeadTag_C_ExecuteUbergraph_UIW_HeadTag::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(UIW_HeadTag_C_ExecuteUbergraph_UIW_HeadTag, K2Node_Event_IsDesignTime) == 0x000184, "Member 'UIW_HeadTag_C_ExecuteUbergraph_UIW_HeadTag::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(UIW_HeadTag_C_ExecuteUbergraph_UIW_HeadTag, CallFunc_K2_SetTimer_ReturnValue) == 0x000188, "Member 'UIW_HeadTag_C_ExecuteUbergraph_UIW_HeadTag::CallFunc_K2_SetTimer_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_HeadTag_C_ExecuteUbergraph_UIW_HeadTag, K2Node_CreateDelegate_OutputDelegate_1) == 0x000190, "Member 'UIW_HeadTag_C_ExecuteUbergraph_UIW_HeadTag::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(UIW_HeadTag_C_ExecuteUbergraph_UIW_HeadTag, K2Node_Event_InVisible) == 0x0001A0, "Member 'UIW_HeadTag_C_ExecuteUbergraph_UIW_HeadTag::K2Node_Event_InVisible' has a wrong offset!");
static_assert(offsetof(UIW_HeadTag_C_ExecuteUbergraph_UIW_HeadTag, CallFunc_BooleanOR_ReturnValue) == 0x0001A1, "Member 'UIW_HeadTag_C_ExecuteUbergraph_UIW_HeadTag::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_HeadTag_C_ExecuteUbergraph_UIW_HeadTag, CallFunc_BooleanOR_ReturnValue_1) == 0x0001A2, "Member 'UIW_HeadTag_C_ExecuteUbergraph_UIW_HeadTag::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");

// Function UIW_HeadTag.UIW_HeadTag_C.RefreshHeadTagVisibleTimer
// 0x0001 (0x0001 - 0x0000)
struct UIW_HeadTag_C_RefreshHeadTagVisibleTimer final
{
public:
	bool                                          InVisible;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UIW_HeadTag_C_RefreshHeadTagVisibleTimer) == 0x000001, "Wrong alignment on UIW_HeadTag_C_RefreshHeadTagVisibleTimer");
static_assert(sizeof(UIW_HeadTag_C_RefreshHeadTagVisibleTimer) == 0x000001, "Wrong size on UIW_HeadTag_C_RefreshHeadTagVisibleTimer");
static_assert(offsetof(UIW_HeadTag_C_RefreshHeadTagVisibleTimer, InVisible) == 0x000000, "Member 'UIW_HeadTag_C_RefreshHeadTagVisibleTimer::InVisible' has a wrong offset!");

// Function UIW_HeadTag.UIW_HeadTag_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct UIW_HeadTag_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UIW_HeadTag_C_PreConstruct) == 0x000001, "Wrong alignment on UIW_HeadTag_C_PreConstruct");
static_assert(sizeof(UIW_HeadTag_C_PreConstruct) == 0x000001, "Wrong size on UIW_HeadTag_C_PreConstruct");
static_assert(offsetof(UIW_HeadTag_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'UIW_HeadTag_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function UIW_HeadTag.UIW_HeadTag_C.SetOwnerNpc
// 0x0010 (0x0010 - 0x0000)
struct UIW_HeadTag_C_SetOwnerNpc final
{
public:
	class ALNPCCharacter*                         InNpc;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsValidInputData;                                  // 0x0008(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UIW_HeadTag_C_SetOwnerNpc) == 0x000008, "Wrong alignment on UIW_HeadTag_C_SetOwnerNpc");
static_assert(sizeof(UIW_HeadTag_C_SetOwnerNpc) == 0x000010, "Wrong size on UIW_HeadTag_C_SetOwnerNpc");
static_assert(offsetof(UIW_HeadTag_C_SetOwnerNpc, InNpc) == 0x000000, "Member 'UIW_HeadTag_C_SetOwnerNpc::InNpc' has a wrong offset!");
static_assert(offsetof(UIW_HeadTag_C_SetOwnerNpc, IsValidInputData) == 0x000008, "Member 'UIW_HeadTag_C_SetOwnerNpc::IsValidInputData' has a wrong offset!");

// Function UIW_HeadTag.UIW_HeadTag_C.CompleteTween
// 0x000C (0x000C - 0x0000)
struct UIW_HeadTag_C_CompleteTween final
{
public:
	class FName                                   CategoryName;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchName_CmpSuccess;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UIW_HeadTag_C_CompleteTween) == 0x000004, "Wrong alignment on UIW_HeadTag_C_CompleteTween");
static_assert(sizeof(UIW_HeadTag_C_CompleteTween) == 0x00000C, "Wrong size on UIW_HeadTag_C_CompleteTween");
static_assert(offsetof(UIW_HeadTag_C_CompleteTween, CategoryName) == 0x000000, "Member 'UIW_HeadTag_C_CompleteTween::CategoryName' has a wrong offset!");
static_assert(offsetof(UIW_HeadTag_C_CompleteTween, K2Node_SwitchName_CmpSuccess) == 0x000008, "Member 'UIW_HeadTag_C_CompleteTween::K2Node_SwitchName_CmpSuccess' has a wrong offset!");

// Function UIW_HeadTag.UIW_HeadTag_C.InitHeadTag
// 0x0018 (0x0018 - 0x0000)
struct UIW_HeadTag_C_InitHeadTag final
{
public:
	class ALNPCCharacter*                         K2Node_DynamicCast_AsLNPCCharacter;                // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetHPPercent_HPPercent;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetHPPercent_RegainHPPercent;             // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UIW_HeadTag_C_InitHeadTag) == 0x000008, "Wrong alignment on UIW_HeadTag_C_InitHeadTag");
static_assert(sizeof(UIW_HeadTag_C_InitHeadTag) == 0x000018, "Wrong size on UIW_HeadTag_C_InitHeadTag");
static_assert(offsetof(UIW_HeadTag_C_InitHeadTag, K2Node_DynamicCast_AsLNPCCharacter) == 0x000000, "Member 'UIW_HeadTag_C_InitHeadTag::K2Node_DynamicCast_AsLNPCCharacter' has a wrong offset!");
static_assert(offsetof(UIW_HeadTag_C_InitHeadTag, K2Node_DynamicCast_bSuccess) == 0x000008, "Member 'UIW_HeadTag_C_InitHeadTag::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(UIW_HeadTag_C_InitHeadTag, CallFunc_GetHPPercent_HPPercent) == 0x00000C, "Member 'UIW_HeadTag_C_InitHeadTag::CallFunc_GetHPPercent_HPPercent' has a wrong offset!");
static_assert(offsetof(UIW_HeadTag_C_InitHeadTag, CallFunc_GetHPPercent_RegainHPPercent) == 0x000010, "Member 'UIW_HeadTag_C_InitHeadTag::CallFunc_GetHPPercent_RegainHPPercent' has a wrong offset!");

// Function UIW_HeadTag.UIW_HeadTag_C.OwnerNpcDelegate
// 0x00B0 (0x00B0 - 0x0000)
struct UIW_HeadTag_C_OwnerNpcDelegate final
{
public:
	bool                                          Add;                                               // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ULLockOnSystem*                         CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ALNPCCharacter*                         K2Node_DynamicCast_AsLNPCCharacter;                // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(bool IsStarted)>               K2Node_CreateDelegate_OutputDelegate;              // 0x001C(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x002E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x002F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TDelegate<void(bool IsParalyzeEnable)>        K2Node_CreateDelegate_OutputDelegate_1;            // 0x0030(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(bool IsInCombatState)>         K2Node_CreateDelegate_OutputDelegate_2;            // 0x0040(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(bool bVisible)>                K2Node_CreateDelegate_OutputDelegate_3;            // 0x0050(0x0010)(ZeroConstructor, NoDestructor)
	class ALNPCCharacter*                         K2Node_DynamicCast_AsLNPCCharacter_1;              // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ALNPCCharacter*                         K2Node_DynamicCast_AsLNPCCharacter_2;              // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x3];                                       // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_4;            // 0x007C(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_5;            // 0x008C(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(int32 Value, ELElementDamageType ElementDamageType)> K2Node_CreateDelegate_OutputDelegate_6;            // 0x009C(0x0010)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(UIW_HeadTag_C_OwnerNpcDelegate) == 0x000008, "Wrong alignment on UIW_HeadTag_C_OwnerNpcDelegate");
static_assert(sizeof(UIW_HeadTag_C_OwnerNpcDelegate) == 0x0000B0, "Wrong size on UIW_HeadTag_C_OwnerNpcDelegate");
static_assert(offsetof(UIW_HeadTag_C_OwnerNpcDelegate, Add) == 0x000000, "Member 'UIW_HeadTag_C_OwnerNpcDelegate::Add' has a wrong offset!");
static_assert(offsetof(UIW_HeadTag_C_OwnerNpcDelegate, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000008, "Member 'UIW_HeadTag_C_OwnerNpcDelegate::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_HeadTag_C_OwnerNpcDelegate, K2Node_DynamicCast_AsLNPCCharacter) == 0x000010, "Member 'UIW_HeadTag_C_OwnerNpcDelegate::K2Node_DynamicCast_AsLNPCCharacter' has a wrong offset!");
static_assert(offsetof(UIW_HeadTag_C_OwnerNpcDelegate, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'UIW_HeadTag_C_OwnerNpcDelegate::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(UIW_HeadTag_C_OwnerNpcDelegate, K2Node_CreateDelegate_OutputDelegate) == 0x00001C, "Member 'UIW_HeadTag_C_OwnerNpcDelegate::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(UIW_HeadTag_C_OwnerNpcDelegate, CallFunc_IsValid_ReturnValue) == 0x00002C, "Member 'UIW_HeadTag_C_OwnerNpcDelegate::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_HeadTag_C_OwnerNpcDelegate, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00002D, "Member 'UIW_HeadTag_C_OwnerNpcDelegate::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_HeadTag_C_OwnerNpcDelegate, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x00002E, "Member 'UIW_HeadTag_C_OwnerNpcDelegate::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UIW_HeadTag_C_OwnerNpcDelegate, CallFunc_BooleanOR_ReturnValue) == 0x00002F, "Member 'UIW_HeadTag_C_OwnerNpcDelegate::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_HeadTag_C_OwnerNpcDelegate, K2Node_CreateDelegate_OutputDelegate_1) == 0x000030, "Member 'UIW_HeadTag_C_OwnerNpcDelegate::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(UIW_HeadTag_C_OwnerNpcDelegate, K2Node_CreateDelegate_OutputDelegate_2) == 0x000040, "Member 'UIW_HeadTag_C_OwnerNpcDelegate::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(UIW_HeadTag_C_OwnerNpcDelegate, K2Node_CreateDelegate_OutputDelegate_3) == 0x000050, "Member 'UIW_HeadTag_C_OwnerNpcDelegate::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(UIW_HeadTag_C_OwnerNpcDelegate, K2Node_DynamicCast_AsLNPCCharacter_1) == 0x000060, "Member 'UIW_HeadTag_C_OwnerNpcDelegate::K2Node_DynamicCast_AsLNPCCharacter_1' has a wrong offset!");
static_assert(offsetof(UIW_HeadTag_C_OwnerNpcDelegate, K2Node_DynamicCast_bSuccess_1) == 0x000068, "Member 'UIW_HeadTag_C_OwnerNpcDelegate::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(UIW_HeadTag_C_OwnerNpcDelegate, K2Node_DynamicCast_AsLNPCCharacter_2) == 0x000070, "Member 'UIW_HeadTag_C_OwnerNpcDelegate::K2Node_DynamicCast_AsLNPCCharacter_2' has a wrong offset!");
static_assert(offsetof(UIW_HeadTag_C_OwnerNpcDelegate, K2Node_DynamicCast_bSuccess_2) == 0x000078, "Member 'UIW_HeadTag_C_OwnerNpcDelegate::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(UIW_HeadTag_C_OwnerNpcDelegate, K2Node_CreateDelegate_OutputDelegate_4) == 0x00007C, "Member 'UIW_HeadTag_C_OwnerNpcDelegate::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(UIW_HeadTag_C_OwnerNpcDelegate, K2Node_CreateDelegate_OutputDelegate_5) == 0x00008C, "Member 'UIW_HeadTag_C_OwnerNpcDelegate::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(UIW_HeadTag_C_OwnerNpcDelegate, K2Node_CreateDelegate_OutputDelegate_6) == 0x00009C, "Member 'UIW_HeadTag_C_OwnerNpcDelegate::K2Node_CreateDelegate_OutputDelegate_6' has a wrong offset!");

// Function UIW_HeadTag.UIW_HeadTag_C.StartLockOn
// 0x0040 (0x0040 - 0x0000)
struct UIW_HeadTag_C_StartLockOn final
{
public:
	class ALNPCCharacter*                         K2Node_DynamicCast_AsLNPCCharacter;                // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ULLockOnSystem*                         CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsFocusTarget_ReturnValue;                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_BoolToString_ReturnValue;            // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(UIW_HeadTag_C_StartLockOn) == 0x000008, "Wrong alignment on UIW_HeadTag_C_StartLockOn");
static_assert(sizeof(UIW_HeadTag_C_StartLockOn) == 0x000040, "Wrong size on UIW_HeadTag_C_StartLockOn");
static_assert(offsetof(UIW_HeadTag_C_StartLockOn, K2Node_DynamicCast_AsLNPCCharacter) == 0x000000, "Member 'UIW_HeadTag_C_StartLockOn::K2Node_DynamicCast_AsLNPCCharacter' has a wrong offset!");
static_assert(offsetof(UIW_HeadTag_C_StartLockOn, K2Node_DynamicCast_bSuccess) == 0x000008, "Member 'UIW_HeadTag_C_StartLockOn::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(UIW_HeadTag_C_StartLockOn, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000010, "Member 'UIW_HeadTag_C_StartLockOn::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_HeadTag_C_StartLockOn, CallFunc_IsFocusTarget_ReturnValue) == 0x000018, "Member 'UIW_HeadTag_C_StartLockOn::CallFunc_IsFocusTarget_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_HeadTag_C_StartLockOn, CallFunc_Conv_BoolToString_ReturnValue) == 0x000020, "Member 'UIW_HeadTag_C_StartLockOn::CallFunc_Conv_BoolToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_HeadTag_C_StartLockOn, CallFunc_Concat_StrStr_ReturnValue) == 0x000030, "Member 'UIW_HeadTag_C_StartLockOn::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");

// Function UIW_HeadTag.UIW_HeadTag_C.FinishLockOn
// 0x0018 (0x0018 - 0x0000)
struct UIW_HeadTag_C_FinishLockOn final
{
public:
	class ULLockOnSystem*                         CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ALNPCCharacter*                         K2Node_DynamicCast_AsLNPCCharacter;                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsFocusTarget_ReturnValue;                // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UIW_HeadTag_C_FinishLockOn) == 0x000008, "Wrong alignment on UIW_HeadTag_C_FinishLockOn");
static_assert(sizeof(UIW_HeadTag_C_FinishLockOn) == 0x000018, "Wrong size on UIW_HeadTag_C_FinishLockOn");
static_assert(offsetof(UIW_HeadTag_C_FinishLockOn, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000000, "Member 'UIW_HeadTag_C_FinishLockOn::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_HeadTag_C_FinishLockOn, K2Node_DynamicCast_AsLNPCCharacter) == 0x000008, "Member 'UIW_HeadTag_C_FinishLockOn::K2Node_DynamicCast_AsLNPCCharacter' has a wrong offset!");
static_assert(offsetof(UIW_HeadTag_C_FinishLockOn, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'UIW_HeadTag_C_FinishLockOn::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(UIW_HeadTag_C_FinishLockOn, CallFunc_IsFocusTarget_ReturnValue) == 0x000011, "Member 'UIW_HeadTag_C_FinishLockOn::CallFunc_IsFocusTarget_ReturnValue' has a wrong offset!");

// Function UIW_HeadTag.UIW_HeadTag_C.RefreshHP
// 0x00B8 (0x00B8 - 0x0000)
struct UIW_HeadTag_C_RefreshHP final
{
public:
	float                                         LocalRegainPercent;                                // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LocalHPPercent;                                    // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTweenEase                             K2Node_MakeStruct_TweenEase;                       // 0x0008(0x000C)(NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTweenEase                             K2Node_MakeStruct_TweenEase_1;                     // 0x0018(0x000C)(NoDestructor)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ALNPCCharacter*                         K2Node_DynamicCast_AsLNPCCharacter;                // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetHPPercent_HPPercent;                   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetHPPercent_RegainHPPercent;             // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetSize_ReturnValue;                      // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_FloatFloat_ReturnValue;          // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_1;               // 0x006C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue_1;           // 0x0078(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetSize_ReturnValue_1;                    // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue;                  // 0x0088(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_91[0x3];                                       // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_FloatFloat_ReturnValue_1;        // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9A[0x2];                                       // 0x009A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue_2;           // 0x00A0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_2;               // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetSize_ReturnValue_2;                    // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UIW_HeadTag_C_RefreshHP) == 0x000008, "Wrong alignment on UIW_HeadTag_C_RefreshHP");
static_assert(sizeof(UIW_HeadTag_C_RefreshHP) == 0x0000B8, "Wrong size on UIW_HeadTag_C_RefreshHP");
static_assert(offsetof(UIW_HeadTag_C_RefreshHP, LocalRegainPercent) == 0x000000, "Member 'UIW_HeadTag_C_RefreshHP::LocalRegainPercent' has a wrong offset!");
static_assert(offsetof(UIW_HeadTag_C_RefreshHP, LocalHPPercent) == 0x000004, "Member 'UIW_HeadTag_C_RefreshHP::LocalHPPercent' has a wrong offset!");
static_assert(offsetof(UIW_HeadTag_C_RefreshHP, K2Node_MakeStruct_TweenEase) == 0x000008, "Member 'UIW_HeadTag_C_RefreshHP::K2Node_MakeStruct_TweenEase' has a wrong offset!");
static_assert(offsetof(UIW_HeadTag_C_RefreshHP, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000014, "Member 'UIW_HeadTag_C_RefreshHP::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_HeadTag_C_RefreshHP, K2Node_MakeStruct_TweenEase_1) == 0x000018, "Member 'UIW_HeadTag_C_RefreshHP::K2Node_MakeStruct_TweenEase_1' has a wrong offset!");
static_assert(offsetof(UIW_HeadTag_C_RefreshHP, K2Node_DynamicCast_AsLNPCCharacter) == 0x000028, "Member 'UIW_HeadTag_C_RefreshHP::K2Node_DynamicCast_AsLNPCCharacter' has a wrong offset!");
static_assert(offsetof(UIW_HeadTag_C_RefreshHP, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'UIW_HeadTag_C_RefreshHP::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(UIW_HeadTag_C_RefreshHP, CallFunc_GetHPPercent_HPPercent) == 0x000034, "Member 'UIW_HeadTag_C_RefreshHP::CallFunc_GetHPPercent_HPPercent' has a wrong offset!");
static_assert(offsetof(UIW_HeadTag_C_RefreshHP, CallFunc_GetHPPercent_RegainHPPercent) == 0x000038, "Member 'UIW_HeadTag_C_RefreshHP::CallFunc_GetHPPercent_RegainHPPercent' has a wrong offset!");
static_assert(offsetof(UIW_HeadTag_C_RefreshHP, CallFunc_Add_FloatFloat_ReturnValue) == 0x00003C, "Member 'UIW_HeadTag_C_RefreshHP::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_HeadTag_C_RefreshHP, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000040, "Member 'UIW_HeadTag_C_RefreshHP::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_HeadTag_C_RefreshHP, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x000048, "Member 'UIW_HeadTag_C_RefreshHP::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_HeadTag_C_RefreshHP, CallFunc_GetSize_ReturnValue) == 0x000050, "Member 'UIW_HeadTag_C_RefreshHP::CallFunc_GetSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_HeadTag_C_RefreshHP, CallFunc_BreakVector2D_X) == 0x000058, "Member 'UIW_HeadTag_C_RefreshHP::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(UIW_HeadTag_C_RefreshHP, CallFunc_BreakVector2D_Y) == 0x00005C, "Member 'UIW_HeadTag_C_RefreshHP::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(UIW_HeadTag_C_RefreshHP, CallFunc_MakeVector2D_ReturnValue) == 0x000060, "Member 'UIW_HeadTag_C_RefreshHP::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_HeadTag_C_RefreshHP, CallFunc_NotEqual_FloatFloat_ReturnValue) == 0x000068, "Member 'UIW_HeadTag_C_RefreshHP::CallFunc_NotEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_HeadTag_C_RefreshHP, CallFunc_MakeVector2D_ReturnValue_1) == 0x00006C, "Member 'UIW_HeadTag_C_RefreshHP::CallFunc_MakeVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UIW_HeadTag_C_RefreshHP, CallFunc_SlotAsCanvasSlot_ReturnValue_1) == 0x000078, "Member 'UIW_HeadTag_C_RefreshHP::CallFunc_SlotAsCanvasSlot_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UIW_HeadTag_C_RefreshHP, CallFunc_GetSize_ReturnValue_1) == 0x000080, "Member 'UIW_HeadTag_C_RefreshHP::CallFunc_GetSize_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UIW_HeadTag_C_RefreshHP, CallFunc_K2_SetTimer_ReturnValue) == 0x000088, "Member 'UIW_HeadTag_C_RefreshHP::CallFunc_K2_SetTimer_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_HeadTag_C_RefreshHP, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000090, "Member 'UIW_HeadTag_C_RefreshHP::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_HeadTag_C_RefreshHP, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x000094, "Member 'UIW_HeadTag_C_RefreshHP::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UIW_HeadTag_C_RefreshHP, CallFunc_NotEqual_FloatFloat_ReturnValue_1) == 0x000098, "Member 'UIW_HeadTag_C_RefreshHP::CallFunc_NotEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UIW_HeadTag_C_RefreshHP, CallFunc_BooleanOR_ReturnValue) == 0x000099, "Member 'UIW_HeadTag_C_RefreshHP::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_HeadTag_C_RefreshHP, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x00009C, "Member 'UIW_HeadTag_C_RefreshHP::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UIW_HeadTag_C_RefreshHP, CallFunc_SlotAsCanvasSlot_ReturnValue_2) == 0x0000A0, "Member 'UIW_HeadTag_C_RefreshHP::CallFunc_SlotAsCanvasSlot_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UIW_HeadTag_C_RefreshHP, CallFunc_MakeVector2D_ReturnValue_2) == 0x0000A8, "Member 'UIW_HeadTag_C_RefreshHP::CallFunc_MakeVector2D_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UIW_HeadTag_C_RefreshHP, CallFunc_GetSize_ReturnValue_2) == 0x0000B0, "Member 'UIW_HeadTag_C_RefreshHP::CallFunc_GetSize_ReturnValue_2' has a wrong offset!");

// Function UIW_HeadTag.UIW_HeadTag_C.SetHP
// 0x0028 (0x0028 - 0x0000)
struct UIW_HeadTag_C_SetHP final
{
public:
	float                                         HPPrecent;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue;           // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(UIW_HeadTag_C_SetHP) == 0x000008, "Wrong alignment on UIW_HeadTag_C_SetHP");
static_assert(sizeof(UIW_HeadTag_C_SetHP) == 0x000028, "Wrong size on UIW_HeadTag_C_SetHP");
static_assert(offsetof(UIW_HeadTag_C_SetHP, HPPrecent) == 0x000000, "Member 'UIW_HeadTag_C_SetHP::HPPrecent' has a wrong offset!");
static_assert(offsetof(UIW_HeadTag_C_SetHP, CallFunc_Conv_FloatToString_ReturnValue) == 0x000008, "Member 'UIW_HeadTag_C_SetHP::CallFunc_Conv_FloatToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_HeadTag_C_SetHP, CallFunc_Concat_StrStr_ReturnValue) == 0x000018, "Member 'UIW_HeadTag_C_SetHP::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");

// Function UIW_HeadTag.UIW_HeadTag_C.ShowAll
// 0x0048 (0x0048 - 0x0000)
struct UIW_HeadTag_C_ShowAll final
{
public:
	class ALNPCCharacter*                         K2Node_DynamicCast_AsLNPCCharacter;                // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CanHeadTagVisible_ReturnValue;            // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E[0x2];                                        // 0x000E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue;                  // 0x0010(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue_1;                // 0x0018(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22[0x6];                                       // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_BoolToString_ReturnValue;            // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(UIW_HeadTag_C_ShowAll) == 0x000008, "Wrong alignment on UIW_HeadTag_C_ShowAll");
static_assert(sizeof(UIW_HeadTag_C_ShowAll) == 0x000048, "Wrong size on UIW_HeadTag_C_ShowAll");
static_assert(offsetof(UIW_HeadTag_C_ShowAll, K2Node_DynamicCast_AsLNPCCharacter) == 0x000000, "Member 'UIW_HeadTag_C_ShowAll::K2Node_DynamicCast_AsLNPCCharacter' has a wrong offset!");
static_assert(offsetof(UIW_HeadTag_C_ShowAll, K2Node_DynamicCast_bSuccess) == 0x000008, "Member 'UIW_HeadTag_C_ShowAll::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(UIW_HeadTag_C_ShowAll, CallFunc_CanHeadTagVisible_ReturnValue) == 0x000009, "Member 'UIW_HeadTag_C_ShowAll::CallFunc_CanHeadTagVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_HeadTag_C_ShowAll, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00000A, "Member 'UIW_HeadTag_C_ShowAll::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_HeadTag_C_ShowAll, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x00000B, "Member 'UIW_HeadTag_C_ShowAll::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UIW_HeadTag_C_ShowAll, CallFunc_BooleanOR_ReturnValue) == 0x00000C, "Member 'UIW_HeadTag_C_ShowAll::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_HeadTag_C_ShowAll, CallFunc_BooleanAND_ReturnValue) == 0x00000D, "Member 'UIW_HeadTag_C_ShowAll::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_HeadTag_C_ShowAll, CallFunc_K2_SetTimer_ReturnValue) == 0x000010, "Member 'UIW_HeadTag_C_ShowAll::CallFunc_K2_SetTimer_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_HeadTag_C_ShowAll, CallFunc_K2_SetTimer_ReturnValue_1) == 0x000018, "Member 'UIW_HeadTag_C_ShowAll::CallFunc_K2_SetTimer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UIW_HeadTag_C_ShowAll, CallFunc_BooleanOR_ReturnValue_1) == 0x000020, "Member 'UIW_HeadTag_C_ShowAll::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UIW_HeadTag_C_ShowAll, CallFunc_BooleanOR_ReturnValue_2) == 0x000021, "Member 'UIW_HeadTag_C_ShowAll::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UIW_HeadTag_C_ShowAll, CallFunc_Conv_BoolToString_ReturnValue) == 0x000028, "Member 'UIW_HeadTag_C_ShowAll::CallFunc_Conv_BoolToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_HeadTag_C_ShowAll, CallFunc_Concat_StrStr_ReturnValue) == 0x000038, "Member 'UIW_HeadTag_C_ShowAll::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");

// Function UIW_HeadTag.UIW_HeadTag_C.ShowDamage
// 0x0060 (0x0060 - 0x0000)
struct UIW_HeadTag_C_ShowDamage final
{
public:
	int32                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ELElementDamageType                           ElementDamageType;                                 // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E[0x2];                                       // 0x002E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0038(0x0018)()
	bool                                          CallFunc_K2_IsTimerActiveHandle_ReturnValue;       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue;                  // 0x0058(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UIW_HeadTag_C_ShowDamage) == 0x000008, "Wrong alignment on UIW_HeadTag_C_ShowDamage");
static_assert(sizeof(UIW_HeadTag_C_ShowDamage) == 0x000060, "Wrong size on UIW_HeadTag_C_ShowDamage");
static_assert(offsetof(UIW_HeadTag_C_ShowDamage, Value) == 0x000000, "Member 'UIW_HeadTag_C_ShowDamage::Value' has a wrong offset!");
static_assert(offsetof(UIW_HeadTag_C_ShowDamage, ElementDamageType) == 0x000004, "Member 'UIW_HeadTag_C_ShowDamage::ElementDamageType' has a wrong offset!");
static_assert(offsetof(UIW_HeadTag_C_ShowDamage, CallFunc_Conv_IntToString_ReturnValue) == 0x000008, "Member 'UIW_HeadTag_C_ShowDamage::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_HeadTag_C_ShowDamage, CallFunc_Concat_StrStr_ReturnValue) == 0x000018, "Member 'UIW_HeadTag_C_ShowDamage::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_HeadTag_C_ShowDamage, CallFunc_Array_LastIndex_ReturnValue) == 0x000028, "Member 'UIW_HeadTag_C_ShowDamage::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_HeadTag_C_ShowDamage, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x00002C, "Member 'UIW_HeadTag_C_ShowDamage::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_HeadTag_C_ShowDamage, K2Node_SwitchEnum_CmpSuccess) == 0x00002D, "Member 'UIW_HeadTag_C_ShowDamage::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(UIW_HeadTag_C_ShowDamage, CallFunc_Add_IntInt_ReturnValue) == 0x000030, "Member 'UIW_HeadTag_C_ShowDamage::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_HeadTag_C_ShowDamage, CallFunc_Conv_IntToText_ReturnValue) == 0x000038, "Member 'UIW_HeadTag_C_ShowDamage::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_HeadTag_C_ShowDamage, CallFunc_K2_IsTimerActiveHandle_ReturnValue) == 0x000050, "Member 'UIW_HeadTag_C_ShowDamage::CallFunc_K2_IsTimerActiveHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_HeadTag_C_ShowDamage, CallFunc_K2_SetTimer_ReturnValue) == 0x000058, "Member 'UIW_HeadTag_C_ShowDamage::CallFunc_K2_SetTimer_ReturnValue' has a wrong offset!");

// Function UIW_HeadTag.UIW_HeadTag_C.SetLockOn
// 0x0028 (0x0028 - 0x0000)
struct UIW_HeadTag_C_SetLockOn final
{
public:
	bool                                          IsLockOn_0;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_BoolToString_ReturnValue;            // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(UIW_HeadTag_C_SetLockOn) == 0x000008, "Wrong alignment on UIW_HeadTag_C_SetLockOn");
static_assert(sizeof(UIW_HeadTag_C_SetLockOn) == 0x000028, "Wrong size on UIW_HeadTag_C_SetLockOn");
static_assert(offsetof(UIW_HeadTag_C_SetLockOn, IsLockOn_0) == 0x000000, "Member 'UIW_HeadTag_C_SetLockOn::IsLockOn_0' has a wrong offset!");
static_assert(offsetof(UIW_HeadTag_C_SetLockOn, CallFunc_Conv_BoolToString_ReturnValue) == 0x000008, "Member 'UIW_HeadTag_C_SetLockOn::CallFunc_Conv_BoolToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_HeadTag_C_SetLockOn, CallFunc_Concat_StrStr_ReturnValue) == 0x000018, "Member 'UIW_HeadTag_C_SetLockOn::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");

// Function UIW_HeadTag.UIW_HeadTag_C.OnParalyzeEnable
// 0x0038 (0x0038 - 0x0000)
struct UIW_HeadTag_C_OnParalyzeEnable final
{
public:
	bool                                          IsAbleParalyze;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_BoolToString_ReturnValue;            // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class ALNPCCharacter*                         K2Node_DynamicCast_AsLNPCCharacter;                // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UIW_HeadTag_C_OnParalyzeEnable) == 0x000008, "Wrong alignment on UIW_HeadTag_C_OnParalyzeEnable");
static_assert(sizeof(UIW_HeadTag_C_OnParalyzeEnable) == 0x000038, "Wrong size on UIW_HeadTag_C_OnParalyzeEnable");
static_assert(offsetof(UIW_HeadTag_C_OnParalyzeEnable, IsAbleParalyze) == 0x000000, "Member 'UIW_HeadTag_C_OnParalyzeEnable::IsAbleParalyze' has a wrong offset!");
static_assert(offsetof(UIW_HeadTag_C_OnParalyzeEnable, CallFunc_Conv_BoolToString_ReturnValue) == 0x000008, "Member 'UIW_HeadTag_C_OnParalyzeEnable::CallFunc_Conv_BoolToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_HeadTag_C_OnParalyzeEnable, CallFunc_Concat_StrStr_ReturnValue) == 0x000018, "Member 'UIW_HeadTag_C_OnParalyzeEnable::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_HeadTag_C_OnParalyzeEnable, K2Node_DynamicCast_AsLNPCCharacter) == 0x000028, "Member 'UIW_HeadTag_C_OnParalyzeEnable::K2Node_DynamicCast_AsLNPCCharacter' has a wrong offset!");
static_assert(offsetof(UIW_HeadTag_C_OnParalyzeEnable, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'UIW_HeadTag_C_OnParalyzeEnable::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function UIW_HeadTag.UIW_HeadTag_C.OnGroggy
// 0x0001 (0x0001 - 0x0000)
struct UIW_HeadTag_C_OnGroggy final
{
public:
	bool                                          IsStarted;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UIW_HeadTag_C_OnGroggy) == 0x000001, "Wrong alignment on UIW_HeadTag_C_OnGroggy");
static_assert(sizeof(UIW_HeadTag_C_OnGroggy) == 0x000001, "Wrong size on UIW_HeadTag_C_OnGroggy");
static_assert(offsetof(UIW_HeadTag_C_OnGroggy, IsStarted) == 0x000000, "Member 'UIW_HeadTag_C_OnGroggy::IsStarted' has a wrong offset!");

// Function UIW_HeadTag.UIW_HeadTag_C.DisplayInfo
// 0x0010 (0x0010 - 0x0000)
struct UIW_HeadTag_C_DisplayInfo final
{
public:
	class FString                                 InputString;                                       // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(UIW_HeadTag_C_DisplayInfo) == 0x000008, "Wrong alignment on UIW_HeadTag_C_DisplayInfo");
static_assert(sizeof(UIW_HeadTag_C_DisplayInfo) == 0x000010, "Wrong size on UIW_HeadTag_C_DisplayInfo");
static_assert(offsetof(UIW_HeadTag_C_DisplayInfo, InputString) == 0x000000, "Member 'UIW_HeadTag_C_DisplayInfo::InputString' has a wrong offset!");

// Function UIW_HeadTag.UIW_HeadTag_C.CheckHUD
// 0x0030 (0x0030 - 0x0000)
struct UIW_HeadTag_C_CheckHUD final
{
public:
	class UUIW_Main_C*                            CallFunc_GetMainWidget_MainWidget;                 // 0x0000(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsOpenedWidget_IsOpened;                  // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B[0x5];                                        // 0x000B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_IsOpenedWidget_UserWidget;                // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_IsOpenedWidget_WidgetArrayIndex;          // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUIW_HUD_C*                             K2Node_DynamicCast_AsUIW_HUD;                      // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UIW_HeadTag_C_CheckHUD) == 0x000008, "Wrong alignment on UIW_HeadTag_C_CheckHUD");
static_assert(sizeof(UIW_HeadTag_C_CheckHUD) == 0x000030, "Wrong size on UIW_HeadTag_C_CheckHUD");
static_assert(offsetof(UIW_HeadTag_C_CheckHUD, CallFunc_GetMainWidget_MainWidget) == 0x000000, "Member 'UIW_HeadTag_C_CheckHUD::CallFunc_GetMainWidget_MainWidget' has a wrong offset!");
static_assert(offsetof(UIW_HeadTag_C_CheckHUD, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'UIW_HeadTag_C_CheckHUD::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_HeadTag_C_CheckHUD, CallFunc_IsValid_ReturnValue_1) == 0x000009, "Member 'UIW_HeadTag_C_CheckHUD::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UIW_HeadTag_C_CheckHUD, CallFunc_IsOpenedWidget_IsOpened) == 0x00000A, "Member 'UIW_HeadTag_C_CheckHUD::CallFunc_IsOpenedWidget_IsOpened' has a wrong offset!");
static_assert(offsetof(UIW_HeadTag_C_CheckHUD, CallFunc_IsOpenedWidget_UserWidget) == 0x000010, "Member 'UIW_HeadTag_C_CheckHUD::CallFunc_IsOpenedWidget_UserWidget' has a wrong offset!");
static_assert(offsetof(UIW_HeadTag_C_CheckHUD, CallFunc_IsOpenedWidget_WidgetArrayIndex) == 0x000018, "Member 'UIW_HeadTag_C_CheckHUD::CallFunc_IsOpenedWidget_WidgetArrayIndex' has a wrong offset!");
static_assert(offsetof(UIW_HeadTag_C_CheckHUD, K2Node_DynamicCast_AsUIW_HUD) == 0x000020, "Member 'UIW_HeadTag_C_CheckHUD::K2Node_DynamicCast_AsUIW_HUD' has a wrong offset!");
static_assert(offsetof(UIW_HeadTag_C_CheckHUD, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'UIW_HeadTag_C_CheckHUD::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(UIW_HeadTag_C_CheckHUD, CallFunc_IsValid_ReturnValue_2) == 0x000029, "Member 'UIW_HeadTag_C_CheckHUD::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UIW_HeadTag_C_CheckHUD, CallFunc_BooleanOR_ReturnValue) == 0x00002A, "Member 'UIW_HeadTag_C_CheckHUD::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function UIW_HeadTag.UIW_HeadTag_C.OnChangeCombatState
// 0x0001 (0x0001 - 0x0000)
struct UIW_HeadTag_C_OnChangeCombatState final
{
public:
	bool                                          IsInCombatState;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UIW_HeadTag_C_OnChangeCombatState) == 0x000001, "Wrong alignment on UIW_HeadTag_C_OnChangeCombatState");
static_assert(sizeof(UIW_HeadTag_C_OnChangeCombatState) == 0x000001, "Wrong size on UIW_HeadTag_C_OnChangeCombatState");
static_assert(offsetof(UIW_HeadTag_C_OnChangeCombatState, IsInCombatState) == 0x000000, "Member 'UIW_HeadTag_C_OnChangeCombatState::IsInCombatState' has a wrong offset!");

// Function UIW_HeadTag.UIW_HeadTag_C.SetVisible
// 0x0001 (0x0001 - 0x0000)
struct UIW_HeadTag_C_SetVisible final
{
public:
	bool                                          bVisible;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UIW_HeadTag_C_SetVisible) == 0x000001, "Wrong alignment on UIW_HeadTag_C_SetVisible");
static_assert(sizeof(UIW_HeadTag_C_SetVisible) == 0x000001, "Wrong size on UIW_HeadTag_C_SetVisible");
static_assert(offsetof(UIW_HeadTag_C_SetVisible, bVisible) == 0x000000, "Member 'UIW_HeadTag_C_SetVisible::bVisible' has a wrong offset!");

// Function UIW_HeadTag.UIW_HeadTag_C.On Abnormal State
// 0x0030 (0x0030 - 0x0000)
struct UIW_HeadTag_C_On_Abnormal_State final
{
public:
	class FName                                   AbnormalName;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         AbnormalUniqueId;                                  // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Visible;                                           // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	ELAbnormalAbstateClass                        LocalAbstateClass;                                 // 0x0011(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAbnormalStateCommonInfoPtr            CallFunc_FindAbnormalStateCommonInfoByNameBP_ReturnValue; // 0x0018(0x0008)(NoDestructor)
	ELAbnormalAbstateClass                        CallFunc_GetAbstateClass_ReturnValue;              // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UIW_HeadTag_C_On_Abnormal_State) == 0x000008, "Wrong alignment on UIW_HeadTag_C_On_Abnormal_State");
static_assert(sizeof(UIW_HeadTag_C_On_Abnormal_State) == 0x000030, "Wrong size on UIW_HeadTag_C_On_Abnormal_State");
static_assert(offsetof(UIW_HeadTag_C_On_Abnormal_State, AbnormalName) == 0x000000, "Member 'UIW_HeadTag_C_On_Abnormal_State::AbnormalName' has a wrong offset!");
static_assert(offsetof(UIW_HeadTag_C_On_Abnormal_State, AbnormalUniqueId) == 0x000008, "Member 'UIW_HeadTag_C_On_Abnormal_State::AbnormalUniqueId' has a wrong offset!");
static_assert(offsetof(UIW_HeadTag_C_On_Abnormal_State, Visible) == 0x000010, "Member 'UIW_HeadTag_C_On_Abnormal_State::Visible' has a wrong offset!");
static_assert(offsetof(UIW_HeadTag_C_On_Abnormal_State, LocalAbstateClass) == 0x000011, "Member 'UIW_HeadTag_C_On_Abnormal_State::LocalAbstateClass' has a wrong offset!");
static_assert(offsetof(UIW_HeadTag_C_On_Abnormal_State, CallFunc_FindAbnormalStateCommonInfoByNameBP_ReturnValue) == 0x000018, "Member 'UIW_HeadTag_C_On_Abnormal_State::CallFunc_FindAbnormalStateCommonInfoByNameBP_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_HeadTag_C_On_Abnormal_State, CallFunc_GetAbstateClass_ReturnValue) == 0x000020, "Member 'UIW_HeadTag_C_On_Abnormal_State::CallFunc_GetAbstateClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_HeadTag_C_On_Abnormal_State, CallFunc_Array_LastIndex_ReturnValue) == 0x000024, "Member 'UIW_HeadTag_C_On_Abnormal_State::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_HeadTag_C_On_Abnormal_State, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000028, "Member 'UIW_HeadTag_C_On_Abnormal_State::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_HeadTag_C_On_Abnormal_State, K2Node_SwitchEnum_CmpSuccess) == 0x000029, "Member 'UIW_HeadTag_C_On_Abnormal_State::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function UIW_HeadTag.UIW_HeadTag_C.AddAbnormal
// 0x0088 (0x0088 - 0x0000)
struct UIW_HeadTag_C_AddAbnormal final
{
public:
	class FName                                   Name_0;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         ID;                                                // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Visible;                                           // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	ELAbnormalAbstateClass                        State;                                             // 0x0011(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x2];                                       // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         LocalRemoveIndex;                                  // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FUIST_AbnormalVisible                  K2Node_MakeStruct_UIST_AbnormalVisible;            // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FUIST_AbnormalVisible                  K2Node_MakeStruct_UIST_AbnormalVisible_1;          // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FUIST_AbnormalVisible                  CallFunc_Array_Get_Item;                           // 0x0058(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_Int64Int64_ReturnValue;        // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_75[0x3];                                       // 0x0075(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UIW_HeadTag_C_AddAbnormal) == 0x000008, "Wrong alignment on UIW_HeadTag_C_AddAbnormal");
static_assert(sizeof(UIW_HeadTag_C_AddAbnormal) == 0x000088, "Wrong size on UIW_HeadTag_C_AddAbnormal");
static_assert(offsetof(UIW_HeadTag_C_AddAbnormal, Name_0) == 0x000000, "Member 'UIW_HeadTag_C_AddAbnormal::Name_0' has a wrong offset!");
static_assert(offsetof(UIW_HeadTag_C_AddAbnormal, ID) == 0x000008, "Member 'UIW_HeadTag_C_AddAbnormal::ID' has a wrong offset!");
static_assert(offsetof(UIW_HeadTag_C_AddAbnormal, Visible) == 0x000010, "Member 'UIW_HeadTag_C_AddAbnormal::Visible' has a wrong offset!");
static_assert(offsetof(UIW_HeadTag_C_AddAbnormal, State) == 0x000011, "Member 'UIW_HeadTag_C_AddAbnormal::State' has a wrong offset!");
static_assert(offsetof(UIW_HeadTag_C_AddAbnormal, LocalRemoveIndex) == 0x000014, "Member 'UIW_HeadTag_C_AddAbnormal::LocalRemoveIndex' has a wrong offset!");
static_assert(offsetof(UIW_HeadTag_C_AddAbnormal, K2Node_MakeStruct_UIST_AbnormalVisible) == 0x000018, "Member 'UIW_HeadTag_C_AddAbnormal::K2Node_MakeStruct_UIST_AbnormalVisible' has a wrong offset!");
static_assert(offsetof(UIW_HeadTag_C_AddAbnormal, K2Node_MakeStruct_UIST_AbnormalVisible_1) == 0x000030, "Member 'UIW_HeadTag_C_AddAbnormal::K2Node_MakeStruct_UIST_AbnormalVisible_1' has a wrong offset!");
static_assert(offsetof(UIW_HeadTag_C_AddAbnormal, Temp_int_Loop_Counter_Variable) == 0x000048, "Member 'UIW_HeadTag_C_AddAbnormal::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(UIW_HeadTag_C_AddAbnormal, Temp_int_Array_Index_Variable) == 0x00004C, "Member 'UIW_HeadTag_C_AddAbnormal::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(UIW_HeadTag_C_AddAbnormal, CallFunc_Add_IntInt_ReturnValue) == 0x000050, "Member 'UIW_HeadTag_C_AddAbnormal::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_HeadTag_C_AddAbnormal, CallFunc_Array_Get_Item) == 0x000058, "Member 'UIW_HeadTag_C_AddAbnormal::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(UIW_HeadTag_C_AddAbnormal, CallFunc_Array_LastIndex_ReturnValue) == 0x000070, "Member 'UIW_HeadTag_C_AddAbnormal::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_HeadTag_C_AddAbnormal, CallFunc_EqualEqual_Int64Int64_ReturnValue) == 0x000074, "Member 'UIW_HeadTag_C_AddAbnormal::CallFunc_EqualEqual_Int64Int64_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_HeadTag_C_AddAbnormal, CallFunc_Array_Add_ReturnValue) == 0x000078, "Member 'UIW_HeadTag_C_AddAbnormal::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_HeadTag_C_AddAbnormal, CallFunc_Array_Length_ReturnValue) == 0x00007C, "Member 'UIW_HeadTag_C_AddAbnormal::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_HeadTag_C_AddAbnormal, CallFunc_Less_IntInt_ReturnValue) == 0x000080, "Member 'UIW_HeadTag_C_AddAbnormal::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

}


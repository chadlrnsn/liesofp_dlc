#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_HitProcComponent

#include "Basic.hpp"

#include "BP_HitProcComponent_classes.hpp"
#include "BP_HitProcComponent_parameters.hpp"


namespace SDK
{

// Function BP_HitProcComponent.BP_HitProcComponent_C.ReduceGuardRegainOnHit
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_HitProcComponent_C::ReduceGuardRegainOnHit()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HitProcComponent_C", "ReduceGuardRegainOnHit");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_HitProcComponent.BP_HitProcComponent_C.CheckRepulse
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_HitProcComponent_C::CheckRepulse(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HitProcComponent_C", "CheckRepulse");

	Params::BP_HitProcComponent_C_CheckRepulse Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function BP_HitProcComponent.BP_HitProcComponent_C.CalcDestructionDurability
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ALWeapon*                         Weapon                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Durability                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_HitProcComponent_C::CalcDestructionDurability(class ALWeapon* Weapon, int32* Durability)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HitProcComponent_C", "CalcDestructionDurability");

	Params::BP_HitProcComponent_C_CalcDestructionDurability Parms{};

	Parms.Weapon = Weapon;

	UObject::ProcessEvent(Func, &Parms);

	if (Durability != nullptr)
		*Durability = Parms.Durability;
}


// Function BP_HitProcComponent.BP_HitProcComponent_C.MarkPerfectGuardOcurred
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_HitProcComponent_C::MarkPerfectGuardOcurred()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HitProcComponent_C", "MarkPerfectGuardOcurred");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_HitProcComponent.BP_HitProcComponent_C.SelectActionClassCodeNameByHitMotion
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Victim                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Attacker                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// ELHitMotionType                         HitMotionType                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             NewParam                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_HitProcComponent_C::SelectActionClassCodeNameByHitMotion(class AActor* Victim, class AActor* Attacker, ELHitMotionType HitMotionType, class FName* NewParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HitProcComponent_C", "SelectActionClassCodeNameByHitMotion");

	Params::BP_HitProcComponent_C_SelectActionClassCodeNameByHitMotion Parms{};

	Parms.Victim = Victim;
	Parms.Attacker = Attacker;
	Parms.HitMotionType = HitMotionType;

	UObject::ProcessEvent(Func, &Parms);

	if (NewParam != nullptr)
		*NewParam = Parms.NewParam;
}


// Function BP_HitProcComponent.BP_HitProcComponent_C.ProcessHit
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Attacker                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Victim                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FHitResult                       HitResult                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
// struct FLHitInfo                        HitInfo                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference)

void UBP_HitProcComponent_C::ProcessHit(class AActor* Attacker, class AActor* Victim, const struct FHitResult& HitResult, const struct FLHitInfo& HitInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HitProcComponent_C", "ProcessHit");

	Params::BP_HitProcComponent_C_ProcessHit Parms{};

	Parms.Attacker = Attacker;
	Parms.Victim = Victim;
	Parms.HitResult = std::move(HitResult);
	Parms.HitInfo = std::move(HitInfo);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HitProcComponent.BP_HitProcComponent_C.OnDebugHitOcurred
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FHitResult                       Info                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void UBP_HitProcComponent_C::OnDebugHitOcurred(const struct FHitResult& Info)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HitProcComponent_C", "OnDebugHitOcurred");

	Params::BP_HitProcComponent_C_OnDebugHitOcurred Parms{};

	Parms.Info = std::move(Info);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HitProcComponent.BP_HitProcComponent_C.ProcessHitDecoMesh
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Attacker                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Victim                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FHitResult                       HitResult                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void UBP_HitProcComponent_C::ProcessHitDecoMesh(class AActor* Attacker, class AActor* Victim, const struct FHitResult& HitResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HitProcComponent_C", "ProcessHitDecoMesh");

	Params::BP_HitProcComponent_C_ProcessHitDecoMesh Parms{};

	Parms.Attacker = Attacker;
	Parms.Victim = Victim;
	Parms.HitResult = std::move(HitResult);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HitProcComponent.BP_HitProcComponent_C.OnRepulseSocketHitOccurred
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ULActMgrComponent*                ActMgrComponent                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLFxSocketTracerInfo             SocketTracerInfo                                       (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
// struct FHitResult                       HitResult                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void UBP_HitProcComponent_C::OnRepulseSocketHitOccurred(class ULActMgrComponent* ActMgrComponent, const struct FLFxSocketTracerInfo& SocketTracerInfo, const struct FHitResult& HitResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HitProcComponent_C", "OnRepulseSocketHitOccurred");

	Params::BP_HitProcComponent_C_OnRepulseSocketHitOccurred Parms{};

	Parms.ActMgrComponent = ActMgrComponent;
	Parms.SocketTracerInfo = std::move(SocketTracerInfo);
	Parms.HitResult = std::move(HitResult);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HitProcComponent.BP_HitProcComponent_C.OnFxSocketHitOccurred
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ULActMgrComponent*                ActMgrComponent                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLFxSocketTracerInfo             SocketTracerInfo                                       (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
// struct FHitResult                       HitResult                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void UBP_HitProcComponent_C::OnFxSocketHitOccurred(class ULActMgrComponent* ActMgrComponent, const struct FLFxSocketTracerInfo& SocketTracerInfo, const struct FHitResult& HitResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HitProcComponent_C", "OnFxSocketHitOccurred");

	Params::BP_HitProcComponent_C_OnFxSocketHitOccurred Parms{};

	Parms.ActMgrComponent = ActMgrComponent;
	Parms.SocketTracerInfo = std::move(SocketTracerInfo);
	Parms.HitResult = std::move(HitResult);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HitProcComponent.BP_HitProcComponent_C.ExecuteUbergraph_BP_HitProcComponent
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_HitProcComponent_C::ExecuteUbergraph_BP_HitProcComponent(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HitProcComponent_C", "ExecuteUbergraph_BP_HitProcComponent");

	Params::BP_HitProcComponent_C_ExecuteUbergraph_BP_HitProcComponent Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}

}


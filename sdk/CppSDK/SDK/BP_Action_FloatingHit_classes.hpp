#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Action_FloatingHit

#include "Basic.hpp"

#include "ProjectP_structs.hpp"
#include "BP_Action_HitBase_classes.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Action_FloatingHit.BP_Action_FloatingHit_C
// 0x0038 (0x0458 - 0x0420)
class UBP_Action_FloatingHit_C final : public UBP_Action_HitBase_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_Action_FloatingHit_C;            // 0x0420(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FTimerHandle                           Cached_TimerTooLongFalling;                        // 0x0428(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           Cached_TimerTooLongFallingReserveStop;             // 0x0430(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class FName                                   ActionState_WaitLanding;                           // 0x0438(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   ActionState_WaitGetUp;                             // 0x0440(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Option_CommonAnimCodeName;                         // 0x0448(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Option_CommonAnimCodeName_PC;                      // 0x0450(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_Action_FloatingHit(int32 EntryPoint);
	void OnCurrMontageBlendOutStarted(class UAnimMontage* Montage, bool bInterrupted, int32 MontageInstanceID);
	void OnCurrMontageEnded(class UAnimMontage* Montage, bool bInterrupted, int32 MontageInstanceID);
	void OnReseveStop();
	void OnTooLongFalling();
	void OnStop(class ULActBase* ReasonAction, class FName Reason);
	void OnStart();
	bool OnLanded(class ACharacter* LandingChar, const struct FHitResult& Hit);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Action_FloatingHit_C">();
	}
	static class UBP_Action_FloatingHit_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_Action_FloatingHit_C>();
	}
};
static_assert(alignof(UBP_Action_FloatingHit_C) == 0x000008, "Wrong alignment on UBP_Action_FloatingHit_C");
static_assert(sizeof(UBP_Action_FloatingHit_C) == 0x000458, "Wrong size on UBP_Action_FloatingHit_C");
static_assert(offsetof(UBP_Action_FloatingHit_C, UberGraphFrame_BP_Action_FloatingHit_C) == 0x000420, "Member 'UBP_Action_FloatingHit_C::UberGraphFrame_BP_Action_FloatingHit_C' has a wrong offset!");
static_assert(offsetof(UBP_Action_FloatingHit_C, Cached_TimerTooLongFalling) == 0x000428, "Member 'UBP_Action_FloatingHit_C::Cached_TimerTooLongFalling' has a wrong offset!");
static_assert(offsetof(UBP_Action_FloatingHit_C, Cached_TimerTooLongFallingReserveStop) == 0x000430, "Member 'UBP_Action_FloatingHit_C::Cached_TimerTooLongFallingReserveStop' has a wrong offset!");
static_assert(offsetof(UBP_Action_FloatingHit_C, ActionState_WaitLanding) == 0x000438, "Member 'UBP_Action_FloatingHit_C::ActionState_WaitLanding' has a wrong offset!");
static_assert(offsetof(UBP_Action_FloatingHit_C, ActionState_WaitGetUp) == 0x000440, "Member 'UBP_Action_FloatingHit_C::ActionState_WaitGetUp' has a wrong offset!");
static_assert(offsetof(UBP_Action_FloatingHit_C, Option_CommonAnimCodeName) == 0x000448, "Member 'UBP_Action_FloatingHit_C::Option_CommonAnimCodeName' has a wrong offset!");
static_assert(offsetof(UBP_Action_FloatingHit_C, Option_CommonAnimCodeName_PC) == 0x000450, "Member 'UBP_Action_FloatingHit_C::Option_CommonAnimCodeName_PC' has a wrong offset!");

}


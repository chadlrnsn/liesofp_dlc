#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Action_Jump_RootMotionScale

#include "Basic.hpp"

#include "ProjectP_structs.hpp"
#include "ProjectP_classes.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Action_Jump_RootMotionScale.BP_Action_Jump_RootMotionScale_C
// 0x00F8 (0x0350 - 0x0258)
class UBP_Action_Jump_RootMotionScale_C final : public ULAction_LoopAnim
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0258(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	float                                         Option_CapsuleInflation;                           // 0x0260(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_264[0xC];                                      // 0x0264(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             TargetTransform;                                   // 0x0270(0x0030)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FVector                                OffsetLocation;                                    // 0x02A0(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         WireRewindDelay;                                   // 0x02AC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsTargetingPC;                                     // 0x02B0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2B1[0xF];                                      // 0x02B1(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLRootMotionJumpContext                Cached_RootMotionJumpContext;                      // 0x02C0(0x0060)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	class FName                                   CurrentPlayingMontage;                             // 0x0320(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Cached_SafeLocation;                               // 0x0328(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_334[0x4];                                      // 0x0334(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Cached_SweepIgnoreActor;                           // 0x0338(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)

public:
	void ExecuteUbergraph_BP_Action_Jump_RootMotionScale(int32 EntryPoint);
	void OnStart();
	void OnStop(class ULActBase* ReasonAction, class FName Reason);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Action_Jump_RootMotionScale_C">();
	}
	static class UBP_Action_Jump_RootMotionScale_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_Action_Jump_RootMotionScale_C>();
	}
};
static_assert(alignof(UBP_Action_Jump_RootMotionScale_C) == 0x000010, "Wrong alignment on UBP_Action_Jump_RootMotionScale_C");
static_assert(sizeof(UBP_Action_Jump_RootMotionScale_C) == 0x000350, "Wrong size on UBP_Action_Jump_RootMotionScale_C");
static_assert(offsetof(UBP_Action_Jump_RootMotionScale_C, UberGraphFrame) == 0x000258, "Member 'UBP_Action_Jump_RootMotionScale_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_Action_Jump_RootMotionScale_C, Option_CapsuleInflation) == 0x000260, "Member 'UBP_Action_Jump_RootMotionScale_C::Option_CapsuleInflation' has a wrong offset!");
static_assert(offsetof(UBP_Action_Jump_RootMotionScale_C, TargetTransform) == 0x000270, "Member 'UBP_Action_Jump_RootMotionScale_C::TargetTransform' has a wrong offset!");
static_assert(offsetof(UBP_Action_Jump_RootMotionScale_C, OffsetLocation) == 0x0002A0, "Member 'UBP_Action_Jump_RootMotionScale_C::OffsetLocation' has a wrong offset!");
static_assert(offsetof(UBP_Action_Jump_RootMotionScale_C, WireRewindDelay) == 0x0002AC, "Member 'UBP_Action_Jump_RootMotionScale_C::WireRewindDelay' has a wrong offset!");
static_assert(offsetof(UBP_Action_Jump_RootMotionScale_C, IsTargetingPC) == 0x0002B0, "Member 'UBP_Action_Jump_RootMotionScale_C::IsTargetingPC' has a wrong offset!");
static_assert(offsetof(UBP_Action_Jump_RootMotionScale_C, Cached_RootMotionJumpContext) == 0x0002C0, "Member 'UBP_Action_Jump_RootMotionScale_C::Cached_RootMotionJumpContext' has a wrong offset!");
static_assert(offsetof(UBP_Action_Jump_RootMotionScale_C, CurrentPlayingMontage) == 0x000320, "Member 'UBP_Action_Jump_RootMotionScale_C::CurrentPlayingMontage' has a wrong offset!");
static_assert(offsetof(UBP_Action_Jump_RootMotionScale_C, Cached_SafeLocation) == 0x000328, "Member 'UBP_Action_Jump_RootMotionScale_C::Cached_SafeLocation' has a wrong offset!");
static_assert(offsetof(UBP_Action_Jump_RootMotionScale_C, Cached_SweepIgnoreActor) == 0x000338, "Member 'UBP_Action_Jump_RootMotionScale_C::Cached_SweepIgnoreActor' has a wrong offset!");

}


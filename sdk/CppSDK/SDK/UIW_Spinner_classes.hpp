#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UIW_Spinner

#include "Basic.hpp"

#include "ProjectP_classes.hpp"
#include "Engine_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass UIW_Spinner.UIW_Spinner_C
// 0x0118 (0x03C0 - 0x02A8)
class UUIW_Spinner_C final : public ULWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02A8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UButton*                                Btn_BG;                                            // 0x02B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUIW_Btn_Arrow_C*                       Btn_Down_H;                                        // 0x02B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUIW_Btn_Arrow_C*                       Btn_Down_V;                                        // 0x02C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                Btn_Select;                                        // 0x02C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUIW_Btn_Arrow_C*                       Btn_Up_H;                                          // 0x02D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUIW_Btn_Arrow_C*                       Btn_Up_V;                                          // 0x02D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Img_Hover;                                         // 0x02E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUIW_Spinner_Number_C*                  Num_0;                                             // 0x02E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUIW_Spinner_Number_C*                  Num_1;                                             // 0x02F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUIW_Spinner_Number_C*                  Num_2;                                             // 0x02F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUIW_Spinner_Number_C*                  Num_3;                                             // 0x0300(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUIW_Spinner_Number_C*                  Num_4;                                             // 0x0308(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUIW_Spinner_Number_C*                  Num_5;                                             // 0x0310(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUIW_Spinner_Number_C*                  Num_6;                                             // 0x0318(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUIW_Spinner_Number_C*                  Num_7;                                             // 0x0320(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUIW_Spinner_Number_C*                  Num_8;                                             // 0x0328(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUIW_Spinner_Number_C*                  Num_9;                                             // 0x0330(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         SpinnerBox;                                        // 0x0338(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	int32                                         CurrentValue;                                      // 0x0340(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_344[0x4];                                      // 0x0344(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             OnSelected;                                        // 0x0348(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             OnHovered;                                         // 0x0358(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             OnUnhovered;                                       // 0x0368(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          IsSelected;                                        // 0x0378(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_379[0x7];                                      // 0x0379(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             OnReleaseUp;                                       // 0x0380(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             OnReleaseDown;                                     // 0x0390(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	struct FTimerHandle                           TimerHandle;                                       // 0x03A0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TArray<class UUIW_Spinner_Number_C*>          NumList;                                           // 0x03A8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	int32                                         InitValue;                                         // 0x03B8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EOrientation                                  Arrow_Orientation;                                 // 0x03BC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          IsControllable;                                    // 0x03BD(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	bool                                          IsEnabledWheel;                                    // 0x03BE(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	bool                                          NeedAccentDiffence;                                // 0x03BF(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void OnSelected__DelegateSignature(class UUIW_Spinner_C* Spinner);
	void OnHovered__DelegateSignature(class UUIW_Spinner_C* Spinner);
	void OnUnhovered__DelegateSignature(class UUIW_Spinner_C* Spinner);
	void OnReleaseUp__DelegateSignature(class UUIW_Spinner_C* Spinner);
	void OnReleaseDown__DelegateSignature(class UUIW_Spinner_C* Spinner);
	void ExecuteUbergraph_UIW_Spinner(int32 EntryPoint);
	void Destruct();
	void PreConstruct(bool IsDesignTime);
	void BndEvt__Btn_Select_K2Node_ComponentBoundEvent_0_OnButtonReleasedEvent__DelegateSignature();
	void Construct();
	void SetValue(int32 Value, bool Init);
	void SetSelected(bool IsSelected_0);
	void GetInitValue(int32* Value);
	void GetValue(int32* Value);
	void GetSelected(bool* IsSelected_0);
	struct FEventReply OnMouseWheel(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);
	void PressUp();
	void ReleaseUp();
	void CallUp();
	void PressDown();
	void ReleaseDown();
	void CallDown();
	void Horvered();
	void Unhorvered();
	void SetEnabledUp(bool Enabled);
	void SetEnabledDown(bool Enabled);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"UIW_Spinner_C">();
	}
	static class UUIW_Spinner_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUIW_Spinner_C>();
	}
};
static_assert(alignof(UUIW_Spinner_C) == 0x000008, "Wrong alignment on UUIW_Spinner_C");
static_assert(sizeof(UUIW_Spinner_C) == 0x0003C0, "Wrong size on UUIW_Spinner_C");
static_assert(offsetof(UUIW_Spinner_C, UberGraphFrame) == 0x0002A8, "Member 'UUIW_Spinner_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UUIW_Spinner_C, Btn_BG) == 0x0002B0, "Member 'UUIW_Spinner_C::Btn_BG' has a wrong offset!");
static_assert(offsetof(UUIW_Spinner_C, Btn_Down_H) == 0x0002B8, "Member 'UUIW_Spinner_C::Btn_Down_H' has a wrong offset!");
static_assert(offsetof(UUIW_Spinner_C, Btn_Down_V) == 0x0002C0, "Member 'UUIW_Spinner_C::Btn_Down_V' has a wrong offset!");
static_assert(offsetof(UUIW_Spinner_C, Btn_Select) == 0x0002C8, "Member 'UUIW_Spinner_C::Btn_Select' has a wrong offset!");
static_assert(offsetof(UUIW_Spinner_C, Btn_Up_H) == 0x0002D0, "Member 'UUIW_Spinner_C::Btn_Up_H' has a wrong offset!");
static_assert(offsetof(UUIW_Spinner_C, Btn_Up_V) == 0x0002D8, "Member 'UUIW_Spinner_C::Btn_Up_V' has a wrong offset!");
static_assert(offsetof(UUIW_Spinner_C, Img_Hover) == 0x0002E0, "Member 'UUIW_Spinner_C::Img_Hover' has a wrong offset!");
static_assert(offsetof(UUIW_Spinner_C, Num_0) == 0x0002E8, "Member 'UUIW_Spinner_C::Num_0' has a wrong offset!");
static_assert(offsetof(UUIW_Spinner_C, Num_1) == 0x0002F0, "Member 'UUIW_Spinner_C::Num_1' has a wrong offset!");
static_assert(offsetof(UUIW_Spinner_C, Num_2) == 0x0002F8, "Member 'UUIW_Spinner_C::Num_2' has a wrong offset!");
static_assert(offsetof(UUIW_Spinner_C, Num_3) == 0x000300, "Member 'UUIW_Spinner_C::Num_3' has a wrong offset!");
static_assert(offsetof(UUIW_Spinner_C, Num_4) == 0x000308, "Member 'UUIW_Spinner_C::Num_4' has a wrong offset!");
static_assert(offsetof(UUIW_Spinner_C, Num_5) == 0x000310, "Member 'UUIW_Spinner_C::Num_5' has a wrong offset!");
static_assert(offsetof(UUIW_Spinner_C, Num_6) == 0x000318, "Member 'UUIW_Spinner_C::Num_6' has a wrong offset!");
static_assert(offsetof(UUIW_Spinner_C, Num_7) == 0x000320, "Member 'UUIW_Spinner_C::Num_7' has a wrong offset!");
static_assert(offsetof(UUIW_Spinner_C, Num_8) == 0x000328, "Member 'UUIW_Spinner_C::Num_8' has a wrong offset!");
static_assert(offsetof(UUIW_Spinner_C, Num_9) == 0x000330, "Member 'UUIW_Spinner_C::Num_9' has a wrong offset!");
static_assert(offsetof(UUIW_Spinner_C, SpinnerBox) == 0x000338, "Member 'UUIW_Spinner_C::SpinnerBox' has a wrong offset!");
static_assert(offsetof(UUIW_Spinner_C, CurrentValue) == 0x000340, "Member 'UUIW_Spinner_C::CurrentValue' has a wrong offset!");
static_assert(offsetof(UUIW_Spinner_C, OnSelected) == 0x000348, "Member 'UUIW_Spinner_C::OnSelected' has a wrong offset!");
static_assert(offsetof(UUIW_Spinner_C, OnHovered) == 0x000358, "Member 'UUIW_Spinner_C::OnHovered' has a wrong offset!");
static_assert(offsetof(UUIW_Spinner_C, OnUnhovered) == 0x000368, "Member 'UUIW_Spinner_C::OnUnhovered' has a wrong offset!");
static_assert(offsetof(UUIW_Spinner_C, IsSelected) == 0x000378, "Member 'UUIW_Spinner_C::IsSelected' has a wrong offset!");
static_assert(offsetof(UUIW_Spinner_C, OnReleaseUp) == 0x000380, "Member 'UUIW_Spinner_C::OnReleaseUp' has a wrong offset!");
static_assert(offsetof(UUIW_Spinner_C, OnReleaseDown) == 0x000390, "Member 'UUIW_Spinner_C::OnReleaseDown' has a wrong offset!");
static_assert(offsetof(UUIW_Spinner_C, TimerHandle) == 0x0003A0, "Member 'UUIW_Spinner_C::TimerHandle' has a wrong offset!");
static_assert(offsetof(UUIW_Spinner_C, NumList) == 0x0003A8, "Member 'UUIW_Spinner_C::NumList' has a wrong offset!");
static_assert(offsetof(UUIW_Spinner_C, InitValue) == 0x0003B8, "Member 'UUIW_Spinner_C::InitValue' has a wrong offset!");
static_assert(offsetof(UUIW_Spinner_C, Arrow_Orientation) == 0x0003BC, "Member 'UUIW_Spinner_C::Arrow_Orientation' has a wrong offset!");
static_assert(offsetof(UUIW_Spinner_C, IsControllable) == 0x0003BD, "Member 'UUIW_Spinner_C::IsControllable' has a wrong offset!");
static_assert(offsetof(UUIW_Spinner_C, IsEnabledWheel) == 0x0003BE, "Member 'UUIW_Spinner_C::IsEnabledWheel' has a wrong offset!");
static_assert(offsetof(UUIW_Spinner_C, NeedAccentDiffence) == 0x0003BF, "Member 'UUIW_Spinner_C::NeedAccentDiffence' has a wrong offset!");

}


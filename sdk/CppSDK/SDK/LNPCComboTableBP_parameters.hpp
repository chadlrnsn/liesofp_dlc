#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: LNPCComboTableBP

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function LNPCComboTableBP.LNPCComboTableBP_C.ExecuteUbergraph_LNPCComboTableBP
// 0x0030 (0x0030 - 0x0000)
struct LNPCComboTableBP_C_ExecuteUbergraph_LNPCComboTableBP final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_TargetActor;                          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Event_Command;                              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_Lever;                                // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ULActBase*                              K2Node_Event_CurrAction;                           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(LNPCComboTableBP_C_ExecuteUbergraph_LNPCComboTableBP) == 0x000008, "Wrong alignment on LNPCComboTableBP_C_ExecuteUbergraph_LNPCComboTableBP");
static_assert(sizeof(LNPCComboTableBP_C_ExecuteUbergraph_LNPCComboTableBP) == 0x000030, "Wrong size on LNPCComboTableBP_C_ExecuteUbergraph_LNPCComboTableBP");
static_assert(offsetof(LNPCComboTableBP_C_ExecuteUbergraph_LNPCComboTableBP, EntryPoint) == 0x000000, "Member 'LNPCComboTableBP_C_ExecuteUbergraph_LNPCComboTableBP::EntryPoint' has a wrong offset!");
static_assert(offsetof(LNPCComboTableBP_C_ExecuteUbergraph_LNPCComboTableBP, K2Node_Event_TargetActor) == 0x000008, "Member 'LNPCComboTableBP_C_ExecuteUbergraph_LNPCComboTableBP::K2Node_Event_TargetActor' has a wrong offset!");
static_assert(offsetof(LNPCComboTableBP_C_ExecuteUbergraph_LNPCComboTableBP, K2Node_Event_Command) == 0x000010, "Member 'LNPCComboTableBP_C_ExecuteUbergraph_LNPCComboTableBP::K2Node_Event_Command' has a wrong offset!");
static_assert(offsetof(LNPCComboTableBP_C_ExecuteUbergraph_LNPCComboTableBP, K2Node_Event_Lever) == 0x000018, "Member 'LNPCComboTableBP_C_ExecuteUbergraph_LNPCComboTableBP::K2Node_Event_Lever' has a wrong offset!");
static_assert(offsetof(LNPCComboTableBP_C_ExecuteUbergraph_LNPCComboTableBP, K2Node_Event_CurrAction) == 0x000028, "Member 'LNPCComboTableBP_C_ExecuteUbergraph_LNPCComboTableBP::K2Node_Event_CurrAction' has a wrong offset!");

// Function LNPCComboTableBP.LNPCComboTableBP_C.Traverse
// 0x0028 (0x0028 - 0x0000)
struct LNPCComboTableBP_C_Traverse final
{
public:
	class AActor*                                 TargetActor;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Command;                                           // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Lever;                                             // 0x0010(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ULActBase*                              CurrAction;                                        // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(LNPCComboTableBP_C_Traverse) == 0x000008, "Wrong alignment on LNPCComboTableBP_C_Traverse");
static_assert(sizeof(LNPCComboTableBP_C_Traverse) == 0x000028, "Wrong size on LNPCComboTableBP_C_Traverse");
static_assert(offsetof(LNPCComboTableBP_C_Traverse, TargetActor) == 0x000000, "Member 'LNPCComboTableBP_C_Traverse::TargetActor' has a wrong offset!");
static_assert(offsetof(LNPCComboTableBP_C_Traverse, Command) == 0x000008, "Member 'LNPCComboTableBP_C_Traverse::Command' has a wrong offset!");
static_assert(offsetof(LNPCComboTableBP_C_Traverse, Lever) == 0x000010, "Member 'LNPCComboTableBP_C_Traverse::Lever' has a wrong offset!");
static_assert(offsetof(LNPCComboTableBP_C_Traverse, CurrAction) == 0x000020, "Member 'LNPCComboTableBP_C_Traverse::CurrAction' has a wrong offset!");

}


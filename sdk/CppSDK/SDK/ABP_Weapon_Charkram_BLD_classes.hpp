#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_Weapon_Charkram_BLD

#include "Basic.hpp"

#include "ProjectP_classes.hpp"
#include "Engine_structs.hpp"
#include "AnimGraphRuntime_structs.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass ABP_Weapon_Charkram_BLD.ABP_Weapon_Charkram_BLD_C
// 0x03F0 (0x06B0 - 0x02C0)
class UABP_Weapon_Charkram_BLD_C final : public ULWeaponAnimInstance
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x02C8(0x0030)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_5;                  // 0x02F8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_4;                  // 0x0320(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_3;                  // 0x0348(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_2;                  // 0x0370(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_1;                  // 0x0398(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult;                    // 0x03C0(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_2;                    // 0x03E8(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_2;                       // 0x0468(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x0498(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_1;                       // 0x0518(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x0548(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x05C8(0x0030)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x05F8(0x00B0)()
	bool                                          IsThrown;                                          // 0x06A8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_ABP_Weapon_Charkram_BLD(int32 EntryPoint);
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Weapon_Charkram_BLD_AnimGraphNode_TransitionResult_C6FFB44E4D062ABB2FC25F809C59BDF5();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Weapon_Charkram_BLD_AnimGraphNode_TransitionResult_8B56CAE44A346C783A59D1BA25709B68();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Weapon_Charkram_BLD_AnimGraphNode_TransitionResult_ACE6110742608FAE4B4F9F835FFF7028();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Weapon_Charkram_BLD_AnimGraphNode_TransitionResult_1AB38D604D65E432B578849B45602333();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Weapon_Charkram_BLD_AnimGraphNode_TransitionResult_657B00DE42F1E63D67EC3B8FC8355E4B();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Weapon_Charkram_BLD_AnimGraphNode_TransitionResult_FDD4BD0C4C3A3C2E9A5FDD99A784D0F6();
	void AnimGraph(struct FPoseLink* AnimGraph_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ABP_Weapon_Charkram_BLD_C">();
	}
	static class UABP_Weapon_Charkram_BLD_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UABP_Weapon_Charkram_BLD_C>();
	}
};
static_assert(alignof(UABP_Weapon_Charkram_BLD_C) == 0x000010, "Wrong alignment on UABP_Weapon_Charkram_BLD_C");
static_assert(sizeof(UABP_Weapon_Charkram_BLD_C) == 0x0006B0, "Wrong size on UABP_Weapon_Charkram_BLD_C");
static_assert(offsetof(UABP_Weapon_Charkram_BLD_C, UberGraphFrame) == 0x0002C0, "Member 'UABP_Weapon_Charkram_BLD_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UABP_Weapon_Charkram_BLD_C, AnimGraphNode_Root) == 0x0002C8, "Member 'UABP_Weapon_Charkram_BLD_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UABP_Weapon_Charkram_BLD_C, AnimGraphNode_TransitionResult_5) == 0x0002F8, "Member 'UABP_Weapon_Charkram_BLD_C::AnimGraphNode_TransitionResult_5' has a wrong offset!");
static_assert(offsetof(UABP_Weapon_Charkram_BLD_C, AnimGraphNode_TransitionResult_4) == 0x000320, "Member 'UABP_Weapon_Charkram_BLD_C::AnimGraphNode_TransitionResult_4' has a wrong offset!");
static_assert(offsetof(UABP_Weapon_Charkram_BLD_C, AnimGraphNode_TransitionResult_3) == 0x000348, "Member 'UABP_Weapon_Charkram_BLD_C::AnimGraphNode_TransitionResult_3' has a wrong offset!");
static_assert(offsetof(UABP_Weapon_Charkram_BLD_C, AnimGraphNode_TransitionResult_2) == 0x000370, "Member 'UABP_Weapon_Charkram_BLD_C::AnimGraphNode_TransitionResult_2' has a wrong offset!");
static_assert(offsetof(UABP_Weapon_Charkram_BLD_C, AnimGraphNode_TransitionResult_1) == 0x000398, "Member 'UABP_Weapon_Charkram_BLD_C::AnimGraphNode_TransitionResult_1' has a wrong offset!");
static_assert(offsetof(UABP_Weapon_Charkram_BLD_C, AnimGraphNode_TransitionResult) == 0x0003C0, "Member 'UABP_Weapon_Charkram_BLD_C::AnimGraphNode_TransitionResult' has a wrong offset!");
static_assert(offsetof(UABP_Weapon_Charkram_BLD_C, AnimGraphNode_SequencePlayer_2) == 0x0003E8, "Member 'UABP_Weapon_Charkram_BLD_C::AnimGraphNode_SequencePlayer_2' has a wrong offset!");
static_assert(offsetof(UABP_Weapon_Charkram_BLD_C, AnimGraphNode_StateResult_2) == 0x000468, "Member 'UABP_Weapon_Charkram_BLD_C::AnimGraphNode_StateResult_2' has a wrong offset!");
static_assert(offsetof(UABP_Weapon_Charkram_BLD_C, AnimGraphNode_SequencePlayer_1) == 0x000498, "Member 'UABP_Weapon_Charkram_BLD_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UABP_Weapon_Charkram_BLD_C, AnimGraphNode_StateResult_1) == 0x000518, "Member 'UABP_Weapon_Charkram_BLD_C::AnimGraphNode_StateResult_1' has a wrong offset!");
static_assert(offsetof(UABP_Weapon_Charkram_BLD_C, AnimGraphNode_SequencePlayer) == 0x000548, "Member 'UABP_Weapon_Charkram_BLD_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UABP_Weapon_Charkram_BLD_C, AnimGraphNode_StateResult) == 0x0005C8, "Member 'UABP_Weapon_Charkram_BLD_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(UABP_Weapon_Charkram_BLD_C, AnimGraphNode_StateMachine) == 0x0005F8, "Member 'UABP_Weapon_Charkram_BLD_C::AnimGraphNode_StateMachine' has a wrong offset!");
static_assert(offsetof(UABP_Weapon_Charkram_BLD_C, IsThrown) == 0x0006A8, "Member 'UABP_Weapon_Charkram_BLD_C::IsThrown' has a wrong offset!");

}


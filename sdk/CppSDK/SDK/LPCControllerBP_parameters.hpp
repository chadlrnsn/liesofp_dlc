#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: LPCControllerBP

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "ProjectP_structs.hpp"
#include "InputCore_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function LPCControllerBP.LPCControllerBP_C.ExecuteUbergraph_LPCControllerBP
// 0x0330 (0x0330 - 0x0000)
struct LPCControllerBP_C_ExecuteUbergraph_LPCControllerBP final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue;           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ALPCCharacter*                          K2Node_DynamicCast_AsLPCCharacter;                 // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UMaterialInterface*>             CallFunc_GetMaterials_ReturnValue;                 // 0x0028(0x0010)(ReferenceParm)
	float                                         K2Node_InputAxisEvent_AxisValue_3;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     CallFunc_Array_Get_Item;                           // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_InputAxisEvent_AxisValue_2;                 // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULEventDispatcherSystem*                CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_InputAxisEvent_AxisValue_1;                 // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_InputAxisEvent_AxisValue;                   // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   Temp_struct_Variable;                              // 0x0068(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_4;                     // 0x0080(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_IsInteractionStatus_ReturnValue;          // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsInteractionMotion_ReturnValue;          // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x009A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsInteractionLadder_ReturnValue;          // 0x009B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9C[0x4];                                       // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputActionEvent_Key_5;                     // 0x00A0(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_6;                     // 0x00B8(0x0018)(HasGetValueTypeHash)
	class ULItemSystem*                           CallFunc_GetGameInstanceSubsystem_ReturnValue_1;   // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_InputCommand_GuardEnd_ReturnValue;        // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULPlayerEquipment*                      CallFunc_GetPlayerEquipment_ReturnValue;           // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_7;                     // 0x00E8(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_SwapUseSlotsLine_ReturnValue;             // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_101[0x3];                                      // 0x0101(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLUseItemSlot                          CallFunc_GetChosenUseItem_ReturnValue;             // 0x0104(0x0014)(NoDestructor)
	bool                                          CallFunc_EqualEqual_BoolBool_ReturnValue;          // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_119[0x7];                                      // 0x0119(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputActionEvent_Key_8;                     // 0x0120(0x0018)(HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlayingSequence_ReturnValue;            // 0x013C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x013D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x013E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_13F[0x1];                                      // 0x013F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_ActionState_LockUseSkill_ReturnValue;     // 0x0144(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14C[0x4];                                      // 0x014C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_ActionState_LockUseSkill_ReturnValue_1;   // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EExecutePin                                   CallFunc_GetActMgrComponentBP_Branches;            // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_161[0x7];                                      // 0x0161(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ULActMgrComponent*                      CallFunc_GetActMgrComponentBP_ReturnValue;         // 0x0168(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlayingSequence_ReturnValue_1;          // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_FindActionState_ReturnValue;              // 0x0171(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0172(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0173(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0174(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0175(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_176[0x2];                                      // 0x0176(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class ULEventDispatcherSystem*                CallFunc_GetGameInstanceSubsystem_ReturnValue_2;   // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue_1;                 // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key;                       // 0x0188(0x0018)(HasGetValueTypeHash)
	EExecutePin                                   CallFunc_GetActMgrComponentBP_Branches_1;          // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A1[0x7];                                      // 0x01A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ULActMgrComponent*                      CallFunc_GetActMgrComponentBP_ReturnValue_1;       // 0x01A8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_9;                     // 0x01B0(0x0018)(HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1C9[0x3];                                      // 0x01C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_ActionState_LockUseSkill_ReturnValue_2;   // 0x01CC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D4[0x4];                                      // 0x01D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   Temp_struct_Variable_1;                            // 0x01D8(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_FindActionState_ReturnValue_1;            // 0x01F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x01F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_BoolBool_ReturnValue_1;        // 0x01F2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x01F3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1F4[0x4];                                      // 0x01F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputActionEvent_Key_10;                    // 0x01F8(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_11;                    // 0x0210(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_1;                     // 0x0228(0x0018)(HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0240(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_244[0x4];                                      // 0x0244(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue_2;                 // 0x0248(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_12;                    // 0x0250(0x0018)(HasGetValueTypeHash)
	EExecutePin                                   CallFunc_GetActMgrComponentBP_Branches_2;          // 0x0268(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_269[0x7];                                      // 0x0269(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ULActMgrComponent*                      CallFunc_GetActMgrComponentBP_ReturnValue_2;       // 0x0270(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_2;                     // 0x0278(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_FindActionState_ReturnValue_2;            // 0x0290(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess_2;                    // 0x0291(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_4;                // 0x0292(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_293[0x5];                                      // 0x0293(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputActionEvent_Key_3;                     // 0x0298(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_IsPlayingSequence_ReturnValue_2;          // 0x02B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2B1[0x7];                                      // 0x02B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue_3;                 // 0x02B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_5;                // 0x02C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C1[0x3];                                      // 0x02C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetCurrentLever_ReturnValue;              // 0x02C4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x02D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EExecutePin                                   CallFunc_GetActMgrComponentBP_Branches_3;          // 0x02D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D2[0x6];                                      // 0x02D2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ULActMgrComponent*                      CallFunc_GetActMgrComponentBP_ReturnValue_3;       // 0x02D8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULActBase*                              CallFunc_ProcessCommand_ReturnValue;               // 0x02E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_3;                    // 0x02E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ProcessAction_ReturnValue;                // 0x02E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x02EA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2EB[0x5];                                      // 0x02EB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_Event_Command;                              // 0x02F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TArray<class FString>                         K2Node_Event_Args;                                 // 0x0300(0x0010)(ConstParm, ReferenceParm)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0310(0x0010)(ZeroConstructor, NoDestructor)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0320(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchString_CmpSuccess;                    // 0x0328(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(LPCControllerBP_C_ExecuteUbergraph_LPCControllerBP) == 0x000008, "Wrong alignment on LPCControllerBP_C_ExecuteUbergraph_LPCControllerBP");
static_assert(sizeof(LPCControllerBP_C_ExecuteUbergraph_LPCControllerBP) == 0x000330, "Wrong size on LPCControllerBP_C_ExecuteUbergraph_LPCControllerBP");
static_assert(offsetof(LPCControllerBP_C_ExecuteUbergraph_LPCControllerBP, EntryPoint) == 0x000000, "Member 'LPCControllerBP_C_ExecuteUbergraph_LPCControllerBP::EntryPoint' has a wrong offset!");
static_assert(offsetof(LPCControllerBP_C_ExecuteUbergraph_LPCControllerBP, CallFunc_GetPlayerCharacter_ReturnValue) == 0x000008, "Member 'LPCControllerBP_C_ExecuteUbergraph_LPCControllerBP::CallFunc_GetPlayerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(LPCControllerBP_C_ExecuteUbergraph_LPCControllerBP, Temp_int_Array_Index_Variable) == 0x000010, "Member 'LPCControllerBP_C_ExecuteUbergraph_LPCControllerBP::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(LPCControllerBP_C_ExecuteUbergraph_LPCControllerBP, K2Node_DynamicCast_AsLPCCharacter) == 0x000018, "Member 'LPCControllerBP_C_ExecuteUbergraph_LPCControllerBP::K2Node_DynamicCast_AsLPCCharacter' has a wrong offset!");
static_assert(offsetof(LPCControllerBP_C_ExecuteUbergraph_LPCControllerBP, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'LPCControllerBP_C_ExecuteUbergraph_LPCControllerBP::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(LPCControllerBP_C_ExecuteUbergraph_LPCControllerBP, CallFunc_GetMaterials_ReturnValue) == 0x000028, "Member 'LPCControllerBP_C_ExecuteUbergraph_LPCControllerBP::CallFunc_GetMaterials_ReturnValue' has a wrong offset!");
static_assert(offsetof(LPCControllerBP_C_ExecuteUbergraph_LPCControllerBP, K2Node_InputAxisEvent_AxisValue_3) == 0x000038, "Member 'LPCControllerBP_C_ExecuteUbergraph_LPCControllerBP::K2Node_InputAxisEvent_AxisValue_3' has a wrong offset!");
static_assert(offsetof(LPCControllerBP_C_ExecuteUbergraph_LPCControllerBP, CallFunc_Array_Get_Item) == 0x000040, "Member 'LPCControllerBP_C_ExecuteUbergraph_LPCControllerBP::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(LPCControllerBP_C_ExecuteUbergraph_LPCControllerBP, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000048, "Member 'LPCControllerBP_C_ExecuteUbergraph_LPCControllerBP::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(LPCControllerBP_C_ExecuteUbergraph_LPCControllerBP, CallFunc_Array_Length_ReturnValue) == 0x000050, "Member 'LPCControllerBP_C_ExecuteUbergraph_LPCControllerBP::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(LPCControllerBP_C_ExecuteUbergraph_LPCControllerBP, K2Node_InputAxisEvent_AxisValue_2) == 0x000054, "Member 'LPCControllerBP_C_ExecuteUbergraph_LPCControllerBP::K2Node_InputAxisEvent_AxisValue_2' has a wrong offset!");
static_assert(offsetof(LPCControllerBP_C_ExecuteUbergraph_LPCControllerBP, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000058, "Member 'LPCControllerBP_C_ExecuteUbergraph_LPCControllerBP::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(LPCControllerBP_C_ExecuteUbergraph_LPCControllerBP, K2Node_InputAxisEvent_AxisValue_1) == 0x000060, "Member 'LPCControllerBP_C_ExecuteUbergraph_LPCControllerBP::K2Node_InputAxisEvent_AxisValue_1' has a wrong offset!");
static_assert(offsetof(LPCControllerBP_C_ExecuteUbergraph_LPCControllerBP, K2Node_InputAxisEvent_AxisValue) == 0x000064, "Member 'LPCControllerBP_C_ExecuteUbergraph_LPCControllerBP::K2Node_InputAxisEvent_AxisValue' has a wrong offset!");
static_assert(offsetof(LPCControllerBP_C_ExecuteUbergraph_LPCControllerBP, Temp_struct_Variable) == 0x000068, "Member 'LPCControllerBP_C_ExecuteUbergraph_LPCControllerBP::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(LPCControllerBP_C_ExecuteUbergraph_LPCControllerBP, K2Node_InputActionEvent_Key_4) == 0x000080, "Member 'LPCControllerBP_C_ExecuteUbergraph_LPCControllerBP::K2Node_InputActionEvent_Key_4' has a wrong offset!");
static_assert(offsetof(LPCControllerBP_C_ExecuteUbergraph_LPCControllerBP, CallFunc_IsInteractionStatus_ReturnValue) == 0x000098, "Member 'LPCControllerBP_C_ExecuteUbergraph_LPCControllerBP::CallFunc_IsInteractionStatus_ReturnValue' has a wrong offset!");
static_assert(offsetof(LPCControllerBP_C_ExecuteUbergraph_LPCControllerBP, CallFunc_IsInteractionMotion_ReturnValue) == 0x000099, "Member 'LPCControllerBP_C_ExecuteUbergraph_LPCControllerBP::CallFunc_IsInteractionMotion_ReturnValue' has a wrong offset!");
static_assert(offsetof(LPCControllerBP_C_ExecuteUbergraph_LPCControllerBP, CallFunc_BooleanAND_ReturnValue) == 0x00009A, "Member 'LPCControllerBP_C_ExecuteUbergraph_LPCControllerBP::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(LPCControllerBP_C_ExecuteUbergraph_LPCControllerBP, CallFunc_IsInteractionLadder_ReturnValue) == 0x00009B, "Member 'LPCControllerBP_C_ExecuteUbergraph_LPCControllerBP::CallFunc_IsInteractionLadder_ReturnValue' has a wrong offset!");
static_assert(offsetof(LPCControllerBP_C_ExecuteUbergraph_LPCControllerBP, K2Node_InputActionEvent_Key_5) == 0x0000A0, "Member 'LPCControllerBP_C_ExecuteUbergraph_LPCControllerBP::K2Node_InputActionEvent_Key_5' has a wrong offset!");
static_assert(offsetof(LPCControllerBP_C_ExecuteUbergraph_LPCControllerBP, K2Node_InputActionEvent_Key_6) == 0x0000B8, "Member 'LPCControllerBP_C_ExecuteUbergraph_LPCControllerBP::K2Node_InputActionEvent_Key_6' has a wrong offset!");
static_assert(offsetof(LPCControllerBP_C_ExecuteUbergraph_LPCControllerBP, CallFunc_GetGameInstanceSubsystem_ReturnValue_1) == 0x0000D0, "Member 'LPCControllerBP_C_ExecuteUbergraph_LPCControllerBP::CallFunc_GetGameInstanceSubsystem_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(LPCControllerBP_C_ExecuteUbergraph_LPCControllerBP, CallFunc_InputCommand_GuardEnd_ReturnValue) == 0x0000D8, "Member 'LPCControllerBP_C_ExecuteUbergraph_LPCControllerBP::CallFunc_InputCommand_GuardEnd_ReturnValue' has a wrong offset!");
static_assert(offsetof(LPCControllerBP_C_ExecuteUbergraph_LPCControllerBP, CallFunc_GetPlayerEquipment_ReturnValue) == 0x0000E0, "Member 'LPCControllerBP_C_ExecuteUbergraph_LPCControllerBP::CallFunc_GetPlayerEquipment_ReturnValue' has a wrong offset!");
static_assert(offsetof(LPCControllerBP_C_ExecuteUbergraph_LPCControllerBP, K2Node_InputActionEvent_Key_7) == 0x0000E8, "Member 'LPCControllerBP_C_ExecuteUbergraph_LPCControllerBP::K2Node_InputActionEvent_Key_7' has a wrong offset!");
static_assert(offsetof(LPCControllerBP_C_ExecuteUbergraph_LPCControllerBP, CallFunc_SwapUseSlotsLine_ReturnValue) == 0x000100, "Member 'LPCControllerBP_C_ExecuteUbergraph_LPCControllerBP::CallFunc_SwapUseSlotsLine_ReturnValue' has a wrong offset!");
static_assert(offsetof(LPCControllerBP_C_ExecuteUbergraph_LPCControllerBP, CallFunc_GetChosenUseItem_ReturnValue) == 0x000104, "Member 'LPCControllerBP_C_ExecuteUbergraph_LPCControllerBP::CallFunc_GetChosenUseItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(LPCControllerBP_C_ExecuteUbergraph_LPCControllerBP, CallFunc_EqualEqual_BoolBool_ReturnValue) == 0x000118, "Member 'LPCControllerBP_C_ExecuteUbergraph_LPCControllerBP::CallFunc_EqualEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(LPCControllerBP_C_ExecuteUbergraph_LPCControllerBP, K2Node_InputActionEvent_Key_8) == 0x000120, "Member 'LPCControllerBP_C_ExecuteUbergraph_LPCControllerBP::K2Node_InputActionEvent_Key_8' has a wrong offset!");
static_assert(offsetof(LPCControllerBP_C_ExecuteUbergraph_LPCControllerBP, Temp_int_Loop_Counter_Variable) == 0x000138, "Member 'LPCControllerBP_C_ExecuteUbergraph_LPCControllerBP::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(LPCControllerBP_C_ExecuteUbergraph_LPCControllerBP, CallFunc_IsPlayingSequence_ReturnValue) == 0x00013C, "Member 'LPCControllerBP_C_ExecuteUbergraph_LPCControllerBP::CallFunc_IsPlayingSequence_ReturnValue' has a wrong offset!");
static_assert(offsetof(LPCControllerBP_C_ExecuteUbergraph_LPCControllerBP, CallFunc_Not_PreBool_ReturnValue) == 0x00013D, "Member 'LPCControllerBP_C_ExecuteUbergraph_LPCControllerBP::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(LPCControllerBP_C_ExecuteUbergraph_LPCControllerBP, CallFunc_Less_IntInt_ReturnValue) == 0x00013E, "Member 'LPCControllerBP_C_ExecuteUbergraph_LPCControllerBP::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(LPCControllerBP_C_ExecuteUbergraph_LPCControllerBP, CallFunc_Add_IntInt_ReturnValue) == 0x000140, "Member 'LPCControllerBP_C_ExecuteUbergraph_LPCControllerBP::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(LPCControllerBP_C_ExecuteUbergraph_LPCControllerBP, CallFunc_ActionState_LockUseSkill_ReturnValue) == 0x000144, "Member 'LPCControllerBP_C_ExecuteUbergraph_LPCControllerBP::CallFunc_ActionState_LockUseSkill_ReturnValue' has a wrong offset!");
static_assert(offsetof(LPCControllerBP_C_ExecuteUbergraph_LPCControllerBP, CallFunc_K2_GetPawn_ReturnValue) == 0x000150, "Member 'LPCControllerBP_C_ExecuteUbergraph_LPCControllerBP::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(LPCControllerBP_C_ExecuteUbergraph_LPCControllerBP, CallFunc_ActionState_LockUseSkill_ReturnValue_1) == 0x000158, "Member 'LPCControllerBP_C_ExecuteUbergraph_LPCControllerBP::CallFunc_ActionState_LockUseSkill_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(LPCControllerBP_C_ExecuteUbergraph_LPCControllerBP, CallFunc_GetActMgrComponentBP_Branches) == 0x000160, "Member 'LPCControllerBP_C_ExecuteUbergraph_LPCControllerBP::CallFunc_GetActMgrComponentBP_Branches' has a wrong offset!");
static_assert(offsetof(LPCControllerBP_C_ExecuteUbergraph_LPCControllerBP, CallFunc_GetActMgrComponentBP_ReturnValue) == 0x000168, "Member 'LPCControllerBP_C_ExecuteUbergraph_LPCControllerBP::CallFunc_GetActMgrComponentBP_ReturnValue' has a wrong offset!");
static_assert(offsetof(LPCControllerBP_C_ExecuteUbergraph_LPCControllerBP, CallFunc_IsPlayingSequence_ReturnValue_1) == 0x000170, "Member 'LPCControllerBP_C_ExecuteUbergraph_LPCControllerBP::CallFunc_IsPlayingSequence_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(LPCControllerBP_C_ExecuteUbergraph_LPCControllerBP, CallFunc_FindActionState_ReturnValue) == 0x000171, "Member 'LPCControllerBP_C_ExecuteUbergraph_LPCControllerBP::CallFunc_FindActionState_ReturnValue' has a wrong offset!");
static_assert(offsetof(LPCControllerBP_C_ExecuteUbergraph_LPCControllerBP, CallFunc_Not_PreBool_ReturnValue_1) == 0x000172, "Member 'LPCControllerBP_C_ExecuteUbergraph_LPCControllerBP::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(LPCControllerBP_C_ExecuteUbergraph_LPCControllerBP, CallFunc_Not_PreBool_ReturnValue_2) == 0x000173, "Member 'LPCControllerBP_C_ExecuteUbergraph_LPCControllerBP::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(LPCControllerBP_C_ExecuteUbergraph_LPCControllerBP, K2Node_SwitchEnum_CmpSuccess) == 0x000174, "Member 'LPCControllerBP_C_ExecuteUbergraph_LPCControllerBP::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(LPCControllerBP_C_ExecuteUbergraph_LPCControllerBP, CallFunc_BooleanAND_ReturnValue_1) == 0x000175, "Member 'LPCControllerBP_C_ExecuteUbergraph_LPCControllerBP::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(LPCControllerBP_C_ExecuteUbergraph_LPCControllerBP, CallFunc_GetGameInstanceSubsystem_ReturnValue_2) == 0x000178, "Member 'LPCControllerBP_C_ExecuteUbergraph_LPCControllerBP::CallFunc_GetGameInstanceSubsystem_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(LPCControllerBP_C_ExecuteUbergraph_LPCControllerBP, CallFunc_K2_GetPawn_ReturnValue_1) == 0x000180, "Member 'LPCControllerBP_C_ExecuteUbergraph_LPCControllerBP::CallFunc_K2_GetPawn_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(LPCControllerBP_C_ExecuteUbergraph_LPCControllerBP, K2Node_InputActionEvent_Key) == 0x000188, "Member 'LPCControllerBP_C_ExecuteUbergraph_LPCControllerBP::K2Node_InputActionEvent_Key' has a wrong offset!");
static_assert(offsetof(LPCControllerBP_C_ExecuteUbergraph_LPCControllerBP, CallFunc_GetActMgrComponentBP_Branches_1) == 0x0001A0, "Member 'LPCControllerBP_C_ExecuteUbergraph_LPCControllerBP::CallFunc_GetActMgrComponentBP_Branches_1' has a wrong offset!");
static_assert(offsetof(LPCControllerBP_C_ExecuteUbergraph_LPCControllerBP, CallFunc_GetActMgrComponentBP_ReturnValue_1) == 0x0001A8, "Member 'LPCControllerBP_C_ExecuteUbergraph_LPCControllerBP::CallFunc_GetActMgrComponentBP_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(LPCControllerBP_C_ExecuteUbergraph_LPCControllerBP, K2Node_InputActionEvent_Key_9) == 0x0001B0, "Member 'LPCControllerBP_C_ExecuteUbergraph_LPCControllerBP::K2Node_InputActionEvent_Key_9' has a wrong offset!");
static_assert(offsetof(LPCControllerBP_C_ExecuteUbergraph_LPCControllerBP, K2Node_SwitchEnum_CmpSuccess_1) == 0x0001C8, "Member 'LPCControllerBP_C_ExecuteUbergraph_LPCControllerBP::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(LPCControllerBP_C_ExecuteUbergraph_LPCControllerBP, CallFunc_ActionState_LockUseSkill_ReturnValue_2) == 0x0001CC, "Member 'LPCControllerBP_C_ExecuteUbergraph_LPCControllerBP::CallFunc_ActionState_LockUseSkill_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(LPCControllerBP_C_ExecuteUbergraph_LPCControllerBP, Temp_struct_Variable_1) == 0x0001D8, "Member 'LPCControllerBP_C_ExecuteUbergraph_LPCControllerBP::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(LPCControllerBP_C_ExecuteUbergraph_LPCControllerBP, CallFunc_FindActionState_ReturnValue_1) == 0x0001F0, "Member 'LPCControllerBP_C_ExecuteUbergraph_LPCControllerBP::CallFunc_FindActionState_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(LPCControllerBP_C_ExecuteUbergraph_LPCControllerBP, CallFunc_Not_PreBool_ReturnValue_3) == 0x0001F1, "Member 'LPCControllerBP_C_ExecuteUbergraph_LPCControllerBP::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(LPCControllerBP_C_ExecuteUbergraph_LPCControllerBP, CallFunc_EqualEqual_BoolBool_ReturnValue_1) == 0x0001F2, "Member 'LPCControllerBP_C_ExecuteUbergraph_LPCControllerBP::CallFunc_EqualEqual_BoolBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(LPCControllerBP_C_ExecuteUbergraph_LPCControllerBP, CallFunc_BooleanAND_ReturnValue_2) == 0x0001F3, "Member 'LPCControllerBP_C_ExecuteUbergraph_LPCControllerBP::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(LPCControllerBP_C_ExecuteUbergraph_LPCControllerBP, K2Node_InputActionEvent_Key_10) == 0x0001F8, "Member 'LPCControllerBP_C_ExecuteUbergraph_LPCControllerBP::K2Node_InputActionEvent_Key_10' has a wrong offset!");
static_assert(offsetof(LPCControllerBP_C_ExecuteUbergraph_LPCControllerBP, K2Node_InputActionEvent_Key_11) == 0x000210, "Member 'LPCControllerBP_C_ExecuteUbergraph_LPCControllerBP::K2Node_InputActionEvent_Key_11' has a wrong offset!");
static_assert(offsetof(LPCControllerBP_C_ExecuteUbergraph_LPCControllerBP, K2Node_InputActionEvent_Key_1) == 0x000228, "Member 'LPCControllerBP_C_ExecuteUbergraph_LPCControllerBP::K2Node_InputActionEvent_Key_1' has a wrong offset!");
static_assert(offsetof(LPCControllerBP_C_ExecuteUbergraph_LPCControllerBP, K2Node_Event_DeltaSeconds) == 0x000240, "Member 'LPCControllerBP_C_ExecuteUbergraph_LPCControllerBP::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(LPCControllerBP_C_ExecuteUbergraph_LPCControllerBP, CallFunc_K2_GetPawn_ReturnValue_2) == 0x000248, "Member 'LPCControllerBP_C_ExecuteUbergraph_LPCControllerBP::CallFunc_K2_GetPawn_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(LPCControllerBP_C_ExecuteUbergraph_LPCControllerBP, K2Node_InputActionEvent_Key_12) == 0x000250, "Member 'LPCControllerBP_C_ExecuteUbergraph_LPCControllerBP::K2Node_InputActionEvent_Key_12' has a wrong offset!");
static_assert(offsetof(LPCControllerBP_C_ExecuteUbergraph_LPCControllerBP, CallFunc_GetActMgrComponentBP_Branches_2) == 0x000268, "Member 'LPCControllerBP_C_ExecuteUbergraph_LPCControllerBP::CallFunc_GetActMgrComponentBP_Branches_2' has a wrong offset!");
static_assert(offsetof(LPCControllerBP_C_ExecuteUbergraph_LPCControllerBP, CallFunc_GetActMgrComponentBP_ReturnValue_2) == 0x000270, "Member 'LPCControllerBP_C_ExecuteUbergraph_LPCControllerBP::CallFunc_GetActMgrComponentBP_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(LPCControllerBP_C_ExecuteUbergraph_LPCControllerBP, K2Node_InputActionEvent_Key_2) == 0x000278, "Member 'LPCControllerBP_C_ExecuteUbergraph_LPCControllerBP::K2Node_InputActionEvent_Key_2' has a wrong offset!");
static_assert(offsetof(LPCControllerBP_C_ExecuteUbergraph_LPCControllerBP, CallFunc_FindActionState_ReturnValue_2) == 0x000290, "Member 'LPCControllerBP_C_ExecuteUbergraph_LPCControllerBP::CallFunc_FindActionState_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(LPCControllerBP_C_ExecuteUbergraph_LPCControllerBP, K2Node_SwitchEnum_CmpSuccess_2) == 0x000291, "Member 'LPCControllerBP_C_ExecuteUbergraph_LPCControllerBP::K2Node_SwitchEnum_CmpSuccess_2' has a wrong offset!");
static_assert(offsetof(LPCControllerBP_C_ExecuteUbergraph_LPCControllerBP, CallFunc_Not_PreBool_ReturnValue_4) == 0x000292, "Member 'LPCControllerBP_C_ExecuteUbergraph_LPCControllerBP::CallFunc_Not_PreBool_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(LPCControllerBP_C_ExecuteUbergraph_LPCControllerBP, K2Node_InputActionEvent_Key_3) == 0x000298, "Member 'LPCControllerBP_C_ExecuteUbergraph_LPCControllerBP::K2Node_InputActionEvent_Key_3' has a wrong offset!");
static_assert(offsetof(LPCControllerBP_C_ExecuteUbergraph_LPCControllerBP, CallFunc_IsPlayingSequence_ReturnValue_2) == 0x0002B0, "Member 'LPCControllerBP_C_ExecuteUbergraph_LPCControllerBP::CallFunc_IsPlayingSequence_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(LPCControllerBP_C_ExecuteUbergraph_LPCControllerBP, CallFunc_K2_GetPawn_ReturnValue_3) == 0x0002B8, "Member 'LPCControllerBP_C_ExecuteUbergraph_LPCControllerBP::CallFunc_K2_GetPawn_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(LPCControllerBP_C_ExecuteUbergraph_LPCControllerBP, CallFunc_Not_PreBool_ReturnValue_5) == 0x0002C0, "Member 'LPCControllerBP_C_ExecuteUbergraph_LPCControllerBP::CallFunc_Not_PreBool_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(LPCControllerBP_C_ExecuteUbergraph_LPCControllerBP, CallFunc_GetCurrentLever_ReturnValue) == 0x0002C4, "Member 'LPCControllerBP_C_ExecuteUbergraph_LPCControllerBP::CallFunc_GetCurrentLever_ReturnValue' has a wrong offset!");
static_assert(offsetof(LPCControllerBP_C_ExecuteUbergraph_LPCControllerBP, CallFunc_BooleanAND_ReturnValue_3) == 0x0002D0, "Member 'LPCControllerBP_C_ExecuteUbergraph_LPCControllerBP::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(LPCControllerBP_C_ExecuteUbergraph_LPCControllerBP, CallFunc_GetActMgrComponentBP_Branches_3) == 0x0002D1, "Member 'LPCControllerBP_C_ExecuteUbergraph_LPCControllerBP::CallFunc_GetActMgrComponentBP_Branches_3' has a wrong offset!");
static_assert(offsetof(LPCControllerBP_C_ExecuteUbergraph_LPCControllerBP, CallFunc_GetActMgrComponentBP_ReturnValue_3) == 0x0002D8, "Member 'LPCControllerBP_C_ExecuteUbergraph_LPCControllerBP::CallFunc_GetActMgrComponentBP_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(LPCControllerBP_C_ExecuteUbergraph_LPCControllerBP, CallFunc_ProcessCommand_ReturnValue) == 0x0002E0, "Member 'LPCControllerBP_C_ExecuteUbergraph_LPCControllerBP::CallFunc_ProcessCommand_ReturnValue' has a wrong offset!");
static_assert(offsetof(LPCControllerBP_C_ExecuteUbergraph_LPCControllerBP, K2Node_SwitchEnum_CmpSuccess_3) == 0x0002E8, "Member 'LPCControllerBP_C_ExecuteUbergraph_LPCControllerBP::K2Node_SwitchEnum_CmpSuccess_3' has a wrong offset!");
static_assert(offsetof(LPCControllerBP_C_ExecuteUbergraph_LPCControllerBP, CallFunc_ProcessAction_ReturnValue) == 0x0002E9, "Member 'LPCControllerBP_C_ExecuteUbergraph_LPCControllerBP::CallFunc_ProcessAction_ReturnValue' has a wrong offset!");
static_assert(offsetof(LPCControllerBP_C_ExecuteUbergraph_LPCControllerBP, CallFunc_IsValid_ReturnValue) == 0x0002EA, "Member 'LPCControllerBP_C_ExecuteUbergraph_LPCControllerBP::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(LPCControllerBP_C_ExecuteUbergraph_LPCControllerBP, K2Node_Event_Command) == 0x0002F0, "Member 'LPCControllerBP_C_ExecuteUbergraph_LPCControllerBP::K2Node_Event_Command' has a wrong offset!");
static_assert(offsetof(LPCControllerBP_C_ExecuteUbergraph_LPCControllerBP, K2Node_Event_Args) == 0x000300, "Member 'LPCControllerBP_C_ExecuteUbergraph_LPCControllerBP::K2Node_Event_Args' has a wrong offset!");
static_assert(offsetof(LPCControllerBP_C_ExecuteUbergraph_LPCControllerBP, K2Node_CreateDelegate_OutputDelegate) == 0x000310, "Member 'LPCControllerBP_C_ExecuteUbergraph_LPCControllerBP::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(LPCControllerBP_C_ExecuteUbergraph_LPCControllerBP, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000320, "Member 'LPCControllerBP_C_ExecuteUbergraph_LPCControllerBP::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(LPCControllerBP_C_ExecuteUbergraph_LPCControllerBP, K2Node_SwitchString_CmpSuccess) == 0x000328, "Member 'LPCControllerBP_C_ExecuteUbergraph_LPCControllerBP::K2Node_SwitchString_CmpSuccess' has a wrong offset!");

// Function LPCControllerBP.LPCControllerBP_C.OnControllerCommand
// 0x0020 (0x0020 - 0x0000)
struct LPCControllerBP_C_OnControllerCommand final
{
public:
	class FString                                 Command;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	TArray<class FString>                         Args;                                              // 0x0010(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(LPCControllerBP_C_OnControllerCommand) == 0x000008, "Wrong alignment on LPCControllerBP_C_OnControllerCommand");
static_assert(sizeof(LPCControllerBP_C_OnControllerCommand) == 0x000020, "Wrong size on LPCControllerBP_C_OnControllerCommand");
static_assert(offsetof(LPCControllerBP_C_OnControllerCommand, Command) == 0x000000, "Member 'LPCControllerBP_C_OnControllerCommand::Command' has a wrong offset!");
static_assert(offsetof(LPCControllerBP_C_OnControllerCommand, Args) == 0x000010, "Member 'LPCControllerBP_C_OnControllerCommand::Args' has a wrong offset!");

// Function LPCControllerBP.LPCControllerBP_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct LPCControllerBP_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(LPCControllerBP_C_ReceiveTick) == 0x000004, "Wrong alignment on LPCControllerBP_C_ReceiveTick");
static_assert(sizeof(LPCControllerBP_C_ReceiveTick) == 0x000004, "Wrong size on LPCControllerBP_C_ReceiveTick");
static_assert(offsetof(LPCControllerBP_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'LPCControllerBP_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function LPCControllerBP.LPCControllerBP_C.InpAxisEvt_Look Up_K2Node_InputAxisEvent_3
// 0x0004 (0x0004 - 0x0000)
struct LPCControllerBP_C_InpAxisEvt_Look_Up_K2Node_InputAxisEvent_3 final
{
public:
	float                                         AxisValue;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(LPCControllerBP_C_InpAxisEvt_Look_Up_K2Node_InputAxisEvent_3) == 0x000004, "Wrong alignment on LPCControllerBP_C_InpAxisEvt_Look_Up_K2Node_InputAxisEvent_3");
static_assert(sizeof(LPCControllerBP_C_InpAxisEvt_Look_Up_K2Node_InputAxisEvent_3) == 0x000004, "Wrong size on LPCControllerBP_C_InpAxisEvt_Look_Up_K2Node_InputAxisEvent_3");
static_assert(offsetof(LPCControllerBP_C_InpAxisEvt_Look_Up_K2Node_InputAxisEvent_3, AxisValue) == 0x000000, "Member 'LPCControllerBP_C_InpAxisEvt_Look_Up_K2Node_InputAxisEvent_3::AxisValue' has a wrong offset!");

// Function LPCControllerBP.LPCControllerBP_C.InpAxisEvt_Turn_K2Node_InputAxisEvent_2
// 0x0004 (0x0004 - 0x0000)
struct LPCControllerBP_C_InpAxisEvt_Turn_K2Node_InputAxisEvent_2 final
{
public:
	float                                         AxisValue;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(LPCControllerBP_C_InpAxisEvt_Turn_K2Node_InputAxisEvent_2) == 0x000004, "Wrong alignment on LPCControllerBP_C_InpAxisEvt_Turn_K2Node_InputAxisEvent_2");
static_assert(sizeof(LPCControllerBP_C_InpAxisEvt_Turn_K2Node_InputAxisEvent_2) == 0x000004, "Wrong size on LPCControllerBP_C_InpAxisEvt_Turn_K2Node_InputAxisEvent_2");
static_assert(offsetof(LPCControllerBP_C_InpAxisEvt_Turn_K2Node_InputAxisEvent_2, AxisValue) == 0x000000, "Member 'LPCControllerBP_C_InpAxisEvt_Turn_K2Node_InputAxisEvent_2::AxisValue' has a wrong offset!");

// Function LPCControllerBP.LPCControllerBP_C.InpAxisEvt_MoveRight_K2Node_InputAxisEvent_1
// 0x0004 (0x0004 - 0x0000)
struct LPCControllerBP_C_InpAxisEvt_MoveRight_K2Node_InputAxisEvent_1 final
{
public:
	float                                         AxisValue;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(LPCControllerBP_C_InpAxisEvt_MoveRight_K2Node_InputAxisEvent_1) == 0x000004, "Wrong alignment on LPCControllerBP_C_InpAxisEvt_MoveRight_K2Node_InputAxisEvent_1");
static_assert(sizeof(LPCControllerBP_C_InpAxisEvt_MoveRight_K2Node_InputAxisEvent_1) == 0x000004, "Wrong size on LPCControllerBP_C_InpAxisEvt_MoveRight_K2Node_InputAxisEvent_1");
static_assert(offsetof(LPCControllerBP_C_InpAxisEvt_MoveRight_K2Node_InputAxisEvent_1, AxisValue) == 0x000000, "Member 'LPCControllerBP_C_InpAxisEvt_MoveRight_K2Node_InputAxisEvent_1::AxisValue' has a wrong offset!");

// Function LPCControllerBP.LPCControllerBP_C.InpAxisEvt_MoveForward_K2Node_InputAxisEvent_0
// 0x0004 (0x0004 - 0x0000)
struct LPCControllerBP_C_InpAxisEvt_MoveForward_K2Node_InputAxisEvent_0 final
{
public:
	float                                         AxisValue;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(LPCControllerBP_C_InpAxisEvt_MoveForward_K2Node_InputAxisEvent_0) == 0x000004, "Wrong alignment on LPCControllerBP_C_InpAxisEvt_MoveForward_K2Node_InputAxisEvent_0");
static_assert(sizeof(LPCControllerBP_C_InpAxisEvt_MoveForward_K2Node_InputAxisEvent_0) == 0x000004, "Wrong size on LPCControllerBP_C_InpAxisEvt_MoveForward_K2Node_InputAxisEvent_0");
static_assert(offsetof(LPCControllerBP_C_InpAxisEvt_MoveForward_K2Node_InputAxisEvent_0, AxisValue) == 0x000000, "Member 'LPCControllerBP_C_InpAxisEvt_MoveForward_K2Node_InputAxisEvent_0::AxisValue' has a wrong offset!");

// Function LPCControllerBP.LPCControllerBP_C.InpActEvt_WheelDown_K2Node_InputActionEvent_0
// 0x0018 (0x0018 - 0x0000)
struct LPCControllerBP_C_InpActEvt_WheelDown_K2Node_InputActionEvent_0 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(LPCControllerBP_C_InpActEvt_WheelDown_K2Node_InputActionEvent_0) == 0x000008, "Wrong alignment on LPCControllerBP_C_InpActEvt_WheelDown_K2Node_InputActionEvent_0");
static_assert(sizeof(LPCControllerBP_C_InpActEvt_WheelDown_K2Node_InputActionEvent_0) == 0x000018, "Wrong size on LPCControllerBP_C_InpActEvt_WheelDown_K2Node_InputActionEvent_0");
static_assert(offsetof(LPCControllerBP_C_InpActEvt_WheelDown_K2Node_InputActionEvent_0, Key) == 0x000000, "Member 'LPCControllerBP_C_InpActEvt_WheelDown_K2Node_InputActionEvent_0::Key' has a wrong offset!");

// Function LPCControllerBP.LPCControllerBP_C.InpActEvt_ArrowDown_K2Node_InputActionEvent_1
// 0x0018 (0x0018 - 0x0000)
struct LPCControllerBP_C_InpActEvt_ArrowDown_K2Node_InputActionEvent_1 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(LPCControllerBP_C_InpActEvt_ArrowDown_K2Node_InputActionEvent_1) == 0x000008, "Wrong alignment on LPCControllerBP_C_InpActEvt_ArrowDown_K2Node_InputActionEvent_1");
static_assert(sizeof(LPCControllerBP_C_InpActEvt_ArrowDown_K2Node_InputActionEvent_1) == 0x000018, "Wrong size on LPCControllerBP_C_InpActEvt_ArrowDown_K2Node_InputActionEvent_1");
static_assert(offsetof(LPCControllerBP_C_InpActEvt_ArrowDown_K2Node_InputActionEvent_1, Key) == 0x000000, "Member 'LPCControllerBP_C_InpActEvt_ArrowDown_K2Node_InputActionEvent_1::Key' has a wrong offset!");

// Function LPCControllerBP.LPCControllerBP_C.InpActEvt_WheelUp_K2Node_InputActionEvent_2
// 0x0018 (0x0018 - 0x0000)
struct LPCControllerBP_C_InpActEvt_WheelUp_K2Node_InputActionEvent_2 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(LPCControllerBP_C_InpActEvt_WheelUp_K2Node_InputActionEvent_2) == 0x000008, "Wrong alignment on LPCControllerBP_C_InpActEvt_WheelUp_K2Node_InputActionEvent_2");
static_assert(sizeof(LPCControllerBP_C_InpActEvt_WheelUp_K2Node_InputActionEvent_2) == 0x000018, "Wrong size on LPCControllerBP_C_InpActEvt_WheelUp_K2Node_InputActionEvent_2");
static_assert(offsetof(LPCControllerBP_C_InpActEvt_WheelUp_K2Node_InputActionEvent_2, Key) == 0x000000, "Member 'LPCControllerBP_C_InpActEvt_WheelUp_K2Node_InputActionEvent_2::Key' has a wrong offset!");

// Function LPCControllerBP.LPCControllerBP_C.InpActEvt_ArrowUp_K2Node_InputActionEvent_3
// 0x0018 (0x0018 - 0x0000)
struct LPCControllerBP_C_InpActEvt_ArrowUp_K2Node_InputActionEvent_3 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(LPCControllerBP_C_InpActEvt_ArrowUp_K2Node_InputActionEvent_3) == 0x000008, "Wrong alignment on LPCControllerBP_C_InpActEvt_ArrowUp_K2Node_InputActionEvent_3");
static_assert(sizeof(LPCControllerBP_C_InpActEvt_ArrowUp_K2Node_InputActionEvent_3) == 0x000018, "Wrong size on LPCControllerBP_C_InpActEvt_ArrowUp_K2Node_InputActionEvent_3");
static_assert(offsetof(LPCControllerBP_C_InpActEvt_ArrowUp_K2Node_InputActionEvent_3, Key) == 0x000000, "Member 'LPCControllerBP_C_InpActEvt_ArrowUp_K2Node_InputActionEvent_3::Key' has a wrong offset!");

// Function LPCControllerBP.LPCControllerBP_C.InpActEvt_ButtonDown_K2Node_InputActionEvent_4
// 0x0018 (0x0018 - 0x0000)
struct LPCControllerBP_C_InpActEvt_ButtonDown_K2Node_InputActionEvent_4 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(LPCControllerBP_C_InpActEvt_ButtonDown_K2Node_InputActionEvent_4) == 0x000008, "Wrong alignment on LPCControllerBP_C_InpActEvt_ButtonDown_K2Node_InputActionEvent_4");
static_assert(sizeof(LPCControllerBP_C_InpActEvt_ButtonDown_K2Node_InputActionEvent_4) == 0x000018, "Wrong size on LPCControllerBP_C_InpActEvt_ButtonDown_K2Node_InputActionEvent_4");
static_assert(offsetof(LPCControllerBP_C_InpActEvt_ButtonDown_K2Node_InputActionEvent_4, Key) == 0x000000, "Member 'LPCControllerBP_C_InpActEvt_ButtonDown_K2Node_InputActionEvent_4::Key' has a wrong offset!");

// Function LPCControllerBP.LPCControllerBP_C.InpActEvt_ButtonDown_K2Node_InputActionEvent_5
// 0x0018 (0x0018 - 0x0000)
struct LPCControllerBP_C_InpActEvt_ButtonDown_K2Node_InputActionEvent_5 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(LPCControllerBP_C_InpActEvt_ButtonDown_K2Node_InputActionEvent_5) == 0x000008, "Wrong alignment on LPCControllerBP_C_InpActEvt_ButtonDown_K2Node_InputActionEvent_5");
static_assert(sizeof(LPCControllerBP_C_InpActEvt_ButtonDown_K2Node_InputActionEvent_5) == 0x000018, "Wrong size on LPCControllerBP_C_InpActEvt_ButtonDown_K2Node_InputActionEvent_5");
static_assert(offsetof(LPCControllerBP_C_InpActEvt_ButtonDown_K2Node_InputActionEvent_5, Key) == 0x000000, "Member 'LPCControllerBP_C_InpActEvt_ButtonDown_K2Node_InputActionEvent_5::Key' has a wrong offset!");

// Function LPCControllerBP.LPCControllerBP_C.InpActEvt_LeftShoulder_K2Node_InputActionEvent_6
// 0x0018 (0x0018 - 0x0000)
struct LPCControllerBP_C_InpActEvt_LeftShoulder_K2Node_InputActionEvent_6 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(LPCControllerBP_C_InpActEvt_LeftShoulder_K2Node_InputActionEvent_6) == 0x000008, "Wrong alignment on LPCControllerBP_C_InpActEvt_LeftShoulder_K2Node_InputActionEvent_6");
static_assert(sizeof(LPCControllerBP_C_InpActEvt_LeftShoulder_K2Node_InputActionEvent_6) == 0x000018, "Wrong size on LPCControllerBP_C_InpActEvt_LeftShoulder_K2Node_InputActionEvent_6");
static_assert(offsetof(LPCControllerBP_C_InpActEvt_LeftShoulder_K2Node_InputActionEvent_6, Key) == 0x000000, "Member 'LPCControllerBP_C_InpActEvt_LeftShoulder_K2Node_InputActionEvent_6::Key' has a wrong offset!");

// Function LPCControllerBP.LPCControllerBP_C.InpActEvt_DPadDown_K2Node_InputActionEvent_7
// 0x0018 (0x0018 - 0x0000)
struct LPCControllerBP_C_InpActEvt_DPadDown_K2Node_InputActionEvent_7 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(LPCControllerBP_C_InpActEvt_DPadDown_K2Node_InputActionEvent_7) == 0x000008, "Wrong alignment on LPCControllerBP_C_InpActEvt_DPadDown_K2Node_InputActionEvent_7");
static_assert(sizeof(LPCControllerBP_C_InpActEvt_DPadDown_K2Node_InputActionEvent_7) == 0x000018, "Wrong size on LPCControllerBP_C_InpActEvt_DPadDown_K2Node_InputActionEvent_7");
static_assert(offsetof(LPCControllerBP_C_InpActEvt_DPadDown_K2Node_InputActionEvent_7, Key) == 0x000000, "Member 'LPCControllerBP_C_InpActEvt_DPadDown_K2Node_InputActionEvent_7::Key' has a wrong offset!");

// Function LPCControllerBP.LPCControllerBP_C.InpActEvt_DPadUp_K2Node_InputActionEvent_8
// 0x0018 (0x0018 - 0x0000)
struct LPCControllerBP_C_InpActEvt_DPadUp_K2Node_InputActionEvent_8 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(LPCControllerBP_C_InpActEvt_DPadUp_K2Node_InputActionEvent_8) == 0x000008, "Wrong alignment on LPCControllerBP_C_InpActEvt_DPadUp_K2Node_InputActionEvent_8");
static_assert(sizeof(LPCControllerBP_C_InpActEvt_DPadUp_K2Node_InputActionEvent_8) == 0x000018, "Wrong size on LPCControllerBP_C_InpActEvt_DPadUp_K2Node_InputActionEvent_8");
static_assert(offsetof(LPCControllerBP_C_InpActEvt_DPadUp_K2Node_InputActionEvent_8, Key) == 0x000000, "Member 'LPCControllerBP_C_InpActEvt_DPadUp_K2Node_InputActionEvent_8::Key' has a wrong offset!");

// Function LPCControllerBP.LPCControllerBP_C.InpActEvt_ButtonDown_K2Node_InputActionEvent_9
// 0x0018 (0x0018 - 0x0000)
struct LPCControllerBP_C_InpActEvt_ButtonDown_K2Node_InputActionEvent_9 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(LPCControllerBP_C_InpActEvt_ButtonDown_K2Node_InputActionEvent_9) == 0x000008, "Wrong alignment on LPCControllerBP_C_InpActEvt_ButtonDown_K2Node_InputActionEvent_9");
static_assert(sizeof(LPCControllerBP_C_InpActEvt_ButtonDown_K2Node_InputActionEvent_9) == 0x000018, "Wrong size on LPCControllerBP_C_InpActEvt_ButtonDown_K2Node_InputActionEvent_9");
static_assert(offsetof(LPCControllerBP_C_InpActEvt_ButtonDown_K2Node_InputActionEvent_9, Key) == 0x000000, "Member 'LPCControllerBP_C_InpActEvt_ButtonDown_K2Node_InputActionEvent_9::Key' has a wrong offset!");

// Function LPCControllerBP.LPCControllerBP_C.InpActEvt_ButtonRight_K2Node_InputActionEvent_10
// 0x0018 (0x0018 - 0x0000)
struct LPCControllerBP_C_InpActEvt_ButtonRight_K2Node_InputActionEvent_10 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(LPCControllerBP_C_InpActEvt_ButtonRight_K2Node_InputActionEvent_10) == 0x000008, "Wrong alignment on LPCControllerBP_C_InpActEvt_ButtonRight_K2Node_InputActionEvent_10");
static_assert(sizeof(LPCControllerBP_C_InpActEvt_ButtonRight_K2Node_InputActionEvent_10) == 0x000018, "Wrong size on LPCControllerBP_C_InpActEvt_ButtonRight_K2Node_InputActionEvent_10");
static_assert(offsetof(LPCControllerBP_C_InpActEvt_ButtonRight_K2Node_InputActionEvent_10, Key) == 0x000000, "Member 'LPCControllerBP_C_InpActEvt_ButtonRight_K2Node_InputActionEvent_10::Key' has a wrong offset!");

// Function LPCControllerBP.LPCControllerBP_C.InpActEvt_ButtonRight_K2Node_InputActionEvent_11
// 0x0018 (0x0018 - 0x0000)
struct LPCControllerBP_C_InpActEvt_ButtonRight_K2Node_InputActionEvent_11 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(LPCControllerBP_C_InpActEvt_ButtonRight_K2Node_InputActionEvent_11) == 0x000008, "Wrong alignment on LPCControllerBP_C_InpActEvt_ButtonRight_K2Node_InputActionEvent_11");
static_assert(sizeof(LPCControllerBP_C_InpActEvt_ButtonRight_K2Node_InputActionEvent_11) == 0x000018, "Wrong size on LPCControllerBP_C_InpActEvt_ButtonRight_K2Node_InputActionEvent_11");
static_assert(offsetof(LPCControllerBP_C_InpActEvt_ButtonRight_K2Node_InputActionEvent_11, Key) == 0x000000, "Member 'LPCControllerBP_C_InpActEvt_ButtonRight_K2Node_InputActionEvent_11::Key' has a wrong offset!");

// Function LPCControllerBP.LPCControllerBP_C.InpActEvt_LockOn_K2Node_InputActionEvent_12
// 0x0018 (0x0018 - 0x0000)
struct LPCControllerBP_C_InpActEvt_LockOn_K2Node_InputActionEvent_12 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(LPCControllerBP_C_InpActEvt_LockOn_K2Node_InputActionEvent_12) == 0x000008, "Wrong alignment on LPCControllerBP_C_InpActEvt_LockOn_K2Node_InputActionEvent_12");
static_assert(sizeof(LPCControllerBP_C_InpActEvt_LockOn_K2Node_InputActionEvent_12) == 0x000018, "Wrong size on LPCControllerBP_C_InpActEvt_LockOn_K2Node_InputActionEvent_12");
static_assert(offsetof(LPCControllerBP_C_InpActEvt_LockOn_K2Node_InputActionEvent_12, Key) == 0x000000, "Member 'LPCControllerBP_C_InpActEvt_LockOn_K2Node_InputActionEvent_12::Key' has a wrong offset!");

// Function LPCControllerBP.LPCControllerBP_C.CameraInvertPitch
// 0x0001 (0x0001 - 0x0000)
struct LPCControllerBP_C_CameraInvertPitch final
{
public:
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(LPCControllerBP_C_CameraInvertPitch) == 0x000001, "Wrong alignment on LPCControllerBP_C_CameraInvertPitch");
static_assert(sizeof(LPCControllerBP_C_CameraInvertPitch) == 0x000001, "Wrong size on LPCControllerBP_C_CameraInvertPitch");
static_assert(offsetof(LPCControllerBP_C_CameraInvertPitch, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000000, "Member 'LPCControllerBP_C_CameraInvertPitch::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");

// Function LPCControllerBP.LPCControllerBP_C.LadderClimbing
// 0x0040 (0x0040 - 0x0000)
struct LPCControllerBP_C_LadderClimbing final
{
public:
	float                                         AxisValue;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          InputActive;                                       // 0x0004(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          InputMoveUp;                                       // 0x0005(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EExecutePin                                   CallFunc_GetActMgrComponentBP_Branches;            // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ULActMgrComponent*                      CallFunc_GetActMgrComponentBP_ReturnValue;         // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ULActBase*                              CallFunc_GetLastPlayingAction_ReturnValue;         // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_Action_Climb_C*                     K2Node_DynamicCast_AsBP_Action_Climb;              // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(LPCControllerBP_C_LadderClimbing) == 0x000008, "Wrong alignment on LPCControllerBP_C_LadderClimbing");
static_assert(sizeof(LPCControllerBP_C_LadderClimbing) == 0x000040, "Wrong size on LPCControllerBP_C_LadderClimbing");
static_assert(offsetof(LPCControllerBP_C_LadderClimbing, AxisValue) == 0x000000, "Member 'LPCControllerBP_C_LadderClimbing::AxisValue' has a wrong offset!");
static_assert(offsetof(LPCControllerBP_C_LadderClimbing, InputActive) == 0x000004, "Member 'LPCControllerBP_C_LadderClimbing::InputActive' has a wrong offset!");
static_assert(offsetof(LPCControllerBP_C_LadderClimbing, InputMoveUp) == 0x000005, "Member 'LPCControllerBP_C_LadderClimbing::InputMoveUp' has a wrong offset!");
static_assert(offsetof(LPCControllerBP_C_LadderClimbing, CallFunc_K2_GetPawn_ReturnValue) == 0x000008, "Member 'LPCControllerBP_C_LadderClimbing::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(LPCControllerBP_C_LadderClimbing, CallFunc_GetActMgrComponentBP_Branches) == 0x000010, "Member 'LPCControllerBP_C_LadderClimbing::CallFunc_GetActMgrComponentBP_Branches' has a wrong offset!");
static_assert(offsetof(LPCControllerBP_C_LadderClimbing, CallFunc_GetActMgrComponentBP_ReturnValue) == 0x000018, "Member 'LPCControllerBP_C_LadderClimbing::CallFunc_GetActMgrComponentBP_ReturnValue' has a wrong offset!");
static_assert(offsetof(LPCControllerBP_C_LadderClimbing, K2Node_SwitchEnum_CmpSuccess) == 0x000020, "Member 'LPCControllerBP_C_LadderClimbing::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(LPCControllerBP_C_LadderClimbing, CallFunc_GetLastPlayingAction_ReturnValue) == 0x000028, "Member 'LPCControllerBP_C_LadderClimbing::CallFunc_GetLastPlayingAction_ReturnValue' has a wrong offset!");
static_assert(offsetof(LPCControllerBP_C_LadderClimbing, K2Node_DynamicCast_AsBP_Action_Climb) == 0x000030, "Member 'LPCControllerBP_C_LadderClimbing::K2Node_DynamicCast_AsBP_Action_Climb' has a wrong offset!");
static_assert(offsetof(LPCControllerBP_C_LadderClimbing, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'LPCControllerBP_C_LadderClimbing::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function LPCControllerBP.LPCControllerBP_C.LadderFastDown
// 0x0040 (0x0040 - 0x0000)
struct LPCControllerBP_C_LadderFastDown final
{
public:
	bool                                          ButtonActive;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EExecutePin                                   CallFunc_GetActMgrComponentBP_Branches;            // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ULActMgrComponent*                      CallFunc_GetActMgrComponentBP_ReturnValue;         // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ULActBase*                              CallFunc_GetLastPlayingAction_ReturnValue;         // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_Action_Climb_C*                     K2Node_DynamicCast_AsBP_Action_Climb;              // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(LPCControllerBP_C_LadderFastDown) == 0x000008, "Wrong alignment on LPCControllerBP_C_LadderFastDown");
static_assert(sizeof(LPCControllerBP_C_LadderFastDown) == 0x000040, "Wrong size on LPCControllerBP_C_LadderFastDown");
static_assert(offsetof(LPCControllerBP_C_LadderFastDown, ButtonActive) == 0x000000, "Member 'LPCControllerBP_C_LadderFastDown::ButtonActive' has a wrong offset!");
static_assert(offsetof(LPCControllerBP_C_LadderFastDown, CallFunc_K2_GetPawn_ReturnValue) == 0x000008, "Member 'LPCControllerBP_C_LadderFastDown::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(LPCControllerBP_C_LadderFastDown, CallFunc_GetActMgrComponentBP_Branches) == 0x000010, "Member 'LPCControllerBP_C_LadderFastDown::CallFunc_GetActMgrComponentBP_Branches' has a wrong offset!");
static_assert(offsetof(LPCControllerBP_C_LadderFastDown, CallFunc_GetActMgrComponentBP_ReturnValue) == 0x000018, "Member 'LPCControllerBP_C_LadderFastDown::CallFunc_GetActMgrComponentBP_ReturnValue' has a wrong offset!");
static_assert(offsetof(LPCControllerBP_C_LadderFastDown, K2Node_SwitchEnum_CmpSuccess) == 0x000020, "Member 'LPCControllerBP_C_LadderFastDown::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(LPCControllerBP_C_LadderFastDown, CallFunc_GetLastPlayingAction_ReturnValue) == 0x000028, "Member 'LPCControllerBP_C_LadderFastDown::CallFunc_GetLastPlayingAction_ReturnValue' has a wrong offset!");
static_assert(offsetof(LPCControllerBP_C_LadderFastDown, K2Node_DynamicCast_AsBP_Action_Climb) == 0x000030, "Member 'LPCControllerBP_C_LadderFastDown::K2Node_DynamicCast_AsBP_Action_Climb' has a wrong offset!");
static_assert(offsetof(LPCControllerBP_C_LadderFastDown, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'LPCControllerBP_C_LadderFastDown::K2Node_DynamicCast_bSuccess' has a wrong offset!");

}


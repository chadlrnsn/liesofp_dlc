#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UIBP_ActorController

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function UIBP_ActorController.UIBP_ActorController_C.UpdateTick
// 0x0088 (0x0088 - 0x0000)
struct UIBP_ActorController_C_UpdateTick final
{
public:
	struct FVector2D                              MousePositionViewport;                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DeltaTime;                                         // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CurrentMousePosition;                              // 0x000C(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0014(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x003C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_VectorVector_ReturnValue;      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakRotator_Roll;                        // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_2;             // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0064(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_SetActorRotation_ReturnValue;          // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x3];                                       // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_SetDirection_Direction;                   // 0x0074(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetDirection_SpeedX;                      // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetDirection_SpeedY;                      // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UIBP_ActorController_C_UpdateTick) == 0x000004, "Wrong alignment on UIBP_ActorController_C_UpdateTick");
static_assert(sizeof(UIBP_ActorController_C_UpdateTick) == 0x000088, "Wrong size on UIBP_ActorController_C_UpdateTick");
static_assert(offsetof(UIBP_ActorController_C_UpdateTick, MousePositionViewport) == 0x000000, "Member 'UIBP_ActorController_C_UpdateTick::MousePositionViewport' has a wrong offset!");
static_assert(offsetof(UIBP_ActorController_C_UpdateTick, DeltaTime) == 0x000008, "Member 'UIBP_ActorController_C_UpdateTick::DeltaTime' has a wrong offset!");
static_assert(offsetof(UIBP_ActorController_C_UpdateTick, CurrentMousePosition) == 0x00000C, "Member 'UIBP_ActorController_C_UpdateTick::CurrentMousePosition' has a wrong offset!");
static_assert(offsetof(UIBP_ActorController_C_UpdateTick, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000014, "Member 'UIBP_ActorController_C_UpdateTick::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIBP_ActorController_C_UpdateTick, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'UIBP_ActorController_C_UpdateTick::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIBP_ActorController_C_UpdateTick, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x000024, "Member 'UIBP_ActorController_C_UpdateTick::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UIBP_ActorController_C_UpdateTick, CallFunc_BreakVector_X) == 0x000030, "Member 'UIBP_ActorController_C_UpdateTick::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(UIBP_ActorController_C_UpdateTick, CallFunc_BreakVector_Y) == 0x000034, "Member 'UIBP_ActorController_C_UpdateTick::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(UIBP_ActorController_C_UpdateTick, CallFunc_BreakVector_Z) == 0x000038, "Member 'UIBP_ActorController_C_UpdateTick::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(UIBP_ActorController_C_UpdateTick, CallFunc_K2_GetActorRotation_ReturnValue) == 0x00003C, "Member 'UIBP_ActorController_C_UpdateTick::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIBP_ActorController_C_UpdateTick, CallFunc_EqualEqual_VectorVector_ReturnValue) == 0x000048, "Member 'UIBP_ActorController_C_UpdateTick::CallFunc_EqualEqual_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIBP_ActorController_C_UpdateTick, CallFunc_BreakRotator_Roll) == 0x00004C, "Member 'UIBP_ActorController_C_UpdateTick::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(UIBP_ActorController_C_UpdateTick, CallFunc_BreakRotator_Pitch) == 0x000050, "Member 'UIBP_ActorController_C_UpdateTick::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(UIBP_ActorController_C_UpdateTick, CallFunc_BreakRotator_Yaw) == 0x000054, "Member 'UIBP_ActorController_C_UpdateTick::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(UIBP_ActorController_C_UpdateTick, CallFunc_Add_FloatFloat_ReturnValue) == 0x000058, "Member 'UIBP_ActorController_C_UpdateTick::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIBP_ActorController_C_UpdateTick, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x00005C, "Member 'UIBP_ActorController_C_UpdateTick::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UIBP_ActorController_C_UpdateTick, CallFunc_Add_FloatFloat_ReturnValue_2) == 0x000060, "Member 'UIBP_ActorController_C_UpdateTick::CallFunc_Add_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UIBP_ActorController_C_UpdateTick, CallFunc_MakeRotator_ReturnValue) == 0x000064, "Member 'UIBP_ActorController_C_UpdateTick::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIBP_ActorController_C_UpdateTick, CallFunc_K2_SetActorRotation_ReturnValue) == 0x000070, "Member 'UIBP_ActorController_C_UpdateTick::CallFunc_K2_SetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIBP_ActorController_C_UpdateTick, CallFunc_SetDirection_Direction) == 0x000074, "Member 'UIBP_ActorController_C_UpdateTick::CallFunc_SetDirection_Direction' has a wrong offset!");
static_assert(offsetof(UIBP_ActorController_C_UpdateTick, CallFunc_SetDirection_SpeedX) == 0x000080, "Member 'UIBP_ActorController_C_UpdateTick::CallFunc_SetDirection_SpeedX' has a wrong offset!");
static_assert(offsetof(UIBP_ActorController_C_UpdateTick, CallFunc_SetDirection_SpeedY) == 0x000084, "Member 'UIBP_ActorController_C_UpdateTick::CallFunc_SetDirection_SpeedY' has a wrong offset!");

// Function UIBP_ActorController.UIBP_ActorController_C.Reset
// 0x0190 (0x0190 - 0x0000)
struct UIBP_ActorController_C_Reset final
{
public:
	bool                                          Zoom;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Pan;                                               // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Rotation;                                          // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0008(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        CallFunc_Get_Camera_Pivot_Component_Component;     // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_RotatorToVector_ReturnValue;         // 0x0020(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetRelativeTransform_ReturnValue;         // 0x0030(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0060(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x006C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0078(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Select_Default;                             // 0x0084(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Select_Default_1;                           // 0x0090(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_Conv_VectorToRotator_ReturnValue;         // 0x009C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakVector_X;                            // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_SetActorRotation_ReturnValue;          // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B5[0x3];                                       // 0x00B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x00B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C4[0xC];                                       // 0x00C4(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x00D0(0x0030)(IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetRelativeTransform_SweepHitResult;   // 0x0100(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(UIBP_ActorController_C_Reset) == 0x000010, "Wrong alignment on UIBP_ActorController_C_Reset");
static_assert(sizeof(UIBP_ActorController_C_Reset) == 0x000190, "Wrong size on UIBP_ActorController_C_Reset");
static_assert(offsetof(UIBP_ActorController_C_Reset, Zoom) == 0x000000, "Member 'UIBP_ActorController_C_Reset::Zoom' has a wrong offset!");
static_assert(offsetof(UIBP_ActorController_C_Reset, Pan) == 0x000001, "Member 'UIBP_ActorController_C_Reset::Pan' has a wrong offset!");
static_assert(offsetof(UIBP_ActorController_C_Reset, Rotation) == 0x000002, "Member 'UIBP_ActorController_C_Reset::Rotation' has a wrong offset!");
static_assert(offsetof(UIBP_ActorController_C_Reset, Temp_bool_Variable) == 0x000003, "Member 'UIBP_ActorController_C_Reset::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(UIBP_ActorController_C_Reset, Temp_bool_Variable_1) == 0x000004, "Member 'UIBP_ActorController_C_Reset::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(UIBP_ActorController_C_Reset, CallFunc_IsValid_ReturnValue) == 0x000005, "Member 'UIBP_ActorController_C_Reset::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIBP_ActorController_C_Reset, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000008, "Member 'UIBP_ActorController_C_Reset::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIBP_ActorController_C_Reset, CallFunc_Get_Camera_Pivot_Component_Component) == 0x000018, "Member 'UIBP_ActorController_C_Reset::CallFunc_Get_Camera_Pivot_Component_Component' has a wrong offset!");
static_assert(offsetof(UIBP_ActorController_C_Reset, CallFunc_Conv_RotatorToVector_ReturnValue) == 0x000020, "Member 'UIBP_ActorController_C_Reset::CallFunc_Conv_RotatorToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIBP_ActorController_C_Reset, CallFunc_GetRelativeTransform_ReturnValue) == 0x000030, "Member 'UIBP_ActorController_C_Reset::CallFunc_GetRelativeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIBP_ActorController_C_Reset, CallFunc_BreakTransform_Location) == 0x000060, "Member 'UIBP_ActorController_C_Reset::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(UIBP_ActorController_C_Reset, CallFunc_BreakTransform_Rotation) == 0x00006C, "Member 'UIBP_ActorController_C_Reset::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(UIBP_ActorController_C_Reset, CallFunc_BreakTransform_Scale) == 0x000078, "Member 'UIBP_ActorController_C_Reset::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(UIBP_ActorController_C_Reset, K2Node_Select_Default) == 0x000084, "Member 'UIBP_ActorController_C_Reset::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(UIBP_ActorController_C_Reset, K2Node_Select_Default_1) == 0x000090, "Member 'UIBP_ActorController_C_Reset::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(UIBP_ActorController_C_Reset, CallFunc_Conv_VectorToRotator_ReturnValue) == 0x00009C, "Member 'UIBP_ActorController_C_Reset::CallFunc_Conv_VectorToRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIBP_ActorController_C_Reset, CallFunc_BreakVector_X) == 0x0000A8, "Member 'UIBP_ActorController_C_Reset::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(UIBP_ActorController_C_Reset, CallFunc_BreakVector_Y) == 0x0000AC, "Member 'UIBP_ActorController_C_Reset::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(UIBP_ActorController_C_Reset, CallFunc_BreakVector_Z) == 0x0000B0, "Member 'UIBP_ActorController_C_Reset::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(UIBP_ActorController_C_Reset, CallFunc_K2_SetActorRotation_ReturnValue) == 0x0000B4, "Member 'UIBP_ActorController_C_Reset::CallFunc_K2_SetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIBP_ActorController_C_Reset, CallFunc_MakeVector_ReturnValue) == 0x0000B8, "Member 'UIBP_ActorController_C_Reset::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIBP_ActorController_C_Reset, CallFunc_MakeTransform_ReturnValue) == 0x0000D0, "Member 'UIBP_ActorController_C_Reset::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIBP_ActorController_C_Reset, CallFunc_K2_SetRelativeTransform_SweepHitResult) == 0x000100, "Member 'UIBP_ActorController_C_Reset::CallFunc_K2_SetRelativeTransform_SweepHitResult' has a wrong offset!");

// Function UIBP_ActorController.UIBP_ActorController_C.SetActorInit
// 0x0018 (0x0018 - 0x0000)
struct UIBP_ActorController_C_SetActorInit final
{
public:
	struct FVector                                Pan;                                               // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Rotation;                                          // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UIBP_ActorController_C_SetActorInit) == 0x000004, "Wrong alignment on UIBP_ActorController_C_SetActorInit");
static_assert(sizeof(UIBP_ActorController_C_SetActorInit) == 0x000018, "Wrong size on UIBP_ActorController_C_SetActorInit");
static_assert(offsetof(UIBP_ActorController_C_SetActorInit, Pan) == 0x000000, "Member 'UIBP_ActorController_C_SetActorInit::Pan' has a wrong offset!");
static_assert(offsetof(UIBP_ActorController_C_SetActorInit, Rotation) == 0x00000C, "Member 'UIBP_ActorController_C_SetActorInit::Rotation' has a wrong offset!");

// Function UIBP_ActorController.UIBP_ActorController_C.StartCaptureForRotate
// 0x0008 (0x0008 - 0x0000)
struct UIBP_ActorController_C_StartCaptureForRotate final
{
public:
	struct FVector2D                              Mouse_Position_Viewport;                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UIBP_ActorController_C_StartCaptureForRotate) == 0x000004, "Wrong alignment on UIBP_ActorController_C_StartCaptureForRotate");
static_assert(sizeof(UIBP_ActorController_C_StartCaptureForRotate) == 0x000008, "Wrong size on UIBP_ActorController_C_StartCaptureForRotate");
static_assert(offsetof(UIBP_ActorController_C_StartCaptureForRotate, Mouse_Position_Viewport) == 0x000000, "Member 'UIBP_ActorController_C_StartCaptureForRotate::Mouse_Position_Viewport' has a wrong offset!");

// Function UIBP_ActorController.UIBP_ActorController_C.SetDirection
// 0x006C (0x006C - 0x0000)
struct UIBP_ActorController_C_SetDirection final
{
public:
	struct FVector2D                              MousePositionViewport;                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              StartPosition;                                     // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Direction;                                         // 0x0010(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SpeedX;                                            // 0x001C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SpeedY;                                            // 0x0020(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LocalY;                                            // 0x0024(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LocalX;                                            // 0x0028(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LocalDirection;                                    // 0x002C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_1;                        // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_1;                        // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x004C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x005C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UIBP_ActorController_C_SetDirection) == 0x000004, "Wrong alignment on UIBP_ActorController_C_SetDirection");
static_assert(sizeof(UIBP_ActorController_C_SetDirection) == 0x00006C, "Wrong size on UIBP_ActorController_C_SetDirection");
static_assert(offsetof(UIBP_ActorController_C_SetDirection, MousePositionViewport) == 0x000000, "Member 'UIBP_ActorController_C_SetDirection::MousePositionViewport' has a wrong offset!");
static_assert(offsetof(UIBP_ActorController_C_SetDirection, StartPosition) == 0x000008, "Member 'UIBP_ActorController_C_SetDirection::StartPosition' has a wrong offset!");
static_assert(offsetof(UIBP_ActorController_C_SetDirection, Direction) == 0x000010, "Member 'UIBP_ActorController_C_SetDirection::Direction' has a wrong offset!");
static_assert(offsetof(UIBP_ActorController_C_SetDirection, SpeedX) == 0x00001C, "Member 'UIBP_ActorController_C_SetDirection::SpeedX' has a wrong offset!");
static_assert(offsetof(UIBP_ActorController_C_SetDirection, SpeedY) == 0x000020, "Member 'UIBP_ActorController_C_SetDirection::SpeedY' has a wrong offset!");
static_assert(offsetof(UIBP_ActorController_C_SetDirection, LocalY) == 0x000024, "Member 'UIBP_ActorController_C_SetDirection::LocalY' has a wrong offset!");
static_assert(offsetof(UIBP_ActorController_C_SetDirection, LocalX) == 0x000028, "Member 'UIBP_ActorController_C_SetDirection::LocalX' has a wrong offset!");
static_assert(offsetof(UIBP_ActorController_C_SetDirection, LocalDirection) == 0x00002C, "Member 'UIBP_ActorController_C_SetDirection::LocalDirection' has a wrong offset!");
static_assert(offsetof(UIBP_ActorController_C_SetDirection, CallFunc_BreakVector2D_X) == 0x000038, "Member 'UIBP_ActorController_C_SetDirection::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(UIBP_ActorController_C_SetDirection, CallFunc_BreakVector2D_Y) == 0x00003C, "Member 'UIBP_ActorController_C_SetDirection::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(UIBP_ActorController_C_SetDirection, CallFunc_BreakVector2D_X_1) == 0x000040, "Member 'UIBP_ActorController_C_SetDirection::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(UIBP_ActorController_C_SetDirection, CallFunc_BreakVector2D_Y_1) == 0x000044, "Member 'UIBP_ActorController_C_SetDirection::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(UIBP_ActorController_C_SetDirection, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000048, "Member 'UIBP_ActorController_C_SetDirection::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIBP_ActorController_C_SetDirection, CallFunc_Add_VectorVector_ReturnValue) == 0x00004C, "Member 'UIBP_ActorController_C_SetDirection::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIBP_ActorController_C_SetDirection, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x000058, "Member 'UIBP_ActorController_C_SetDirection::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UIBP_ActorController_C_SetDirection, CallFunc_Add_VectorVector_ReturnValue_1) == 0x00005C, "Member 'UIBP_ActorController_C_SetDirection::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UIBP_ActorController_C_SetDirection, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000068, "Member 'UIBP_ActorController_C_SetDirection::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIBP_ActorController_C_SetDirection, CallFunc_Less_FloatFloat_ReturnValue) == 0x000069, "Member 'UIBP_ActorController_C_SetDirection::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");

// Function UIBP_ActorController.UIBP_ActorController_C.SetMaxMoveInfo
// 0x0008 (0x0008 - 0x0000)
struct UIBP_ActorController_C_SetMaxMoveInfo final
{
public:
	float                                         MaxWidth;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MaxHeight;                                         // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UIBP_ActorController_C_SetMaxMoveInfo) == 0x000004, "Wrong alignment on UIBP_ActorController_C_SetMaxMoveInfo");
static_assert(sizeof(UIBP_ActorController_C_SetMaxMoveInfo) == 0x000008, "Wrong size on UIBP_ActorController_C_SetMaxMoveInfo");
static_assert(offsetof(UIBP_ActorController_C_SetMaxMoveInfo, MaxWidth) == 0x000000, "Member 'UIBP_ActorController_C_SetMaxMoveInfo::MaxWidth' has a wrong offset!");
static_assert(offsetof(UIBP_ActorController_C_SetMaxMoveInfo, MaxHeight) == 0x000004, "Member 'UIBP_ActorController_C_SetMaxMoveInfo::MaxHeight' has a wrong offset!");

// Function UIBP_ActorController.UIBP_ActorController_C.GetHalfMaxWidth
// 0x0008 (0x0008 - 0x0000)
struct UIBP_ActorController_C_GetHalfMaxWidth final
{
public:
	float                                         OutHalfWidth;                                      // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UIBP_ActorController_C_GetHalfMaxWidth) == 0x000004, "Wrong alignment on UIBP_ActorController_C_GetHalfMaxWidth");
static_assert(sizeof(UIBP_ActorController_C_GetHalfMaxWidth) == 0x000008, "Wrong size on UIBP_ActorController_C_GetHalfMaxWidth");
static_assert(offsetof(UIBP_ActorController_C_GetHalfMaxWidth, OutHalfWidth) == 0x000000, "Member 'UIBP_ActorController_C_GetHalfMaxWidth::OutHalfWidth' has a wrong offset!");
static_assert(offsetof(UIBP_ActorController_C_GetHalfMaxWidth, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000004, "Member 'UIBP_ActorController_C_GetHalfMaxWidth::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");

// Function UIBP_ActorController.UIBP_ActorController_C.GetHalfMaxHeight
// 0x0008 (0x0008 - 0x0000)
struct UIBP_ActorController_C_GetHalfMaxHeight final
{
public:
	float                                         OutHalfHeight;                                     // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UIBP_ActorController_C_GetHalfMaxHeight) == 0x000004, "Wrong alignment on UIBP_ActorController_C_GetHalfMaxHeight");
static_assert(sizeof(UIBP_ActorController_C_GetHalfMaxHeight) == 0x000008, "Wrong size on UIBP_ActorController_C_GetHalfMaxHeight");
static_assert(offsetof(UIBP_ActorController_C_GetHalfMaxHeight, OutHalfHeight) == 0x000000, "Member 'UIBP_ActorController_C_GetHalfMaxHeight::OutHalfHeight' has a wrong offset!");
static_assert(offsetof(UIBP_ActorController_C_GetHalfMaxHeight, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000004, "Member 'UIBP_ActorController_C_GetHalfMaxHeight::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UIBP_ActorController

#include "Basic.hpp"

#include "UIBP_ActorController_classes.hpp"
#include "UIBP_ActorController_parameters.hpp"


namespace SDK
{

// Function UIBP_ActorController.UIBP_ActorController_C.UpdateTick
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector2D                        MousePositionViewport                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   DeltaTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUIBP_ActorController_C::UpdateTick(const struct FVector2D& MousePositionViewport, float DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIBP_ActorController_C", "UpdateTick");

	Params::UIBP_ActorController_C_UpdateTick Parms{};

	Parms.MousePositionViewport = std::move(MousePositionViewport);
	Parms.DeltaTime = DeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UIBP_ActorController.UIBP_ActorController_C.Reset
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Zoom                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Pan                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Rotation                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UUIBP_ActorController_C::Reset(bool Zoom, bool Pan, bool Rotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIBP_ActorController_C", "Reset");

	Params::UIBP_ActorController_C_Reset Parms{};

	Parms.Zoom = Zoom;
	Parms.Pan = Pan;
	Parms.Rotation = Rotation;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UIBP_ActorController.UIBP_ActorController_C.SetActorInit
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Pan                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Rotation                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUIBP_ActorController_C::SetActorInit(const struct FVector& Pan, const struct FVector& Rotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIBP_ActorController_C", "SetActorInit");

	Params::UIBP_ActorController_C_SetActorInit Parms{};

	Parms.Pan = std::move(Pan);
	Parms.Rotation = std::move(Rotation);

	UObject::ProcessEvent(Func, &Parms);
}


// Function UIBP_ActorController.UIBP_ActorController_C.StartCaptureForRotate
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector2D                        Mouse_Position_Viewport                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUIBP_ActorController_C::StartCaptureForRotate(const struct FVector2D& Mouse_Position_Viewport)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIBP_ActorController_C", "StartCaptureForRotate");

	Params::UIBP_ActorController_C_StartCaptureForRotate Parms{};

	Parms.Mouse_Position_Viewport = std::move(Mouse_Position_Viewport);

	UObject::ProcessEvent(Func, &Parms);
}


// Function UIBP_ActorController.UIBP_ActorController_C.SetDirection
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector2D                        MousePositionViewport                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector2D                        StartPosition                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Direction                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   SpeedX                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   SpeedY                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUIBP_ActorController_C::SetDirection(const struct FVector2D& MousePositionViewport, const struct FVector2D& StartPosition, struct FVector* Direction, float* SpeedX, float* SpeedY)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIBP_ActorController_C", "SetDirection");

	Params::UIBP_ActorController_C_SetDirection Parms{};

	Parms.MousePositionViewport = std::move(MousePositionViewport);
	Parms.StartPosition = std::move(StartPosition);

	UObject::ProcessEvent(Func, &Parms);

	if (Direction != nullptr)
		*Direction = std::move(Parms.Direction);

	if (SpeedX != nullptr)
		*SpeedX = Parms.SpeedX;

	if (SpeedY != nullptr)
		*SpeedY = Parms.SpeedY;
}


// Function UIBP_ActorController.UIBP_ActorController_C.SetMaxMoveInfo
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   MaxWidth                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   MaxHeight                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUIBP_ActorController_C::SetMaxMoveInfo(float MaxWidth, float MaxHeight)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIBP_ActorController_C", "SetMaxMoveInfo");

	Params::UIBP_ActorController_C_SetMaxMoveInfo Parms{};

	Parms.MaxWidth = MaxWidth;
	Parms.MaxHeight = MaxHeight;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UIBP_ActorController.UIBP_ActorController_C.GetHalfMaxWidth
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   OutHalfWidth                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUIBP_ActorController_C::GetHalfMaxWidth(float* OutHalfWidth)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIBP_ActorController_C", "GetHalfMaxWidth");

	Params::UIBP_ActorController_C_GetHalfMaxWidth Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (OutHalfWidth != nullptr)
		*OutHalfWidth = Parms.OutHalfWidth;
}


// Function UIBP_ActorController.UIBP_ActorController_C.GetHalfMaxHeight
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   OutHalfHeight                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUIBP_ActorController_C::GetHalfMaxHeight(float* OutHalfHeight)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIBP_ActorController_C", "GetHalfMaxHeight");

	Params::UIBP_ActorController_C_GetHalfMaxHeight Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (OutHalfHeight != nullptr)
		*OutHalfHeight = Parms.OutHalfHeight;
}

}


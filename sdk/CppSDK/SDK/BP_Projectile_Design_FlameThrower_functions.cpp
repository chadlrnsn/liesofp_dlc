#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Projectile_Design_FlameThrower

#include "Basic.hpp"

#include "BP_Projectile_Design_FlameThrower_classes.hpp"
#include "BP_Projectile_Design_FlameThrower_parameters.hpp"


namespace SDK
{

// Function BP_Projectile_Design_FlameThrower.BP_Projectile_Design_FlameThrower_C.ExecuteUbergraph_BP_Projectile_Design_FlameThrower
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Projectile_Design_FlameThrower_C::ExecuteUbergraph_BP_Projectile_Design_FlameThrower(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Projectile_Design_FlameThrower_C", "ExecuteUbergraph_BP_Projectile_Design_FlameThrower");

	Params::BP_Projectile_Design_FlameThrower_C_ExecuteUbergraph_BP_Projectile_Design_FlameThrower Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Projectile_Design_FlameThrower.BP_Projectile_Design_FlameThrower_C.InitProjectile
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_Projectile_Design_FlameThrower_C::InitProjectile()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Projectile_Design_FlameThrower_C", "InitProjectile");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Projectile_Design_FlameThrower.BP_Projectile_Design_FlameThrower_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_Projectile_Design_FlameThrower_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Projectile_Design_FlameThrower_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Projectile_Design_FlameThrower.BP_Projectile_Design_FlameThrower_C.CheckUseSubstituteSkillHit
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FLProjectileHitInfo              ProjectileHitInfo                                      (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
// struct FHitResult                       HitResult                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

class FName ABP_Projectile_Design_FlameThrower_C::CheckUseSubstituteSkillHit(const struct FLProjectileHitInfo& ProjectileHitInfo, const struct FHitResult& HitResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Projectile_Design_FlameThrower_C", "CheckUseSubstituteSkillHit");

	Params::BP_Projectile_Design_FlameThrower_C_CheckUseSubstituteSkillHit Parms{};

	Parms.ProjectileHitInfo = std::move(ProjectileHitInfo);
	Parms.HitResult = std::move(HitResult);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_Projectile_Design_FlameThrower.BP_Projectile_Design_FlameThrower_C.RefineHitTarget
// (Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FHitResult>               InHitResults                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
// TArray<struct FHitResult>               ReturnValue                                            (Parm, OutParm, ReturnParm, ContainsInstancedReference)

TArray<struct FHitResult> ABP_Projectile_Design_FlameThrower_C::RefineHitTarget(const TArray<struct FHitResult>& InHitResults)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Projectile_Design_FlameThrower_C", "RefineHitTarget");

	Params::BP_Projectile_Design_FlameThrower_C_RefineHitTarget Parms{};

	Parms.InHitResults = std::move(InHitResults);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_Projectile_Design_FlameThrower.BP_Projectile_Design_FlameThrower_C.Adjust Hit Location for Carcass Object
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ALCarcassBodyObject*              InCarcassBodyObject                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FHitResult                       InHitResult                                            (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
// struct FVector                          OutLocation                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Projectile_Design_FlameThrower_C::Adjust_Hit_Location_for_Carcass_Object(class ALCarcassBodyObject* InCarcassBodyObject, const struct FHitResult& InHitResult, struct FVector* OutLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Projectile_Design_FlameThrower_C", "Adjust Hit Location for Carcass Object");

	Params::BP_Projectile_Design_FlameThrower_C_Adjust_Hit_Location_for_Carcass_Object Parms{};

	Parms.InCarcassBodyObject = InCarcassBodyObject;
	Parms.InHitResult = std::move(InHitResult);

	UObject::ProcessEvent(Func, &Parms);

	if (OutLocation != nullptr)
		*OutLocation = std::move(Parms.OutLocation);
}

}


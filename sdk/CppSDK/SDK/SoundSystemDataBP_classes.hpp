#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SoundSystemDataBP

#include "Basic.hpp"

#include "ProjectP_classes.hpp"
#include "Engine_structs.hpp"
#include "ProjectPContentInfo_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass SoundSystemDataBP.SoundSystemDataBP_C
// 0x00A0 (0x0288 - 0x01E8)
class ASoundSystemDataBP_C final : public ALSoundSystemData
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x01E8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x01F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        BGMComp;                                           // 0x01F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   PlayingBGM;                                        // 0x0200(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FadeOutBGM;                                        // 0x0208(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_20C[0x4];                                      // 0x020C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        RecordComp;                                        // 0x0210(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Timer;                                             // 0x0218(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21C[0x4];                                      // 0x021C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        DialogSoundComp;                                   // 0x0220(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   PlayingDialogCodeName;                             // 0x0228(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Record_IntentionStop;                              // 0x0230(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_231[0x7];                                      // 0x0231(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundMix*                              PushedMixModifier;                                 // 0x0238(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundMix*                              DialogSoundMix_Dialog2D;                           // 0x0240(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundMix*                              DialogSoundMix_Dialog3D;                           // 0x0248(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundMix*                              DialogSoundMix_Monologue2D;                        // 0x0250(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundMix*                              DialogSoundMix_Monologue3D;                        // 0x0258(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundMix*                              BGM_SoundMix;                                      // 0x0260(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundMix*                              Pushed_BGM_MixModifier;                            // 0x0268(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundMix*                              VoiceTermMixModifier;                              // 0x0270(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          UsingDialogMixer;                                  // 0x0278(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_279[0x3];                                      // 0x0279(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         SoundVolumeFadeTime;                               // 0x027C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BGMDelay;                                          // 0x0280(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_SoundSystemDataBP(int32 EntryPoint);
	void OnPreCompletePlayDialogSound();
	void ReceiveEndPlay(EEndPlayReason EndPlayReason);
	void ReceiveTick(float DeltaSeconds);
	void OnFadeMuteSound(bool bMute);
	void OnCompletePlayDialogSound();
	void SpawnPlayBGM(class FName SoundName, float DelayTime);
	class USoundMix* GetBaseSoundMix();
	void OnPlayBGM(class FName SoundName, bool* PlayResult);
	void OnStopBGM();
	bool OnPlayRecord(class FName RecordCodeName, class ALPropSpot* InSoundSource);
	bool OnStopRecord();
	void On_Finish_Record();
	void OnRecordPlaybackPercent(const class USoundWave* PlayingSoundWave, const float PlaybackPercent);
	bool OnPlayDialogSound(const struct FDialogInfoPtr& InDialog);
	bool OnStopDialogSound(bool SkipFadeOut);
	void GetGlobalMuteSoundMixes(TArray<class USoundMix*>* MuteMixes);
	void OnCompleteDialogSound();
	float GetSoundVolumeFadeTime();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"SoundSystemDataBP_C">();
	}
	static class ASoundSystemDataBP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ASoundSystemDataBP_C>();
	}
};
static_assert(alignof(ASoundSystemDataBP_C) == 0x000008, "Wrong alignment on ASoundSystemDataBP_C");
static_assert(sizeof(ASoundSystemDataBP_C) == 0x000288, "Wrong size on ASoundSystemDataBP_C");
static_assert(offsetof(ASoundSystemDataBP_C, UberGraphFrame) == 0x0001E8, "Member 'ASoundSystemDataBP_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ASoundSystemDataBP_C, DefaultSceneRoot) == 0x0001F0, "Member 'ASoundSystemDataBP_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ASoundSystemDataBP_C, BGMComp) == 0x0001F8, "Member 'ASoundSystemDataBP_C::BGMComp' has a wrong offset!");
static_assert(offsetof(ASoundSystemDataBP_C, PlayingBGM) == 0x000200, "Member 'ASoundSystemDataBP_C::PlayingBGM' has a wrong offset!");
static_assert(offsetof(ASoundSystemDataBP_C, FadeOutBGM) == 0x000208, "Member 'ASoundSystemDataBP_C::FadeOutBGM' has a wrong offset!");
static_assert(offsetof(ASoundSystemDataBP_C, RecordComp) == 0x000210, "Member 'ASoundSystemDataBP_C::RecordComp' has a wrong offset!");
static_assert(offsetof(ASoundSystemDataBP_C, Timer) == 0x000218, "Member 'ASoundSystemDataBP_C::Timer' has a wrong offset!");
static_assert(offsetof(ASoundSystemDataBP_C, DialogSoundComp) == 0x000220, "Member 'ASoundSystemDataBP_C::DialogSoundComp' has a wrong offset!");
static_assert(offsetof(ASoundSystemDataBP_C, PlayingDialogCodeName) == 0x000228, "Member 'ASoundSystemDataBP_C::PlayingDialogCodeName' has a wrong offset!");
static_assert(offsetof(ASoundSystemDataBP_C, Record_IntentionStop) == 0x000230, "Member 'ASoundSystemDataBP_C::Record_IntentionStop' has a wrong offset!");
static_assert(offsetof(ASoundSystemDataBP_C, PushedMixModifier) == 0x000238, "Member 'ASoundSystemDataBP_C::PushedMixModifier' has a wrong offset!");
static_assert(offsetof(ASoundSystemDataBP_C, DialogSoundMix_Dialog2D) == 0x000240, "Member 'ASoundSystemDataBP_C::DialogSoundMix_Dialog2D' has a wrong offset!");
static_assert(offsetof(ASoundSystemDataBP_C, DialogSoundMix_Dialog3D) == 0x000248, "Member 'ASoundSystemDataBP_C::DialogSoundMix_Dialog3D' has a wrong offset!");
static_assert(offsetof(ASoundSystemDataBP_C, DialogSoundMix_Monologue2D) == 0x000250, "Member 'ASoundSystemDataBP_C::DialogSoundMix_Monologue2D' has a wrong offset!");
static_assert(offsetof(ASoundSystemDataBP_C, DialogSoundMix_Monologue3D) == 0x000258, "Member 'ASoundSystemDataBP_C::DialogSoundMix_Monologue3D' has a wrong offset!");
static_assert(offsetof(ASoundSystemDataBP_C, BGM_SoundMix) == 0x000260, "Member 'ASoundSystemDataBP_C::BGM_SoundMix' has a wrong offset!");
static_assert(offsetof(ASoundSystemDataBP_C, Pushed_BGM_MixModifier) == 0x000268, "Member 'ASoundSystemDataBP_C::Pushed_BGM_MixModifier' has a wrong offset!");
static_assert(offsetof(ASoundSystemDataBP_C, VoiceTermMixModifier) == 0x000270, "Member 'ASoundSystemDataBP_C::VoiceTermMixModifier' has a wrong offset!");
static_assert(offsetof(ASoundSystemDataBP_C, UsingDialogMixer) == 0x000278, "Member 'ASoundSystemDataBP_C::UsingDialogMixer' has a wrong offset!");
static_assert(offsetof(ASoundSystemDataBP_C, SoundVolumeFadeTime) == 0x00027C, "Member 'ASoundSystemDataBP_C::SoundVolumeFadeTime' has a wrong offset!");
static_assert(offsetof(ASoundSystemDataBP_C, BGMDelay) == 0x000280, "Member 'ASoundSystemDataBP_C::BGMDelay' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UIW_DPad_Weapon

#include "Basic.hpp"

#include "ProjectPContentInfo_structs.hpp"
#include "ProjectP_structs.hpp"
#include "InputCore_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function UIW_DPad_Weapon.UIW_DPad_Weapon_C.ExecuteUbergraph_UIW_DPad_Weapon
// 0x0230 (0x0230 - 0x0000)
struct UIW_DPad_Weapon_C_ExecuteUbergraph_UIW_DPad_Weapon final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ULEventDispatcherSystem*                CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(int32 CurrentSharpness, int32 MaxSharpness, bool IsGrinding)> K2Node_CreateDelegate_OutputDelegate;              // 0x0010(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(struct FLEquipItemSlot& EquipSlot)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x0020(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(int32 Current, int32 Max, int32 UnitCount, int32 ConsumeUnitCount, ELFrenzyConsumeReason FrenzyPointConsumeReason)> K2Node_CreateDelegate_OutputDelegate_2;            // 0x0030(0x0010)(ZeroConstructor, NoDestructor)
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue;           // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ALPCCharacter*                          K2Node_DynamicCast_AsLPCCharacter;                 // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_CategoryName;                   // 0x0054(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UUIW_HUD_FrenzyUnit_C*>          K2Node_MakeArray_Array;                            // 0x0060(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          K2Node_SwitchName_CmpSuccess;                      // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x3];                                       // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class FName CategoryName)>     K2Node_CreateDelegate_OutputDelegate_3;            // 0x0074(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(bool On, bool IsHandle)>       K2Node_CreateDelegate_OutputDelegate_4;            // 0x0084(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_5;            // 0x0094(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_A4[0x4];                                       // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue_1;         // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UUIW_HUD_FrenzyUnit_C*>          K2Node_MakeArray_Array_1;                          // 0x00B0(0x0010)(ReferenceParm, ContainsInstancedReference)
	class ULActMgrComponent*                      CallFunc_GetActMgrComponent_ReturnValue;           // 0x00C0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULComboTableBase*                       CallFunc_GetComboTable_ReturnValue;                // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULActMgrComponent*                      K2Node_CustomEvent_ActMgrComponent_1;              // 0x00D0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULActBase*                              K2Node_CustomEvent_StoppingAction;                 // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULActBase*                              K2Node_CustomEvent_ReasonAction;                   // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULPCComboTableBP_C*                     K2Node_DynamicCast_AsLPCCombo_Table_BP;            // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00F2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00F3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x00F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x00F5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00F6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x00F7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F9[0x7];                                       // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ULActMgrComponent*                      K2Node_CustomEvent_ActMgrComponent;                // 0x0100(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULActBase*                              K2Node_CustomEvent_StartedAction;                  // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_4;        // 0x0111(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_5;        // 0x0112(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0113(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_GetCharacterStat_ReturnValue;             // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetCharacterStat_ReturnValue_1;           // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetCharacterStat_ReturnValue_2;           // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULEventDispatcherSystem*                CallFunc_GetGameInstanceSubsystem_ReturnValue_1;   // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_129[0x7];                                      // 0x0129(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ULPlayInputSystem*                      CallFunc_GetGameInstanceSubsystem_ReturnValue_2;   // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULItemSystem*                           CallFunc_GetGameInstanceSubsystem_ReturnValue_3;   // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsGamePadMode_ReturnValue;                // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_141[0x7];                                      // 0x0141(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ULPlayerEquipment*                      CallFunc_GetPlayerEquipment_ReturnValue;           // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLEquipItemSlot                        CallFunc_GetChosenWeaponItem_ReturnValue;          // 0x0150(0x0018)(NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_169[0x7];                                      // 0x0169(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue_2;         // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULItemSystem*                           CallFunc_GetGameInstanceSubsystem_ReturnValue_4;   // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULActMgrComponent*                      CallFunc_GetActMgrComponent_ReturnValue_1;         // 0x0180(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULPlayerEquipment*                      CallFunc_GetPlayerEquipment_ReturnValue_1;         // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULComboTableBase*                       CallFunc_GetComboTable_ReturnValue_1;              // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULPCComboTableBP_C*                     K2Node_DynamicCast_AsLPCCombo_Table_BP_1;          // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A1[0x3];                                      // 0x01A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_6;            // 0x01A4(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_6;        // 0x01B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_7;        // 0x01B5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_8;        // 0x01B6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x01B7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_9;        // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x01B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_4;                  // 0x01BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1BB[0x1];                                      // 0x01BB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x01BC(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x01F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class ULActMgrComponent* ActMgrComponent, class ULActBase* StartedAction)> K2Node_CreateDelegate_OutputDelegate_7;            // 0x01F8(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_10;       // 0x0208(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_209[0x3];                                      // 0x0209(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class ULActMgrComponent* ActMgrComponent, class ULActBase* StoppingAction, class ULActBase* ReasonAction)> K2Node_CreateDelegate_OutputDelegate_8;            // 0x020C(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_5;                  // 0x021C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21D[0x3];                                      // 0x021D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UUIW_Btn_Key_C*>                 K2Node_MakeArray_Array_2;                          // 0x0220(0x0010)(ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(UIW_DPad_Weapon_C_ExecuteUbergraph_UIW_DPad_Weapon) == 0x000008, "Wrong alignment on UIW_DPad_Weapon_C_ExecuteUbergraph_UIW_DPad_Weapon");
static_assert(sizeof(UIW_DPad_Weapon_C_ExecuteUbergraph_UIW_DPad_Weapon) == 0x000230, "Wrong size on UIW_DPad_Weapon_C_ExecuteUbergraph_UIW_DPad_Weapon");
static_assert(offsetof(UIW_DPad_Weapon_C_ExecuteUbergraph_UIW_DPad_Weapon, EntryPoint) == 0x000000, "Member 'UIW_DPad_Weapon_C_ExecuteUbergraph_UIW_DPad_Weapon::EntryPoint' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_ExecuteUbergraph_UIW_DPad_Weapon, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000008, "Member 'UIW_DPad_Weapon_C_ExecuteUbergraph_UIW_DPad_Weapon::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_ExecuteUbergraph_UIW_DPad_Weapon, K2Node_CreateDelegate_OutputDelegate) == 0x000010, "Member 'UIW_DPad_Weapon_C_ExecuteUbergraph_UIW_DPad_Weapon::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_ExecuteUbergraph_UIW_DPad_Weapon, K2Node_CreateDelegate_OutputDelegate_1) == 0x000020, "Member 'UIW_DPad_Weapon_C_ExecuteUbergraph_UIW_DPad_Weapon::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_ExecuteUbergraph_UIW_DPad_Weapon, K2Node_CreateDelegate_OutputDelegate_2) == 0x000030, "Member 'UIW_DPad_Weapon_C_ExecuteUbergraph_UIW_DPad_Weapon::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_ExecuteUbergraph_UIW_DPad_Weapon, CallFunc_GetPlayerCharacter_ReturnValue) == 0x000040, "Member 'UIW_DPad_Weapon_C_ExecuteUbergraph_UIW_DPad_Weapon::CallFunc_GetPlayerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_ExecuteUbergraph_UIW_DPad_Weapon, K2Node_DynamicCast_AsLPCCharacter) == 0x000048, "Member 'UIW_DPad_Weapon_C_ExecuteUbergraph_UIW_DPad_Weapon::K2Node_DynamicCast_AsLPCCharacter' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_ExecuteUbergraph_UIW_DPad_Weapon, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'UIW_DPad_Weapon_C_ExecuteUbergraph_UIW_DPad_Weapon::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_ExecuteUbergraph_UIW_DPad_Weapon, K2Node_CustomEvent_CategoryName) == 0x000054, "Member 'UIW_DPad_Weapon_C_ExecuteUbergraph_UIW_DPad_Weapon::K2Node_CustomEvent_CategoryName' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_ExecuteUbergraph_UIW_DPad_Weapon, K2Node_MakeArray_Array) == 0x000060, "Member 'UIW_DPad_Weapon_C_ExecuteUbergraph_UIW_DPad_Weapon::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_ExecuteUbergraph_UIW_DPad_Weapon, K2Node_SwitchName_CmpSuccess) == 0x000070, "Member 'UIW_DPad_Weapon_C_ExecuteUbergraph_UIW_DPad_Weapon::K2Node_SwitchName_CmpSuccess' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_ExecuteUbergraph_UIW_DPad_Weapon, K2Node_CreateDelegate_OutputDelegate_3) == 0x000074, "Member 'UIW_DPad_Weapon_C_ExecuteUbergraph_UIW_DPad_Weapon::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_ExecuteUbergraph_UIW_DPad_Weapon, K2Node_CreateDelegate_OutputDelegate_4) == 0x000084, "Member 'UIW_DPad_Weapon_C_ExecuteUbergraph_UIW_DPad_Weapon::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_ExecuteUbergraph_UIW_DPad_Weapon, K2Node_CreateDelegate_OutputDelegate_5) == 0x000094, "Member 'UIW_DPad_Weapon_C_ExecuteUbergraph_UIW_DPad_Weapon::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_ExecuteUbergraph_UIW_DPad_Weapon, CallFunc_GetPlayerCharacter_ReturnValue_1) == 0x0000A8, "Member 'UIW_DPad_Weapon_C_ExecuteUbergraph_UIW_DPad_Weapon::CallFunc_GetPlayerCharacter_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_ExecuteUbergraph_UIW_DPad_Weapon, K2Node_MakeArray_Array_1) == 0x0000B0, "Member 'UIW_DPad_Weapon_C_ExecuteUbergraph_UIW_DPad_Weapon::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_ExecuteUbergraph_UIW_DPad_Weapon, CallFunc_GetActMgrComponent_ReturnValue) == 0x0000C0, "Member 'UIW_DPad_Weapon_C_ExecuteUbergraph_UIW_DPad_Weapon::CallFunc_GetActMgrComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_ExecuteUbergraph_UIW_DPad_Weapon, CallFunc_GetComboTable_ReturnValue) == 0x0000C8, "Member 'UIW_DPad_Weapon_C_ExecuteUbergraph_UIW_DPad_Weapon::CallFunc_GetComboTable_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_ExecuteUbergraph_UIW_DPad_Weapon, K2Node_CustomEvent_ActMgrComponent_1) == 0x0000D0, "Member 'UIW_DPad_Weapon_C_ExecuteUbergraph_UIW_DPad_Weapon::K2Node_CustomEvent_ActMgrComponent_1' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_ExecuteUbergraph_UIW_DPad_Weapon, K2Node_CustomEvent_StoppingAction) == 0x0000D8, "Member 'UIW_DPad_Weapon_C_ExecuteUbergraph_UIW_DPad_Weapon::K2Node_CustomEvent_StoppingAction' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_ExecuteUbergraph_UIW_DPad_Weapon, K2Node_CustomEvent_ReasonAction) == 0x0000E0, "Member 'UIW_DPad_Weapon_C_ExecuteUbergraph_UIW_DPad_Weapon::K2Node_CustomEvent_ReasonAction' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_ExecuteUbergraph_UIW_DPad_Weapon, K2Node_DynamicCast_AsLPCCombo_Table_BP) == 0x0000E8, "Member 'UIW_DPad_Weapon_C_ExecuteUbergraph_UIW_DPad_Weapon::K2Node_DynamicCast_AsLPCCombo_Table_BP' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_ExecuteUbergraph_UIW_DPad_Weapon, K2Node_DynamicCast_bSuccess_1) == 0x0000F0, "Member 'UIW_DPad_Weapon_C_ExecuteUbergraph_UIW_DPad_Weapon::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_ExecuteUbergraph_UIW_DPad_Weapon, CallFunc_IsValid_ReturnValue) == 0x0000F1, "Member 'UIW_DPad_Weapon_C_ExecuteUbergraph_UIW_DPad_Weapon::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_ExecuteUbergraph_UIW_DPad_Weapon, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000F2, "Member 'UIW_DPad_Weapon_C_ExecuteUbergraph_UIW_DPad_Weapon::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_ExecuteUbergraph_UIW_DPad_Weapon, CallFunc_Not_PreBool_ReturnValue) == 0x0000F3, "Member 'UIW_DPad_Weapon_C_ExecuteUbergraph_UIW_DPad_Weapon::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_ExecuteUbergraph_UIW_DPad_Weapon, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x0000F4, "Member 'UIW_DPad_Weapon_C_ExecuteUbergraph_UIW_DPad_Weapon::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_ExecuteUbergraph_UIW_DPad_Weapon, CallFunc_Not_PreBool_ReturnValue_1) == 0x0000F5, "Member 'UIW_DPad_Weapon_C_ExecuteUbergraph_UIW_DPad_Weapon::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_ExecuteUbergraph_UIW_DPad_Weapon, CallFunc_BooleanAND_ReturnValue) == 0x0000F6, "Member 'UIW_DPad_Weapon_C_ExecuteUbergraph_UIW_DPad_Weapon::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_ExecuteUbergraph_UIW_DPad_Weapon, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x0000F7, "Member 'UIW_DPad_Weapon_C_ExecuteUbergraph_UIW_DPad_Weapon::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_ExecuteUbergraph_UIW_DPad_Weapon, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x0000F8, "Member 'UIW_DPad_Weapon_C_ExecuteUbergraph_UIW_DPad_Weapon::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_ExecuteUbergraph_UIW_DPad_Weapon, K2Node_CustomEvent_ActMgrComponent) == 0x000100, "Member 'UIW_DPad_Weapon_C_ExecuteUbergraph_UIW_DPad_Weapon::K2Node_CustomEvent_ActMgrComponent' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_ExecuteUbergraph_UIW_DPad_Weapon, K2Node_CustomEvent_StartedAction) == 0x000108, "Member 'UIW_DPad_Weapon_C_ExecuteUbergraph_UIW_DPad_Weapon::K2Node_CustomEvent_StartedAction' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_ExecuteUbergraph_UIW_DPad_Weapon, CallFunc_BooleanOR_ReturnValue) == 0x000110, "Member 'UIW_DPad_Weapon_C_ExecuteUbergraph_UIW_DPad_Weapon::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_ExecuteUbergraph_UIW_DPad_Weapon, CallFunc_EqualEqual_ByteByte_ReturnValue_4) == 0x000111, "Member 'UIW_DPad_Weapon_C_ExecuteUbergraph_UIW_DPad_Weapon::CallFunc_EqualEqual_ByteByte_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_ExecuteUbergraph_UIW_DPad_Weapon, CallFunc_EqualEqual_ByteByte_ReturnValue_5) == 0x000112, "Member 'UIW_DPad_Weapon_C_ExecuteUbergraph_UIW_DPad_Weapon::CallFunc_EqualEqual_ByteByte_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_ExecuteUbergraph_UIW_DPad_Weapon, CallFunc_BooleanOR_ReturnValue_1) == 0x000113, "Member 'UIW_DPad_Weapon_C_ExecuteUbergraph_UIW_DPad_Weapon::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_ExecuteUbergraph_UIW_DPad_Weapon, CallFunc_GetCharacterStat_ReturnValue) == 0x000114, "Member 'UIW_DPad_Weapon_C_ExecuteUbergraph_UIW_DPad_Weapon::CallFunc_GetCharacterStat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_ExecuteUbergraph_UIW_DPad_Weapon, CallFunc_GetCharacterStat_ReturnValue_1) == 0x000118, "Member 'UIW_DPad_Weapon_C_ExecuteUbergraph_UIW_DPad_Weapon::CallFunc_GetCharacterStat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_ExecuteUbergraph_UIW_DPad_Weapon, CallFunc_GetCharacterStat_ReturnValue_2) == 0x00011C, "Member 'UIW_DPad_Weapon_C_ExecuteUbergraph_UIW_DPad_Weapon::CallFunc_GetCharacterStat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_ExecuteUbergraph_UIW_DPad_Weapon, CallFunc_GetGameInstanceSubsystem_ReturnValue_1) == 0x000120, "Member 'UIW_DPad_Weapon_C_ExecuteUbergraph_UIW_DPad_Weapon::CallFunc_GetGameInstanceSubsystem_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_ExecuteUbergraph_UIW_DPad_Weapon, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000128, "Member 'UIW_DPad_Weapon_C_ExecuteUbergraph_UIW_DPad_Weapon::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_ExecuteUbergraph_UIW_DPad_Weapon, CallFunc_GetGameInstanceSubsystem_ReturnValue_2) == 0x000130, "Member 'UIW_DPad_Weapon_C_ExecuteUbergraph_UIW_DPad_Weapon::CallFunc_GetGameInstanceSubsystem_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_ExecuteUbergraph_UIW_DPad_Weapon, CallFunc_GetGameInstanceSubsystem_ReturnValue_3) == 0x000138, "Member 'UIW_DPad_Weapon_C_ExecuteUbergraph_UIW_DPad_Weapon::CallFunc_GetGameInstanceSubsystem_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_ExecuteUbergraph_UIW_DPad_Weapon, CallFunc_IsGamePadMode_ReturnValue) == 0x000140, "Member 'UIW_DPad_Weapon_C_ExecuteUbergraph_UIW_DPad_Weapon::CallFunc_IsGamePadMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_ExecuteUbergraph_UIW_DPad_Weapon, CallFunc_GetPlayerEquipment_ReturnValue) == 0x000148, "Member 'UIW_DPad_Weapon_C_ExecuteUbergraph_UIW_DPad_Weapon::CallFunc_GetPlayerEquipment_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_ExecuteUbergraph_UIW_DPad_Weapon, CallFunc_GetChosenWeaponItem_ReturnValue) == 0x000150, "Member 'UIW_DPad_Weapon_C_ExecuteUbergraph_UIW_DPad_Weapon::CallFunc_GetChosenWeaponItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_ExecuteUbergraph_UIW_DPad_Weapon, CallFunc_IsValid_ReturnValue_1) == 0x000168, "Member 'UIW_DPad_Weapon_C_ExecuteUbergraph_UIW_DPad_Weapon::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_ExecuteUbergraph_UIW_DPad_Weapon, CallFunc_GetPlayerCharacter_ReturnValue_2) == 0x000170, "Member 'UIW_DPad_Weapon_C_ExecuteUbergraph_UIW_DPad_Weapon::CallFunc_GetPlayerCharacter_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_ExecuteUbergraph_UIW_DPad_Weapon, CallFunc_GetGameInstanceSubsystem_ReturnValue_4) == 0x000178, "Member 'UIW_DPad_Weapon_C_ExecuteUbergraph_UIW_DPad_Weapon::CallFunc_GetGameInstanceSubsystem_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_ExecuteUbergraph_UIW_DPad_Weapon, CallFunc_GetActMgrComponent_ReturnValue_1) == 0x000180, "Member 'UIW_DPad_Weapon_C_ExecuteUbergraph_UIW_DPad_Weapon::CallFunc_GetActMgrComponent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_ExecuteUbergraph_UIW_DPad_Weapon, CallFunc_GetPlayerEquipment_ReturnValue_1) == 0x000188, "Member 'UIW_DPad_Weapon_C_ExecuteUbergraph_UIW_DPad_Weapon::CallFunc_GetPlayerEquipment_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_ExecuteUbergraph_UIW_DPad_Weapon, CallFunc_GetComboTable_ReturnValue_1) == 0x000190, "Member 'UIW_DPad_Weapon_C_ExecuteUbergraph_UIW_DPad_Weapon::CallFunc_GetComboTable_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_ExecuteUbergraph_UIW_DPad_Weapon, K2Node_DynamicCast_AsLPCCombo_Table_BP_1) == 0x000198, "Member 'UIW_DPad_Weapon_C_ExecuteUbergraph_UIW_DPad_Weapon::K2Node_DynamicCast_AsLPCCombo_Table_BP_1' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_ExecuteUbergraph_UIW_DPad_Weapon, K2Node_DynamicCast_bSuccess_2) == 0x0001A0, "Member 'UIW_DPad_Weapon_C_ExecuteUbergraph_UIW_DPad_Weapon::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_ExecuteUbergraph_UIW_DPad_Weapon, K2Node_CreateDelegate_OutputDelegate_6) == 0x0001A4, "Member 'UIW_DPad_Weapon_C_ExecuteUbergraph_UIW_DPad_Weapon::K2Node_CreateDelegate_OutputDelegate_6' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_ExecuteUbergraph_UIW_DPad_Weapon, CallFunc_EqualEqual_ByteByte_ReturnValue_6) == 0x0001B4, "Member 'UIW_DPad_Weapon_C_ExecuteUbergraph_UIW_DPad_Weapon::CallFunc_EqualEqual_ByteByte_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_ExecuteUbergraph_UIW_DPad_Weapon, CallFunc_EqualEqual_ByteByte_ReturnValue_7) == 0x0001B5, "Member 'UIW_DPad_Weapon_C_ExecuteUbergraph_UIW_DPad_Weapon::CallFunc_EqualEqual_ByteByte_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_ExecuteUbergraph_UIW_DPad_Weapon, CallFunc_EqualEqual_ByteByte_ReturnValue_8) == 0x0001B6, "Member 'UIW_DPad_Weapon_C_ExecuteUbergraph_UIW_DPad_Weapon::CallFunc_EqualEqual_ByteByte_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_ExecuteUbergraph_UIW_DPad_Weapon, CallFunc_BooleanOR_ReturnValue_2) == 0x0001B7, "Member 'UIW_DPad_Weapon_C_ExecuteUbergraph_UIW_DPad_Weapon::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_ExecuteUbergraph_UIW_DPad_Weapon, CallFunc_EqualEqual_ByteByte_ReturnValue_9) == 0x0001B8, "Member 'UIW_DPad_Weapon_C_ExecuteUbergraph_UIW_DPad_Weapon::CallFunc_EqualEqual_ByteByte_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_ExecuteUbergraph_UIW_DPad_Weapon, CallFunc_BooleanOR_ReturnValue_3) == 0x0001B9, "Member 'UIW_DPad_Weapon_C_ExecuteUbergraph_UIW_DPad_Weapon::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_ExecuteUbergraph_UIW_DPad_Weapon, CallFunc_BooleanOR_ReturnValue_4) == 0x0001BA, "Member 'UIW_DPad_Weapon_C_ExecuteUbergraph_UIW_DPad_Weapon::CallFunc_BooleanOR_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_ExecuteUbergraph_UIW_DPad_Weapon, K2Node_Event_MyGeometry) == 0x0001BC, "Member 'UIW_DPad_Weapon_C_ExecuteUbergraph_UIW_DPad_Weapon::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_ExecuteUbergraph_UIW_DPad_Weapon, K2Node_Event_InDeltaTime) == 0x0001F4, "Member 'UIW_DPad_Weapon_C_ExecuteUbergraph_UIW_DPad_Weapon::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_ExecuteUbergraph_UIW_DPad_Weapon, K2Node_CreateDelegate_OutputDelegate_7) == 0x0001F8, "Member 'UIW_DPad_Weapon_C_ExecuteUbergraph_UIW_DPad_Weapon::K2Node_CreateDelegate_OutputDelegate_7' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_ExecuteUbergraph_UIW_DPad_Weapon, CallFunc_EqualEqual_ByteByte_ReturnValue_10) == 0x000208, "Member 'UIW_DPad_Weapon_C_ExecuteUbergraph_UIW_DPad_Weapon::CallFunc_EqualEqual_ByteByte_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_ExecuteUbergraph_UIW_DPad_Weapon, K2Node_CreateDelegate_OutputDelegate_8) == 0x00020C, "Member 'UIW_DPad_Weapon_C_ExecuteUbergraph_UIW_DPad_Weapon::K2Node_CreateDelegate_OutputDelegate_8' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_ExecuteUbergraph_UIW_DPad_Weapon, CallFunc_BooleanOR_ReturnValue_5) == 0x00021C, "Member 'UIW_DPad_Weapon_C_ExecuteUbergraph_UIW_DPad_Weapon::CallFunc_BooleanOR_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_ExecuteUbergraph_UIW_DPad_Weapon, K2Node_MakeArray_Array_2) == 0x000220, "Member 'UIW_DPad_Weapon_C_ExecuteUbergraph_UIW_DPad_Weapon::K2Node_MakeArray_Array_2' has a wrong offset!");

// Function UIW_DPad_Weapon.UIW_DPad_Weapon_C.Tick
// 0x003C (0x003C - 0x0000)
struct UIW_DPad_Weapon_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UIW_DPad_Weapon_C_Tick) == 0x000004, "Wrong alignment on UIW_DPad_Weapon_C_Tick");
static_assert(sizeof(UIW_DPad_Weapon_C_Tick) == 0x00003C, "Wrong size on UIW_DPad_Weapon_C_Tick");
static_assert(offsetof(UIW_DPad_Weapon_C_Tick, MyGeometry) == 0x000000, "Member 'UIW_DPad_Weapon_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_Tick, InDeltaTime) == 0x000038, "Member 'UIW_DPad_Weapon_C_Tick::InDeltaTime' has a wrong offset!");

// Function UIW_DPad_Weapon.UIW_DPad_Weapon_C.OnActionStarted
// 0x0010 (0x0010 - 0x0000)
struct UIW_DPad_Weapon_C_OnActionStarted final
{
public:
	class ULActMgrComponent*                      ActMgrComponent;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULActBase*                              StartedAction;                                     // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UIW_DPad_Weapon_C_OnActionStarted) == 0x000008, "Wrong alignment on UIW_DPad_Weapon_C_OnActionStarted");
static_assert(sizeof(UIW_DPad_Weapon_C_OnActionStarted) == 0x000010, "Wrong size on UIW_DPad_Weapon_C_OnActionStarted");
static_assert(offsetof(UIW_DPad_Weapon_C_OnActionStarted, ActMgrComponent) == 0x000000, "Member 'UIW_DPad_Weapon_C_OnActionStarted::ActMgrComponent' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_OnActionStarted, StartedAction) == 0x000008, "Member 'UIW_DPad_Weapon_C_OnActionStarted::StartedAction' has a wrong offset!");

// Function UIW_DPad_Weapon.UIW_DPad_Weapon_C.OnActionEnded
// 0x0018 (0x0018 - 0x0000)
struct UIW_DPad_Weapon_C_OnActionEnded final
{
public:
	class ULActMgrComponent*                      ActMgrComponent;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULActBase*                              StoppingAction;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULActBase*                              ReasonAction;                                      // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UIW_DPad_Weapon_C_OnActionEnded) == 0x000008, "Wrong alignment on UIW_DPad_Weapon_C_OnActionEnded");
static_assert(sizeof(UIW_DPad_Weapon_C_OnActionEnded) == 0x000018, "Wrong size on UIW_DPad_Weapon_C_OnActionEnded");
static_assert(offsetof(UIW_DPad_Weapon_C_OnActionEnded, ActMgrComponent) == 0x000000, "Member 'UIW_DPad_Weapon_C_OnActionEnded::ActMgrComponent' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_OnActionEnded, StoppingAction) == 0x000008, "Member 'UIW_DPad_Weapon_C_OnActionEnded::StoppingAction' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_OnActionEnded, ReasonAction) == 0x000010, "Member 'UIW_DPad_Weapon_C_OnActionEnded::ReasonAction' has a wrong offset!");

// Function UIW_DPad_Weapon.UIW_DPad_Weapon_C.CompleteTween
// 0x0008 (0x0008 - 0x0000)
struct UIW_DPad_Weapon_C_CompleteTween final
{
public:
	class FName                                   CategoryName;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UIW_DPad_Weapon_C_CompleteTween) == 0x000004, "Wrong alignment on UIW_DPad_Weapon_C_CompleteTween");
static_assert(sizeof(UIW_DPad_Weapon_C_CompleteTween) == 0x000008, "Wrong size on UIW_DPad_Weapon_C_CompleteTween");
static_assert(offsetof(UIW_DPad_Weapon_C_CompleteTween, CategoryName) == 0x000000, "Member 'UIW_DPad_Weapon_C_CompleteTween::CategoryName' has a wrong offset!");

// Function UIW_DPad_Weapon.UIW_DPad_Weapon_C.ChangeIcon
// 0x0018 (0x0018 - 0x0000)
struct UIW_DPad_Weapon_C_ChangeIcon final
{
public:
	class UTexture2D*                             Texture;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTweenEase                             K2Node_MakeStruct_TweenEase;                       // 0x0008(0x000C)(NoDestructor)
};
static_assert(alignof(UIW_DPad_Weapon_C_ChangeIcon) == 0x000008, "Wrong alignment on UIW_DPad_Weapon_C_ChangeIcon");
static_assert(sizeof(UIW_DPad_Weapon_C_ChangeIcon) == 0x000018, "Wrong size on UIW_DPad_Weapon_C_ChangeIcon");
static_assert(offsetof(UIW_DPad_Weapon_C_ChangeIcon, Texture) == 0x000000, "Member 'UIW_DPad_Weapon_C_ChangeIcon::Texture' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_ChangeIcon, K2Node_MakeStruct_TweenEase) == 0x000008, "Member 'UIW_DPad_Weapon_C_ChangeIcon::K2Node_MakeStruct_TweenEase' has a wrong offset!");

// Function UIW_DPad_Weapon.UIW_DPad_Weapon_C.SetItem
// 0x00C8 (0x00C8 - 0x0000)
struct UIW_DPad_Weapon_C_SetItem final
{
public:
	ELEquipSlotType                               EquipSlotType;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ULWeaponItem*                           LWeapon;                                           // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSkillInfoPtr                          LocalSkillInfoHandle;                              // 0x0010(0x0008)(Edit, BlueprintVisible, NoDestructor)
	struct FSkillInfoPtr                          LocalSkillInfoBlade;                               // 0x0018(0x0008)(Edit, BlueprintVisible, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UObject>                 CallFunc_GetHeroicImageResource_ReturnValue;       // 0x0028(0x0028)(UObjectWrapper, HasGetValueTypeHash)
	int32                                         CallFunc_GetMaxSharpnessPoint_ReturnValue;         // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetCurrentSharpnessPoint_ReturnValue;     // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FItemCommonInfoPtr                     CallFunc_GetHandleCommonInfo_ReturnValue;          // 0x0058(0x0008)(NoDestructor)
	bool                                          CallFunc_IsHeroicWeapon_ReturnValue;               // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UObject>                 CallFunc_GetImageResource_ReturnValue;             // 0x0068(0x0028)(ConstParm, UObjectWrapper, HasGetValueTypeHash)
	struct FItemCommonInfoPtr                     CallFunc_GetBladeCommonInfo_ReturnValue;           // 0x0090(0x0008)(NoDestructor)
	TSoftObjectPtr<class UObject>                 CallFunc_GetImageResource_ReturnValue_1;           // 0x0098(0x0028)(ConstParm, UObjectWrapper, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UIW_DPad_Weapon_C_SetItem) == 0x000008, "Wrong alignment on UIW_DPad_Weapon_C_SetItem");
static_assert(sizeof(UIW_DPad_Weapon_C_SetItem) == 0x0000C8, "Wrong size on UIW_DPad_Weapon_C_SetItem");
static_assert(offsetof(UIW_DPad_Weapon_C_SetItem, EquipSlotType) == 0x000000, "Member 'UIW_DPad_Weapon_C_SetItem::EquipSlotType' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_SetItem, LWeapon) == 0x000008, "Member 'UIW_DPad_Weapon_C_SetItem::LWeapon' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_SetItem, LocalSkillInfoHandle) == 0x000010, "Member 'UIW_DPad_Weapon_C_SetItem::LocalSkillInfoHandle' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_SetItem, LocalSkillInfoBlade) == 0x000018, "Member 'UIW_DPad_Weapon_C_SetItem::LocalSkillInfoBlade' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_SetItem, K2Node_SwitchEnum_CmpSuccess) == 0x000020, "Member 'UIW_DPad_Weapon_C_SetItem::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_SetItem, CallFunc_GetHeroicImageResource_ReturnValue) == 0x000028, "Member 'UIW_DPad_Weapon_C_SetItem::CallFunc_GetHeroicImageResource_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_SetItem, CallFunc_GetMaxSharpnessPoint_ReturnValue) == 0x000050, "Member 'UIW_DPad_Weapon_C_SetItem::CallFunc_GetMaxSharpnessPoint_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_SetItem, CallFunc_GetCurrentSharpnessPoint_ReturnValue) == 0x000054, "Member 'UIW_DPad_Weapon_C_SetItem::CallFunc_GetCurrentSharpnessPoint_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_SetItem, CallFunc_GetHandleCommonInfo_ReturnValue) == 0x000058, "Member 'UIW_DPad_Weapon_C_SetItem::CallFunc_GetHandleCommonInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_SetItem, CallFunc_IsHeroicWeapon_ReturnValue) == 0x000060, "Member 'UIW_DPad_Weapon_C_SetItem::CallFunc_IsHeroicWeapon_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_SetItem, CallFunc_GetImageResource_ReturnValue) == 0x000068, "Member 'UIW_DPad_Weapon_C_SetItem::CallFunc_GetImageResource_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_SetItem, CallFunc_GetBladeCommonInfo_ReturnValue) == 0x000090, "Member 'UIW_DPad_Weapon_C_SetItem::CallFunc_GetBladeCommonInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_SetItem, CallFunc_GetImageResource_ReturnValue_1) == 0x000098, "Member 'UIW_DPad_Weapon_C_SetItem::CallFunc_GetImageResource_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_SetItem, CallFunc_IsValid_ReturnValue) == 0x0000C0, "Member 'UIW_DPad_Weapon_C_SetItem::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function UIW_DPad_Weapon.UIW_DPad_Weapon_C.SetFableInfo
// 0x00B0 (0x00B0 - 0x0000)
struct UIW_DPad_Weapon_C_SetFableInfo final
{
public:
	struct FSkillInfoPtr                          LocalSkillInfoHandle;                              // 0x0000(0x0008)(Edit, BlueprintVisible, NoDestructor)
	struct FSkillInfoPtr                          LocalSkillInfoBlade;                               // 0x0008(0x0008)(Edit, BlueprintVisible, NoDestructor)
	int32                                         CallFunc_GetConsumeFrenzyUnitCount_ReturnValue;    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetConsumeFrenzyUnitCount_ReturnValue_1;  // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetRequireFrenzyUnitCount_ReturnValue;    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetRequireFrenzyUnitCount_ReturnValue_1;  // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue;           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULPlayInputSystem*                      CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ALWeapon*                               CallFunc_GetWeaponByAttachPoint_ReturnValue;       // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsGamePadMode_ReturnValue;                // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSkillInfoPtr                          CallFunc_GetHandleFableArtsSkillInfo_ReturnValue;  // 0x0040(0x0008)(NoDestructor)
	struct FSkillInfoPtr                          CallFunc_GetBladeFableArtsSkillInfo_ReturnValue;   // 0x0048(0x0008)(NoDestructor)
	ELInputTypeHudOnly                            CallFunc_GetInputTypeHudOnly_ReturnValue;          // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ELInputTypeHudOnly                            CallFunc_GetInputTypeHudOnly_ReturnValue_1;        // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ELActionCategory                              CallFunc_GetActionCategory_ReturnValue;            // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_53[0x5];                                       // 0x0053(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UTexture2D>              CallFunc_GetIconFableArtsType_Img;                 // 0x0058(0x0028)(HasGetValueTypeHash)
	ELActionCategory                              CallFunc_GetActionCategory_ReturnValue_1;          // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UTexture2D>              CallFunc_GetIconFableArtsType_Img_1;               // 0x0088(0x0028)(HasGetValueTypeHash)
};
static_assert(alignof(UIW_DPad_Weapon_C_SetFableInfo) == 0x000008, "Wrong alignment on UIW_DPad_Weapon_C_SetFableInfo");
static_assert(sizeof(UIW_DPad_Weapon_C_SetFableInfo) == 0x0000B0, "Wrong size on UIW_DPad_Weapon_C_SetFableInfo");
static_assert(offsetof(UIW_DPad_Weapon_C_SetFableInfo, LocalSkillInfoHandle) == 0x000000, "Member 'UIW_DPad_Weapon_C_SetFableInfo::LocalSkillInfoHandle' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_SetFableInfo, LocalSkillInfoBlade) == 0x000008, "Member 'UIW_DPad_Weapon_C_SetFableInfo::LocalSkillInfoBlade' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_SetFableInfo, CallFunc_GetConsumeFrenzyUnitCount_ReturnValue) == 0x000010, "Member 'UIW_DPad_Weapon_C_SetFableInfo::CallFunc_GetConsumeFrenzyUnitCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_SetFableInfo, CallFunc_GetConsumeFrenzyUnitCount_ReturnValue_1) == 0x000014, "Member 'UIW_DPad_Weapon_C_SetFableInfo::CallFunc_GetConsumeFrenzyUnitCount_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_SetFableInfo, CallFunc_GetRequireFrenzyUnitCount_ReturnValue) == 0x000018, "Member 'UIW_DPad_Weapon_C_SetFableInfo::CallFunc_GetRequireFrenzyUnitCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_SetFableInfo, CallFunc_GetRequireFrenzyUnitCount_ReturnValue_1) == 0x00001C, "Member 'UIW_DPad_Weapon_C_SetFableInfo::CallFunc_GetRequireFrenzyUnitCount_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_SetFableInfo, CallFunc_GetPlayerCharacter_ReturnValue) == 0x000020, "Member 'UIW_DPad_Weapon_C_SetFableInfo::CallFunc_GetPlayerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_SetFableInfo, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000028, "Member 'UIW_DPad_Weapon_C_SetFableInfo::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_SetFableInfo, CallFunc_GetWeaponByAttachPoint_ReturnValue) == 0x000030, "Member 'UIW_DPad_Weapon_C_SetFableInfo::CallFunc_GetWeaponByAttachPoint_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_SetFableInfo, CallFunc_IsGamePadMode_ReturnValue) == 0x000038, "Member 'UIW_DPad_Weapon_C_SetFableInfo::CallFunc_IsGamePadMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_SetFableInfo, CallFunc_GetHandleFableArtsSkillInfo_ReturnValue) == 0x000040, "Member 'UIW_DPad_Weapon_C_SetFableInfo::CallFunc_GetHandleFableArtsSkillInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_SetFableInfo, CallFunc_GetBladeFableArtsSkillInfo_ReturnValue) == 0x000048, "Member 'UIW_DPad_Weapon_C_SetFableInfo::CallFunc_GetBladeFableArtsSkillInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_SetFableInfo, CallFunc_GetInputTypeHudOnly_ReturnValue) == 0x000050, "Member 'UIW_DPad_Weapon_C_SetFableInfo::CallFunc_GetInputTypeHudOnly_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_SetFableInfo, CallFunc_GetInputTypeHudOnly_ReturnValue_1) == 0x000051, "Member 'UIW_DPad_Weapon_C_SetFableInfo::CallFunc_GetInputTypeHudOnly_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_SetFableInfo, CallFunc_GetActionCategory_ReturnValue) == 0x000052, "Member 'UIW_DPad_Weapon_C_SetFableInfo::CallFunc_GetActionCategory_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_SetFableInfo, CallFunc_GetIconFableArtsType_Img) == 0x000058, "Member 'UIW_DPad_Weapon_C_SetFableInfo::CallFunc_GetIconFableArtsType_Img' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_SetFableInfo, CallFunc_GetActionCategory_ReturnValue_1) == 0x000080, "Member 'UIW_DPad_Weapon_C_SetFableInfo::CallFunc_GetActionCategory_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_SetFableInfo, CallFunc_GetIconFableArtsType_Img_1) == 0x000088, "Member 'UIW_DPad_Weapon_C_SetFableInfo::CallFunc_GetIconFableArtsType_Img_1' has a wrong offset!");

// Function UIW_DPad_Weapon.UIW_DPad_Weapon_C.Set Durability
// 0x0048 (0x0048 - 0x0000)
struct UIW_DPad_Weapon_C_Set_Durability final
{
public:
	int32                                         Current;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Max;                                               // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsGrinder;                                         // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue;            // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A[0x6];                                       // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x003B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x003E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ELBladeSharpnessType                          CallFunc_GetCurrentSharpnessType_ReturnValue;      // 0x003F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UIW_DPad_Weapon_C_Set_Durability) == 0x000008, "Wrong alignment on UIW_DPad_Weapon_C_Set_Durability");
static_assert(sizeof(UIW_DPad_Weapon_C_Set_Durability) == 0x000048, "Wrong size on UIW_DPad_Weapon_C_Set_Durability");
static_assert(offsetof(UIW_DPad_Weapon_C_Set_Durability, Current) == 0x000000, "Member 'UIW_DPad_Weapon_C_Set_Durability::Current' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_Set_Durability, Max) == 0x000004, "Member 'UIW_DPad_Weapon_C_Set_Durability::Max' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_Set_Durability, IsGrinder) == 0x000008, "Member 'UIW_DPad_Weapon_C_Set_Durability::IsGrinder' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_Set_Durability, CallFunc_Conv_IntToFloat_ReturnValue) == 0x00000C, "Member 'UIW_DPad_Weapon_C_Set_Durability::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_Set_Durability, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x000010, "Member 'UIW_DPad_Weapon_C_Set_Durability::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_Set_Durability, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000014, "Member 'UIW_DPad_Weapon_C_Set_Durability::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_Set_Durability, CallFunc_FClamp_ReturnValue) == 0x000018, "Member 'UIW_DPad_Weapon_C_Set_Durability::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_Set_Durability, CallFunc_Multiply_IntFloat_ReturnValue) == 0x00001C, "Member 'UIW_DPad_Weapon_C_Set_Durability::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_Set_Durability, CallFunc_MakeVector2D_ReturnValue) == 0x000020, "Member 'UIW_DPad_Weapon_C_Set_Durability::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_Set_Durability, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000028, "Member 'UIW_DPad_Weapon_C_Set_Durability::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_Set_Durability, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x000029, "Member 'UIW_DPad_Weapon_C_Set_Durability::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_Set_Durability, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x000030, "Member 'UIW_DPad_Weapon_C_Set_Durability::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_Set_Durability, K2Node_SwitchEnum_CmpSuccess) == 0x000038, "Member 'UIW_DPad_Weapon_C_Set_Durability::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_Set_Durability, CallFunc_Greater_IntInt_ReturnValue) == 0x000039, "Member 'UIW_DPad_Weapon_C_Set_Durability::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_Set_Durability, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x00003A, "Member 'UIW_DPad_Weapon_C_Set_Durability::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_Set_Durability, CallFunc_Greater_IntInt_ReturnValue_1) == 0x00003B, "Member 'UIW_DPad_Weapon_C_Set_Durability::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_Set_Durability, CallFunc_BooleanAND_ReturnValue) == 0x00003C, "Member 'UIW_DPad_Weapon_C_Set_Durability::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_Set_Durability, CallFunc_BooleanAND_ReturnValue_1) == 0x00003D, "Member 'UIW_DPad_Weapon_C_Set_Durability::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_Set_Durability, CallFunc_IsValid_ReturnValue) == 0x00003E, "Member 'UIW_DPad_Weapon_C_Set_Durability::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_Set_Durability, CallFunc_GetCurrentSharpnessType_ReturnValue) == 0x00003F, "Member 'UIW_DPad_Weapon_C_Set_Durability::CallFunc_GetCurrentSharpnessType_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_Set_Durability, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000040, "Member 'UIW_DPad_Weapon_C_Set_Durability::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_Set_Durability, CallFunc_BooleanOR_ReturnValue) == 0x000041, "Member 'UIW_DPad_Weapon_C_Set_Durability::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_Set_Durability, CallFunc_BooleanOR_ReturnValue_1) == 0x000042, "Member 'UIW_DPad_Weapon_C_Set_Durability::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");

// Function UIW_DPad_Weapon.UIW_DPad_Weapon_C.SetControlGuide
// 0x0048 (0x0048 - 0x0000)
struct UIW_DPad_Weapon_C_SetControlGuide final
{
public:
	bool                                          IsGamePad;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FKey>                           CallFunc_GetInputKeyForAction_ReturnValue;         // 0x0008(0x0010)(ReferenceParm)
	TArray<struct FKey>                           CallFunc_GetInputKeyForAction_ReturnValue_1;       // 0x0018(0x0010)(ReferenceParm)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue_1;         // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A[0x6];                                       // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FKey>                           CallFunc_GetInputKeyForAction_ReturnValue_2;       // 0x0030(0x0010)(ReferenceParm)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue_2;         // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UIW_DPad_Weapon_C_SetControlGuide) == 0x000008, "Wrong alignment on UIW_DPad_Weapon_C_SetControlGuide");
static_assert(sizeof(UIW_DPad_Weapon_C_SetControlGuide) == 0x000048, "Wrong size on UIW_DPad_Weapon_C_SetControlGuide");
static_assert(offsetof(UIW_DPad_Weapon_C_SetControlGuide, IsGamePad) == 0x000000, "Member 'UIW_DPad_Weapon_C_SetControlGuide::IsGamePad' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_SetControlGuide, CallFunc_GetInputKeyForAction_ReturnValue) == 0x000008, "Member 'UIW_DPad_Weapon_C_SetControlGuide::CallFunc_GetInputKeyForAction_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_SetControlGuide, CallFunc_GetInputKeyForAction_ReturnValue_1) == 0x000018, "Member 'UIW_DPad_Weapon_C_SetControlGuide::CallFunc_GetInputKeyForAction_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_SetControlGuide, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000028, "Member 'UIW_DPad_Weapon_C_SetControlGuide::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_SetControlGuide, CallFunc_Array_IsValidIndex_ReturnValue_1) == 0x000029, "Member 'UIW_DPad_Weapon_C_SetControlGuide::CallFunc_Array_IsValidIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_SetControlGuide, CallFunc_GetInputKeyForAction_ReturnValue_2) == 0x000030, "Member 'UIW_DPad_Weapon_C_SetControlGuide::CallFunc_GetInputKeyForAction_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_SetControlGuide, CallFunc_Array_IsValidIndex_ReturnValue_2) == 0x000040, "Member 'UIW_DPad_Weapon_C_SetControlGuide::CallFunc_Array_IsValidIndex_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_SetControlGuide, K2Node_SwitchEnum_CmpSuccess) == 0x000041, "Member 'UIW_DPad_Weapon_C_SetControlGuide::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_SetControlGuide, K2Node_SwitchEnum_CmpSuccess_1) == 0x000042, "Member 'UIW_DPad_Weapon_C_SetControlGuide::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");

// Function UIW_DPad_Weapon.UIW_DPad_Weapon_C.Set Visible Control Guide
// 0x0001 (0x0001 - 0x0000)
struct UIW_DPad_Weapon_C_Set_Visible_Control_Guide final
{
public:
	bool                                          IsShow;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UIW_DPad_Weapon_C_Set_Visible_Control_Guide) == 0x000001, "Wrong alignment on UIW_DPad_Weapon_C_Set_Visible_Control_Guide");
static_assert(sizeof(UIW_DPad_Weapon_C_Set_Visible_Control_Guide) == 0x000001, "Wrong size on UIW_DPad_Weapon_C_Set_Visible_Control_Guide");
static_assert(offsetof(UIW_DPad_Weapon_C_Set_Visible_Control_Guide, IsShow) == 0x000000, "Member 'UIW_DPad_Weapon_C_Set_Visible_Control_Guide::IsShow' has a wrong offset!");

// Function UIW_DPad_Weapon.UIW_DPad_Weapon_C.OnChooseWeapon
// 0x0058 (0x0058 - 0x0000)
struct UIW_DPad_Weapon_C_OnChooseWeapon final
{
public:
	struct FLEquipItemSlot                        EquipSlot;                                         // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ULWeaponItem*                           K2Node_DynamicCast_AsLWeapon_Item;                 // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue;           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULActMgrComponent*                      CallFunc_GetActMgrComponent_ReturnValue;           // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULComboTableBase*                       CallFunc_GetComboTable_ReturnValue;                // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULPCComboTableBP_C*                     K2Node_DynamicCast_AsLPCCombo_Table_BP;            // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UIW_DPad_Weapon_C_OnChooseWeapon) == 0x000008, "Wrong alignment on UIW_DPad_Weapon_C_OnChooseWeapon");
static_assert(sizeof(UIW_DPad_Weapon_C_OnChooseWeapon) == 0x000058, "Wrong size on UIW_DPad_Weapon_C_OnChooseWeapon");
static_assert(offsetof(UIW_DPad_Weapon_C_OnChooseWeapon, EquipSlot) == 0x000000, "Member 'UIW_DPad_Weapon_C_OnChooseWeapon::EquipSlot' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_OnChooseWeapon, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'UIW_DPad_Weapon_C_OnChooseWeapon::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_OnChooseWeapon, K2Node_DynamicCast_AsLWeapon_Item) == 0x000020, "Member 'UIW_DPad_Weapon_C_OnChooseWeapon::K2Node_DynamicCast_AsLWeapon_Item' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_OnChooseWeapon, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'UIW_DPad_Weapon_C_OnChooseWeapon::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_OnChooseWeapon, CallFunc_GetPlayerCharacter_ReturnValue) == 0x000030, "Member 'UIW_DPad_Weapon_C_OnChooseWeapon::CallFunc_GetPlayerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_OnChooseWeapon, CallFunc_GetActMgrComponent_ReturnValue) == 0x000038, "Member 'UIW_DPad_Weapon_C_OnChooseWeapon::CallFunc_GetActMgrComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_OnChooseWeapon, CallFunc_GetComboTable_ReturnValue) == 0x000040, "Member 'UIW_DPad_Weapon_C_OnChooseWeapon::CallFunc_GetComboTable_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_OnChooseWeapon, K2Node_DynamicCast_AsLPCCombo_Table_BP) == 0x000048, "Member 'UIW_DPad_Weapon_C_OnChooseWeapon::K2Node_DynamicCast_AsLPCCombo_Table_BP' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_OnChooseWeapon, K2Node_DynamicCast_bSuccess_1) == 0x000050, "Member 'UIW_DPad_Weapon_C_OnChooseWeapon::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function UIW_DPad_Weapon.UIW_DPad_Weapon_C.OnChangeWeaponFableSkill
// 0x000C (0x000C - 0x0000)
struct UIW_DPad_Weapon_C_OnChangeWeaponFableSkill final
{
public:
	int32                                         CallFunc_GetCharacterStat_ReturnValue;             // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetCharacterStat_ReturnValue_1;           // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetCharacterStat_ReturnValue_2;           // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UIW_DPad_Weapon_C_OnChangeWeaponFableSkill) == 0x000004, "Wrong alignment on UIW_DPad_Weapon_C_OnChangeWeaponFableSkill");
static_assert(sizeof(UIW_DPad_Weapon_C_OnChangeWeaponFableSkill) == 0x00000C, "Wrong size on UIW_DPad_Weapon_C_OnChangeWeaponFableSkill");
static_assert(offsetof(UIW_DPad_Weapon_C_OnChangeWeaponFableSkill, CallFunc_GetCharacterStat_ReturnValue) == 0x000000, "Member 'UIW_DPad_Weapon_C_OnChangeWeaponFableSkill::CallFunc_GetCharacterStat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_OnChangeWeaponFableSkill, CallFunc_GetCharacterStat_ReturnValue_1) == 0x000004, "Member 'UIW_DPad_Weapon_C_OnChangeWeaponFableSkill::CallFunc_GetCharacterStat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_OnChangeWeaponFableSkill, CallFunc_GetCharacterStat_ReturnValue_2) == 0x000008, "Member 'UIW_DPad_Weapon_C_OnChangeWeaponFableSkill::CallFunc_GetCharacterStat_ReturnValue_2' has a wrong offset!");

// Function UIW_DPad_Weapon.UIW_DPad_Weapon_C.OnFableBuffEnable
// 0x0002 (0x0002 - 0x0000)
struct UIW_DPad_Weapon_C_OnFableBuffEnable final
{
public:
	bool                                          On;                                                // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsHandle;                                          // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UIW_DPad_Weapon_C_OnFableBuffEnable) == 0x000001, "Wrong alignment on UIW_DPad_Weapon_C_OnFableBuffEnable");
static_assert(sizeof(UIW_DPad_Weapon_C_OnFableBuffEnable) == 0x000002, "Wrong size on UIW_DPad_Weapon_C_OnFableBuffEnable");
static_assert(offsetof(UIW_DPad_Weapon_C_OnFableBuffEnable, On) == 0x000000, "Member 'UIW_DPad_Weapon_C_OnFableBuffEnable::On' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_OnFableBuffEnable, IsHandle) == 0x000001, "Member 'UIW_DPad_Weapon_C_OnFableBuffEnable::IsHandle' has a wrong offset!");

// Function UIW_DPad_Weapon.UIW_DPad_Weapon_C.RefreshFrenzy
// 0x0020 (0x0020 - 0x0000)
struct UIW_DPad_Weapon_C_RefreshFrenzy final
{
public:
	int32                                         Current;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Max;                                               // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         UnitCount;                                         // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ConsumeUnitCount_0;                                // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ELFrenzyConsumeReason                         FrenzyPointConsumeReason;                          // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         LocalModifiedActiveCountHandle;                    // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LocalModifiedActiveCountBlade;                     // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LocalConsumeCount;                                 // 0x001C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UIW_DPad_Weapon_C_RefreshFrenzy) == 0x000004, "Wrong alignment on UIW_DPad_Weapon_C_RefreshFrenzy");
static_assert(sizeof(UIW_DPad_Weapon_C_RefreshFrenzy) == 0x000020, "Wrong size on UIW_DPad_Weapon_C_RefreshFrenzy");
static_assert(offsetof(UIW_DPad_Weapon_C_RefreshFrenzy, Current) == 0x000000, "Member 'UIW_DPad_Weapon_C_RefreshFrenzy::Current' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_RefreshFrenzy, Max) == 0x000004, "Member 'UIW_DPad_Weapon_C_RefreshFrenzy::Max' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_RefreshFrenzy, UnitCount) == 0x000008, "Member 'UIW_DPad_Weapon_C_RefreshFrenzy::UnitCount' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_RefreshFrenzy, ConsumeUnitCount_0) == 0x00000C, "Member 'UIW_DPad_Weapon_C_RefreshFrenzy::ConsumeUnitCount_0' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_RefreshFrenzy, FrenzyPointConsumeReason) == 0x000010, "Member 'UIW_DPad_Weapon_C_RefreshFrenzy::FrenzyPointConsumeReason' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_RefreshFrenzy, LocalModifiedActiveCountHandle) == 0x000014, "Member 'UIW_DPad_Weapon_C_RefreshFrenzy::LocalModifiedActiveCountHandle' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_RefreshFrenzy, LocalModifiedActiveCountBlade) == 0x000018, "Member 'UIW_DPad_Weapon_C_RefreshFrenzy::LocalModifiedActiveCountBlade' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_RefreshFrenzy, LocalConsumeCount) == 0x00001C, "Member 'UIW_DPad_Weapon_C_RefreshFrenzy::LocalConsumeCount' has a wrong offset!");

// Function UIW_DPad_Weapon.UIW_DPad_Weapon_C.RefreshFrenzyReal
// 0x0198 (0x0198 - 0x0000)
struct UIW_DPad_Weapon_C_RefreshFrenzyReal final
{
public:
	int32                                         LocalModifiedActiveHandleCount;                    // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LocalModifiedActiveBladeCount;                     // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LocalConsumeCount;                                 // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_2;                              // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_3;                              // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         Temp_float_Variable;                               // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_5;                              // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E[0x2];                                       // 0x002E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_4;                   // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_4;                  // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_6;                              // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5D[0x3];                                       // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_5;                   // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_5;                  // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_6;                  // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_5;                 // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_6;                 // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_6;                   // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Clamp_ReturnValue;                        // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_1;        // 0x0085(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_7;                              // 0x0086(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0087(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetUnitCount_ResultChainStarted;          // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89[0x3];                                       // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SetUnitCount_ResultChainUnitCount;        // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SetUnitCount_UnitCount;                   // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetUnitCount_ResultChainStarted_1;        // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_95[0x3];                                       // 0x0095(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SetUnitCount_ResultChainUnitCount_1;      // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SetUnitCount_UnitCount_1;                 // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_3;                               // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x00A5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A6[0x2];                                       // 0x00A6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Divide_IntInt_ReturnValue;                // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Divide_IntInt_ReturnValue_1;              // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetActiveHandleCount_ResultCount;         // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00B5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x00B6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetIsActiveUnit_IsActiveUnit;             // 0x00B7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetIsActiveUnit_NeedUpdate;               // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BA[0x6];                                       // 0x00BA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UUIW_HUD_FrenzyUnit_C*                  CallFunc_Array_Get_Item;                           // 0x00C0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x00CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x00CD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_CE[0x2];                                       // 0x00CE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D4[0x4];                                       // 0x00D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUIW_HUD_FrenzyUnit_C*                  CallFunc_Array_Get_Item_1;                         // 0x00D8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Divide_IntInt_ReturnValue_2;              // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_4;                // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E9[0x3];                                       // 0x00E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_4;                               // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUIW_HUD_FrenzyUnit_C*                  CallFunc_Array_Get_Item_2;                         // 0x00F8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUIW_HUD_FrenzyUnit_C*                  CallFunc_Array_Get_Item_3;                         // 0x0100(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_5;                // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_6;                // 0x0111(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0112(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_113[0x5];                                      // 0x0113(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UUIW_HUD_FrenzyUnit_C*                  CallFunc_Array_Get_Item_4;                         // 0x0118(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_4;               // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_7;                // 0x0124(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0125(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_2;        // 0x0126(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_3;        // 0x0127(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0129(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x012A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x012B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_8;                              // 0x012C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12D[0x3];                                      // 0x012D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default;                             // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default_1;                           // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUIW_Btn_Key_C*                         CallFunc_Array_Get_Item_5;                         // 0x0138(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default_2;                           // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_5;               // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default_3;                           // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_8;                // 0x014C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_14D[0x3];                                      // 0x014D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetActiveBladeCount_ResultCount;          // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0154(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_9;                // 0x0155(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue_1;            // 0x0156(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_157[0x1];                                      // 0x0157(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_5;                               // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x015C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x015D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15E[0x2];                                      // 0x015E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default_4;                           // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default_5;                           // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_10;               // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Select_Default_6;                           // 0x0169(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_16A[0x2];                                      // 0x016A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default_7;                           // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetIsActiveUnit_IsActiveUnit_1;           // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetIsActiveUnit_NeedUpdate_1;             // 0x0171(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_172[0x6];                                      // 0x0172(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_5;                 // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_181[0x7];                                      // 0x0181(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUIW_HUD_FrenzyUnit_C*                  CallFunc_Array_Get_Item_6;                         // 0x0188(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_6;               // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_11;               // 0x0194(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UIW_DPad_Weapon_C_RefreshFrenzyReal) == 0x000008, "Wrong alignment on UIW_DPad_Weapon_C_RefreshFrenzyReal");
static_assert(sizeof(UIW_DPad_Weapon_C_RefreshFrenzyReal) == 0x000198, "Wrong size on UIW_DPad_Weapon_C_RefreshFrenzyReal");
static_assert(offsetof(UIW_DPad_Weapon_C_RefreshFrenzyReal, LocalModifiedActiveHandleCount) == 0x000000, "Member 'UIW_DPad_Weapon_C_RefreshFrenzyReal::LocalModifiedActiveHandleCount' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_RefreshFrenzyReal, LocalModifiedActiveBladeCount) == 0x000004, "Member 'UIW_DPad_Weapon_C_RefreshFrenzyReal::LocalModifiedActiveBladeCount' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_RefreshFrenzyReal, LocalConsumeCount) == 0x000008, "Member 'UIW_DPad_Weapon_C_RefreshFrenzyReal::LocalConsumeCount' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_RefreshFrenzyReal, Temp_int_Variable) == 0x00000C, "Member 'UIW_DPad_Weapon_C_RefreshFrenzyReal::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_RefreshFrenzyReal, Temp_bool_Variable) == 0x000010, "Member 'UIW_DPad_Weapon_C_RefreshFrenzyReal::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_RefreshFrenzyReal, Temp_bool_Variable_1) == 0x000011, "Member 'UIW_DPad_Weapon_C_RefreshFrenzyReal::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_RefreshFrenzyReal, Temp_bool_Variable_2) == 0x000012, "Member 'UIW_DPad_Weapon_C_RefreshFrenzyReal::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_RefreshFrenzyReal, Temp_bool_Variable_3) == 0x000013, "Member 'UIW_DPad_Weapon_C_RefreshFrenzyReal::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_RefreshFrenzyReal, Temp_float_Variable) == 0x000014, "Member 'UIW_DPad_Weapon_C_RefreshFrenzyReal::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_RefreshFrenzyReal, Temp_float_Variable_1) == 0x000018, "Member 'UIW_DPad_Weapon_C_RefreshFrenzyReal::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_RefreshFrenzyReal, Temp_int_Array_Index_Variable) == 0x00001C, "Member 'UIW_DPad_Weapon_C_RefreshFrenzyReal::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_RefreshFrenzyReal, Temp_int_Loop_Counter_Variable) == 0x000020, "Member 'UIW_DPad_Weapon_C_RefreshFrenzyReal::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_RefreshFrenzyReal, CallFunc_Add_IntInt_ReturnValue) == 0x000024, "Member 'UIW_DPad_Weapon_C_RefreshFrenzyReal::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_RefreshFrenzyReal, Temp_int_Array_Index_Variable_1) == 0x000028, "Member 'UIW_DPad_Weapon_C_RefreshFrenzyReal::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_RefreshFrenzyReal, Temp_bool_Variable_4) == 0x00002C, "Member 'UIW_DPad_Weapon_C_RefreshFrenzyReal::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_RefreshFrenzyReal, Temp_bool_Variable_5) == 0x00002D, "Member 'UIW_DPad_Weapon_C_RefreshFrenzyReal::Temp_bool_Variable_5' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_RefreshFrenzyReal, Temp_int_Loop_Counter_Variable_1) == 0x000030, "Member 'UIW_DPad_Weapon_C_RefreshFrenzyReal::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_RefreshFrenzyReal, Temp_int_Loop_Counter_Variable_2) == 0x000034, "Member 'UIW_DPad_Weapon_C_RefreshFrenzyReal::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_RefreshFrenzyReal, CallFunc_Add_IntInt_ReturnValue_1) == 0x000038, "Member 'UIW_DPad_Weapon_C_RefreshFrenzyReal::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_RefreshFrenzyReal, CallFunc_Add_IntInt_ReturnValue_2) == 0x00003C, "Member 'UIW_DPad_Weapon_C_RefreshFrenzyReal::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_RefreshFrenzyReal, Temp_int_Array_Index_Variable_2) == 0x000040, "Member 'UIW_DPad_Weapon_C_RefreshFrenzyReal::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_RefreshFrenzyReal, Temp_int_Variable_1) == 0x000044, "Member 'UIW_DPad_Weapon_C_RefreshFrenzyReal::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_RefreshFrenzyReal, Temp_int_Array_Index_Variable_3) == 0x000048, "Member 'UIW_DPad_Weapon_C_RefreshFrenzyReal::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_RefreshFrenzyReal, Temp_int_Loop_Counter_Variable_3) == 0x00004C, "Member 'UIW_DPad_Weapon_C_RefreshFrenzyReal::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_RefreshFrenzyReal, CallFunc_Add_IntInt_ReturnValue_3) == 0x000050, "Member 'UIW_DPad_Weapon_C_RefreshFrenzyReal::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_RefreshFrenzyReal, Temp_int_Array_Index_Variable_4) == 0x000054, "Member 'UIW_DPad_Weapon_C_RefreshFrenzyReal::Temp_int_Array_Index_Variable_4' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_RefreshFrenzyReal, Temp_int_Loop_Counter_Variable_4) == 0x000058, "Member 'UIW_DPad_Weapon_C_RefreshFrenzyReal::Temp_int_Loop_Counter_Variable_4' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_RefreshFrenzyReal, Temp_bool_Variable_6) == 0x00005C, "Member 'UIW_DPad_Weapon_C_RefreshFrenzyReal::Temp_bool_Variable_6' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_RefreshFrenzyReal, CallFunc_Add_IntInt_ReturnValue_4) == 0x000060, "Member 'UIW_DPad_Weapon_C_RefreshFrenzyReal::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_RefreshFrenzyReal, Temp_int_Array_Index_Variable_5) == 0x000064, "Member 'UIW_DPad_Weapon_C_RefreshFrenzyReal::Temp_int_Array_Index_Variable_5' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_RefreshFrenzyReal, Temp_int_Loop_Counter_Variable_5) == 0x000068, "Member 'UIW_DPad_Weapon_C_RefreshFrenzyReal::Temp_int_Loop_Counter_Variable_5' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_RefreshFrenzyReal, Temp_int_Loop_Counter_Variable_6) == 0x00006C, "Member 'UIW_DPad_Weapon_C_RefreshFrenzyReal::Temp_int_Loop_Counter_Variable_6' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_RefreshFrenzyReal, CallFunc_Add_IntInt_ReturnValue_5) == 0x000070, "Member 'UIW_DPad_Weapon_C_RefreshFrenzyReal::CallFunc_Add_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_RefreshFrenzyReal, CallFunc_Add_IntInt_ReturnValue_6) == 0x000074, "Member 'UIW_DPad_Weapon_C_RefreshFrenzyReal::CallFunc_Add_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_RefreshFrenzyReal, Temp_int_Array_Index_Variable_6) == 0x000078, "Member 'UIW_DPad_Weapon_C_RefreshFrenzyReal::Temp_int_Array_Index_Variable_6' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_RefreshFrenzyReal, Temp_int_Variable_2) == 0x00007C, "Member 'UIW_DPad_Weapon_C_RefreshFrenzyReal::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_RefreshFrenzyReal, CallFunc_Clamp_ReturnValue) == 0x000080, "Member 'UIW_DPad_Weapon_C_RefreshFrenzyReal::CallFunc_Clamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_RefreshFrenzyReal, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000084, "Member 'UIW_DPad_Weapon_C_RefreshFrenzyReal::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_RefreshFrenzyReal, CallFunc_GreaterEqual_IntInt_ReturnValue_1) == 0x000085, "Member 'UIW_DPad_Weapon_C_RefreshFrenzyReal::CallFunc_GreaterEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_RefreshFrenzyReal, Temp_bool_Variable_7) == 0x000086, "Member 'UIW_DPad_Weapon_C_RefreshFrenzyReal::Temp_bool_Variable_7' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_RefreshFrenzyReal, CallFunc_Greater_IntInt_ReturnValue) == 0x000087, "Member 'UIW_DPad_Weapon_C_RefreshFrenzyReal::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_RefreshFrenzyReal, CallFunc_SetUnitCount_ResultChainStarted) == 0x000088, "Member 'UIW_DPad_Weapon_C_RefreshFrenzyReal::CallFunc_SetUnitCount_ResultChainStarted' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_RefreshFrenzyReal, CallFunc_SetUnitCount_ResultChainUnitCount) == 0x00008C, "Member 'UIW_DPad_Weapon_C_RefreshFrenzyReal::CallFunc_SetUnitCount_ResultChainUnitCount' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_RefreshFrenzyReal, CallFunc_SetUnitCount_UnitCount) == 0x000090, "Member 'UIW_DPad_Weapon_C_RefreshFrenzyReal::CallFunc_SetUnitCount_UnitCount' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_RefreshFrenzyReal, CallFunc_SetUnitCount_ResultChainStarted_1) == 0x000094, "Member 'UIW_DPad_Weapon_C_RefreshFrenzyReal::CallFunc_SetUnitCount_ResultChainStarted_1' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_RefreshFrenzyReal, CallFunc_SetUnitCount_ResultChainUnitCount_1) == 0x000098, "Member 'UIW_DPad_Weapon_C_RefreshFrenzyReal::CallFunc_SetUnitCount_ResultChainUnitCount_1' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_RefreshFrenzyReal, CallFunc_SetUnitCount_UnitCount_1) == 0x00009C, "Member 'UIW_DPad_Weapon_C_RefreshFrenzyReal::CallFunc_SetUnitCount_UnitCount_1' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_RefreshFrenzyReal, Temp_int_Variable_3) == 0x0000A0, "Member 'UIW_DPad_Weapon_C_RefreshFrenzyReal::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_RefreshFrenzyReal, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000A4, "Member 'UIW_DPad_Weapon_C_RefreshFrenzyReal::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_RefreshFrenzyReal, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x0000A5, "Member 'UIW_DPad_Weapon_C_RefreshFrenzyReal::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_RefreshFrenzyReal, CallFunc_Divide_IntInt_ReturnValue) == 0x0000A8, "Member 'UIW_DPad_Weapon_C_RefreshFrenzyReal::CallFunc_Divide_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_RefreshFrenzyReal, CallFunc_Divide_IntInt_ReturnValue_1) == 0x0000AC, "Member 'UIW_DPad_Weapon_C_RefreshFrenzyReal::CallFunc_Divide_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_RefreshFrenzyReal, CallFunc_GetActiveHandleCount_ResultCount) == 0x0000B0, "Member 'UIW_DPad_Weapon_C_RefreshFrenzyReal::CallFunc_GetActiveHandleCount_ResultCount' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_RefreshFrenzyReal, CallFunc_Less_IntInt_ReturnValue) == 0x0000B4, "Member 'UIW_DPad_Weapon_C_RefreshFrenzyReal::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_RefreshFrenzyReal, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000B5, "Member 'UIW_DPad_Weapon_C_RefreshFrenzyReal::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_RefreshFrenzyReal, K2Node_SwitchEnum_CmpSuccess) == 0x0000B6, "Member 'UIW_DPad_Weapon_C_RefreshFrenzyReal::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_RefreshFrenzyReal, CallFunc_GetIsActiveUnit_IsActiveUnit) == 0x0000B7, "Member 'UIW_DPad_Weapon_C_RefreshFrenzyReal::CallFunc_GetIsActiveUnit_IsActiveUnit' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_RefreshFrenzyReal, CallFunc_GetIsActiveUnit_NeedUpdate) == 0x0000B8, "Member 'UIW_DPad_Weapon_C_RefreshFrenzyReal::CallFunc_GetIsActiveUnit_NeedUpdate' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_RefreshFrenzyReal, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0000B9, "Member 'UIW_DPad_Weapon_C_RefreshFrenzyReal::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_RefreshFrenzyReal, CallFunc_Array_Get_Item) == 0x0000C0, "Member 'UIW_DPad_Weapon_C_RefreshFrenzyReal::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_RefreshFrenzyReal, CallFunc_Array_Length_ReturnValue) == 0x0000C8, "Member 'UIW_DPad_Weapon_C_RefreshFrenzyReal::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_RefreshFrenzyReal, CallFunc_Less_IntInt_ReturnValue_2) == 0x0000CC, "Member 'UIW_DPad_Weapon_C_RefreshFrenzyReal::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_RefreshFrenzyReal, CallFunc_Less_IntInt_ReturnValue_3) == 0x0000CD, "Member 'UIW_DPad_Weapon_C_RefreshFrenzyReal::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_RefreshFrenzyReal, CallFunc_Subtract_IntInt_ReturnValue) == 0x0000D0, "Member 'UIW_DPad_Weapon_C_RefreshFrenzyReal::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_RefreshFrenzyReal, CallFunc_Array_Get_Item_1) == 0x0000D8, "Member 'UIW_DPad_Weapon_C_RefreshFrenzyReal::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_RefreshFrenzyReal, CallFunc_Divide_IntInt_ReturnValue_2) == 0x0000E0, "Member 'UIW_DPad_Weapon_C_RefreshFrenzyReal::CallFunc_Divide_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_RefreshFrenzyReal, CallFunc_Array_Length_ReturnValue_1) == 0x0000E4, "Member 'UIW_DPad_Weapon_C_RefreshFrenzyReal::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_RefreshFrenzyReal, CallFunc_Less_IntInt_ReturnValue_4) == 0x0000E8, "Member 'UIW_DPad_Weapon_C_RefreshFrenzyReal::CallFunc_Less_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_RefreshFrenzyReal, Temp_int_Variable_4) == 0x0000EC, "Member 'UIW_DPad_Weapon_C_RefreshFrenzyReal::Temp_int_Variable_4' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_RefreshFrenzyReal, CallFunc_PlayAnimation_ReturnValue) == 0x0000F0, "Member 'UIW_DPad_Weapon_C_RefreshFrenzyReal::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_RefreshFrenzyReal, CallFunc_Array_Get_Item_2) == 0x0000F8, "Member 'UIW_DPad_Weapon_C_RefreshFrenzyReal::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_RefreshFrenzyReal, CallFunc_Array_Get_Item_3) == 0x000100, "Member 'UIW_DPad_Weapon_C_RefreshFrenzyReal::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_RefreshFrenzyReal, CallFunc_Array_Length_ReturnValue_2) == 0x000108, "Member 'UIW_DPad_Weapon_C_RefreshFrenzyReal::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_RefreshFrenzyReal, CallFunc_Array_Length_ReturnValue_3) == 0x00010C, "Member 'UIW_DPad_Weapon_C_RefreshFrenzyReal::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_RefreshFrenzyReal, CallFunc_Less_IntInt_ReturnValue_5) == 0x000110, "Member 'UIW_DPad_Weapon_C_RefreshFrenzyReal::CallFunc_Less_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_RefreshFrenzyReal, CallFunc_Less_IntInt_ReturnValue_6) == 0x000111, "Member 'UIW_DPad_Weapon_C_RefreshFrenzyReal::CallFunc_Less_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_RefreshFrenzyReal, CallFunc_BooleanAND_ReturnValue) == 0x000112, "Member 'UIW_DPad_Weapon_C_RefreshFrenzyReal::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_RefreshFrenzyReal, CallFunc_Array_Get_Item_4) == 0x000118, "Member 'UIW_DPad_Weapon_C_RefreshFrenzyReal::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_RefreshFrenzyReal, CallFunc_Array_Length_ReturnValue_4) == 0x000120, "Member 'UIW_DPad_Weapon_C_RefreshFrenzyReal::CallFunc_Array_Length_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_RefreshFrenzyReal, CallFunc_Less_IntInt_ReturnValue_7) == 0x000124, "Member 'UIW_DPad_Weapon_C_RefreshFrenzyReal::CallFunc_Less_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_RefreshFrenzyReal, CallFunc_BooleanAND_ReturnValue_1) == 0x000125, "Member 'UIW_DPad_Weapon_C_RefreshFrenzyReal::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_RefreshFrenzyReal, CallFunc_GreaterEqual_IntInt_ReturnValue_2) == 0x000126, "Member 'UIW_DPad_Weapon_C_RefreshFrenzyReal::CallFunc_GreaterEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_RefreshFrenzyReal, CallFunc_GreaterEqual_IntInt_ReturnValue_3) == 0x000127, "Member 'UIW_DPad_Weapon_C_RefreshFrenzyReal::CallFunc_GreaterEqual_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_RefreshFrenzyReal, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x000128, "Member 'UIW_DPad_Weapon_C_RefreshFrenzyReal::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_RefreshFrenzyReal, CallFunc_BooleanAND_ReturnValue_2) == 0x000129, "Member 'UIW_DPad_Weapon_C_RefreshFrenzyReal::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_RefreshFrenzyReal, CallFunc_BooleanAND_ReturnValue_3) == 0x00012A, "Member 'UIW_DPad_Weapon_C_RefreshFrenzyReal::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_RefreshFrenzyReal, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x00012B, "Member 'UIW_DPad_Weapon_C_RefreshFrenzyReal::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_RefreshFrenzyReal, Temp_bool_Variable_8) == 0x00012C, "Member 'UIW_DPad_Weapon_C_RefreshFrenzyReal::Temp_bool_Variable_8' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_RefreshFrenzyReal, K2Node_Select_Default) == 0x000130, "Member 'UIW_DPad_Weapon_C_RefreshFrenzyReal::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_RefreshFrenzyReal, K2Node_Select_Default_1) == 0x000134, "Member 'UIW_DPad_Weapon_C_RefreshFrenzyReal::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_RefreshFrenzyReal, CallFunc_Array_Get_Item_5) == 0x000138, "Member 'UIW_DPad_Weapon_C_RefreshFrenzyReal::CallFunc_Array_Get_Item_5' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_RefreshFrenzyReal, K2Node_Select_Default_2) == 0x000140, "Member 'UIW_DPad_Weapon_C_RefreshFrenzyReal::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_RefreshFrenzyReal, CallFunc_Array_Length_ReturnValue_5) == 0x000144, "Member 'UIW_DPad_Weapon_C_RefreshFrenzyReal::CallFunc_Array_Length_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_RefreshFrenzyReal, K2Node_Select_Default_3) == 0x000148, "Member 'UIW_DPad_Weapon_C_RefreshFrenzyReal::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_RefreshFrenzyReal, CallFunc_Less_IntInt_ReturnValue_8) == 0x00014C, "Member 'UIW_DPad_Weapon_C_RefreshFrenzyReal::CallFunc_Less_IntInt_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_RefreshFrenzyReal, CallFunc_GetActiveBladeCount_ResultCount) == 0x000150, "Member 'UIW_DPad_Weapon_C_RefreshFrenzyReal::CallFunc_GetActiveBladeCount_ResultCount' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_RefreshFrenzyReal, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000154, "Member 'UIW_DPad_Weapon_C_RefreshFrenzyReal::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_RefreshFrenzyReal, CallFunc_Less_IntInt_ReturnValue_9) == 0x000155, "Member 'UIW_DPad_Weapon_C_RefreshFrenzyReal::CallFunc_Less_IntInt_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_RefreshFrenzyReal, CallFunc_NotEqual_IntInt_ReturnValue_1) == 0x000156, "Member 'UIW_DPad_Weapon_C_RefreshFrenzyReal::CallFunc_NotEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_RefreshFrenzyReal, Temp_int_Variable_5) == 0x000158, "Member 'UIW_DPad_Weapon_C_RefreshFrenzyReal::Temp_int_Variable_5' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_RefreshFrenzyReal, CallFunc_BooleanAND_ReturnValue_4) == 0x00015C, "Member 'UIW_DPad_Weapon_C_RefreshFrenzyReal::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_RefreshFrenzyReal, CallFunc_BooleanOR_ReturnValue) == 0x00015D, "Member 'UIW_DPad_Weapon_C_RefreshFrenzyReal::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_RefreshFrenzyReal, K2Node_Select_Default_4) == 0x000160, "Member 'UIW_DPad_Weapon_C_RefreshFrenzyReal::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_RefreshFrenzyReal, K2Node_Select_Default_5) == 0x000164, "Member 'UIW_DPad_Weapon_C_RefreshFrenzyReal::K2Node_Select_Default_5' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_RefreshFrenzyReal, CallFunc_Less_IntInt_ReturnValue_10) == 0x000168, "Member 'UIW_DPad_Weapon_C_RefreshFrenzyReal::CallFunc_Less_IntInt_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_RefreshFrenzyReal, K2Node_Select_Default_6) == 0x000169, "Member 'UIW_DPad_Weapon_C_RefreshFrenzyReal::K2Node_Select_Default_6' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_RefreshFrenzyReal, K2Node_Select_Default_7) == 0x00016C, "Member 'UIW_DPad_Weapon_C_RefreshFrenzyReal::K2Node_Select_Default_7' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_RefreshFrenzyReal, CallFunc_GetIsActiveUnit_IsActiveUnit_1) == 0x000170, "Member 'UIW_DPad_Weapon_C_RefreshFrenzyReal::CallFunc_GetIsActiveUnit_IsActiveUnit_1' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_RefreshFrenzyReal, CallFunc_GetIsActiveUnit_NeedUpdate_1) == 0x000171, "Member 'UIW_DPad_Weapon_C_RefreshFrenzyReal::CallFunc_GetIsActiveUnit_NeedUpdate_1' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_RefreshFrenzyReal, CallFunc_PlayAnimation_ReturnValue_1) == 0x000178, "Member 'UIW_DPad_Weapon_C_RefreshFrenzyReal::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_RefreshFrenzyReal, CallFunc_BooleanAND_ReturnValue_5) == 0x000180, "Member 'UIW_DPad_Weapon_C_RefreshFrenzyReal::CallFunc_BooleanAND_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_RefreshFrenzyReal, CallFunc_Array_Get_Item_6) == 0x000188, "Member 'UIW_DPad_Weapon_C_RefreshFrenzyReal::CallFunc_Array_Get_Item_6' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_RefreshFrenzyReal, CallFunc_Array_Length_ReturnValue_6) == 0x000190, "Member 'UIW_DPad_Weapon_C_RefreshFrenzyReal::CallFunc_Array_Length_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_RefreshFrenzyReal, CallFunc_Less_IntInt_ReturnValue_11) == 0x000194, "Member 'UIW_DPad_Weapon_C_RefreshFrenzyReal::CallFunc_Less_IntInt_ReturnValue_11' has a wrong offset!");

// Function UIW_DPad_Weapon.UIW_DPad_Weapon_C.SetFrenzyUnitCount
// 0x0050 (0x0050 - 0x0000)
struct UIW_DPad_Weapon_C_SetFrenzyUnitCount final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetCharacterStat_ReturnValue;             // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetCharacterStat_ReturnValue_1;           // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetCharacterStat_ReturnValue_2;           // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUIW_HUD_FrenzyUnit_C*                  CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUIW_HUD_FrenzyUnit_C*                  CallFunc_Array_Get_Item_1;                         // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UIW_DPad_Weapon_C_SetFrenzyUnitCount) == 0x000008, "Wrong alignment on UIW_DPad_Weapon_C_SetFrenzyUnitCount");
static_assert(sizeof(UIW_DPad_Weapon_C_SetFrenzyUnitCount) == 0x000050, "Wrong size on UIW_DPad_Weapon_C_SetFrenzyUnitCount");
static_assert(offsetof(UIW_DPad_Weapon_C_SetFrenzyUnitCount, Temp_int_Array_Index_Variable) == 0x000000, "Member 'UIW_DPad_Weapon_C_SetFrenzyUnitCount::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_SetFrenzyUnitCount, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'UIW_DPad_Weapon_C_SetFrenzyUnitCount::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_SetFrenzyUnitCount, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'UIW_DPad_Weapon_C_SetFrenzyUnitCount::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_SetFrenzyUnitCount, Temp_int_Array_Index_Variable_1) == 0x00000C, "Member 'UIW_DPad_Weapon_C_SetFrenzyUnitCount::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_SetFrenzyUnitCount, CallFunc_GetCharacterStat_ReturnValue) == 0x000010, "Member 'UIW_DPad_Weapon_C_SetFrenzyUnitCount::CallFunc_GetCharacterStat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_SetFrenzyUnitCount, CallFunc_GetCharacterStat_ReturnValue_1) == 0x000014, "Member 'UIW_DPad_Weapon_C_SetFrenzyUnitCount::CallFunc_GetCharacterStat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_SetFrenzyUnitCount, CallFunc_GetCharacterStat_ReturnValue_2) == 0x000018, "Member 'UIW_DPad_Weapon_C_SetFrenzyUnitCount::CallFunc_GetCharacterStat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_SetFrenzyUnitCount, Temp_int_Loop_Counter_Variable_1) == 0x00001C, "Member 'UIW_DPad_Weapon_C_SetFrenzyUnitCount::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_SetFrenzyUnitCount, CallFunc_Array_Get_Item) == 0x000020, "Member 'UIW_DPad_Weapon_C_SetFrenzyUnitCount::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_SetFrenzyUnitCount, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'UIW_DPad_Weapon_C_SetFrenzyUnitCount::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_SetFrenzyUnitCount, CallFunc_Less_IntInt_ReturnValue) == 0x00002C, "Member 'UIW_DPad_Weapon_C_SetFrenzyUnitCount::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_SetFrenzyUnitCount, CallFunc_Add_IntInt_ReturnValue_1) == 0x000030, "Member 'UIW_DPad_Weapon_C_SetFrenzyUnitCount::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_SetFrenzyUnitCount, CallFunc_Array_Get_Item_1) == 0x000038, "Member 'UIW_DPad_Weapon_C_SetFrenzyUnitCount::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_SetFrenzyUnitCount, CallFunc_IsValid_ReturnValue) == 0x000040, "Member 'UIW_DPad_Weapon_C_SetFrenzyUnitCount::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_SetFrenzyUnitCount, CallFunc_Array_Length_ReturnValue_1) == 0x000044, "Member 'UIW_DPad_Weapon_C_SetFrenzyUnitCount::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_SetFrenzyUnitCount, CallFunc_Less_IntInt_ReturnValue_1) == 0x000048, "Member 'UIW_DPad_Weapon_C_SetFrenzyUnitCount::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");

// Function UIW_DPad_Weapon.UIW_DPad_Weapon_C.OnChangeInputMode
// 0x0001 (0x0001 - 0x0000)
struct UIW_DPad_Weapon_C_OnChangeInputMode final
{
public:
	bool                                          bGamePad;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UIW_DPad_Weapon_C_OnChangeInputMode) == 0x000001, "Wrong alignment on UIW_DPad_Weapon_C_OnChangeInputMode");
static_assert(sizeof(UIW_DPad_Weapon_C_OnChangeInputMode) == 0x000001, "Wrong size on UIW_DPad_Weapon_C_OnChangeInputMode");
static_assert(offsetof(UIW_DPad_Weapon_C_OnChangeInputMode, bGamePad) == 0x000000, "Member 'UIW_DPad_Weapon_C_OnChangeInputMode::bGamePad' has a wrong offset!");

// Function UIW_DPad_Weapon.UIW_DPad_Weapon_C.GetIsActiveUnit
// 0x0018 (0x0018 - 0x0000)
struct UIW_DPad_Weapon_C_GetIsActiveUnit final
{
public:
	int32                                         ActiveCount;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         PrevActiveCount_0;                                 // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NeedActiveCount;                                   // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ForceUpdate;                                       // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          PrevIsActiveUnit;                                  // 0x000D(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsActiveUnit;                                      // 0x000E(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          NeedUpdate;                                        // 0x000F(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          LocalIsActiveUnit;                                 // 0x0010(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UIW_DPad_Weapon_C_GetIsActiveUnit) == 0x000004, "Wrong alignment on UIW_DPad_Weapon_C_GetIsActiveUnit");
static_assert(sizeof(UIW_DPad_Weapon_C_GetIsActiveUnit) == 0x000018, "Wrong size on UIW_DPad_Weapon_C_GetIsActiveUnit");
static_assert(offsetof(UIW_DPad_Weapon_C_GetIsActiveUnit, ActiveCount) == 0x000000, "Member 'UIW_DPad_Weapon_C_GetIsActiveUnit::ActiveCount' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_GetIsActiveUnit, PrevActiveCount_0) == 0x000004, "Member 'UIW_DPad_Weapon_C_GetIsActiveUnit::PrevActiveCount_0' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_GetIsActiveUnit, NeedActiveCount) == 0x000008, "Member 'UIW_DPad_Weapon_C_GetIsActiveUnit::NeedActiveCount' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_GetIsActiveUnit, ForceUpdate) == 0x00000C, "Member 'UIW_DPad_Weapon_C_GetIsActiveUnit::ForceUpdate' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_GetIsActiveUnit, PrevIsActiveUnit) == 0x00000D, "Member 'UIW_DPad_Weapon_C_GetIsActiveUnit::PrevIsActiveUnit' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_GetIsActiveUnit, IsActiveUnit) == 0x00000E, "Member 'UIW_DPad_Weapon_C_GetIsActiveUnit::IsActiveUnit' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_GetIsActiveUnit, NeedUpdate) == 0x00000F, "Member 'UIW_DPad_Weapon_C_GetIsActiveUnit::NeedUpdate' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_GetIsActiveUnit, LocalIsActiveUnit) == 0x000010, "Member 'UIW_DPad_Weapon_C_GetIsActiveUnit::LocalIsActiveUnit' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_GetIsActiveUnit, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000011, "Member 'UIW_DPad_Weapon_C_GetIsActiveUnit::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_GetIsActiveUnit, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000012, "Member 'UIW_DPad_Weapon_C_GetIsActiveUnit::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_GetIsActiveUnit, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000013, "Member 'UIW_DPad_Weapon_C_GetIsActiveUnit::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_GetIsActiveUnit, CallFunc_BooleanOR_ReturnValue) == 0x000014, "Member 'UIW_DPad_Weapon_C_GetIsActiveUnit::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_GetIsActiveUnit, CallFunc_BooleanOR_ReturnValue_1) == 0x000015, "Member 'UIW_DPad_Weapon_C_GetIsActiveUnit::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");

// Function UIW_DPad_Weapon.UIW_DPad_Weapon_C.SetFrenzyUnitCountBlade
// 0x00A0 (0x00A0 - 0x0000)
struct UIW_DPad_Weapon_C_SetFrenzyUnitCountBlade final
{
public:
	int32                                         LocalBladeUnitCount;                               // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSkillInfoPtr                          CallFunc_FindSkillInfoByNameBP_ReturnValue;        // 0x0020(0x0008)(NoDestructor)
	int32                                         CallFunc_GetRequireFrenzyUnitCount_ReturnValue;    // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSkillInfoPtr                          CallFunc_FindSkillInfoByNameBP_ReturnValue_1;      // 0x0030(0x0008)(NoDestructor)
	int32                                         CallFunc_GetRequireFrenzyUnitCount_ReturnValue_1;  // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FItemBladeInfoPtr                      CallFunc_GetBladeInfo_ReturnValue;                 // 0x0040(0x0008)(NoDestructor)
	class FName                                   CallFunc_GetFrenzySkillCodeName_ReturnValue;       // 0x0048(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue;           // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULActMgrComponent*                      CallFunc_GetActMgrComponent_ReturnValue;           // 0x0060(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUIW_HUD_FrenzyUnit_C*                  CallFunc_Array_Get_Item;                           // 0x0068(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULComboTableBase*                       CallFunc_GetComboTable_ReturnValue;                // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULPCComboTableBP_C*                     K2Node_DynamicCast_AsLPCCombo_Table_BP;            // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x3];                                       // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8A[0x2];                                       // 0x008A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUIW_HUD_FrenzyUnit_C*                  CallFunc_Array_Get_Item_1;                         // 0x0090(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UIW_DPad_Weapon_C_SetFrenzyUnitCountBlade) == 0x000008, "Wrong alignment on UIW_DPad_Weapon_C_SetFrenzyUnitCountBlade");
static_assert(sizeof(UIW_DPad_Weapon_C_SetFrenzyUnitCountBlade) == 0x0000A0, "Wrong size on UIW_DPad_Weapon_C_SetFrenzyUnitCountBlade");
static_assert(offsetof(UIW_DPad_Weapon_C_SetFrenzyUnitCountBlade, LocalBladeUnitCount) == 0x000000, "Member 'UIW_DPad_Weapon_C_SetFrenzyUnitCountBlade::LocalBladeUnitCount' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_SetFrenzyUnitCountBlade, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'UIW_DPad_Weapon_C_SetFrenzyUnitCountBlade::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_SetFrenzyUnitCountBlade, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'UIW_DPad_Weapon_C_SetFrenzyUnitCountBlade::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_SetFrenzyUnitCountBlade, Temp_int_Array_Index_Variable) == 0x00000C, "Member 'UIW_DPad_Weapon_C_SetFrenzyUnitCountBlade::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_SetFrenzyUnitCountBlade, Temp_int_Loop_Counter_Variable_1) == 0x000010, "Member 'UIW_DPad_Weapon_C_SetFrenzyUnitCountBlade::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_SetFrenzyUnitCountBlade, CallFunc_Add_IntInt_ReturnValue_1) == 0x000014, "Member 'UIW_DPad_Weapon_C_SetFrenzyUnitCountBlade::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_SetFrenzyUnitCountBlade, Temp_int_Array_Index_Variable_1) == 0x000018, "Member 'UIW_DPad_Weapon_C_SetFrenzyUnitCountBlade::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_SetFrenzyUnitCountBlade, CallFunc_IsValid_ReturnValue) == 0x00001C, "Member 'UIW_DPad_Weapon_C_SetFrenzyUnitCountBlade::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_SetFrenzyUnitCountBlade, CallFunc_FindSkillInfoByNameBP_ReturnValue) == 0x000020, "Member 'UIW_DPad_Weapon_C_SetFrenzyUnitCountBlade::CallFunc_FindSkillInfoByNameBP_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_SetFrenzyUnitCountBlade, CallFunc_GetRequireFrenzyUnitCount_ReturnValue) == 0x000028, "Member 'UIW_DPad_Weapon_C_SetFrenzyUnitCountBlade::CallFunc_GetRequireFrenzyUnitCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_SetFrenzyUnitCountBlade, CallFunc_EqualEqual_NameName_ReturnValue) == 0x00002C, "Member 'UIW_DPad_Weapon_C_SetFrenzyUnitCountBlade::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_SetFrenzyUnitCountBlade, CallFunc_FindSkillInfoByNameBP_ReturnValue_1) == 0x000030, "Member 'UIW_DPad_Weapon_C_SetFrenzyUnitCountBlade::CallFunc_FindSkillInfoByNameBP_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_SetFrenzyUnitCountBlade, CallFunc_GetRequireFrenzyUnitCount_ReturnValue_1) == 0x000038, "Member 'UIW_DPad_Weapon_C_SetFrenzyUnitCountBlade::CallFunc_GetRequireFrenzyUnitCount_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_SetFrenzyUnitCountBlade, CallFunc_Less_IntInt_ReturnValue) == 0x00003C, "Member 'UIW_DPad_Weapon_C_SetFrenzyUnitCountBlade::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_SetFrenzyUnitCountBlade, CallFunc_GetBladeInfo_ReturnValue) == 0x000040, "Member 'UIW_DPad_Weapon_C_SetFrenzyUnitCountBlade::CallFunc_GetBladeInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_SetFrenzyUnitCountBlade, CallFunc_GetFrenzySkillCodeName_ReturnValue) == 0x000048, "Member 'UIW_DPad_Weapon_C_SetFrenzyUnitCountBlade::CallFunc_GetFrenzySkillCodeName_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_SetFrenzyUnitCountBlade, CallFunc_Less_IntInt_ReturnValue_1) == 0x000050, "Member 'UIW_DPad_Weapon_C_SetFrenzyUnitCountBlade::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_SetFrenzyUnitCountBlade, CallFunc_GetPlayerCharacter_ReturnValue) == 0x000058, "Member 'UIW_DPad_Weapon_C_SetFrenzyUnitCountBlade::CallFunc_GetPlayerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_SetFrenzyUnitCountBlade, CallFunc_GetActMgrComponent_ReturnValue) == 0x000060, "Member 'UIW_DPad_Weapon_C_SetFrenzyUnitCountBlade::CallFunc_GetActMgrComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_SetFrenzyUnitCountBlade, CallFunc_Array_Get_Item) == 0x000068, "Member 'UIW_DPad_Weapon_C_SetFrenzyUnitCountBlade::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_SetFrenzyUnitCountBlade, CallFunc_GetComboTable_ReturnValue) == 0x000070, "Member 'UIW_DPad_Weapon_C_SetFrenzyUnitCountBlade::CallFunc_GetComboTable_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_SetFrenzyUnitCountBlade, K2Node_DynamicCast_AsLPCCombo_Table_BP) == 0x000078, "Member 'UIW_DPad_Weapon_C_SetFrenzyUnitCountBlade::K2Node_DynamicCast_AsLPCCombo_Table_BP' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_SetFrenzyUnitCountBlade, K2Node_DynamicCast_bSuccess) == 0x000080, "Member 'UIW_DPad_Weapon_C_SetFrenzyUnitCountBlade::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_SetFrenzyUnitCountBlade, CallFunc_Array_Length_ReturnValue) == 0x000084, "Member 'UIW_DPad_Weapon_C_SetFrenzyUnitCountBlade::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_SetFrenzyUnitCountBlade, CallFunc_Less_IntInt_ReturnValue_2) == 0x000088, "Member 'UIW_DPad_Weapon_C_SetFrenzyUnitCountBlade::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_SetFrenzyUnitCountBlade, K2Node_SwitchEnum_CmpSuccess) == 0x000089, "Member 'UIW_DPad_Weapon_C_SetFrenzyUnitCountBlade::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_SetFrenzyUnitCountBlade, CallFunc_Array_Length_ReturnValue_1) == 0x00008C, "Member 'UIW_DPad_Weapon_C_SetFrenzyUnitCountBlade::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_SetFrenzyUnitCountBlade, CallFunc_Array_Get_Item_1) == 0x000090, "Member 'UIW_DPad_Weapon_C_SetFrenzyUnitCountBlade::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_SetFrenzyUnitCountBlade, CallFunc_Less_IntInt_ReturnValue_3) == 0x000098, "Member 'UIW_DPad_Weapon_C_SetFrenzyUnitCountBlade::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");

// Function UIW_DPad_Weapon.UIW_DPad_Weapon_C.SetFrenzyUnitCountHandle
// 0x0048 (0x0048 - 0x0000)
struct UIW_DPad_Weapon_C_SetFrenzyUnitCountHandle final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSkillInfoPtr                          CallFunc_FindSkillInfoByNameBP_ReturnValue;        // 0x0010(0x0008)(NoDestructor)
	int32                                         CallFunc_GetRequireFrenzyUnitCount_ReturnValue;    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FItemHandleInfoPtr                     CallFunc_GetHandleInfo_ReturnValue;                // 0x0020(0x0008)(NoDestructor)
	class FName                                   CallFunc_GetFrenzySkillCodeName_ReturnValue;       // 0x0028(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32[0x2];                                       // 0x0032(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUIW_HUD_FrenzyUnit_C*                  CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UIW_DPad_Weapon_C_SetFrenzyUnitCountHandle) == 0x000008, "Wrong alignment on UIW_DPad_Weapon_C_SetFrenzyUnitCountHandle");
static_assert(sizeof(UIW_DPad_Weapon_C_SetFrenzyUnitCountHandle) == 0x000048, "Wrong size on UIW_DPad_Weapon_C_SetFrenzyUnitCountHandle");
static_assert(offsetof(UIW_DPad_Weapon_C_SetFrenzyUnitCountHandle, Temp_int_Array_Index_Variable) == 0x000000, "Member 'UIW_DPad_Weapon_C_SetFrenzyUnitCountHandle::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_SetFrenzyUnitCountHandle, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'UIW_DPad_Weapon_C_SetFrenzyUnitCountHandle::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_SetFrenzyUnitCountHandle, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'UIW_DPad_Weapon_C_SetFrenzyUnitCountHandle::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_SetFrenzyUnitCountHandle, CallFunc_FindSkillInfoByNameBP_ReturnValue) == 0x000010, "Member 'UIW_DPad_Weapon_C_SetFrenzyUnitCountHandle::CallFunc_FindSkillInfoByNameBP_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_SetFrenzyUnitCountHandle, CallFunc_GetRequireFrenzyUnitCount_ReturnValue) == 0x000018, "Member 'UIW_DPad_Weapon_C_SetFrenzyUnitCountHandle::CallFunc_GetRequireFrenzyUnitCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_SetFrenzyUnitCountHandle, CallFunc_GetHandleInfo_ReturnValue) == 0x000020, "Member 'UIW_DPad_Weapon_C_SetFrenzyUnitCountHandle::CallFunc_GetHandleInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_SetFrenzyUnitCountHandle, CallFunc_GetFrenzySkillCodeName_ReturnValue) == 0x000028, "Member 'UIW_DPad_Weapon_C_SetFrenzyUnitCountHandle::CallFunc_GetFrenzySkillCodeName_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_SetFrenzyUnitCountHandle, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'UIW_DPad_Weapon_C_SetFrenzyUnitCountHandle::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_SetFrenzyUnitCountHandle, K2Node_SwitchEnum_CmpSuccess) == 0x000031, "Member 'UIW_DPad_Weapon_C_SetFrenzyUnitCountHandle::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_SetFrenzyUnitCountHandle, CallFunc_Array_Length_ReturnValue) == 0x000034, "Member 'UIW_DPad_Weapon_C_SetFrenzyUnitCountHandle::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_SetFrenzyUnitCountHandle, CallFunc_Array_Get_Item) == 0x000038, "Member 'UIW_DPad_Weapon_C_SetFrenzyUnitCountHandle::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_SetFrenzyUnitCountHandle, CallFunc_Less_IntInt_ReturnValue_1) == 0x000040, "Member 'UIW_DPad_Weapon_C_SetFrenzyUnitCountHandle::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");

// Function UIW_DPad_Weapon.UIW_DPad_Weapon_C.GetActiveBladeCount
// 0x0038 (0x0038 - 0x0000)
struct UIW_DPad_Weapon_C_GetActiveBladeCount final
{
public:
	int32                                         ActiveCount;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         BladeUnitCount_0;                                  // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsActive;                                          // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ResultCount;                                       // 0x000C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LocalStep;                                         // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default;                             // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default_1;                           // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E[0x2];                                       // 0x002E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Min_ReturnValue;                          // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UIW_DPad_Weapon_C_GetActiveBladeCount) == 0x000004, "Wrong alignment on UIW_DPad_Weapon_C_GetActiveBladeCount");
static_assert(sizeof(UIW_DPad_Weapon_C_GetActiveBladeCount) == 0x000038, "Wrong size on UIW_DPad_Weapon_C_GetActiveBladeCount");
static_assert(offsetof(UIW_DPad_Weapon_C_GetActiveBladeCount, ActiveCount) == 0x000000, "Member 'UIW_DPad_Weapon_C_GetActiveBladeCount::ActiveCount' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_GetActiveBladeCount, BladeUnitCount_0) == 0x000004, "Member 'UIW_DPad_Weapon_C_GetActiveBladeCount::BladeUnitCount_0' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_GetActiveBladeCount, IsActive) == 0x000008, "Member 'UIW_DPad_Weapon_C_GetActiveBladeCount::IsActive' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_GetActiveBladeCount, ResultCount) == 0x00000C, "Member 'UIW_DPad_Weapon_C_GetActiveBladeCount::ResultCount' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_GetActiveBladeCount, LocalStep) == 0x000010, "Member 'UIW_DPad_Weapon_C_GetActiveBladeCount::LocalStep' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_GetActiveBladeCount, Temp_int_Variable) == 0x000014, "Member 'UIW_DPad_Weapon_C_GetActiveBladeCount::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_GetActiveBladeCount, Temp_bool_Variable) == 0x000018, "Member 'UIW_DPad_Weapon_C_GetActiveBladeCount::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_GetActiveBladeCount, Temp_int_Variable_1) == 0x00001C, "Member 'UIW_DPad_Weapon_C_GetActiveBladeCount::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_GetActiveBladeCount, Temp_bool_Variable_1) == 0x000020, "Member 'UIW_DPad_Weapon_C_GetActiveBladeCount::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_GetActiveBladeCount, K2Node_Select_Default) == 0x000024, "Member 'UIW_DPad_Weapon_C_GetActiveBladeCount::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_GetActiveBladeCount, K2Node_Select_Default_1) == 0x000028, "Member 'UIW_DPad_Weapon_C_GetActiveBladeCount::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_GetActiveBladeCount, K2Node_SwitchEnum_CmpSuccess) == 0x00002C, "Member 'UIW_DPad_Weapon_C_GetActiveBladeCount::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_GetActiveBladeCount, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00002D, "Member 'UIW_DPad_Weapon_C_GetActiveBladeCount::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_GetActiveBladeCount, CallFunc_Subtract_IntInt_ReturnValue) == 0x000030, "Member 'UIW_DPad_Weapon_C_GetActiveBladeCount::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_GetActiveBladeCount, CallFunc_Min_ReturnValue) == 0x000034, "Member 'UIW_DPad_Weapon_C_GetActiveBladeCount::CallFunc_Min_ReturnValue' has a wrong offset!");

// Function UIW_DPad_Weapon.UIW_DPad_Weapon_C.GetActiveHandleCount
// 0x003C (0x003C - 0x0000)
struct UIW_DPad_Weapon_C_GetActiveHandleCount final
{
public:
	int32                                         ActiveCount;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         BladeUnitCount_0;                                  // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsActive;                                          // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ResultCount;                                       // 0x000C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LocalStep;                                         // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default;                             // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default_1;                           // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Min_ReturnValue;                          // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UIW_DPad_Weapon_C_GetActiveHandleCount) == 0x000004, "Wrong alignment on UIW_DPad_Weapon_C_GetActiveHandleCount");
static_assert(sizeof(UIW_DPad_Weapon_C_GetActiveHandleCount) == 0x00003C, "Wrong size on UIW_DPad_Weapon_C_GetActiveHandleCount");
static_assert(offsetof(UIW_DPad_Weapon_C_GetActiveHandleCount, ActiveCount) == 0x000000, "Member 'UIW_DPad_Weapon_C_GetActiveHandleCount::ActiveCount' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_GetActiveHandleCount, BladeUnitCount_0) == 0x000004, "Member 'UIW_DPad_Weapon_C_GetActiveHandleCount::BladeUnitCount_0' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_GetActiveHandleCount, IsActive) == 0x000008, "Member 'UIW_DPad_Weapon_C_GetActiveHandleCount::IsActive' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_GetActiveHandleCount, ResultCount) == 0x00000C, "Member 'UIW_DPad_Weapon_C_GetActiveHandleCount::ResultCount' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_GetActiveHandleCount, LocalStep) == 0x000010, "Member 'UIW_DPad_Weapon_C_GetActiveHandleCount::LocalStep' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_GetActiveHandleCount, Temp_int_Variable) == 0x000014, "Member 'UIW_DPad_Weapon_C_GetActiveHandleCount::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_GetActiveHandleCount, Temp_bool_Variable) == 0x000018, "Member 'UIW_DPad_Weapon_C_GetActiveHandleCount::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_GetActiveHandleCount, Temp_int_Variable_1) == 0x00001C, "Member 'UIW_DPad_Weapon_C_GetActiveHandleCount::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_GetActiveHandleCount, Temp_bool_Variable_1) == 0x000020, "Member 'UIW_DPad_Weapon_C_GetActiveHandleCount::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_GetActiveHandleCount, K2Node_Select_Default) == 0x000024, "Member 'UIW_DPad_Weapon_C_GetActiveHandleCount::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_GetActiveHandleCount, K2Node_Select_Default_1) == 0x000028, "Member 'UIW_DPad_Weapon_C_GetActiveHandleCount::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_GetActiveHandleCount, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00002C, "Member 'UIW_DPad_Weapon_C_GetActiveHandleCount::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_GetActiveHandleCount, CallFunc_Subtract_IntInt_ReturnValue) == 0x000030, "Member 'UIW_DPad_Weapon_C_GetActiveHandleCount::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_GetActiveHandleCount, CallFunc_Min_ReturnValue) == 0x000034, "Member 'UIW_DPad_Weapon_C_GetActiveHandleCount::CallFunc_Min_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_GetActiveHandleCount, K2Node_SwitchEnum_CmpSuccess) == 0x000038, "Member 'UIW_DPad_Weapon_C_GetActiveHandleCount::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function UIW_DPad_Weapon.UIW_DPad_Weapon_C.GetActiveControlGuideCount
// 0x0004 (0x0004 - 0x0000)
struct UIW_DPad_Weapon_C_GetActiveControlGuideCount final
{
public:
	int32                                         ModifiedActiveCount;                               // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UIW_DPad_Weapon_C_GetActiveControlGuideCount) == 0x000004, "Wrong alignment on UIW_DPad_Weapon_C_GetActiveControlGuideCount");
static_assert(sizeof(UIW_DPad_Weapon_C_GetActiveControlGuideCount) == 0x000004, "Wrong size on UIW_DPad_Weapon_C_GetActiveControlGuideCount");
static_assert(offsetof(UIW_DPad_Weapon_C_GetActiveControlGuideCount, ModifiedActiveCount) == 0x000000, "Member 'UIW_DPad_Weapon_C_GetActiveControlGuideCount::ModifiedActiveCount' has a wrong offset!");

// Function UIW_DPad_Weapon.UIW_DPad_Weapon_C.GetComboStep
// 0x0038 (0x0038 - 0x0000)
struct UIW_DPad_Weapon_C_GetComboStep final
{
public:
	int32                                         ComboStep_0;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue;           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULActMgrComponent*                      CallFunc_GetActMgrComponent_ReturnValue;           // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ULComboTableBase*                       CallFunc_GetComboTable_ReturnValue;                // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULPCComboTableBP_C*                     K2Node_DynamicCast_AsLPCCombo_Table_BP;            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UIW_DPad_Weapon_C_GetComboStep) == 0x000008, "Wrong alignment on UIW_DPad_Weapon_C_GetComboStep");
static_assert(sizeof(UIW_DPad_Weapon_C_GetComboStep) == 0x000038, "Wrong size on UIW_DPad_Weapon_C_GetComboStep");
static_assert(offsetof(UIW_DPad_Weapon_C_GetComboStep, ComboStep_0) == 0x000000, "Member 'UIW_DPad_Weapon_C_GetComboStep::ComboStep_0' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_GetComboStep, CallFunc_GetPlayerCharacter_ReturnValue) == 0x000008, "Member 'UIW_DPad_Weapon_C_GetComboStep::CallFunc_GetPlayerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_GetComboStep, CallFunc_GetActMgrComponent_ReturnValue) == 0x000010, "Member 'UIW_DPad_Weapon_C_GetComboStep::CallFunc_GetActMgrComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_GetComboStep, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'UIW_DPad_Weapon_C_GetComboStep::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_GetComboStep, CallFunc_GetComboTable_ReturnValue) == 0x000020, "Member 'UIW_DPad_Weapon_C_GetComboStep::CallFunc_GetComboTable_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_GetComboStep, K2Node_DynamicCast_AsLPCCombo_Table_BP) == 0x000028, "Member 'UIW_DPad_Weapon_C_GetComboStep::K2Node_DynamicCast_AsLPCCombo_Table_BP' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_GetComboStep, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'UIW_DPad_Weapon_C_GetComboStep::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_GetComboStep, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000031, "Member 'UIW_DPad_Weapon_C_GetComboStep::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");

// Function UIW_DPad_Weapon.UIW_DPad_Weapon_C.SetUnitCount
// 0x0040 (0x0040 - 0x0000)
struct UIW_DPad_Weapon_C_SetUnitCount final
{
public:
	ELInputTypeHudOnly                            InputType;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ChainStarted;                                      // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         SkillRequireUnitCount;                             // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SkillConsumeUnitCount;                             // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ChainUnitCount;                                    // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsBladeOrHandle;                                   // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ResultChainStarted;                                // 0x0011(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12[0x2];                                       // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ResultChainUnitCount;                              // 0x0014(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         UnitCount;                                         // 0x0018(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LocalUnitCount;                                    // 0x001C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LocalChainUnitCount;                               // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          LocalChainStarted;                                 // 0x0024(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0026(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0027(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A[0x2];                                       // 0x003A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default;                             // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UIW_DPad_Weapon_C_SetUnitCount) == 0x000004, "Wrong alignment on UIW_DPad_Weapon_C_SetUnitCount");
static_assert(sizeof(UIW_DPad_Weapon_C_SetUnitCount) == 0x000040, "Wrong size on UIW_DPad_Weapon_C_SetUnitCount");
static_assert(offsetof(UIW_DPad_Weapon_C_SetUnitCount, InputType) == 0x000000, "Member 'UIW_DPad_Weapon_C_SetUnitCount::InputType' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_SetUnitCount, ChainStarted) == 0x000001, "Member 'UIW_DPad_Weapon_C_SetUnitCount::ChainStarted' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_SetUnitCount, SkillRequireUnitCount) == 0x000004, "Member 'UIW_DPad_Weapon_C_SetUnitCount::SkillRequireUnitCount' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_SetUnitCount, SkillConsumeUnitCount) == 0x000008, "Member 'UIW_DPad_Weapon_C_SetUnitCount::SkillConsumeUnitCount' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_SetUnitCount, ChainUnitCount) == 0x00000C, "Member 'UIW_DPad_Weapon_C_SetUnitCount::ChainUnitCount' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_SetUnitCount, IsBladeOrHandle) == 0x000010, "Member 'UIW_DPad_Weapon_C_SetUnitCount::IsBladeOrHandle' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_SetUnitCount, ResultChainStarted) == 0x000011, "Member 'UIW_DPad_Weapon_C_SetUnitCount::ResultChainStarted' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_SetUnitCount, ResultChainUnitCount) == 0x000014, "Member 'UIW_DPad_Weapon_C_SetUnitCount::ResultChainUnitCount' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_SetUnitCount, UnitCount) == 0x000018, "Member 'UIW_DPad_Weapon_C_SetUnitCount::UnitCount' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_SetUnitCount, LocalUnitCount) == 0x00001C, "Member 'UIW_DPad_Weapon_C_SetUnitCount::LocalUnitCount' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_SetUnitCount, LocalChainUnitCount) == 0x000020, "Member 'UIW_DPad_Weapon_C_SetUnitCount::LocalChainUnitCount' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_SetUnitCount, LocalChainStarted) == 0x000024, "Member 'UIW_DPad_Weapon_C_SetUnitCount::LocalChainStarted' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_SetUnitCount, CallFunc_Not_PreBool_ReturnValue) == 0x000025, "Member 'UIW_DPad_Weapon_C_SetUnitCount::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_SetUnitCount, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000026, "Member 'UIW_DPad_Weapon_C_SetUnitCount::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_SetUnitCount, K2Node_SwitchEnum_CmpSuccess) == 0x000027, "Member 'UIW_DPad_Weapon_C_SetUnitCount::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_SetUnitCount, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000028, "Member 'UIW_DPad_Weapon_C_SetUnitCount::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_SetUnitCount, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x000029, "Member 'UIW_DPad_Weapon_C_SetUnitCount::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_SetUnitCount, CallFunc_BooleanAND_ReturnValue) == 0x00002A, "Member 'UIW_DPad_Weapon_C_SetUnitCount::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_SetUnitCount, CallFunc_BooleanAND_ReturnValue_1) == 0x00002B, "Member 'UIW_DPad_Weapon_C_SetUnitCount::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_SetUnitCount, CallFunc_BooleanOR_ReturnValue) == 0x00002C, "Member 'UIW_DPad_Weapon_C_SetUnitCount::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_SetUnitCount, CallFunc_Add_IntInt_ReturnValue) == 0x000030, "Member 'UIW_DPad_Weapon_C_SetUnitCount::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_SetUnitCount, Temp_int_Variable) == 0x000034, "Member 'UIW_DPad_Weapon_C_SetUnitCount::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_SetUnitCount, Temp_bool_Variable) == 0x000038, "Member 'UIW_DPad_Weapon_C_SetUnitCount::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_SetUnitCount, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000039, "Member 'UIW_DPad_Weapon_C_SetUnitCount::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_DPad_Weapon_C_SetUnitCount, K2Node_Select_Default) == 0x00003C, "Member 'UIW_DPad_Weapon_C_SetUnitCount::K2Node_Select_Default' has a wrong offset!");

}


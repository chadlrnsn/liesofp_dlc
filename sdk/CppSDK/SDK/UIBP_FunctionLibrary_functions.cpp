#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UIBP_FunctionLibrary

#include "Basic.hpp"

#include "UIBP_FunctionLibrary_classes.hpp"
#include "UIBP_FunctionLibrary_parameters.hpp"


namespace SDK
{

// Function UIBP_FunctionLibrary.UIBP_FunctionLibrary_C.GetMainWidget
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UUIW_Main_C*                      MainWidget                                             (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUIBP_FunctionLibrary_C::GetMainWidget(class UObject* __WorldContext, class UUIW_Main_C** MainWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UIBP_FunctionLibrary_C", "GetMainWidget");

	Params::UIBP_FunctionLibrary_C_GetMainWidget Parms{};

	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (MainWidget != nullptr)
		*MainWidget = Parms.MainWidget;
}


// Function UIBP_FunctionLibrary.UIBP_FunctionLibrary_C.IsTestViewport
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsTest                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UUIBP_FunctionLibrary_C::IsTestViewport(class UObject* __WorldContext, bool* IsTest)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UIBP_FunctionLibrary_C", "IsTestViewport");

	Params::UIBP_FunctionLibrary_C_IsTestViewport Parms{};

	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (IsTest != nullptr)
		*IsTest = Parms.IsTest;
}


// Function UIBP_FunctionLibrary.UIBP_FunctionLibrary_C.GetKeyName
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             KeyName                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUIBP_FunctionLibrary_C::GetKeyName(const struct FKey& Key, class UObject* __WorldContext, class FName* KeyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UIBP_FunctionLibrary_C", "GetKeyName");

	Params::UIBP_FunctionLibrary_C_GetKeyName Parms{};

	Parms.Key = std::move(Key);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (KeyName != nullptr)
		*KeyName = Parms.KeyName;
}


// Function UIBP_FunctionLibrary.UIBP_FunctionLibrary_C.GetKeyIcon
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// class FName                             AlterKeyName                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UTexture2D*                       Icon                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUIBP_FunctionLibrary_C::GetKeyIcon(const struct FKey& Key, class FName AlterKeyName, class UObject* __WorldContext, class UTexture2D** Icon)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UIBP_FunctionLibrary_C", "GetKeyIcon");

	Params::UIBP_FunctionLibrary_C_GetKeyIcon Parms{};

	Parms.Key = std::move(Key);
	Parms.AlterKeyName = AlterKeyName;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Icon != nullptr)
		*Icon = Parms.Icon;
}


// Function UIBP_FunctionLibrary.UIBP_FunctionLibrary_C.ReplaceKeyText
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             OriginalText                                           (BlueprintVisible, BlueprintReadOnly, Parm)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FText                             EditText                                               (Parm, OutParm)

void UUIBP_FunctionLibrary_C::ReplaceKeyText(const class FText& OriginalText, class UObject* __WorldContext, class FText* EditText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UIBP_FunctionLibrary_C", "ReplaceKeyText");

	Params::UIBP_FunctionLibrary_C_ReplaceKeyText Parms{};

	Parms.OriginalText = std::move(OriginalText);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (EditText != nullptr)
		*EditText = std::move(Parms.EditText);
}


// Function UIBP_FunctionLibrary.UIBP_FunctionLibrary_C.PlayUISound
// (Static, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             RowName                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUIBP_FunctionLibrary_C::PlayUISound(class FName RowName, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UIBP_FunctionLibrary_C", "PlayUISound");

	Params::UIBP_FunctionLibrary_C_PlayUISound Parms{};

	Parms.RowName = RowName;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function UIBP_FunctionLibrary.UIBP_FunctionLibrary_C.GetMoveKeyboardString
// (Static, Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           String                                                 (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)

void UUIBP_FunctionLibrary_C::GetMoveKeyboardString(class UObject* __WorldContext, class FString* String)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UIBP_FunctionLibrary_C", "GetMoveKeyboardString");

	Params::UIBP_FunctionLibrary_C_GetMoveKeyboardString Parms{};

	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (String != nullptr)
		*String = std::move(Parms.String);
}


// Function UIBP_FunctionLibrary.UIBP_FunctionLibrary_C.PlayUIForceFeedback
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             RowName                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUIBP_FunctionLibrary_C::PlayUIForceFeedback(class FName RowName, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UIBP_FunctionLibrary_C", "PlayUIForceFeedback");

	Params::UIBP_FunctionLibrary_C_PlayUIForceFeedback Parms{};

	Parms.RowName = RowName;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function UIBP_FunctionLibrary.UIBP_FunctionLibrary_C.IntToRoman
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   Int                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           String                                                 (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)

void UUIBP_FunctionLibrary_C::IntToRoman(int32 Int, class UObject* __WorldContext, class FString* String)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UIBP_FunctionLibrary_C", "IntToRoman");

	Params::UIBP_FunctionLibrary_C_IntToRoman Parms{};

	Parms.Int = Int;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (String != nullptr)
		*String = std::move(Parms.String);
}


// Function UIBP_FunctionLibrary.UIBP_FunctionLibrary_C.SetDelayGetItemAlert
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsDelay                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUIBP_FunctionLibrary_C::SetDelayGetItemAlert(bool IsDelay, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UIBP_FunctionLibrary_C", "SetDelayGetItemAlert");

	Params::UIBP_FunctionLibrary_C_SetDelayGetItemAlert Parms{};

	Parms.IsDelay = IsDelay;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function UIBP_FunctionLibrary.UIBP_FunctionLibrary_C.NavigateToPrevIndex
// (Static, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UListView*                        ListView                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsRotation                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUIBP_FunctionLibrary_C::NavigateToPrevIndex(class UListView* ListView, bool IsRotation, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UIBP_FunctionLibrary_C", "NavigateToPrevIndex");

	Params::UIBP_FunctionLibrary_C_NavigateToPrevIndex Parms{};

	Parms.ListView = ListView;
	Parms.IsRotation = IsRotation;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function UIBP_FunctionLibrary.UIBP_FunctionLibrary_C.NavigateToNextIndex
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UListView*                        ListView                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsRotation                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUIBP_FunctionLibrary_C::NavigateToNextIndex(class UListView* ListView, bool IsRotation, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UIBP_FunctionLibrary_C", "NavigateToNextIndex");

	Params::UIBP_FunctionLibrary_C_NavigateToNextIndex Parms{};

	Parms.ListView = ListView;
	Parms.IsRotation = IsRotation;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function UIBP_FunctionLibrary.UIBP_FunctionLibrary_C.SetScrollBoxOffset
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UScrollBox*                       ScrollBox                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Delta                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUIBP_FunctionLibrary_C::SetScrollBoxOffset(class UScrollBox* ScrollBox, float Delta, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UIBP_FunctionLibrary_C", "SetScrollBoxOffset");

	Params::UIBP_FunctionLibrary_C_SetScrollBoxOffset Parms{};

	Parms.ScrollBox = ScrollBox;
	Parms.Delta = Delta;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function UIBP_FunctionLibrary.UIBP_FunctionLibrary_C.GetStatDiff
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// ELSecondStat                            Stat                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<struct FLSecondStatDiffData>     Diff_List                                              (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsDiff                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   Diff_Value                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUIBP_FunctionLibrary_C::GetStatDiff(ELSecondStat Stat, TArray<struct FLSecondStatDiffData>& Diff_List, class UObject* __WorldContext, bool* IsDiff, int32* Diff_Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UIBP_FunctionLibrary_C", "GetStatDiff");

	Params::UIBP_FunctionLibrary_C_GetStatDiff Parms{};

	Parms.Stat = Stat;
	Parms.Diff_List = std::move(Diff_List);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Diff_List = std::move(Parms.Diff_List);

	if (IsDiff != nullptr)
		*IsDiff = Parms.IsDiff;

	if (Diff_Value != nullptr)
		*Diff_Value = Parms.Diff_Value;
}


// Function UIBP_FunctionLibrary.UIBP_FunctionLibrary_C.GetWeaponByname
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class ULItem*                           LItem                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EUIEN_WeaponPart                        WeaponPart                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FText                             ItemName                                               (Parm, OutParm)

void UUIBP_FunctionLibrary_C::GetWeaponByname(class ULItem* LItem, EUIEN_WeaponPart WeaponPart, class UObject* __WorldContext, class FText* ItemName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UIBP_FunctionLibrary_C", "GetWeaponByname");

	Params::UIBP_FunctionLibrary_C_GetWeaponByname Parms{};

	Parms.LItem = LItem;
	Parms.WeaponPart = WeaponPart;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (ItemName != nullptr)
		*ItemName = std::move(Parms.ItemName);
}


// Function UIBP_FunctionLibrary.UIBP_FunctionLibrary_C.GetWeaponPartByname
// (Static, Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class ULItem*                           LItem                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FText                             ItemName                                               (Parm, OutParm)

void UUIBP_FunctionLibrary_C::GetWeaponPartByname(class ULItem* LItem, class UObject* __WorldContext, class FText* ItemName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UIBP_FunctionLibrary_C", "GetWeaponPartByname");

	Params::UIBP_FunctionLibrary_C_GetWeaponPartByname Parms{};

	Parms.LItem = LItem;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (ItemName != nullptr)
		*ItemName = std::move(Parms.ItemName);
}


// Function UIBP_FunctionLibrary.UIBP_FunctionLibrary_C.SetWeaponNameTotal
// (Static, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// EUIEN_WeaponPart                        WeaponPart                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ULItem*                           LItem                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UWidget*                          FirstWidget                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UTextBlock*                       FirstText                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UWidget*                          Divider                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UWidget*                          SecondWidget                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UTextBlock*                       SecondText                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUIBP_FunctionLibrary_C::SetWeaponNameTotal(EUIEN_WeaponPart WeaponPart, class ULItem* LItem, class UWidget* FirstWidget, class UTextBlock* FirstText, class UWidget* Divider, class UWidget* SecondWidget, class UTextBlock* SecondText, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UIBP_FunctionLibrary_C", "SetWeaponNameTotal");

	Params::UIBP_FunctionLibrary_C_SetWeaponNameTotal Parms{};

	Parms.WeaponPart = WeaponPart;
	Parms.LItem = LItem;
	Parms.FirstWidget = FirstWidget;
	Parms.FirstText = FirstText;
	Parms.Divider = Divider;
	Parms.SecondWidget = SecondWidget;
	Parms.SecondText = SecondText;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function UIBP_FunctionLibrary.UIBP_FunctionLibrary_C.MakeValueText
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Divisor                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Decimal                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FText                             Text                                                   (Parm, OutParm)

void UUIBP_FunctionLibrary_C::MakeValueText(int32 Value, int32 Divisor, int32 Decimal, class UObject* __WorldContext, class FText* Text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UIBP_FunctionLibrary_C", "MakeValueText");

	Params::UIBP_FunctionLibrary_C_MakeValueText Parms{};

	Parms.Value = Value;
	Parms.Divisor = Divisor;
	Parms.Decimal = Decimal;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Text != nullptr)
		*Text = std::move(Parms.Text);
}


// Function UIBP_FunctionLibrary.UIBP_FunctionLibrary_C.MakeWeaponStatText
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class ULItem*                           LItem                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// ELSecondStat                            InStat                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Divisor                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Decimal                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FText                             Text                                                   (Parm, OutParm)

void UUIBP_FunctionLibrary_C::MakeWeaponStatText(class ULItem* LItem, ELSecondStat InStat, int32 Divisor, int32 Decimal, class UObject* __WorldContext, class FText* Text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UIBP_FunctionLibrary_C", "MakeWeaponStatText");

	Params::UIBP_FunctionLibrary_C_MakeWeaponStatText Parms{};

	Parms.LItem = LItem;
	Parms.InStat = InStat;
	Parms.Divisor = Divisor;
	Parms.Decimal = Decimal;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Text != nullptr)
		*Text = std::move(Parms.Text);
}


// Function UIBP_FunctionLibrary.UIBP_FunctionLibrary_C.MakeSlaveArmAttackText
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class ULItem*                           SlaveArm                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// ELSecondStat                            InStat                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Diff                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FText                             Text                                                   (Parm, OutParm)
// int32                                   Value                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUIBP_FunctionLibrary_C::MakeSlaveArmAttackText(class ULItem* SlaveArm, ELSecondStat InStat, int32 Diff, class UObject* __WorldContext, class FText* Text, int32* Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UIBP_FunctionLibrary_C", "MakeSlaveArmAttackText");

	Params::UIBP_FunctionLibrary_C_MakeSlaveArmAttackText Parms{};

	Parms.SlaveArm = SlaveArm;
	Parms.InStat = InStat;
	Parms.Diff = Diff;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Text != nullptr)
		*Text = std::move(Parms.Text);

	if (Value != nullptr)
		*Value = Parms.Value;
}


// Function UIBP_FunctionLibrary.UIBP_FunctionLibrary_C.MakeReinforceWeaponStatText
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class ULItem*                           LItem                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// ELSecondStat                            InStat                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    HasBladeReinforce                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// ELStatCorrectChangeType                 HandleCorrection                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Divisor                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Decimal                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FText                             Text                                                   (Parm, OutParm)
// int32                                   Diff                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUIBP_FunctionLibrary_C::MakeReinforceWeaponStatText(class ULItem* LItem, ELSecondStat InStat, bool HasBladeReinforce, ELStatCorrectChangeType HandleCorrection, int32 Divisor, int32 Decimal, class UObject* __WorldContext, class FText* Text, int32* Diff)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UIBP_FunctionLibrary_C", "MakeReinforceWeaponStatText");

	Params::UIBP_FunctionLibrary_C_MakeReinforceWeaponStatText Parms{};

	Parms.LItem = LItem;
	Parms.InStat = InStat;
	Parms.HasBladeReinforce = HasBladeReinforce;
	Parms.HandleCorrection = HandleCorrection;
	Parms.Divisor = Divisor;
	Parms.Decimal = Decimal;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Text != nullptr)
		*Text = std::move(Parms.Text);

	if (Diff != nullptr)
		*Diff = Parms.Diff;
}


// Function UIBP_FunctionLibrary.UIBP_FunctionLibrary_C.MakeReinforceBladeStatText
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class ULItem*                           LItem                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// ELSecondStat                            InStat                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    HasReinforceData                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   Divisor                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Decimal                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FText                             Text                                                   (Parm, OutParm)
// int32                                   Diff                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUIBP_FunctionLibrary_C::MakeReinforceBladeStatText(class ULItem* LItem, ELSecondStat InStat, bool HasReinforceData, int32 Divisor, int32 Decimal, class UObject* __WorldContext, class FText* Text, int32* Diff)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UIBP_FunctionLibrary_C", "MakeReinforceBladeStatText");

	Params::UIBP_FunctionLibrary_C_MakeReinforceBladeStatText Parms{};

	Parms.LItem = LItem;
	Parms.InStat = InStat;
	Parms.HasReinforceData = HasReinforceData;
	Parms.Divisor = Divisor;
	Parms.Decimal = Decimal;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Text != nullptr)
		*Text = std::move(Parms.Text);

	if (Diff != nullptr)
		*Diff = Parms.Diff;
}


// Function UIBP_FunctionLibrary.UIBP_FunctionLibrary_C.GetFirstStatInfo
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TMap<ELFirstStat, struct FUIST_FirstStatInfo>FirstStatInfo                                          (Parm, OutParm)

void UUIBP_FunctionLibrary_C::GetFirstStatInfo(class UObject* __WorldContext, TMap<ELFirstStat, struct FUIST_FirstStatInfo>* FirstStatInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UIBP_FunctionLibrary_C", "GetFirstStatInfo");

	Params::UIBP_FunctionLibrary_C_GetFirstStatInfo Parms{};

	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (FirstStatInfo != nullptr)
		*FirstStatInfo = std::move(Parms.FirstStatInfo);
}


// Function UIBP_FunctionLibrary.UIBP_FunctionLibrary_C.GetFirstCategoryInfo
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TMap<ELItemFirstCategory, struct FUIST_FirstCategoryInfo>FirstCategoryInfo                                      (Parm, OutParm)

void UUIBP_FunctionLibrary_C::GetFirstCategoryInfo(class UObject* __WorldContext, TMap<ELItemFirstCategory, struct FUIST_FirstCategoryInfo>* FirstCategoryInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UIBP_FunctionLibrary_C", "GetFirstCategoryInfo");

	Params::UIBP_FunctionLibrary_C_GetFirstCategoryInfo Parms{};

	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (FirstCategoryInfo != nullptr)
		*FirstCategoryInfo = std::move(Parms.FirstCategoryInfo);
}


// Function UIBP_FunctionLibrary.UIBP_FunctionLibrary_C.SortFirstCategory
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<ELItemFirstCategory>             CategoryList                                           (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<ELItemFirstCategory>             CategoryListResult                                     (Parm, OutParm)

void UUIBP_FunctionLibrary_C::SortFirstCategory(TArray<ELItemFirstCategory>& CategoryList, class UObject* __WorldContext, TArray<ELItemFirstCategory>* CategoryListResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UIBP_FunctionLibrary_C", "SortFirstCategory");

	Params::UIBP_FunctionLibrary_C_SortFirstCategory Parms{};

	Parms.CategoryList = std::move(CategoryList);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	CategoryList = std::move(Parms.CategoryList);

	if (CategoryListResult != nullptr)
		*CategoryListResult = std::move(Parms.CategoryListResult);
}


// Function UIBP_FunctionLibrary.UIBP_FunctionLibrary_C.GetSecondCategoryLabel
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// ELItemSecondCategory                    SecondCategory                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FText                             Label                                                  (Parm, OutParm)

void UUIBP_FunctionLibrary_C::GetSecondCategoryLabel(ELItemSecondCategory SecondCategory, class UObject* __WorldContext, class FText* Label)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UIBP_FunctionLibrary_C", "GetSecondCategoryLabel");

	Params::UIBP_FunctionLibrary_C_GetSecondCategoryLabel Parms{};

	Parms.SecondCategory = SecondCategory;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Label != nullptr)
		*Label = std::move(Parms.Label);
}


// Function UIBP_FunctionLibrary.UIBP_FunctionLibrary_C.GetSlaveArmElementDamage
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FItemSlaveArmInfoPtr             SlaveArmInfo                                           (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// ELElementDamageType                     DamageType                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Damage                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUIBP_FunctionLibrary_C::GetSlaveArmElementDamage(const struct FItemSlaveArmInfoPtr& SlaveArmInfo, class UObject* __WorldContext, ELElementDamageType* DamageType, int32* Damage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UIBP_FunctionLibrary_C", "GetSlaveArmElementDamage");

	Params::UIBP_FunctionLibrary_C_GetSlaveArmElementDamage Parms{};

	Parms.SlaveArmInfo = std::move(SlaveArmInfo);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (DamageType != nullptr)
		*DamageType = Parms.DamageType;

	if (Damage != nullptr)
		*Damage = Parms.Damage;
}


// Function UIBP_FunctionLibrary.UIBP_FunctionLibrary_C.GetHandleCorrectionGradeText
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// ELHandleCorrectResultGrade              HandleCorrectionGrade                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FText                             Text                                                   (Parm, OutParm)

void UUIBP_FunctionLibrary_C::GetHandleCorrectionGradeText(ELHandleCorrectResultGrade HandleCorrectionGrade, class UObject* __WorldContext, class FText* Text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UIBP_FunctionLibrary_C", "GetHandleCorrectionGradeText");

	Params::UIBP_FunctionLibrary_C_GetHandleCorrectionGradeText Parms{};

	Parms.HandleCorrectionGrade = HandleCorrectionGrade;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Text != nullptr)
		*Text = std::move(Parms.Text);
}


// Function UIBP_FunctionLibrary.UIBP_FunctionLibrary_C.GetWeaponCorrectionGrade
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// ELWeaponCorrectionPhysicalGrade         WeaponCorrectionGrade                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FText                             Text                                                   (Parm, OutParm)

void UUIBP_FunctionLibrary_C::GetWeaponCorrectionGrade(ELWeaponCorrectionPhysicalGrade WeaponCorrectionGrade, class UObject* __WorldContext, class FText* Text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UIBP_FunctionLibrary_C", "GetWeaponCorrectionGrade");

	Params::UIBP_FunctionLibrary_C_GetWeaponCorrectionGrade Parms{};

	Parms.WeaponCorrectionGrade = WeaponCorrectionGrade;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Text != nullptr)
		*Text = std::move(Parms.Text);
}


// Function UIBP_FunctionLibrary.UIBP_FunctionLibrary_C.GetScrollBarStyle
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FScrollBarStyle                  ScrollBarStyle                                         (Parm, OutParm)

void UUIBP_FunctionLibrary_C::GetScrollBarStyle(class UObject* __WorldContext, struct FScrollBarStyle* ScrollBarStyle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UIBP_FunctionLibrary_C", "GetScrollBarStyle");

	Params::UIBP_FunctionLibrary_C_GetScrollBarStyle Parms{};

	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (ScrollBarStyle != nullptr)
		*ScrollBarStyle = std::move(Parms.ScrollBarStyle);
}


// Function UIBP_FunctionLibrary.UIBP_FunctionLibrary_C.GetKeyStringFromActionName
// (Static, Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FName                             ActionName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsGamePad                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class FString                           PlatformName                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           KeyString                                              (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)

void UUIBP_FunctionLibrary_C::GetKeyStringFromActionName(class FName ActionName, bool IsGamePad, const class FString& PlatformName, class UObject* __WorldContext, class FString* KeyString)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UIBP_FunctionLibrary_C", "GetKeyStringFromActionName");

	Params::UIBP_FunctionLibrary_C_GetKeyStringFromActionName Parms{};

	Parms.ActionName = ActionName;
	Parms.IsGamePad = IsGamePad;
	Parms.PlatformName = std::move(PlatformName);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (KeyString != nullptr)
		*KeyString = std::move(Parms.KeyString);
}


// Function UIBP_FunctionLibrary.UIBP_FunctionLibrary_C.GetKeyStringFromAxisName
// (Static, Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FName                             AxisName                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsGamePad                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class FString                           PlatformName                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           KeyString                                              (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)

void UUIBP_FunctionLibrary_C::GetKeyStringFromAxisName(class FName AxisName, bool IsGamePad, const class FString& PlatformName, class UObject* __WorldContext, class FString* KeyString)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UIBP_FunctionLibrary_C", "GetKeyStringFromAxisName");

	Params::UIBP_FunctionLibrary_C_GetKeyStringFromAxisName Parms{};

	Parms.AxisName = AxisName;
	Parms.IsGamePad = IsGamePad;
	Parms.PlatformName = std::move(PlatformName);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (KeyString != nullptr)
		*KeyString = std::move(Parms.KeyString);
}


// Function UIBP_FunctionLibrary.UIBP_FunctionLibrary_C.GetInputActionInfo
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FName                             InputAction                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FText                             Title                                                  (Parm, OutParm)
// class FText                             Desc                                                   (Parm, OutParm)
// bool                                    IsEmpty                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UUIBP_FunctionLibrary_C::GetInputActionInfo(class FName InputAction, class UObject* __WorldContext, class FText* Title, class FText* Desc, bool* IsEmpty)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UIBP_FunctionLibrary_C", "GetInputActionInfo");

	Params::UIBP_FunctionLibrary_C_GetInputActionInfo Parms{};

	Parms.InputAction = InputAction;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Title != nullptr)
		*Title = std::move(Parms.Title);

	if (Desc != nullptr)
		*Desc = std::move(Parms.Desc);

	if (IsEmpty != nullptr)
		*IsEmpty = Parms.IsEmpty;
}


// Function UIBP_FunctionLibrary.UIBP_FunctionLibrary_C.ArrayPop
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class UObject*>                  Array                                                  (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class UClass*                           ItemClass                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          Outer_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          PopItemNullable                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsInstantiated                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UUIBP_FunctionLibrary_C::ArrayPop(TArray<class UObject*>& Array, class UClass* ItemClass, class UObject* Outer_0, class UObject* __WorldContext, class UObject** PopItemNullable, bool* IsInstantiated)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UIBP_FunctionLibrary_C", "ArrayPop");

	Params::UIBP_FunctionLibrary_C_ArrayPop Parms{};

	Parms.Array = std::move(Array);
	Parms.ItemClass = ItemClass;
	Parms.Outer_0 = Outer_0;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Array = std::move(Parms.Array);

	if (PopItemNullable != nullptr)
		*PopItemNullable = Parms.PopItemNullable;

	if (IsInstantiated != nullptr)
		*IsInstantiated = Parms.IsInstantiated;
}


// Function UIBP_FunctionLibrary.UIBP_FunctionLibrary_C.Calculate_TileColumnCount
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UWidget*                          SlotAsCanvasSlotWidth                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UTileView*                        TileView                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   ColumnCount                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUIBP_FunctionLibrary_C::Calculate_TileColumnCount(class UWidget* SlotAsCanvasSlotWidth, class UTileView* TileView, class UObject* __WorldContext, int32* ColumnCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UIBP_FunctionLibrary_C", "Calculate_TileColumnCount");

	Params::UIBP_FunctionLibrary_C_Calculate_TileColumnCount Parms{};

	Parms.SlotAsCanvasSlotWidth = SlotAsCanvasSlotWidth;
	Parms.TileView = TileView;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (ColumnCount != nullptr)
		*ColumnCount = Parms.ColumnCount;
}


// Function UIBP_FunctionLibrary.UIBP_FunctionLibrary_C.Calculate_ListEmptyFillCount
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   ListDataLength                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   ColumnCount                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   FillColumnCount                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUIBP_FunctionLibrary_C::Calculate_ListEmptyFillCount(int32 ListDataLength, int32 ColumnCount, class UObject* __WorldContext, int32* FillColumnCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UIBP_FunctionLibrary_C", "Calculate_ListEmptyFillCount");

	Params::UIBP_FunctionLibrary_C_Calculate_ListEmptyFillCount Parms{};

	Parms.ListDataLength = ListDataLength;
	Parms.ColumnCount = ColumnCount;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (FillColumnCount != nullptr)
		*FillColumnCount = Parms.FillColumnCount;
}


// Function UIBP_FunctionLibrary.UIBP_FunctionLibrary_C.CheckKeyToAction
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// class FName                             InputActionName                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsHit                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UUIBP_FunctionLibrary_C::CheckKeyToAction(const struct FKey& Key, class FName InputActionName, class UObject* __WorldContext, bool* IsHit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UIBP_FunctionLibrary_C", "CheckKeyToAction");

	Params::UIBP_FunctionLibrary_C_CheckKeyToAction Parms{};

	Parms.Key = std::move(Key);
	Parms.InputActionName = InputActionName;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (IsHit != nullptr)
		*IsHit = Parms.IsHit;
}


// Function UIBP_FunctionLibrary.UIBP_FunctionLibrary_C.Check Gear Group
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class ULItem*                           LItem                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// ELEquipSlotType                         Slot_Type                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsSameGroup                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// ELEquipSlotType                         SlotType                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUIBP_FunctionLibrary_C::Check_Gear_Group(class ULItem* LItem, ELEquipSlotType Slot_Type, class UObject* __WorldContext, bool* IsSameGroup, ELEquipSlotType* SlotType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UIBP_FunctionLibrary_C", "Check Gear Group");

	Params::UIBP_FunctionLibrary_C_Check_Gear_Group Parms{};

	Parms.LItem = LItem;
	Parms.Slot_Type = Slot_Type;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (IsSameGroup != nullptr)
		*IsSameGroup = Parms.IsSameGroup;

	if (SlotType != nullptr)
		*SlotType = Parms.SlotType;
}


// Function UIBP_FunctionLibrary.UIBP_FunctionLibrary_C.GetSelectedWidgetOnList
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UListView*                        ListView                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class UWidget*                          Widget                                                 (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUIBP_FunctionLibrary_C::GetSelectedWidgetOnList(class UListView* ListView, class UObject* __WorldContext, bool* IsValid, class UWidget** Widget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UIBP_FunctionLibrary_C", "GetSelectedWidgetOnList");

	Params::UIBP_FunctionLibrary_C_GetSelectedWidgetOnList Parms{};

	Parms.ListView = ListView;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	if (Widget != nullptr)
		*Widget = Parms.Widget;
}


// Function UIBP_FunctionLibrary.UIBP_FunctionLibrary_C.GetValidArrayIndex
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Index_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Direction                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   ArrayLength                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   NewParam                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUIBP_FunctionLibrary_C::GetValidArrayIndex(int32 Index_0, int32 Direction, int32 ArrayLength, class UObject* __WorldContext, int32* NewParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UIBP_FunctionLibrary_C", "GetValidArrayIndex");

	Params::UIBP_FunctionLibrary_C_GetValidArrayIndex Parms{};

	Parms.Index_0 = Index_0;
	Parms.Direction = Direction;
	Parms.ArrayLength = ArrayLength;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (NewParam != nullptr)
		*NewParam = Parms.NewParam;
}


// Function UIBP_FunctionLibrary.UIBP_FunctionLibrary_C.Get Culture Arr Text
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TArray<class FString>                   CultureCodeArr                                         (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<class FText>                     CultureArr                                             (Parm, OutParm)

void UUIBP_FunctionLibrary_C::Get_Culture_Arr_Text(TArray<class FString>& CultureCodeArr, class UObject* __WorldContext, TArray<class FText>* CultureArr)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UIBP_FunctionLibrary_C", "Get Culture Arr Text");

	Params::UIBP_FunctionLibrary_C_Get_Culture_Arr_Text Parms{};

	Parms.CultureCodeArr = std::move(CultureCodeArr);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	CultureCodeArr = std::move(Parms.CultureCodeArr);

	if (CultureArr != nullptr)
		*CultureArr = std::move(Parms.CultureArr);
}


// Function UIBP_FunctionLibrary.UIBP_FunctionLibrary_C.GetCultureDefaultIndex
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Index_0                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUIBP_FunctionLibrary_C::GetCultureDefaultIndex(class UObject* __WorldContext, int32* Index_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UIBP_FunctionLibrary_C", "GetCultureDefaultIndex");

	Params::UIBP_FunctionLibrary_C_GetCultureDefaultIndex Parms{};

	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Index_0 != nullptr)
		*Index_0 = Parms.Index_0;
}


// Function UIBP_FunctionLibrary.UIBP_FunctionLibrary_C.SwitchEquipSlotSize
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// ELEquipSlotType                         EquipSlotType                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EUIEN_EquipSlotSize                     NewParam                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUIBP_FunctionLibrary_C::SwitchEquipSlotSize(ELEquipSlotType EquipSlotType, class UObject* __WorldContext, EUIEN_EquipSlotSize* NewParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UIBP_FunctionLibrary_C", "SwitchEquipSlotSize");

	Params::UIBP_FunctionLibrary_C_SwitchEquipSlotSize Parms{};

	Parms.EquipSlotType = EquipSlotType;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (NewParam != nullptr)
		*NewParam = Parms.NewParam;
}


// Function UIBP_FunctionLibrary.UIBP_FunctionLibrary_C.GetPlatformDetail
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsXboxPlatform                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UUIBP_FunctionLibrary_C::GetPlatformDetail(class UObject* __WorldContext, bool* IsXboxPlatform)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UIBP_FunctionLibrary_C", "GetPlatformDetail");

	Params::UIBP_FunctionLibrary_C_GetPlatformDetail Parms{};

	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (IsXboxPlatform != nullptr)
		*IsXboxPlatform = Parms.IsXboxPlatform;
}


// Function UIBP_FunctionLibrary.UIBP_FunctionLibrary_C.GetIconFableArtsType
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// ELActionCategory                        ActionCategory                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TSoftObjectPtr<class UTexture2D>        Img                                                    (Parm, OutParm, HasGetValueTypeHash)

void UUIBP_FunctionLibrary_C::GetIconFableArtsType(ELActionCategory ActionCategory, class UObject* __WorldContext, TSoftObjectPtr<class UTexture2D>* Img)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UIBP_FunctionLibrary_C", "GetIconFableArtsType");

	Params::UIBP_FunctionLibrary_C_GetIconFableArtsType Parms{};

	Parms.ActionCategory = ActionCategory;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Img != nullptr)
		*Img = Parms.Img;
}


// Function UIBP_FunctionLibrary.UIBP_FunctionLibrary_C.GetPlatformBranchText
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FName                             CodeName                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FText                             Text                                                   (Parm, OutParm)

void UUIBP_FunctionLibrary_C::GetPlatformBranchText(class FName CodeName, class UObject* __WorldContext, class FText* Text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UIBP_FunctionLibrary_C", "GetPlatformBranchText");

	Params::UIBP_FunctionLibrary_C_GetPlatformBranchText Parms{};

	Parms.CodeName = CodeName;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Text != nullptr)
		*Text = std::move(Parms.Text);
}


// Function UIBP_FunctionLibrary.UIBP_FunctionLibrary_C.GetPlatformBranchTextSA
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FName                             CodeName                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FText                             Text                                                   (Parm, OutParm)
// bool                                    IsChanged                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UUIBP_FunctionLibrary_C::GetPlatformBranchTextSA(class FName CodeName, class UObject* __WorldContext, class FText* Text, bool* IsChanged)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UIBP_FunctionLibrary_C", "GetPlatformBranchTextSA");

	Params::UIBP_FunctionLibrary_C_GetPlatformBranchTextSA Parms{};

	Parms.CodeName = CodeName;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Text != nullptr)
		*Text = std::move(Parms.Text);

	if (IsChanged != nullptr)
		*IsChanged = Parms.IsChanged;
}


// Function UIBP_FunctionLibrary.UIBP_FunctionLibrary_C.GetPlatformBranchTextInteraction
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FName                             CodeName                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FText                             Text                                                   (Parm, OutParm)

void UUIBP_FunctionLibrary_C::GetPlatformBranchTextInteraction(class FName CodeName, class UObject* __WorldContext, class FText* Text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UIBP_FunctionLibrary_C", "GetPlatformBranchTextInteraction");

	Params::UIBP_FunctionLibrary_C_GetPlatformBranchTextInteraction Parms{};

	Parms.CodeName = CodeName;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Text != nullptr)
		*Text = std::move(Parms.Text);
}


// Function UIBP_FunctionLibrary.UIBP_FunctionLibrary_C.GetFocusedTorsionCoilName
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             TorsionCoilName                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUIBP_FunctionLibrary_C::GetFocusedTorsionCoilName(class UObject* __WorldContext, class FName* TorsionCoilName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIBP_FunctionLibrary_C", "GetFocusedTorsionCoilName");

	Params::UIBP_FunctionLibrary_C_GetFocusedTorsionCoilName Parms{};

	Parms.__WorldContext = __WorldContext;

	UObject::ProcessEvent(Func, &Parms);

	if (TorsionCoilName != nullptr)
		*TorsionCoilName = Parms.TorsionCoilName;
}


// Function UIBP_FunctionLibrary.UIBP_FunctionLibrary_C.GetSynergyNameWithNumber
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   SynergyNumber                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FText                             SpecialBuffText                                        (BlueprintVisible, BlueprintReadOnly, Parm)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm)

class FText UUIBP_FunctionLibrary_C::GetSynergyNameWithNumber(int32 SynergyNumber, const class FText& SpecialBuffText, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIBP_FunctionLibrary_C", "GetSynergyNameWithNumber");

	Params::UIBP_FunctionLibrary_C_GetSynergyNameWithNumber Parms{};

	Parms.SynergyNumber = SynergyNumber;
	Parms.SpecialBuffText = std::move(SpecialBuffText);
	Parms.__WorldContext = __WorldContext;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}


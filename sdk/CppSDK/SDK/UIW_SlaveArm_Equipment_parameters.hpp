#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UIW_SlaveArm_Equipment

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"
#include "ProjectPContentInfo_structs.hpp"
#include "Engine_structs.hpp"
#include "ProjectP_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "InputCore_structs.hpp"


namespace SDK::Params
{

// Function UIW_SlaveArm_Equipment.UIW_SlaveArm_Equipment_C.ExecuteUbergraph_UIW_SlaveArm_Equipment
// 0x0138 (0x0138 - 0x0000)
struct UIW_SlaveArm_Equipment_C_ExecuteUbergraph_UIW_SlaveArm_Equipment final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0004(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UUIW_Btn_Key_C*                         K2Node_ComponentBoundEvent_BtnKey_2;               // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUIW_Btn_Key_C*                         K2Node_ComponentBoundEvent_BtnKey_1;               // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUIW_Main_C*                            CallFunc_GetMainWidget_MainWidget;                 // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue;           // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetViewTarget_ReturnValue;                // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ULEventDispatcherSystem*                CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_1;        // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue_1;         // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue;                  // 0x0070(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetMousePositionOnViewport_ReturnValue;   // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0080(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_SetActorRotation_ReturnValue;          // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8D[0x3];                                       // 0x008D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ULItem*                                 K2Node_ComponentBoundEvent_LItem_5;                // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULItem*                                 K2Node_ComponentBoundEvent_LItem_4;                // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULItem*                                 K2Node_ComponentBoundEvent_LItem_3;                // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULItem*                                 K2Node_ComponentBoundEvent_LItem_2;                // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_ComponentBoundEvent_Delta;                  // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B4[0x4];                                       // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUIW_Btn_Key_C*                         K2Node_ComponentBoundEvent_BtnKey;                 // 0x00B8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULSlaveArmInfo*                         CallFunc_GetSlaveArmInfo_ReturnValue;              // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue;            // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_CA[0x6];                                       // 0x00CA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ULGameDataSystem*                       CallFunc_GetGameInstanceSubsystem_ReturnValue_1;   // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_2;        // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULEventDispatcherSystem*                CallFunc_GetGameInstanceSubsystem_ReturnValue_2;   // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ALPCController*                         K2Node_DynamicCast_AsLPCController;                // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F1[0x7];                                       // 0x00F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ULItem*                                 K2Node_ComponentBoundEvent_LItem_1;                // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULItem*                                 K2Node_ComponentBoundEvent_LItem;                  // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                K2Node_ComponentBoundEvent_Item;                   // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bIsSelected;            // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_111[0x7];                                      // 0x0111(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UWidget*>                        K2Node_MakeArray_Array;                            // 0x0118(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UUIBP_ListData_Default_C*               K2Node_DynamicCast_AsUIBP_List_Data_Default;       // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchName_CmpSuccess;                      // 0x0131(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue_1;          // 0x0132(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0133(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0134(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0135(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UIW_SlaveArm_Equipment_C_ExecuteUbergraph_UIW_SlaveArm_Equipment) == 0x000008, "Wrong alignment on UIW_SlaveArm_Equipment_C_ExecuteUbergraph_UIW_SlaveArm_Equipment");
static_assert(sizeof(UIW_SlaveArm_Equipment_C_ExecuteUbergraph_UIW_SlaveArm_Equipment) == 0x000138, "Wrong size on UIW_SlaveArm_Equipment_C_ExecuteUbergraph_UIW_SlaveArm_Equipment");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_ExecuteUbergraph_UIW_SlaveArm_Equipment, EntryPoint) == 0x000000, "Member 'UIW_SlaveArm_Equipment_C_ExecuteUbergraph_UIW_SlaveArm_Equipment::EntryPoint' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_ExecuteUbergraph_UIW_SlaveArm_Equipment, CallFunc_MakeRotator_ReturnValue) == 0x000004, "Member 'UIW_SlaveArm_Equipment_C_ExecuteUbergraph_UIW_SlaveArm_Equipment::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_ExecuteUbergraph_UIW_SlaveArm_Equipment, K2Node_ComponentBoundEvent_BtnKey_2) == 0x000010, "Member 'UIW_SlaveArm_Equipment_C_ExecuteUbergraph_UIW_SlaveArm_Equipment::K2Node_ComponentBoundEvent_BtnKey_2' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_ExecuteUbergraph_UIW_SlaveArm_Equipment, K2Node_ComponentBoundEvent_BtnKey_1) == 0x000018, "Member 'UIW_SlaveArm_Equipment_C_ExecuteUbergraph_UIW_SlaveArm_Equipment::K2Node_ComponentBoundEvent_BtnKey_1' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_ExecuteUbergraph_UIW_SlaveArm_Equipment, CallFunc_GetMainWidget_MainWidget) == 0x000020, "Member 'UIW_SlaveArm_Equipment_C_ExecuteUbergraph_UIW_SlaveArm_Equipment::CallFunc_GetMainWidget_MainWidget' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_ExecuteUbergraph_UIW_SlaveArm_Equipment, CallFunc_PlayAnimationForward_ReturnValue) == 0x000028, "Member 'UIW_SlaveArm_Equipment_C_ExecuteUbergraph_UIW_SlaveArm_Equipment::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_ExecuteUbergraph_UIW_SlaveArm_Equipment, CallFunc_GetPlayerController_ReturnValue) == 0x000030, "Member 'UIW_SlaveArm_Equipment_C_ExecuteUbergraph_UIW_SlaveArm_Equipment::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_ExecuteUbergraph_UIW_SlaveArm_Equipment, CallFunc_GetPlayerCharacter_ReturnValue) == 0x000038, "Member 'UIW_SlaveArm_Equipment_C_ExecuteUbergraph_UIW_SlaveArm_Equipment::CallFunc_GetPlayerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_ExecuteUbergraph_UIW_SlaveArm_Equipment, CallFunc_IsValid_ReturnValue) == 0x000040, "Member 'UIW_SlaveArm_Equipment_C_ExecuteUbergraph_UIW_SlaveArm_Equipment::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_ExecuteUbergraph_UIW_SlaveArm_Equipment, CallFunc_GetViewTarget_ReturnValue) == 0x000048, "Member 'UIW_SlaveArm_Equipment_C_ExecuteUbergraph_UIW_SlaveArm_Equipment::CallFunc_GetViewTarget_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_ExecuteUbergraph_UIW_SlaveArm_Equipment, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000050, "Member 'UIW_SlaveArm_Equipment_C_ExecuteUbergraph_UIW_SlaveArm_Equipment::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_ExecuteUbergraph_UIW_SlaveArm_Equipment, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000058, "Member 'UIW_SlaveArm_Equipment_C_ExecuteUbergraph_UIW_SlaveArm_Equipment::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_ExecuteUbergraph_UIW_SlaveArm_Equipment, CallFunc_GetPlayerController_ReturnValue_1) == 0x000060, "Member 'UIW_SlaveArm_Equipment_C_ExecuteUbergraph_UIW_SlaveArm_Equipment::CallFunc_GetPlayerController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_ExecuteUbergraph_UIW_SlaveArm_Equipment, CallFunc_GetPlayerCharacter_ReturnValue_1) == 0x000068, "Member 'UIW_SlaveArm_Equipment_C_ExecuteUbergraph_UIW_SlaveArm_Equipment::CallFunc_GetPlayerCharacter_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_ExecuteUbergraph_UIW_SlaveArm_Equipment, CallFunc_K2_SetTimer_ReturnValue) == 0x000070, "Member 'UIW_SlaveArm_Equipment_C_ExecuteUbergraph_UIW_SlaveArm_Equipment::CallFunc_K2_SetTimer_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_ExecuteUbergraph_UIW_SlaveArm_Equipment, CallFunc_GetMousePositionOnViewport_ReturnValue) == 0x000078, "Member 'UIW_SlaveArm_Equipment_C_ExecuteUbergraph_UIW_SlaveArm_Equipment::CallFunc_GetMousePositionOnViewport_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_ExecuteUbergraph_UIW_SlaveArm_Equipment, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000080, "Member 'UIW_SlaveArm_Equipment_C_ExecuteUbergraph_UIW_SlaveArm_Equipment::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_ExecuteUbergraph_UIW_SlaveArm_Equipment, CallFunc_K2_SetActorRotation_ReturnValue) == 0x00008C, "Member 'UIW_SlaveArm_Equipment_C_ExecuteUbergraph_UIW_SlaveArm_Equipment::CallFunc_K2_SetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_ExecuteUbergraph_UIW_SlaveArm_Equipment, K2Node_ComponentBoundEvent_LItem_5) == 0x000090, "Member 'UIW_SlaveArm_Equipment_C_ExecuteUbergraph_UIW_SlaveArm_Equipment::K2Node_ComponentBoundEvent_LItem_5' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_ExecuteUbergraph_UIW_SlaveArm_Equipment, K2Node_ComponentBoundEvent_LItem_4) == 0x000098, "Member 'UIW_SlaveArm_Equipment_C_ExecuteUbergraph_UIW_SlaveArm_Equipment::K2Node_ComponentBoundEvent_LItem_4' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_ExecuteUbergraph_UIW_SlaveArm_Equipment, K2Node_ComponentBoundEvent_LItem_3) == 0x0000A0, "Member 'UIW_SlaveArm_Equipment_C_ExecuteUbergraph_UIW_SlaveArm_Equipment::K2Node_ComponentBoundEvent_LItem_3' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_ExecuteUbergraph_UIW_SlaveArm_Equipment, K2Node_ComponentBoundEvent_LItem_2) == 0x0000A8, "Member 'UIW_SlaveArm_Equipment_C_ExecuteUbergraph_UIW_SlaveArm_Equipment::K2Node_ComponentBoundEvent_LItem_2' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_ExecuteUbergraph_UIW_SlaveArm_Equipment, K2Node_ComponentBoundEvent_Delta) == 0x0000B0, "Member 'UIW_SlaveArm_Equipment_C_ExecuteUbergraph_UIW_SlaveArm_Equipment::K2Node_ComponentBoundEvent_Delta' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_ExecuteUbergraph_UIW_SlaveArm_Equipment, K2Node_ComponentBoundEvent_BtnKey) == 0x0000B8, "Member 'UIW_SlaveArm_Equipment_C_ExecuteUbergraph_UIW_SlaveArm_Equipment::K2Node_ComponentBoundEvent_BtnKey' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_ExecuteUbergraph_UIW_SlaveArm_Equipment, CallFunc_GetSlaveArmInfo_ReturnValue) == 0x0000C0, "Member 'UIW_SlaveArm_Equipment_C_ExecuteUbergraph_UIW_SlaveArm_Equipment::CallFunc_GetSlaveArmInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_ExecuteUbergraph_UIW_SlaveArm_Equipment, CallFunc_IsValid_ReturnValue_1) == 0x0000C8, "Member 'UIW_SlaveArm_Equipment_C_ExecuteUbergraph_UIW_SlaveArm_Equipment::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_ExecuteUbergraph_UIW_SlaveArm_Equipment, CallFunc_NotEqual_NameName_ReturnValue) == 0x0000C9, "Member 'UIW_SlaveArm_Equipment_C_ExecuteUbergraph_UIW_SlaveArm_Equipment::CallFunc_NotEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_ExecuteUbergraph_UIW_SlaveArm_Equipment, CallFunc_GetGameInstanceSubsystem_ReturnValue_1) == 0x0000D0, "Member 'UIW_SlaveArm_Equipment_C_ExecuteUbergraph_UIW_SlaveArm_Equipment::CallFunc_GetGameInstanceSubsystem_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_ExecuteUbergraph_UIW_SlaveArm_Equipment, CallFunc_GetPlayerController_ReturnValue_2) == 0x0000D8, "Member 'UIW_SlaveArm_Equipment_C_ExecuteUbergraph_UIW_SlaveArm_Equipment::CallFunc_GetPlayerController_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_ExecuteUbergraph_UIW_SlaveArm_Equipment, CallFunc_GetGameInstanceSubsystem_ReturnValue_2) == 0x0000E0, "Member 'UIW_SlaveArm_Equipment_C_ExecuteUbergraph_UIW_SlaveArm_Equipment::CallFunc_GetGameInstanceSubsystem_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_ExecuteUbergraph_UIW_SlaveArm_Equipment, K2Node_DynamicCast_AsLPCController) == 0x0000E8, "Member 'UIW_SlaveArm_Equipment_C_ExecuteUbergraph_UIW_SlaveArm_Equipment::K2Node_DynamicCast_AsLPCController' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_ExecuteUbergraph_UIW_SlaveArm_Equipment, K2Node_DynamicCast_bSuccess) == 0x0000F0, "Member 'UIW_SlaveArm_Equipment_C_ExecuteUbergraph_UIW_SlaveArm_Equipment::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_ExecuteUbergraph_UIW_SlaveArm_Equipment, K2Node_ComponentBoundEvent_LItem_1) == 0x0000F8, "Member 'UIW_SlaveArm_Equipment_C_ExecuteUbergraph_UIW_SlaveArm_Equipment::K2Node_ComponentBoundEvent_LItem_1' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_ExecuteUbergraph_UIW_SlaveArm_Equipment, K2Node_ComponentBoundEvent_LItem) == 0x000100, "Member 'UIW_SlaveArm_Equipment_C_ExecuteUbergraph_UIW_SlaveArm_Equipment::K2Node_ComponentBoundEvent_LItem' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_ExecuteUbergraph_UIW_SlaveArm_Equipment, K2Node_ComponentBoundEvent_Item) == 0x000108, "Member 'UIW_SlaveArm_Equipment_C_ExecuteUbergraph_UIW_SlaveArm_Equipment::K2Node_ComponentBoundEvent_Item' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_ExecuteUbergraph_UIW_SlaveArm_Equipment, K2Node_ComponentBoundEvent_bIsSelected) == 0x000110, "Member 'UIW_SlaveArm_Equipment_C_ExecuteUbergraph_UIW_SlaveArm_Equipment::K2Node_ComponentBoundEvent_bIsSelected' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_ExecuteUbergraph_UIW_SlaveArm_Equipment, K2Node_MakeArray_Array) == 0x000118, "Member 'UIW_SlaveArm_Equipment_C_ExecuteUbergraph_UIW_SlaveArm_Equipment::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_ExecuteUbergraph_UIW_SlaveArm_Equipment, K2Node_DynamicCast_AsUIBP_List_Data_Default) == 0x000128, "Member 'UIW_SlaveArm_Equipment_C_ExecuteUbergraph_UIW_SlaveArm_Equipment::K2Node_DynamicCast_AsUIBP_List_Data_Default' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_ExecuteUbergraph_UIW_SlaveArm_Equipment, K2Node_DynamicCast_bSuccess_1) == 0x000130, "Member 'UIW_SlaveArm_Equipment_C_ExecuteUbergraph_UIW_SlaveArm_Equipment::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_ExecuteUbergraph_UIW_SlaveArm_Equipment, K2Node_SwitchName_CmpSuccess) == 0x000131, "Member 'UIW_SlaveArm_Equipment_C_ExecuteUbergraph_UIW_SlaveArm_Equipment::K2Node_SwitchName_CmpSuccess' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_ExecuteUbergraph_UIW_SlaveArm_Equipment, CallFunc_NotEqual_NameName_ReturnValue_1) == 0x000132, "Member 'UIW_SlaveArm_Equipment_C_ExecuteUbergraph_UIW_SlaveArm_Equipment::CallFunc_NotEqual_NameName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_ExecuteUbergraph_UIW_SlaveArm_Equipment, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000133, "Member 'UIW_SlaveArm_Equipment_C_ExecuteUbergraph_UIW_SlaveArm_Equipment::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_ExecuteUbergraph_UIW_SlaveArm_Equipment, CallFunc_IsVisible_ReturnValue) == 0x000134, "Member 'UIW_SlaveArm_Equipment_C_ExecuteUbergraph_UIW_SlaveArm_Equipment::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_ExecuteUbergraph_UIW_SlaveArm_Equipment, CallFunc_BooleanOR_ReturnValue) == 0x000135, "Member 'UIW_SlaveArm_Equipment_C_ExecuteUbergraph_UIW_SlaveArm_Equipment::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function UIW_SlaveArm_Equipment.UIW_SlaveArm_Equipment_C.BndEvt__UIW_SlaveArm_Equipment_List_InvenSlotChangeTab_K2Node_ComponentBoundEvent_12_OnListItemSelectionChangedDynamic__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct UIW_SlaveArm_Equipment_C_BndEvt__UIW_SlaveArm_Equipment_List_InvenSlotChangeTab_K2Node_ComponentBoundEvent_12_OnListItemSelectionChangedDynamic__DelegateSignature final
{
public:
	class UObject*                                Item;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsSelected;                                       // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UIW_SlaveArm_Equipment_C_BndEvt__UIW_SlaveArm_Equipment_List_InvenSlotChangeTab_K2Node_ComponentBoundEvent_12_OnListItemSelectionChangedDynamic__DelegateSignature) == 0x000008, "Wrong alignment on UIW_SlaveArm_Equipment_C_BndEvt__UIW_SlaveArm_Equipment_List_InvenSlotChangeTab_K2Node_ComponentBoundEvent_12_OnListItemSelectionChangedDynamic__DelegateSignature");
static_assert(sizeof(UIW_SlaveArm_Equipment_C_BndEvt__UIW_SlaveArm_Equipment_List_InvenSlotChangeTab_K2Node_ComponentBoundEvent_12_OnListItemSelectionChangedDynamic__DelegateSignature) == 0x000010, "Wrong size on UIW_SlaveArm_Equipment_C_BndEvt__UIW_SlaveArm_Equipment_List_InvenSlotChangeTab_K2Node_ComponentBoundEvent_12_OnListItemSelectionChangedDynamic__DelegateSignature");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_BndEvt__UIW_SlaveArm_Equipment_List_InvenSlotChangeTab_K2Node_ComponentBoundEvent_12_OnListItemSelectionChangedDynamic__DelegateSignature, Item) == 0x000000, "Member 'UIW_SlaveArm_Equipment_C_BndEvt__UIW_SlaveArm_Equipment_List_InvenSlotChangeTab_K2Node_ComponentBoundEvent_12_OnListItemSelectionChangedDynamic__DelegateSignature::Item' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_BndEvt__UIW_SlaveArm_Equipment_List_InvenSlotChangeTab_K2Node_ComponentBoundEvent_12_OnListItemSelectionChangedDynamic__DelegateSignature, bIsSelected) == 0x000008, "Member 'UIW_SlaveArm_Equipment_C_BndEvt__UIW_SlaveArm_Equipment_List_InvenSlotChangeTab_K2Node_ComponentBoundEvent_12_OnListItemSelectionChangedDynamic__DelegateSignature::bIsSelected' has a wrong offset!");

// Function UIW_SlaveArm_Equipment.UIW_SlaveArm_Equipment_C.BndEvt__UIW_SlaveArm_Equipment_Slot_SlaveArm_2_K2Node_ComponentBoundEvent_11_OnActive__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct UIW_SlaveArm_Equipment_C_BndEvt__UIW_SlaveArm_Equipment_Slot_SlaveArm_2_K2Node_ComponentBoundEvent_11_OnActive__DelegateSignature final
{
public:
	class ULItem*                                 LItem;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UIW_SlaveArm_Equipment_C_BndEvt__UIW_SlaveArm_Equipment_Slot_SlaveArm_2_K2Node_ComponentBoundEvent_11_OnActive__DelegateSignature) == 0x000008, "Wrong alignment on UIW_SlaveArm_Equipment_C_BndEvt__UIW_SlaveArm_Equipment_Slot_SlaveArm_2_K2Node_ComponentBoundEvent_11_OnActive__DelegateSignature");
static_assert(sizeof(UIW_SlaveArm_Equipment_C_BndEvt__UIW_SlaveArm_Equipment_Slot_SlaveArm_2_K2Node_ComponentBoundEvent_11_OnActive__DelegateSignature) == 0x000008, "Wrong size on UIW_SlaveArm_Equipment_C_BndEvt__UIW_SlaveArm_Equipment_Slot_SlaveArm_2_K2Node_ComponentBoundEvent_11_OnActive__DelegateSignature");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_BndEvt__UIW_SlaveArm_Equipment_Slot_SlaveArm_2_K2Node_ComponentBoundEvent_11_OnActive__DelegateSignature, LItem) == 0x000000, "Member 'UIW_SlaveArm_Equipment_C_BndEvt__UIW_SlaveArm_Equipment_Slot_SlaveArm_2_K2Node_ComponentBoundEvent_11_OnActive__DelegateSignature::LItem' has a wrong offset!");

// Function UIW_SlaveArm_Equipment.UIW_SlaveArm_Equipment_C.BndEvt__UIW_SlaveArm_Equipment_Slot_SlaveArm_2_K2Node_ComponentBoundEvent_9_OnSelected__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct UIW_SlaveArm_Equipment_C_BndEvt__UIW_SlaveArm_Equipment_Slot_SlaveArm_2_K2Node_ComponentBoundEvent_9_OnSelected__DelegateSignature final
{
public:
	class ULItem*                                 LItem;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UIW_SlaveArm_Equipment_C_BndEvt__UIW_SlaveArm_Equipment_Slot_SlaveArm_2_K2Node_ComponentBoundEvent_9_OnSelected__DelegateSignature) == 0x000008, "Wrong alignment on UIW_SlaveArm_Equipment_C_BndEvt__UIW_SlaveArm_Equipment_Slot_SlaveArm_2_K2Node_ComponentBoundEvent_9_OnSelected__DelegateSignature");
static_assert(sizeof(UIW_SlaveArm_Equipment_C_BndEvt__UIW_SlaveArm_Equipment_Slot_SlaveArm_2_K2Node_ComponentBoundEvent_9_OnSelected__DelegateSignature) == 0x000008, "Wrong size on UIW_SlaveArm_Equipment_C_BndEvt__UIW_SlaveArm_Equipment_Slot_SlaveArm_2_K2Node_ComponentBoundEvent_9_OnSelected__DelegateSignature");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_BndEvt__UIW_SlaveArm_Equipment_Slot_SlaveArm_2_K2Node_ComponentBoundEvent_9_OnSelected__DelegateSignature, LItem) == 0x000000, "Member 'UIW_SlaveArm_Equipment_C_BndEvt__UIW_SlaveArm_Equipment_Slot_SlaveArm_2_K2Node_ComponentBoundEvent_9_OnSelected__DelegateSignature::LItem' has a wrong offset!");

// Function UIW_SlaveArm_Equipment.UIW_SlaveArm_Equipment_C.BndEvt__UIW_SlaveArm_Equipment_Btn_Unequip_K2Node_ComponentBoundEvent_10_OnActive__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct UIW_SlaveArm_Equipment_C_BndEvt__UIW_SlaveArm_Equipment_Btn_Unequip_K2Node_ComponentBoundEvent_10_OnActive__DelegateSignature final
{
public:
	class UUIW_Btn_Key_C*                         BtnKey;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UIW_SlaveArm_Equipment_C_BndEvt__UIW_SlaveArm_Equipment_Btn_Unequip_K2Node_ComponentBoundEvent_10_OnActive__DelegateSignature) == 0x000008, "Wrong alignment on UIW_SlaveArm_Equipment_C_BndEvt__UIW_SlaveArm_Equipment_Btn_Unequip_K2Node_ComponentBoundEvent_10_OnActive__DelegateSignature");
static_assert(sizeof(UIW_SlaveArm_Equipment_C_BndEvt__UIW_SlaveArm_Equipment_Btn_Unequip_K2Node_ComponentBoundEvent_10_OnActive__DelegateSignature) == 0x000008, "Wrong size on UIW_SlaveArm_Equipment_C_BndEvt__UIW_SlaveArm_Equipment_Btn_Unequip_K2Node_ComponentBoundEvent_10_OnActive__DelegateSignature");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_BndEvt__UIW_SlaveArm_Equipment_Btn_Unequip_K2Node_ComponentBoundEvent_10_OnActive__DelegateSignature, BtnKey) == 0x000000, "Member 'UIW_SlaveArm_Equipment_C_BndEvt__UIW_SlaveArm_Equipment_Btn_Unequip_K2Node_ComponentBoundEvent_10_OnActive__DelegateSignature::BtnKey' has a wrong offset!");

// Function UIW_SlaveArm_Equipment.UIW_SlaveArm_Equipment_C.BndEvt__UIW_SlaveArm_Equipment_Btn_Scroll_K2Node_ComponentBoundEvent_8_OnScroll__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct UIW_SlaveArm_Equipment_C_BndEvt__UIW_SlaveArm_Equipment_Btn_Scroll_K2Node_ComponentBoundEvent_8_OnScroll__DelegateSignature final
{
public:
	float                                         Delta;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UIW_SlaveArm_Equipment_C_BndEvt__UIW_SlaveArm_Equipment_Btn_Scroll_K2Node_ComponentBoundEvent_8_OnScroll__DelegateSignature) == 0x000004, "Wrong alignment on UIW_SlaveArm_Equipment_C_BndEvt__UIW_SlaveArm_Equipment_Btn_Scroll_K2Node_ComponentBoundEvent_8_OnScroll__DelegateSignature");
static_assert(sizeof(UIW_SlaveArm_Equipment_C_BndEvt__UIW_SlaveArm_Equipment_Btn_Scroll_K2Node_ComponentBoundEvent_8_OnScroll__DelegateSignature) == 0x000004, "Wrong size on UIW_SlaveArm_Equipment_C_BndEvt__UIW_SlaveArm_Equipment_Btn_Scroll_K2Node_ComponentBoundEvent_8_OnScroll__DelegateSignature");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_BndEvt__UIW_SlaveArm_Equipment_Btn_Scroll_K2Node_ComponentBoundEvent_8_OnScroll__DelegateSignature, Delta) == 0x000000, "Member 'UIW_SlaveArm_Equipment_C_BndEvt__UIW_SlaveArm_Equipment_Btn_Scroll_K2Node_ComponentBoundEvent_8_OnScroll__DelegateSignature::Delta' has a wrong offset!");

// Function UIW_SlaveArm_Equipment.UIW_SlaveArm_Equipment_C.BndEvt__UIW_SlaveArm_Equipment_Slot_SlaveArm_2_K2Node_ComponentBoundEvent_7_OnActive__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct UIW_SlaveArm_Equipment_C_BndEvt__UIW_SlaveArm_Equipment_Slot_SlaveArm_2_K2Node_ComponentBoundEvent_7_OnActive__DelegateSignature final
{
public:
	class ULItem*                                 LItem;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UIW_SlaveArm_Equipment_C_BndEvt__UIW_SlaveArm_Equipment_Slot_SlaveArm_2_K2Node_ComponentBoundEvent_7_OnActive__DelegateSignature) == 0x000008, "Wrong alignment on UIW_SlaveArm_Equipment_C_BndEvt__UIW_SlaveArm_Equipment_Slot_SlaveArm_2_K2Node_ComponentBoundEvent_7_OnActive__DelegateSignature");
static_assert(sizeof(UIW_SlaveArm_Equipment_C_BndEvt__UIW_SlaveArm_Equipment_Slot_SlaveArm_2_K2Node_ComponentBoundEvent_7_OnActive__DelegateSignature) == 0x000008, "Wrong size on UIW_SlaveArm_Equipment_C_BndEvt__UIW_SlaveArm_Equipment_Slot_SlaveArm_2_K2Node_ComponentBoundEvent_7_OnActive__DelegateSignature");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_BndEvt__UIW_SlaveArm_Equipment_Slot_SlaveArm_2_K2Node_ComponentBoundEvent_7_OnActive__DelegateSignature, LItem) == 0x000000, "Member 'UIW_SlaveArm_Equipment_C_BndEvt__UIW_SlaveArm_Equipment_Slot_SlaveArm_2_K2Node_ComponentBoundEvent_7_OnActive__DelegateSignature::LItem' has a wrong offset!");

// Function UIW_SlaveArm_Equipment.UIW_SlaveArm_Equipment_C.BndEvt__UIW_SlaveArm_Equipment_Slot_SlaveArm_1_K2Node_ComponentBoundEvent_6_OnActive__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct UIW_SlaveArm_Equipment_C_BndEvt__UIW_SlaveArm_Equipment_Slot_SlaveArm_1_K2Node_ComponentBoundEvent_6_OnActive__DelegateSignature final
{
public:
	class ULItem*                                 LItem;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UIW_SlaveArm_Equipment_C_BndEvt__UIW_SlaveArm_Equipment_Slot_SlaveArm_1_K2Node_ComponentBoundEvent_6_OnActive__DelegateSignature) == 0x000008, "Wrong alignment on UIW_SlaveArm_Equipment_C_BndEvt__UIW_SlaveArm_Equipment_Slot_SlaveArm_1_K2Node_ComponentBoundEvent_6_OnActive__DelegateSignature");
static_assert(sizeof(UIW_SlaveArm_Equipment_C_BndEvt__UIW_SlaveArm_Equipment_Slot_SlaveArm_1_K2Node_ComponentBoundEvent_6_OnActive__DelegateSignature) == 0x000008, "Wrong size on UIW_SlaveArm_Equipment_C_BndEvt__UIW_SlaveArm_Equipment_Slot_SlaveArm_1_K2Node_ComponentBoundEvent_6_OnActive__DelegateSignature");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_BndEvt__UIW_SlaveArm_Equipment_Slot_SlaveArm_1_K2Node_ComponentBoundEvent_6_OnActive__DelegateSignature, LItem) == 0x000000, "Member 'UIW_SlaveArm_Equipment_C_BndEvt__UIW_SlaveArm_Equipment_Slot_SlaveArm_1_K2Node_ComponentBoundEvent_6_OnActive__DelegateSignature::LItem' has a wrong offset!");

// Function UIW_SlaveArm_Equipment.UIW_SlaveArm_Equipment_C.BndEvt__UIW_SlaveArm_Equipment_Slot_SlaveArm_2_K2Node_ComponentBoundEvent_5_OnSelected__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct UIW_SlaveArm_Equipment_C_BndEvt__UIW_SlaveArm_Equipment_Slot_SlaveArm_2_K2Node_ComponentBoundEvent_5_OnSelected__DelegateSignature final
{
public:
	class ULItem*                                 LItem;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UIW_SlaveArm_Equipment_C_BndEvt__UIW_SlaveArm_Equipment_Slot_SlaveArm_2_K2Node_ComponentBoundEvent_5_OnSelected__DelegateSignature) == 0x000008, "Wrong alignment on UIW_SlaveArm_Equipment_C_BndEvt__UIW_SlaveArm_Equipment_Slot_SlaveArm_2_K2Node_ComponentBoundEvent_5_OnSelected__DelegateSignature");
static_assert(sizeof(UIW_SlaveArm_Equipment_C_BndEvt__UIW_SlaveArm_Equipment_Slot_SlaveArm_2_K2Node_ComponentBoundEvent_5_OnSelected__DelegateSignature) == 0x000008, "Wrong size on UIW_SlaveArm_Equipment_C_BndEvt__UIW_SlaveArm_Equipment_Slot_SlaveArm_2_K2Node_ComponentBoundEvent_5_OnSelected__DelegateSignature");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_BndEvt__UIW_SlaveArm_Equipment_Slot_SlaveArm_2_K2Node_ComponentBoundEvent_5_OnSelected__DelegateSignature, LItem) == 0x000000, "Member 'UIW_SlaveArm_Equipment_C_BndEvt__UIW_SlaveArm_Equipment_Slot_SlaveArm_2_K2Node_ComponentBoundEvent_5_OnSelected__DelegateSignature::LItem' has a wrong offset!");

// Function UIW_SlaveArm_Equipment.UIW_SlaveArm_Equipment_C.BndEvt__UIW_SlaveArm_Equipment_Slot_SlaveArm_1_K2Node_ComponentBoundEvent_4_OnSelected__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct UIW_SlaveArm_Equipment_C_BndEvt__UIW_SlaveArm_Equipment_Slot_SlaveArm_1_K2Node_ComponentBoundEvent_4_OnSelected__DelegateSignature final
{
public:
	class ULItem*                                 LItem;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UIW_SlaveArm_Equipment_C_BndEvt__UIW_SlaveArm_Equipment_Slot_SlaveArm_1_K2Node_ComponentBoundEvent_4_OnSelected__DelegateSignature) == 0x000008, "Wrong alignment on UIW_SlaveArm_Equipment_C_BndEvt__UIW_SlaveArm_Equipment_Slot_SlaveArm_1_K2Node_ComponentBoundEvent_4_OnSelected__DelegateSignature");
static_assert(sizeof(UIW_SlaveArm_Equipment_C_BndEvt__UIW_SlaveArm_Equipment_Slot_SlaveArm_1_K2Node_ComponentBoundEvent_4_OnSelected__DelegateSignature) == 0x000008, "Wrong size on UIW_SlaveArm_Equipment_C_BndEvt__UIW_SlaveArm_Equipment_Slot_SlaveArm_1_K2Node_ComponentBoundEvent_4_OnSelected__DelegateSignature");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_BndEvt__UIW_SlaveArm_Equipment_Slot_SlaveArm_1_K2Node_ComponentBoundEvent_4_OnSelected__DelegateSignature, LItem) == 0x000000, "Member 'UIW_SlaveArm_Equipment_C_BndEvt__UIW_SlaveArm_Equipment_Slot_SlaveArm_1_K2Node_ComponentBoundEvent_4_OnSelected__DelegateSignature::LItem' has a wrong offset!");

// Function UIW_SlaveArm_Equipment.UIW_SlaveArm_Equipment_C.BndEvt__UIW_SlaveArm_Equipment_Btn_Back_K2Node_ComponentBoundEvent_1_OnActive__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct UIW_SlaveArm_Equipment_C_BndEvt__UIW_SlaveArm_Equipment_Btn_Back_K2Node_ComponentBoundEvent_1_OnActive__DelegateSignature final
{
public:
	class UUIW_Btn_Key_C*                         BtnKey;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UIW_SlaveArm_Equipment_C_BndEvt__UIW_SlaveArm_Equipment_Btn_Back_K2Node_ComponentBoundEvent_1_OnActive__DelegateSignature) == 0x000008, "Wrong alignment on UIW_SlaveArm_Equipment_C_BndEvt__UIW_SlaveArm_Equipment_Btn_Back_K2Node_ComponentBoundEvent_1_OnActive__DelegateSignature");
static_assert(sizeof(UIW_SlaveArm_Equipment_C_BndEvt__UIW_SlaveArm_Equipment_Btn_Back_K2Node_ComponentBoundEvent_1_OnActive__DelegateSignature) == 0x000008, "Wrong size on UIW_SlaveArm_Equipment_C_BndEvt__UIW_SlaveArm_Equipment_Btn_Back_K2Node_ComponentBoundEvent_1_OnActive__DelegateSignature");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_BndEvt__UIW_SlaveArm_Equipment_Btn_Back_K2Node_ComponentBoundEvent_1_OnActive__DelegateSignature, BtnKey) == 0x000000, "Member 'UIW_SlaveArm_Equipment_C_BndEvt__UIW_SlaveArm_Equipment_Btn_Back_K2Node_ComponentBoundEvent_1_OnActive__DelegateSignature::BtnKey' has a wrong offset!");

// Function UIW_SlaveArm_Equipment.UIW_SlaveArm_Equipment_C.BndEvt__UIW_SlaveArm_Equipment_Btn_Equip_K2Node_ComponentBoundEvent_0_OnActive__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct UIW_SlaveArm_Equipment_C_BndEvt__UIW_SlaveArm_Equipment_Btn_Equip_K2Node_ComponentBoundEvent_0_OnActive__DelegateSignature final
{
public:
	class UUIW_Btn_Key_C*                         BtnKey;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UIW_SlaveArm_Equipment_C_BndEvt__UIW_SlaveArm_Equipment_Btn_Equip_K2Node_ComponentBoundEvent_0_OnActive__DelegateSignature) == 0x000008, "Wrong alignment on UIW_SlaveArm_Equipment_C_BndEvt__UIW_SlaveArm_Equipment_Btn_Equip_K2Node_ComponentBoundEvent_0_OnActive__DelegateSignature");
static_assert(sizeof(UIW_SlaveArm_Equipment_C_BndEvt__UIW_SlaveArm_Equipment_Btn_Equip_K2Node_ComponentBoundEvent_0_OnActive__DelegateSignature) == 0x000008, "Wrong size on UIW_SlaveArm_Equipment_C_BndEvt__UIW_SlaveArm_Equipment_Btn_Equip_K2Node_ComponentBoundEvent_0_OnActive__DelegateSignature");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_BndEvt__UIW_SlaveArm_Equipment_Btn_Equip_K2Node_ComponentBoundEvent_0_OnActive__DelegateSignature, BtnKey) == 0x000000, "Member 'UIW_SlaveArm_Equipment_C_BndEvt__UIW_SlaveArm_Equipment_Btn_Equip_K2Node_ComponentBoundEvent_0_OnActive__DelegateSignature::BtnKey' has a wrong offset!");

// Function UIW_SlaveArm_Equipment.UIW_SlaveArm_Equipment_C.OnReady
// 0x0648 (0x0648 - 0x0000)
struct UIW_SlaveArm_Equipment_C_OnReady final
{
public:
	TArray<class ULItem*>                         LocalLItems;                                       // 0x0000(0x0010)(Edit, BlueprintVisible)
	class ULItemSystem*                           CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULOptionSystem*                         CallFunc_GetGameInstanceSubsystem_ReturnValue_1;   // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULPlayerEquipment*                      CallFunc_GetPlayerEquipment_ReturnValue;           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetEquipItemSlot_bFound;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLEquipItemSlot                        CallFunc_GetEquipItemSlot_ReturnValue;             // 0x0030(0x0018)(NoDestructor)
	bool                                          CallFunc_IsInvertMove_ReturnValue;                 // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ULItemSystem*                           CallFunc_GetGameInstanceSubsystem_ReturnValue_2;   // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULPlayerInventory*                      CallFunc_GetPlayerInventory_ReturnValue;           // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ULItem*>                         CallFunc_FindUICategoryItems_ReturnValue;          // 0x0060(0x0010)(ReferenceParm)
	class UUIBP_ListData_Default_C*               CallFunc_SpawnObject_ReturnValue;                  // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUIBP_ListData_Default_C*               CallFunc_SpawnObject_ReturnValue_1;                // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable;                                // 0x0088(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUIBP_ListData_Default_C*               CallFunc_SpawnObject_ReturnValue_2;                // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9C[0x4];                                       // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ULItemSystem*                           CallFunc_GetGameInstanceSubsystem_ReturnValue_3;   // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULPlayerEquipment*                      CallFunc_GetPlayerEquipment_ReturnValue_1;         // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetEquipItemSlot_bFound_1;                // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B5[0x3];                                       // 0x00B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLEquipItemSlot                        CallFunc_GetEquipItemSlot_ReturnValue_1;           // 0x00B8(0x0018)(NoDestructor)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ALPCController*                         K2Node_DynamicCast_AsLPCController;                // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E1[0x7];                                       // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FScrollBarStyle                        CallFunc_GetScrollBarStyle_ScrollBarStyle;         // 0x00E8(0x04D0)()
	class FText                                   CallFunc_GetGameStrWithName_ReturnValue;           // 0x05B8(0x0018)()
	class ALPCCharacterBP_StatRoom_C*             CallFunc_GetActorOfClass_ReturnValue;              // 0x05D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ACineCameraActor*>               CallFunc_GetAllActorsOfClassWithTag_OutActors;     // 0x05D8(0x0010)(ReferenceParm)
	class ACineCameraActor*                       CallFunc_Array_Get_Item;                           // 0x05E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(float Delta)>                  K2Node_CreateDelegate_OutputDelegate;              // 0x05F0(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   Temp_name_Variable_1;                              // 0x0600(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ACineCameraActor*>               CallFunc_GetAllActorsOfClassWithTag_OutActors_1;   // 0x0608(0x0010)(ReferenceParm)
	class ACineCameraActor*                       CallFunc_Array_Get_Item_1;                         // 0x0618(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_1;        // 0x0620(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_2;                              // 0x0628(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ACineCameraActor*>               CallFunc_GetAllActorsOfClassWithTag_OutActors_2;   // 0x0630(0x0010)(ReferenceParm)
	class ACineCameraActor*                       CallFunc_Array_Get_Item_2;                         // 0x0640(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UIW_SlaveArm_Equipment_C_OnReady) == 0x000008, "Wrong alignment on UIW_SlaveArm_Equipment_C_OnReady");
static_assert(sizeof(UIW_SlaveArm_Equipment_C_OnReady) == 0x000648, "Wrong size on UIW_SlaveArm_Equipment_C_OnReady");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_OnReady, LocalLItems) == 0x000000, "Member 'UIW_SlaveArm_Equipment_C_OnReady::LocalLItems' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_OnReady, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000010, "Member 'UIW_SlaveArm_Equipment_C_OnReady::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_OnReady, CallFunc_GetGameInstanceSubsystem_ReturnValue_1) == 0x000018, "Member 'UIW_SlaveArm_Equipment_C_OnReady::CallFunc_GetGameInstanceSubsystem_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_OnReady, CallFunc_GetPlayerEquipment_ReturnValue) == 0x000020, "Member 'UIW_SlaveArm_Equipment_C_OnReady::CallFunc_GetPlayerEquipment_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_OnReady, CallFunc_GetEquipItemSlot_bFound) == 0x000028, "Member 'UIW_SlaveArm_Equipment_C_OnReady::CallFunc_GetEquipItemSlot_bFound' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_OnReady, CallFunc_GetEquipItemSlot_ReturnValue) == 0x000030, "Member 'UIW_SlaveArm_Equipment_C_OnReady::CallFunc_GetEquipItemSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_OnReady, CallFunc_IsInvertMove_ReturnValue) == 0x000048, "Member 'UIW_SlaveArm_Equipment_C_OnReady::CallFunc_IsInvertMove_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_OnReady, CallFunc_GetGameInstanceSubsystem_ReturnValue_2) == 0x000050, "Member 'UIW_SlaveArm_Equipment_C_OnReady::CallFunc_GetGameInstanceSubsystem_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_OnReady, CallFunc_GetPlayerInventory_ReturnValue) == 0x000058, "Member 'UIW_SlaveArm_Equipment_C_OnReady::CallFunc_GetPlayerInventory_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_OnReady, CallFunc_FindUICategoryItems_ReturnValue) == 0x000060, "Member 'UIW_SlaveArm_Equipment_C_OnReady::CallFunc_FindUICategoryItems_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_OnReady, CallFunc_SpawnObject_ReturnValue) == 0x000070, "Member 'UIW_SlaveArm_Equipment_C_OnReady::CallFunc_SpawnObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_OnReady, CallFunc_Array_Add_ReturnValue) == 0x000078, "Member 'UIW_SlaveArm_Equipment_C_OnReady::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_OnReady, CallFunc_SpawnObject_ReturnValue_1) == 0x000080, "Member 'UIW_SlaveArm_Equipment_C_OnReady::CallFunc_SpawnObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_OnReady, Temp_name_Variable) == 0x000088, "Member 'UIW_SlaveArm_Equipment_C_OnReady::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_OnReady, CallFunc_SpawnObject_ReturnValue_2) == 0x000090, "Member 'UIW_SlaveArm_Equipment_C_OnReady::CallFunc_SpawnObject_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_OnReady, CallFunc_Array_Add_ReturnValue_1) == 0x000098, "Member 'UIW_SlaveArm_Equipment_C_OnReady::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_OnReady, CallFunc_GetGameInstanceSubsystem_ReturnValue_3) == 0x0000A0, "Member 'UIW_SlaveArm_Equipment_C_OnReady::CallFunc_GetGameInstanceSubsystem_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_OnReady, CallFunc_GetPlayerEquipment_ReturnValue_1) == 0x0000A8, "Member 'UIW_SlaveArm_Equipment_C_OnReady::CallFunc_GetPlayerEquipment_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_OnReady, CallFunc_Array_Add_ReturnValue_2) == 0x0000B0, "Member 'UIW_SlaveArm_Equipment_C_OnReady::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_OnReady, CallFunc_GetEquipItemSlot_bFound_1) == 0x0000B4, "Member 'UIW_SlaveArm_Equipment_C_OnReady::CallFunc_GetEquipItemSlot_bFound_1' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_OnReady, CallFunc_GetEquipItemSlot_ReturnValue_1) == 0x0000B8, "Member 'UIW_SlaveArm_Equipment_C_OnReady::CallFunc_GetEquipItemSlot_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_OnReady, CallFunc_GetPlayerController_ReturnValue) == 0x0000D0, "Member 'UIW_SlaveArm_Equipment_C_OnReady::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_OnReady, K2Node_DynamicCast_AsLPCController) == 0x0000D8, "Member 'UIW_SlaveArm_Equipment_C_OnReady::K2Node_DynamicCast_AsLPCController' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_OnReady, K2Node_DynamicCast_bSuccess) == 0x0000E0, "Member 'UIW_SlaveArm_Equipment_C_OnReady::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_OnReady, CallFunc_GetScrollBarStyle_ScrollBarStyle) == 0x0000E8, "Member 'UIW_SlaveArm_Equipment_C_OnReady::CallFunc_GetScrollBarStyle_ScrollBarStyle' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_OnReady, CallFunc_GetGameStrWithName_ReturnValue) == 0x0005B8, "Member 'UIW_SlaveArm_Equipment_C_OnReady::CallFunc_GetGameStrWithName_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_OnReady, CallFunc_GetActorOfClass_ReturnValue) == 0x0005D0, "Member 'UIW_SlaveArm_Equipment_C_OnReady::CallFunc_GetActorOfClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_OnReady, CallFunc_GetAllActorsOfClassWithTag_OutActors) == 0x0005D8, "Member 'UIW_SlaveArm_Equipment_C_OnReady::CallFunc_GetAllActorsOfClassWithTag_OutActors' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_OnReady, CallFunc_Array_Get_Item) == 0x0005E8, "Member 'UIW_SlaveArm_Equipment_C_OnReady::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_OnReady, K2Node_CreateDelegate_OutputDelegate) == 0x0005F0, "Member 'UIW_SlaveArm_Equipment_C_OnReady::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_OnReady, Temp_name_Variable_1) == 0x000600, "Member 'UIW_SlaveArm_Equipment_C_OnReady::Temp_name_Variable_1' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_OnReady, CallFunc_GetAllActorsOfClassWithTag_OutActors_1) == 0x000608, "Member 'UIW_SlaveArm_Equipment_C_OnReady::CallFunc_GetAllActorsOfClassWithTag_OutActors_1' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_OnReady, CallFunc_Array_Get_Item_1) == 0x000618, "Member 'UIW_SlaveArm_Equipment_C_OnReady::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_OnReady, CallFunc_GetPlayerController_ReturnValue_1) == 0x000620, "Member 'UIW_SlaveArm_Equipment_C_OnReady::CallFunc_GetPlayerController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_OnReady, Temp_name_Variable_2) == 0x000628, "Member 'UIW_SlaveArm_Equipment_C_OnReady::Temp_name_Variable_2' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_OnReady, CallFunc_GetAllActorsOfClassWithTag_OutActors_2) == 0x000630, "Member 'UIW_SlaveArm_Equipment_C_OnReady::CallFunc_GetAllActorsOfClassWithTag_OutActors_2' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_OnReady, CallFunc_Array_Get_Item_2) == 0x000640, "Member 'UIW_SlaveArm_Equipment_C_OnReady::CallFunc_Array_Get_Item_2' has a wrong offset!");

// Function UIW_SlaveArm_Equipment.UIW_SlaveArm_Equipment_C.ChangeInfo_Depth1
// 0x0258 (0x0258 - 0x0000)
struct UIW_SlaveArm_Equipment_C_ChangeInfo_Depth1 final
{
public:
	class UObject*                                Item;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsSlot2Unlock;                                     // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   LocalName;                                         // 0x000C(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ELSecondStat                                  LocalSecondStat;                                   // 0x0014(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FItemSlaveArmInfoPtr                   LocalSlaveArmInfo;                                 // 0x0018(0x0008)(Edit, BlueprintVisible, NoDestructor)
	struct FItemCommonInfoPtr                     LocalCommonInfo;                                   // 0x0020(0x0008)(Edit, BlueprintVisible, NoDestructor)
	TArray<ELFirstStat>                           LocalChaUpPreviewStat;                             // 0x0028(0x0010)(Edit, BlueprintVisible)
	TArray<class ULSlaveArmTree*>                 LocalSlaveArmTree;                                 // 0x0038(0x0010)(Edit, BlueprintVisible)
	TArray<class UUIBP_ListData_OneStat_C*>       LocalOneStatList;                                  // 0x0048(0x0010)(Edit, BlueprintVisible)
	class UUIW_SlaveArm_List_C*                   CallFunc_Create_ReturnValue;                       // 0x0058(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULItem*                                 K2Node_DynamicCast_AsLItem;                        // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ULSlaveArmReinforcementSystem*          CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ULSlaveArmTree*                         CallFunc_Array_Get_Item;                           // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_GetLocalTextItemNameLocalize_ReturnValue; // 0x0090(0x0018)()
	class FText                                   CallFunc_GetGameStrWithName_ReturnValue;           // 0x00A8(0x0018)()
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C5[0x3];                                       // 0x00C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CC[0x4];                                       // 0x00CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetGameStrWithName_ReturnValue_1;         // 0x00D0(0x0018)()
	class FText                                   CallFunc_GetGameStrWithName_ReturnValue_2;         // 0x00E8(0x0018)()
	class FText                                   CallFunc_GetGameStrWithName_ReturnValue_3;         // 0x0100(0x0018)()
	class FText                                   CallFunc_GetGameStrWithName_ReturnValue_4;         // 0x0118(0x0018)()
	class FText                                   CallFunc_GetGameStrWithName_ReturnValue_5;         // 0x0130(0x0018)()
	class FText                                   CallFunc_GetGameStrWithName_ReturnValue_6;         // 0x0148(0x0018)()
	class FText                                   CallFunc_GetGameStrWithName_ReturnValue_7;         // 0x0160(0x0018)()
	class FText                                   CallFunc_MakeSlaveArmAttackText_Text;              // 0x0178(0x0018)()
	int32                                         CallFunc_MakeSlaveArmAttackText_Value;             // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetCodeName_ReturnValue;                  // 0x0194(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19C[0x4];                                      // 0x019C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ULSlaveArmTree*>                 CallFunc_GetSlaveArmTreeListBySlaveArmCodeName_ReturnValue; // 0x01A0(0x0010)(ReferenceParm)
	ELWeaponCorrectionPhysicalGrade               CallFunc_GetSlaveArmCorrectionGrade_ReturnValue;   // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ELWeaponCorrectionPhysicalGrade               CallFunc_GetSlaveArmCorrectionGrade_ReturnValue_1; // 0x01B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ELWeaponCorrectionPhysicalGrade               CallFunc_GetSlaveArmCorrectionGrade_ReturnValue_2; // 0x01B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B3[0x5];                                      // 0x01B3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FItemSlaveArmInfoPtr                   CallFunc_GetSlaveArmInfo_ReturnValue;              // 0x01B8(0x0008)(NoDestructor)
	struct FItemCommonInfoPtr                     CallFunc_GetCommonInfo_ReturnValue;                // 0x01C0(0x0008)(NoDestructor)
	ELElementDamageType                           CallFunc_GetSlaveArmElementDamage_DamageType;      // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C9[0x3];                                      // 0x01C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetSlaveArmElementDamage_Damage;          // 0x01CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D1[0x3];                                      // 0x01D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetSlavearmPhysicalAttack_ReturnValue;    // 0x01D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D9[0x7];                                      // 0x01D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_MakeSlaveArmAttackText_Text_1;            // 0x01E0(0x0018)()
	int32                                         CallFunc_MakeSlaveArmAttackText_Value_1;           // 0x01F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1FC[0x4];                                      // 0x01FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUIBP_ListData_OneStat_C*               CallFunc_SpawnObject_ReturnValue;                  // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0208(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_20C[0x4];                                      // 0x020C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUIBP_ListData_OneStat_C*               CallFunc_SpawnObject_ReturnValue_1;                // 0x0210(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0218(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetWeight_ReturnValue;                    // 0x021C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUIBP_ListData_OneStat_C*               CallFunc_SpawnObject_ReturnValue_2;                // 0x0220(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_MakeValueText_Text;                       // 0x0228(0x0018)()
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x0240(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetScrollOffsetOfEnd_ReturnValue;         // 0x0244(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0248(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_249[0x7];                                      // 0x0249(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPanelSlot*                             CallFunc_AddChild_ReturnValue;                     // 0x0250(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UIW_SlaveArm_Equipment_C_ChangeInfo_Depth1) == 0x000008, "Wrong alignment on UIW_SlaveArm_Equipment_C_ChangeInfo_Depth1");
static_assert(sizeof(UIW_SlaveArm_Equipment_C_ChangeInfo_Depth1) == 0x000258, "Wrong size on UIW_SlaveArm_Equipment_C_ChangeInfo_Depth1");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_ChangeInfo_Depth1, Item) == 0x000000, "Member 'UIW_SlaveArm_Equipment_C_ChangeInfo_Depth1::Item' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_ChangeInfo_Depth1, IsSlot2Unlock) == 0x000008, "Member 'UIW_SlaveArm_Equipment_C_ChangeInfo_Depth1::IsSlot2Unlock' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_ChangeInfo_Depth1, LocalName) == 0x00000C, "Member 'UIW_SlaveArm_Equipment_C_ChangeInfo_Depth1::LocalName' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_ChangeInfo_Depth1, LocalSecondStat) == 0x000014, "Member 'UIW_SlaveArm_Equipment_C_ChangeInfo_Depth1::LocalSecondStat' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_ChangeInfo_Depth1, LocalSlaveArmInfo) == 0x000018, "Member 'UIW_SlaveArm_Equipment_C_ChangeInfo_Depth1::LocalSlaveArmInfo' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_ChangeInfo_Depth1, LocalCommonInfo) == 0x000020, "Member 'UIW_SlaveArm_Equipment_C_ChangeInfo_Depth1::LocalCommonInfo' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_ChangeInfo_Depth1, LocalChaUpPreviewStat) == 0x000028, "Member 'UIW_SlaveArm_Equipment_C_ChangeInfo_Depth1::LocalChaUpPreviewStat' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_ChangeInfo_Depth1, LocalSlaveArmTree) == 0x000038, "Member 'UIW_SlaveArm_Equipment_C_ChangeInfo_Depth1::LocalSlaveArmTree' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_ChangeInfo_Depth1, LocalOneStatList) == 0x000048, "Member 'UIW_SlaveArm_Equipment_C_ChangeInfo_Depth1::LocalOneStatList' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_ChangeInfo_Depth1, CallFunc_Create_ReturnValue) == 0x000058, "Member 'UIW_SlaveArm_Equipment_C_ChangeInfo_Depth1::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_ChangeInfo_Depth1, K2Node_DynamicCast_AsLItem) == 0x000060, "Member 'UIW_SlaveArm_Equipment_C_ChangeInfo_Depth1::K2Node_DynamicCast_AsLItem' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_ChangeInfo_Depth1, K2Node_DynamicCast_bSuccess) == 0x000068, "Member 'UIW_SlaveArm_Equipment_C_ChangeInfo_Depth1::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_ChangeInfo_Depth1, CallFunc_Array_Length_ReturnValue) == 0x00006C, "Member 'UIW_SlaveArm_Equipment_C_ChangeInfo_Depth1::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_ChangeInfo_Depth1, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000070, "Member 'UIW_SlaveArm_Equipment_C_ChangeInfo_Depth1::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_ChangeInfo_Depth1, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000078, "Member 'UIW_SlaveArm_Equipment_C_ChangeInfo_Depth1::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_ChangeInfo_Depth1, Temp_int_Array_Index_Variable) == 0x000080, "Member 'UIW_SlaveArm_Equipment_C_ChangeInfo_Depth1::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_ChangeInfo_Depth1, CallFunc_Array_Get_Item) == 0x000088, "Member 'UIW_SlaveArm_Equipment_C_ChangeInfo_Depth1::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_ChangeInfo_Depth1, CallFunc_GetLocalTextItemNameLocalize_ReturnValue) == 0x000090, "Member 'UIW_SlaveArm_Equipment_C_ChangeInfo_Depth1::CallFunc_GetLocalTextItemNameLocalize_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_ChangeInfo_Depth1, CallFunc_GetGameStrWithName_ReturnValue) == 0x0000A8, "Member 'UIW_SlaveArm_Equipment_C_ChangeInfo_Depth1::CallFunc_GetGameStrWithName_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_ChangeInfo_Depth1, Temp_int_Loop_Counter_Variable) == 0x0000C0, "Member 'UIW_SlaveArm_Equipment_C_ChangeInfo_Depth1::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_ChangeInfo_Depth1, CallFunc_Less_IntInt_ReturnValue) == 0x0000C4, "Member 'UIW_SlaveArm_Equipment_C_ChangeInfo_Depth1::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_ChangeInfo_Depth1, CallFunc_Add_IntInt_ReturnValue) == 0x0000C8, "Member 'UIW_SlaveArm_Equipment_C_ChangeInfo_Depth1::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_ChangeInfo_Depth1, CallFunc_GetGameStrWithName_ReturnValue_1) == 0x0000D0, "Member 'UIW_SlaveArm_Equipment_C_ChangeInfo_Depth1::CallFunc_GetGameStrWithName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_ChangeInfo_Depth1, CallFunc_GetGameStrWithName_ReturnValue_2) == 0x0000E8, "Member 'UIW_SlaveArm_Equipment_C_ChangeInfo_Depth1::CallFunc_GetGameStrWithName_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_ChangeInfo_Depth1, CallFunc_GetGameStrWithName_ReturnValue_3) == 0x000100, "Member 'UIW_SlaveArm_Equipment_C_ChangeInfo_Depth1::CallFunc_GetGameStrWithName_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_ChangeInfo_Depth1, CallFunc_GetGameStrWithName_ReturnValue_4) == 0x000118, "Member 'UIW_SlaveArm_Equipment_C_ChangeInfo_Depth1::CallFunc_GetGameStrWithName_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_ChangeInfo_Depth1, CallFunc_GetGameStrWithName_ReturnValue_5) == 0x000130, "Member 'UIW_SlaveArm_Equipment_C_ChangeInfo_Depth1::CallFunc_GetGameStrWithName_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_ChangeInfo_Depth1, CallFunc_GetGameStrWithName_ReturnValue_6) == 0x000148, "Member 'UIW_SlaveArm_Equipment_C_ChangeInfo_Depth1::CallFunc_GetGameStrWithName_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_ChangeInfo_Depth1, CallFunc_GetGameStrWithName_ReturnValue_7) == 0x000160, "Member 'UIW_SlaveArm_Equipment_C_ChangeInfo_Depth1::CallFunc_GetGameStrWithName_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_ChangeInfo_Depth1, CallFunc_MakeSlaveArmAttackText_Text) == 0x000178, "Member 'UIW_SlaveArm_Equipment_C_ChangeInfo_Depth1::CallFunc_MakeSlaveArmAttackText_Text' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_ChangeInfo_Depth1, CallFunc_MakeSlaveArmAttackText_Value) == 0x000190, "Member 'UIW_SlaveArm_Equipment_C_ChangeInfo_Depth1::CallFunc_MakeSlaveArmAttackText_Value' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_ChangeInfo_Depth1, CallFunc_GetCodeName_ReturnValue) == 0x000194, "Member 'UIW_SlaveArm_Equipment_C_ChangeInfo_Depth1::CallFunc_GetCodeName_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_ChangeInfo_Depth1, CallFunc_GetSlaveArmTreeListBySlaveArmCodeName_ReturnValue) == 0x0001A0, "Member 'UIW_SlaveArm_Equipment_C_ChangeInfo_Depth1::CallFunc_GetSlaveArmTreeListBySlaveArmCodeName_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_ChangeInfo_Depth1, CallFunc_GetSlaveArmCorrectionGrade_ReturnValue) == 0x0001B0, "Member 'UIW_SlaveArm_Equipment_C_ChangeInfo_Depth1::CallFunc_GetSlaveArmCorrectionGrade_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_ChangeInfo_Depth1, CallFunc_GetSlaveArmCorrectionGrade_ReturnValue_1) == 0x0001B1, "Member 'UIW_SlaveArm_Equipment_C_ChangeInfo_Depth1::CallFunc_GetSlaveArmCorrectionGrade_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_ChangeInfo_Depth1, CallFunc_GetSlaveArmCorrectionGrade_ReturnValue_2) == 0x0001B2, "Member 'UIW_SlaveArm_Equipment_C_ChangeInfo_Depth1::CallFunc_GetSlaveArmCorrectionGrade_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_ChangeInfo_Depth1, CallFunc_GetSlaveArmInfo_ReturnValue) == 0x0001B8, "Member 'UIW_SlaveArm_Equipment_C_ChangeInfo_Depth1::CallFunc_GetSlaveArmInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_ChangeInfo_Depth1, CallFunc_GetCommonInfo_ReturnValue) == 0x0001C0, "Member 'UIW_SlaveArm_Equipment_C_ChangeInfo_Depth1::CallFunc_GetCommonInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_ChangeInfo_Depth1, CallFunc_GetSlaveArmElementDamage_DamageType) == 0x0001C8, "Member 'UIW_SlaveArm_Equipment_C_ChangeInfo_Depth1::CallFunc_GetSlaveArmElementDamage_DamageType' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_ChangeInfo_Depth1, CallFunc_GetSlaveArmElementDamage_Damage) == 0x0001CC, "Member 'UIW_SlaveArm_Equipment_C_ChangeInfo_Depth1::CallFunc_GetSlaveArmElementDamage_Damage' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_ChangeInfo_Depth1, K2Node_SwitchEnum_CmpSuccess) == 0x0001D0, "Member 'UIW_SlaveArm_Equipment_C_ChangeInfo_Depth1::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_ChangeInfo_Depth1, CallFunc_GetSlavearmPhysicalAttack_ReturnValue) == 0x0001D4, "Member 'UIW_SlaveArm_Equipment_C_ChangeInfo_Depth1::CallFunc_GetSlavearmPhysicalAttack_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_ChangeInfo_Depth1, CallFunc_Less_IntInt_ReturnValue_1) == 0x0001D8, "Member 'UIW_SlaveArm_Equipment_C_ChangeInfo_Depth1::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_ChangeInfo_Depth1, CallFunc_MakeSlaveArmAttackText_Text_1) == 0x0001E0, "Member 'UIW_SlaveArm_Equipment_C_ChangeInfo_Depth1::CallFunc_MakeSlaveArmAttackText_Text_1' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_ChangeInfo_Depth1, CallFunc_MakeSlaveArmAttackText_Value_1) == 0x0001F8, "Member 'UIW_SlaveArm_Equipment_C_ChangeInfo_Depth1::CallFunc_MakeSlaveArmAttackText_Value_1' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_ChangeInfo_Depth1, CallFunc_SpawnObject_ReturnValue) == 0x000200, "Member 'UIW_SlaveArm_Equipment_C_ChangeInfo_Depth1::CallFunc_SpawnObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_ChangeInfo_Depth1, CallFunc_Array_Add_ReturnValue) == 0x000208, "Member 'UIW_SlaveArm_Equipment_C_ChangeInfo_Depth1::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_ChangeInfo_Depth1, CallFunc_SpawnObject_ReturnValue_1) == 0x000210, "Member 'UIW_SlaveArm_Equipment_C_ChangeInfo_Depth1::CallFunc_SpawnObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_ChangeInfo_Depth1, CallFunc_Array_Add_ReturnValue_1) == 0x000218, "Member 'UIW_SlaveArm_Equipment_C_ChangeInfo_Depth1::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_ChangeInfo_Depth1, CallFunc_GetWeight_ReturnValue) == 0x00021C, "Member 'UIW_SlaveArm_Equipment_C_ChangeInfo_Depth1::CallFunc_GetWeight_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_ChangeInfo_Depth1, CallFunc_SpawnObject_ReturnValue_2) == 0x000220, "Member 'UIW_SlaveArm_Equipment_C_ChangeInfo_Depth1::CallFunc_SpawnObject_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_ChangeInfo_Depth1, CallFunc_MakeValueText_Text) == 0x000228, "Member 'UIW_SlaveArm_Equipment_C_ChangeInfo_Depth1::CallFunc_MakeValueText_Text' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_ChangeInfo_Depth1, CallFunc_Array_Add_ReturnValue_2) == 0x000240, "Member 'UIW_SlaveArm_Equipment_C_ChangeInfo_Depth1::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_ChangeInfo_Depth1, CallFunc_GetScrollOffsetOfEnd_ReturnValue) == 0x000244, "Member 'UIW_SlaveArm_Equipment_C_ChangeInfo_Depth1::CallFunc_GetScrollOffsetOfEnd_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_ChangeInfo_Depth1, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000248, "Member 'UIW_SlaveArm_Equipment_C_ChangeInfo_Depth1::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_ChangeInfo_Depth1, CallFunc_AddChild_ReturnValue) == 0x000250, "Member 'UIW_SlaveArm_Equipment_C_ChangeInfo_Depth1::CallFunc_AddChild_ReturnValue' has a wrong offset!");

// Function UIW_SlaveArm_Equipment.UIW_SlaveArm_Equipment_C.RequestCloseWindow
// 0x0048 (0x0048 - 0x0000)
struct UIW_SlaveArm_Equipment_C_RequestCloseWindow final
{
public:
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUIW_Main_C*                            CallFunc_GetMainWidget_MainWidget;                 // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ALPCController*                         K2Node_DynamicCast_AsLPCController;                // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULEventDispatcherSystem*                CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue;           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_1;        // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UIW_SlaveArm_Equipment_C_RequestCloseWindow) == 0x000008, "Wrong alignment on UIW_SlaveArm_Equipment_C_RequestCloseWindow");
static_assert(sizeof(UIW_SlaveArm_Equipment_C_RequestCloseWindow) == 0x000048, "Wrong size on UIW_SlaveArm_Equipment_C_RequestCloseWindow");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_RequestCloseWindow, CallFunc_GetPlayerController_ReturnValue) == 0x000000, "Member 'UIW_SlaveArm_Equipment_C_RequestCloseWindow::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_RequestCloseWindow, CallFunc_GetMainWidget_MainWidget) == 0x000008, "Member 'UIW_SlaveArm_Equipment_C_RequestCloseWindow::CallFunc_GetMainWidget_MainWidget' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_RequestCloseWindow, K2Node_DynamicCast_AsLPCController) == 0x000010, "Member 'UIW_SlaveArm_Equipment_C_RequestCloseWindow::K2Node_DynamicCast_AsLPCController' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_RequestCloseWindow, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'UIW_SlaveArm_Equipment_C_RequestCloseWindow::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_RequestCloseWindow, CallFunc_PlayAnimationForward_ReturnValue) == 0x000020, "Member 'UIW_SlaveArm_Equipment_C_RequestCloseWindow::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_RequestCloseWindow, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000028, "Member 'UIW_SlaveArm_Equipment_C_RequestCloseWindow::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_RequestCloseWindow, CallFunc_GetPlayerCharacter_ReturnValue) == 0x000030, "Member 'UIW_SlaveArm_Equipment_C_RequestCloseWindow::CallFunc_GetPlayerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_RequestCloseWindow, CallFunc_GetPlayerController_ReturnValue_1) == 0x000038, "Member 'UIW_SlaveArm_Equipment_C_RequestCloseWindow::CallFunc_GetPlayerController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_RequestCloseWindow, CallFunc_IsValid_ReturnValue) == 0x000040, "Member 'UIW_SlaveArm_Equipment_C_RequestCloseWindow::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function UIW_SlaveArm_Equipment.UIW_SlaveArm_Equipment_C.OnScroll
// 0x0004 (0x0004 - 0x0000)
struct UIW_SlaveArm_Equipment_C_OnScroll final
{
public:
	float                                         Delta;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UIW_SlaveArm_Equipment_C_OnScroll) == 0x000004, "Wrong alignment on UIW_SlaveArm_Equipment_C_OnScroll");
static_assert(sizeof(UIW_SlaveArm_Equipment_C_OnScroll) == 0x000004, "Wrong size on UIW_SlaveArm_Equipment_C_OnScroll");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_OnScroll, Delta) == 0x000000, "Member 'UIW_SlaveArm_Equipment_C_OnScroll::Delta' has a wrong offset!");

// Function UIW_SlaveArm_Equipment.UIW_SlaveArm_Equipment_C.SetCameraRotation
// 0x0048 (0x0048 - 0x0000)
struct UIW_SlaveArm_Equipment_C_SetCameraRotation final
{
public:
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetMousePositionOnViewport_ReturnValue;   // 0x000C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Subtract_Vector2DVector2D_ReturnValue;    // 0x0014(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue;            // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMin_ReturnValue;                         // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue;                         // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0038(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_SetActorRotation_ReturnValue;          // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UIW_SlaveArm_Equipment_C_SetCameraRotation) == 0x000004, "Wrong alignment on UIW_SlaveArm_Equipment_C_SetCameraRotation");
static_assert(sizeof(UIW_SlaveArm_Equipment_C_SetCameraRotation) == 0x000048, "Wrong size on UIW_SlaveArm_Equipment_C_SetCameraRotation");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_SetCameraRotation, CallFunc_BreakRotator_Roll) == 0x000000, "Member 'UIW_SlaveArm_Equipment_C_SetCameraRotation::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_SetCameraRotation, CallFunc_BreakRotator_Pitch) == 0x000004, "Member 'UIW_SlaveArm_Equipment_C_SetCameraRotation::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_SetCameraRotation, CallFunc_BreakRotator_Yaw) == 0x000008, "Member 'UIW_SlaveArm_Equipment_C_SetCameraRotation::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_SetCameraRotation, CallFunc_GetMousePositionOnViewport_ReturnValue) == 0x00000C, "Member 'UIW_SlaveArm_Equipment_C_SetCameraRotation::CallFunc_GetMousePositionOnViewport_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_SetCameraRotation, CallFunc_Subtract_Vector2DVector2D_ReturnValue) == 0x000014, "Member 'UIW_SlaveArm_Equipment_C_SetCameraRotation::CallFunc_Subtract_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_SetCameraRotation, CallFunc_BreakVector2D_X) == 0x00001C, "Member 'UIW_SlaveArm_Equipment_C_SetCameraRotation::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_SetCameraRotation, CallFunc_BreakVector2D_Y) == 0x000020, "Member 'UIW_SlaveArm_Equipment_C_SetCameraRotation::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_SetCameraRotation, CallFunc_Multiply_IntFloat_ReturnValue) == 0x000024, "Member 'UIW_SlaveArm_Equipment_C_SetCameraRotation::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_SetCameraRotation, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000028, "Member 'UIW_SlaveArm_Equipment_C_SetCameraRotation::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_SetCameraRotation, CallFunc_Add_FloatFloat_ReturnValue) == 0x00002C, "Member 'UIW_SlaveArm_Equipment_C_SetCameraRotation::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_SetCameraRotation, CallFunc_FMin_ReturnValue) == 0x000030, "Member 'UIW_SlaveArm_Equipment_C_SetCameraRotation::CallFunc_FMin_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_SetCameraRotation, CallFunc_FMax_ReturnValue) == 0x000034, "Member 'UIW_SlaveArm_Equipment_C_SetCameraRotation::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_SetCameraRotation, CallFunc_MakeRotator_ReturnValue) == 0x000038, "Member 'UIW_SlaveArm_Equipment_C_SetCameraRotation::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_SetCameraRotation, CallFunc_K2_SetActorRotation_ReturnValue) == 0x000044, "Member 'UIW_SlaveArm_Equipment_C_SetCameraRotation::CallFunc_K2_SetActorRotation_ReturnValue' has a wrong offset!");

// Function UIW_SlaveArm_Equipment.UIW_SlaveArm_Equipment_C.SetCameraRotationLeft
// 0x0030 (0x0030 - 0x0000)
struct UIW_SlaveArm_Equipment_C_SetCameraRotationLeft final
{
public:
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0000(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMin_ReturnValue;                         // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0020(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_SetActorRotation_ReturnValue;          // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UIW_SlaveArm_Equipment_C_SetCameraRotationLeft) == 0x000004, "Wrong alignment on UIW_SlaveArm_Equipment_C_SetCameraRotationLeft");
static_assert(sizeof(UIW_SlaveArm_Equipment_C_SetCameraRotationLeft) == 0x000030, "Wrong size on UIW_SlaveArm_Equipment_C_SetCameraRotationLeft");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_SetCameraRotationLeft, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000000, "Member 'UIW_SlaveArm_Equipment_C_SetCameraRotationLeft::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_SetCameraRotationLeft, CallFunc_BreakRotator_Roll) == 0x00000C, "Member 'UIW_SlaveArm_Equipment_C_SetCameraRotationLeft::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_SetCameraRotationLeft, CallFunc_BreakRotator_Pitch) == 0x000010, "Member 'UIW_SlaveArm_Equipment_C_SetCameraRotationLeft::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_SetCameraRotationLeft, CallFunc_BreakRotator_Yaw) == 0x000014, "Member 'UIW_SlaveArm_Equipment_C_SetCameraRotationLeft::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_SetCameraRotationLeft, CallFunc_Add_FloatFloat_ReturnValue) == 0x000018, "Member 'UIW_SlaveArm_Equipment_C_SetCameraRotationLeft::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_SetCameraRotationLeft, CallFunc_FMin_ReturnValue) == 0x00001C, "Member 'UIW_SlaveArm_Equipment_C_SetCameraRotationLeft::CallFunc_FMin_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_SetCameraRotationLeft, CallFunc_MakeRotator_ReturnValue) == 0x000020, "Member 'UIW_SlaveArm_Equipment_C_SetCameraRotationLeft::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_SetCameraRotationLeft, CallFunc_K2_SetActorRotation_ReturnValue) == 0x00002C, "Member 'UIW_SlaveArm_Equipment_C_SetCameraRotationLeft::CallFunc_K2_SetActorRotation_ReturnValue' has a wrong offset!");

// Function UIW_SlaveArm_Equipment.UIW_SlaveArm_Equipment_C.SetCameraRotationRight
// 0x0030 (0x0030 - 0x0000)
struct UIW_SlaveArm_Equipment_C_SetCameraRotationRight final
{
public:
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0000(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue;                         // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0020(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_SetActorRotation_ReturnValue;          // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UIW_SlaveArm_Equipment_C_SetCameraRotationRight) == 0x000004, "Wrong alignment on UIW_SlaveArm_Equipment_C_SetCameraRotationRight");
static_assert(sizeof(UIW_SlaveArm_Equipment_C_SetCameraRotationRight) == 0x000030, "Wrong size on UIW_SlaveArm_Equipment_C_SetCameraRotationRight");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_SetCameraRotationRight, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000000, "Member 'UIW_SlaveArm_Equipment_C_SetCameraRotationRight::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_SetCameraRotationRight, CallFunc_BreakRotator_Roll) == 0x00000C, "Member 'UIW_SlaveArm_Equipment_C_SetCameraRotationRight::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_SetCameraRotationRight, CallFunc_BreakRotator_Pitch) == 0x000010, "Member 'UIW_SlaveArm_Equipment_C_SetCameraRotationRight::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_SetCameraRotationRight, CallFunc_BreakRotator_Yaw) == 0x000014, "Member 'UIW_SlaveArm_Equipment_C_SetCameraRotationRight::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_SetCameraRotationRight, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000018, "Member 'UIW_SlaveArm_Equipment_C_SetCameraRotationRight::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_SetCameraRotationRight, CallFunc_FMax_ReturnValue) == 0x00001C, "Member 'UIW_SlaveArm_Equipment_C_SetCameraRotationRight::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_SetCameraRotationRight, CallFunc_MakeRotator_ReturnValue) == 0x000020, "Member 'UIW_SlaveArm_Equipment_C_SetCameraRotationRight::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_SetCameraRotationRight, CallFunc_K2_SetActorRotation_ReturnValue) == 0x00002C, "Member 'UIW_SlaveArm_Equipment_C_SetCameraRotationRight::CallFunc_K2_SetActorRotation_ReturnValue' has a wrong offset!");

// Function UIW_SlaveArm_Equipment.UIW_SlaveArm_Equipment_C.OnKeyDown
// 0x0210 (0x0210 - 0x0000)
struct UIW_SlaveArm_Equipment_C_OnKeyDown final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FKeyEvent                              InKeyEvent;                                        // 0x0038(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FEventReply                            ReturnValue;                                       // 0x0070(0x00B8)(Parm, OutParm, ReturnParm)
	struct FEventReply                            CallFunc_Unhandled_ReturnValue;                    // 0x0128(0x00B8)()
	struct FKey                                   CallFunc_GetKey_ReturnValue;                       // 0x01E0(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue;            // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue_1;          // 0x01F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1FA[0x6];                                      // 0x01FA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue;                  // 0x0200(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue_1;                // 0x0208(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UIW_SlaveArm_Equipment_C_OnKeyDown) == 0x000008, "Wrong alignment on UIW_SlaveArm_Equipment_C_OnKeyDown");
static_assert(sizeof(UIW_SlaveArm_Equipment_C_OnKeyDown) == 0x000210, "Wrong size on UIW_SlaveArm_Equipment_C_OnKeyDown");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_OnKeyDown, MyGeometry) == 0x000000, "Member 'UIW_SlaveArm_Equipment_C_OnKeyDown::MyGeometry' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_OnKeyDown, InKeyEvent) == 0x000038, "Member 'UIW_SlaveArm_Equipment_C_OnKeyDown::InKeyEvent' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_OnKeyDown, ReturnValue) == 0x000070, "Member 'UIW_SlaveArm_Equipment_C_OnKeyDown::ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_OnKeyDown, CallFunc_Unhandled_ReturnValue) == 0x000128, "Member 'UIW_SlaveArm_Equipment_C_OnKeyDown::CallFunc_Unhandled_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_OnKeyDown, CallFunc_GetKey_ReturnValue) == 0x0001E0, "Member 'UIW_SlaveArm_Equipment_C_OnKeyDown::CallFunc_GetKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_OnKeyDown, CallFunc_EqualEqual_KeyKey_ReturnValue) == 0x0001F8, "Member 'UIW_SlaveArm_Equipment_C_OnKeyDown::CallFunc_EqualEqual_KeyKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_OnKeyDown, CallFunc_EqualEqual_KeyKey_ReturnValue_1) == 0x0001F9, "Member 'UIW_SlaveArm_Equipment_C_OnKeyDown::CallFunc_EqualEqual_KeyKey_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_OnKeyDown, CallFunc_K2_SetTimer_ReturnValue) == 0x000200, "Member 'UIW_SlaveArm_Equipment_C_OnKeyDown::CallFunc_K2_SetTimer_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_OnKeyDown, CallFunc_K2_SetTimer_ReturnValue_1) == 0x000208, "Member 'UIW_SlaveArm_Equipment_C_OnKeyDown::CallFunc_K2_SetTimer_ReturnValue_1' has a wrong offset!");

// Function UIW_SlaveArm_Equipment.UIW_SlaveArm_Equipment_C.OnKeyUp
// 0x01E0 (0x01E0 - 0x0000)
struct UIW_SlaveArm_Equipment_C_OnKeyUp final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FKeyEvent                              InKeyEvent;                                        // 0x0038(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FEventReply                            ReturnValue;                                       // 0x0070(0x00B8)(Parm, OutParm, ReturnParm)
	struct FEventReply                            CallFunc_Unhandled_ReturnValue;                    // 0x0128(0x00B8)()
};
static_assert(alignof(UIW_SlaveArm_Equipment_C_OnKeyUp) == 0x000008, "Wrong alignment on UIW_SlaveArm_Equipment_C_OnKeyUp");
static_assert(sizeof(UIW_SlaveArm_Equipment_C_OnKeyUp) == 0x0001E0, "Wrong size on UIW_SlaveArm_Equipment_C_OnKeyUp");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_OnKeyUp, MyGeometry) == 0x000000, "Member 'UIW_SlaveArm_Equipment_C_OnKeyUp::MyGeometry' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_OnKeyUp, InKeyEvent) == 0x000038, "Member 'UIW_SlaveArm_Equipment_C_OnKeyUp::InKeyEvent' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_OnKeyUp, ReturnValue) == 0x000070, "Member 'UIW_SlaveArm_Equipment_C_OnKeyUp::ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_OnKeyUp, CallFunc_Unhandled_ReturnValue) == 0x000128, "Member 'UIW_SlaveArm_Equipment_C_OnKeyUp::CallFunc_Unhandled_ReturnValue' has a wrong offset!");

// Function UIW_SlaveArm_Equipment.UIW_SlaveArm_Equipment_C.RefreshEquipSlot
// 0x0060 (0x0060 - 0x0000)
struct UIW_SlaveArm_Equipment_C_RefreshEquipSlot final
{
public:
	ELEquipSlotType                               SlotIndex;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable;                                // 0x0004(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ULItemSystem*                           CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULPlayerEquipment*                      CallFunc_GetPlayerEquipment_ReturnValue;           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULItem*                                 CallFunc_GetEquipItem_ReturnValue;                 // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUIBP_ListData_Item_C*                  CallFunc_SpawnObject_ReturnValue;                  // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULItem*                                 CallFunc_GetEquipItem_ReturnValue_1;               // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULItem*                                 CallFunc_GetEquipItem_ReturnValue_2;               // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_1;                              // 0x0040(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUIBP_ListData_Item_C*                  CallFunc_SpawnObject_ReturnValue_1;                // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_2;                              // 0x0050(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUIBP_ListData_Item_C*                  CallFunc_SpawnObject_ReturnValue_2;                // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UIW_SlaveArm_Equipment_C_RefreshEquipSlot) == 0x000008, "Wrong alignment on UIW_SlaveArm_Equipment_C_RefreshEquipSlot");
static_assert(sizeof(UIW_SlaveArm_Equipment_C_RefreshEquipSlot) == 0x000060, "Wrong size on UIW_SlaveArm_Equipment_C_RefreshEquipSlot");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_RefreshEquipSlot, SlotIndex) == 0x000000, "Member 'UIW_SlaveArm_Equipment_C_RefreshEquipSlot::SlotIndex' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_RefreshEquipSlot, Temp_name_Variable) == 0x000004, "Member 'UIW_SlaveArm_Equipment_C_RefreshEquipSlot::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_RefreshEquipSlot, K2Node_SwitchEnum_CmpSuccess) == 0x00000C, "Member 'UIW_SlaveArm_Equipment_C_RefreshEquipSlot::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_RefreshEquipSlot, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000010, "Member 'UIW_SlaveArm_Equipment_C_RefreshEquipSlot::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_RefreshEquipSlot, CallFunc_GetPlayerEquipment_ReturnValue) == 0x000018, "Member 'UIW_SlaveArm_Equipment_C_RefreshEquipSlot::CallFunc_GetPlayerEquipment_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_RefreshEquipSlot, CallFunc_GetEquipItem_ReturnValue) == 0x000020, "Member 'UIW_SlaveArm_Equipment_C_RefreshEquipSlot::CallFunc_GetEquipItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_RefreshEquipSlot, CallFunc_SpawnObject_ReturnValue) == 0x000028, "Member 'UIW_SlaveArm_Equipment_C_RefreshEquipSlot::CallFunc_SpawnObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_RefreshEquipSlot, CallFunc_GetEquipItem_ReturnValue_1) == 0x000030, "Member 'UIW_SlaveArm_Equipment_C_RefreshEquipSlot::CallFunc_GetEquipItem_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_RefreshEquipSlot, CallFunc_GetEquipItem_ReturnValue_2) == 0x000038, "Member 'UIW_SlaveArm_Equipment_C_RefreshEquipSlot::CallFunc_GetEquipItem_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_RefreshEquipSlot, Temp_name_Variable_1) == 0x000040, "Member 'UIW_SlaveArm_Equipment_C_RefreshEquipSlot::Temp_name_Variable_1' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_RefreshEquipSlot, CallFunc_SpawnObject_ReturnValue_1) == 0x000048, "Member 'UIW_SlaveArm_Equipment_C_RefreshEquipSlot::CallFunc_SpawnObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_RefreshEquipSlot, Temp_name_Variable_2) == 0x000050, "Member 'UIW_SlaveArm_Equipment_C_RefreshEquipSlot::Temp_name_Variable_2' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_RefreshEquipSlot, CallFunc_SpawnObject_ReturnValue_2) == 0x000058, "Member 'UIW_SlaveArm_Equipment_C_RefreshEquipSlot::CallFunc_SpawnObject_ReturnValue_2' has a wrong offset!");

// Function UIW_SlaveArm_Equipment.UIW_SlaveArm_Equipment_C.RefreshInvenSlaveArmList
// 0x00A8 (0x00A8 - 0x0000)
struct UIW_SlaveArm_Equipment_C_RefreshInvenSlaveArmList final
{
public:
	int32                                         LocalIndex;                                        // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UUIBP_ListData_Item_C*>          LocalItemData;                                     // 0x0008(0x0010)(Edit, BlueprintVisible)
	TArray<class ULItem*>                         LocalItems;                                        // 0x0018(0x0010)(Edit, BlueprintVisible)
	class ULItem*                                 LocalEquipedItem;                                  // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ULItemSystem*                           CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULPlayerInventory*                      CallFunc_GetPlayerInventory_ReturnValue;           // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ULItem*>                         CallFunc_FindCategoryItems_ReturnValue;            // 0x0050(0x0010)(ReferenceParm)
	class ULItemSystem*                           CallFunc_GetGameInstanceSubsystem_ReturnValue_1;   // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULPlayerEquipment*                      CallFunc_GetPlayerEquipment_ReturnValue;           // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULItem*                                 CallFunc_Array_Get_Item;                           // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULItem*                                 CallFunc_GetEquipItem_ReturnValue;                 // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x3];                                       // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable;                                // 0x0088(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUIBP_ListData_Item_C*                  CallFunc_SpawnObject_ReturnValue;                  // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UIW_SlaveArm_Equipment_C_RefreshInvenSlaveArmList) == 0x000008, "Wrong alignment on UIW_SlaveArm_Equipment_C_RefreshInvenSlaveArmList");
static_assert(sizeof(UIW_SlaveArm_Equipment_C_RefreshInvenSlaveArmList) == 0x0000A8, "Wrong size on UIW_SlaveArm_Equipment_C_RefreshInvenSlaveArmList");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_RefreshInvenSlaveArmList, LocalIndex) == 0x000000, "Member 'UIW_SlaveArm_Equipment_C_RefreshInvenSlaveArmList::LocalIndex' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_RefreshInvenSlaveArmList, LocalItemData) == 0x000008, "Member 'UIW_SlaveArm_Equipment_C_RefreshInvenSlaveArmList::LocalItemData' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_RefreshInvenSlaveArmList, LocalItems) == 0x000018, "Member 'UIW_SlaveArm_Equipment_C_RefreshInvenSlaveArmList::LocalItems' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_RefreshInvenSlaveArmList, LocalEquipedItem) == 0x000028, "Member 'UIW_SlaveArm_Equipment_C_RefreshInvenSlaveArmList::LocalEquipedItem' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_RefreshInvenSlaveArmList, Temp_int_Array_Index_Variable) == 0x000030, "Member 'UIW_SlaveArm_Equipment_C_RefreshInvenSlaveArmList::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_RefreshInvenSlaveArmList, Temp_int_Loop_Counter_Variable) == 0x000034, "Member 'UIW_SlaveArm_Equipment_C_RefreshInvenSlaveArmList::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_RefreshInvenSlaveArmList, CallFunc_Add_IntInt_ReturnValue) == 0x000038, "Member 'UIW_SlaveArm_Equipment_C_RefreshInvenSlaveArmList::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_RefreshInvenSlaveArmList, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000040, "Member 'UIW_SlaveArm_Equipment_C_RefreshInvenSlaveArmList::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_RefreshInvenSlaveArmList, CallFunc_GetPlayerInventory_ReturnValue) == 0x000048, "Member 'UIW_SlaveArm_Equipment_C_RefreshInvenSlaveArmList::CallFunc_GetPlayerInventory_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_RefreshInvenSlaveArmList, CallFunc_FindCategoryItems_ReturnValue) == 0x000050, "Member 'UIW_SlaveArm_Equipment_C_RefreshInvenSlaveArmList::CallFunc_FindCategoryItems_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_RefreshInvenSlaveArmList, CallFunc_GetGameInstanceSubsystem_ReturnValue_1) == 0x000060, "Member 'UIW_SlaveArm_Equipment_C_RefreshInvenSlaveArmList::CallFunc_GetGameInstanceSubsystem_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_RefreshInvenSlaveArmList, CallFunc_GetPlayerEquipment_ReturnValue) == 0x000068, "Member 'UIW_SlaveArm_Equipment_C_RefreshInvenSlaveArmList::CallFunc_GetPlayerEquipment_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_RefreshInvenSlaveArmList, CallFunc_Array_Get_Item) == 0x000070, "Member 'UIW_SlaveArm_Equipment_C_RefreshInvenSlaveArmList::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_RefreshInvenSlaveArmList, CallFunc_GetEquipItem_ReturnValue) == 0x000078, "Member 'UIW_SlaveArm_Equipment_C_RefreshInvenSlaveArmList::CallFunc_GetEquipItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_RefreshInvenSlaveArmList, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000080, "Member 'UIW_SlaveArm_Equipment_C_RefreshInvenSlaveArmList::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_RefreshInvenSlaveArmList, CallFunc_Array_Length_ReturnValue) == 0x000084, "Member 'UIW_SlaveArm_Equipment_C_RefreshInvenSlaveArmList::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_RefreshInvenSlaveArmList, Temp_name_Variable) == 0x000088, "Member 'UIW_SlaveArm_Equipment_C_RefreshInvenSlaveArmList::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_RefreshInvenSlaveArmList, CallFunc_Less_IntInt_ReturnValue) == 0x000090, "Member 'UIW_SlaveArm_Equipment_C_RefreshInvenSlaveArmList::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_RefreshInvenSlaveArmList, CallFunc_SpawnObject_ReturnValue) == 0x000098, "Member 'UIW_SlaveArm_Equipment_C_RefreshInvenSlaveArmList::CallFunc_SpawnObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_RefreshInvenSlaveArmList, CallFunc_Array_Add_ReturnValue) == 0x0000A0, "Member 'UIW_SlaveArm_Equipment_C_RefreshInvenSlaveArmList::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function UIW_SlaveArm_Equipment.UIW_SlaveArm_Equipment_C.SetSelectedSlot
// 0x0078 (0x0078 - 0x0000)
struct UIW_SlaveArm_Equipment_C_SetSelectedSlot final
{
public:
	class ULItem*                                 LItem;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          LocalIsSlot2Unlock;                                // 0x0008(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable;                                // 0x000C(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable_1;                              // 0x0018(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_2;                              // 0x0020(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Can_Unequip_Bool;                         // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetGameStrWithName_ReturnValue;           // 0x0030(0x0018)()
	class ULItemSystem*                           CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULPlayerEquipment*                      CallFunc_GetPlayerEquipment_ReturnValue;           // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetEquipItemSlot_bFound;                  // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLEquipItemSlot                        CallFunc_GetEquipItemSlot_ReturnValue;             // 0x0060(0x0018)(NoDestructor)
};
static_assert(alignof(UIW_SlaveArm_Equipment_C_SetSelectedSlot) == 0x000008, "Wrong alignment on UIW_SlaveArm_Equipment_C_SetSelectedSlot");
static_assert(sizeof(UIW_SlaveArm_Equipment_C_SetSelectedSlot) == 0x000078, "Wrong size on UIW_SlaveArm_Equipment_C_SetSelectedSlot");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_SetSelectedSlot, LItem) == 0x000000, "Member 'UIW_SlaveArm_Equipment_C_SetSelectedSlot::LItem' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_SetSelectedSlot, LocalIsSlot2Unlock) == 0x000008, "Member 'UIW_SlaveArm_Equipment_C_SetSelectedSlot::LocalIsSlot2Unlock' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_SetSelectedSlot, Temp_name_Variable) == 0x00000C, "Member 'UIW_SlaveArm_Equipment_C_SetSelectedSlot::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_SetSelectedSlot, CallFunc_IsValid_ReturnValue) == 0x000014, "Member 'UIW_SlaveArm_Equipment_C_SetSelectedSlot::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_SetSelectedSlot, Temp_name_Variable_1) == 0x000018, "Member 'UIW_SlaveArm_Equipment_C_SetSelectedSlot::Temp_name_Variable_1' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_SetSelectedSlot, Temp_name_Variable_2) == 0x000020, "Member 'UIW_SlaveArm_Equipment_C_SetSelectedSlot::Temp_name_Variable_2' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_SetSelectedSlot, CallFunc_Can_Unequip_Bool) == 0x000028, "Member 'UIW_SlaveArm_Equipment_C_SetSelectedSlot::CallFunc_Can_Unequip_Bool' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_SetSelectedSlot, CallFunc_GetGameStrWithName_ReturnValue) == 0x000030, "Member 'UIW_SlaveArm_Equipment_C_SetSelectedSlot::CallFunc_GetGameStrWithName_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_SetSelectedSlot, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000048, "Member 'UIW_SlaveArm_Equipment_C_SetSelectedSlot::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_SetSelectedSlot, CallFunc_GetPlayerEquipment_ReturnValue) == 0x000050, "Member 'UIW_SlaveArm_Equipment_C_SetSelectedSlot::CallFunc_GetPlayerEquipment_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_SetSelectedSlot, CallFunc_GetEquipItemSlot_bFound) == 0x000058, "Member 'UIW_SlaveArm_Equipment_C_SetSelectedSlot::CallFunc_GetEquipItemSlot_bFound' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_SetSelectedSlot, CallFunc_GetEquipItemSlot_ReturnValue) == 0x000060, "Member 'UIW_SlaveArm_Equipment_C_SetSelectedSlot::CallFunc_GetEquipItemSlot_ReturnValue' has a wrong offset!");

// Function UIW_SlaveArm_Equipment.UIW_SlaveArm_Equipment_C.RefreshCharacterActor
// 0x0038 (0x0038 - 0x0000)
struct UIW_SlaveArm_Equipment_C_RefreshCharacterActor final
{
public:
	int32                                         LocalWeaponIndex;                                  // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ULItemSystem*                           CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULPlayerEquipment*                      CallFunc_GetPlayerEquipment_ReturnValue;           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ULItem*                                 CallFunc_GetEquipItem_ReturnValue;                 // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ULEquipmentComponent*                   CallFunc_GetEquipmentComponentBP_ReturnValue;      // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UIW_SlaveArm_Equipment_C_RefreshCharacterActor) == 0x000008, "Wrong alignment on UIW_SlaveArm_Equipment_C_RefreshCharacterActor");
static_assert(sizeof(UIW_SlaveArm_Equipment_C_RefreshCharacterActor) == 0x000038, "Wrong size on UIW_SlaveArm_Equipment_C_RefreshCharacterActor");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_RefreshCharacterActor, LocalWeaponIndex) == 0x000000, "Member 'UIW_SlaveArm_Equipment_C_RefreshCharacterActor::LocalWeaponIndex' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_RefreshCharacterActor, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000008, "Member 'UIW_SlaveArm_Equipment_C_RefreshCharacterActor::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_RefreshCharacterActor, CallFunc_GetPlayerEquipment_ReturnValue) == 0x000010, "Member 'UIW_SlaveArm_Equipment_C_RefreshCharacterActor::CallFunc_GetPlayerEquipment_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_RefreshCharacterActor, K2Node_SwitchEnum_CmpSuccess) == 0x000018, "Member 'UIW_SlaveArm_Equipment_C_RefreshCharacterActor::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_RefreshCharacterActor, CallFunc_GetEquipItem_ReturnValue) == 0x000020, "Member 'UIW_SlaveArm_Equipment_C_RefreshCharacterActor::CallFunc_GetEquipItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_RefreshCharacterActor, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'UIW_SlaveArm_Equipment_C_RefreshCharacterActor::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_RefreshCharacterActor, CallFunc_GetEquipmentComponentBP_ReturnValue) == 0x000030, "Member 'UIW_SlaveArm_Equipment_C_RefreshCharacterActor::CallFunc_GetEquipmentComponentBP_ReturnValue' has a wrong offset!");

// Function UIW_SlaveArm_Equipment.UIW_SlaveArm_Equipment_C.ActiveItem
// 0x0038 (0x0038 - 0x0000)
struct UIW_SlaveArm_Equipment_C_ActiveItem final
{
public:
	class UObject*                                Item;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ULUISystem*                             CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_GetGameStrWithName_ReturnValue;           // 0x0018(0x0018)()
	bool                                          CallFunc_IsSlotChangePossible_IsAble;              // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UIW_SlaveArm_Equipment_C_ActiveItem) == 0x000008, "Wrong alignment on UIW_SlaveArm_Equipment_C_ActiveItem");
static_assert(sizeof(UIW_SlaveArm_Equipment_C_ActiveItem) == 0x000038, "Wrong size on UIW_SlaveArm_Equipment_C_ActiveItem");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_ActiveItem, Item) == 0x000000, "Member 'UIW_SlaveArm_Equipment_C_ActiveItem::Item' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_ActiveItem, K2Node_SwitchEnum_CmpSuccess) == 0x000008, "Member 'UIW_SlaveArm_Equipment_C_ActiveItem::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_ActiveItem, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000010, "Member 'UIW_SlaveArm_Equipment_C_ActiveItem::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_ActiveItem, CallFunc_GetGameStrWithName_ReturnValue) == 0x000018, "Member 'UIW_SlaveArm_Equipment_C_ActiveItem::CallFunc_GetGameStrWithName_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_ActiveItem, CallFunc_IsSlotChangePossible_IsAble) == 0x000030, "Member 'UIW_SlaveArm_Equipment_C_ActiveItem::CallFunc_IsSlotChangePossible_IsAble' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_ActiveItem, CallFunc_IsVisible_ReturnValue) == 0x000031, "Member 'UIW_SlaveArm_Equipment_C_ActiveItem::CallFunc_IsVisible_ReturnValue' has a wrong offset!");

// Function UIW_SlaveArm_Equipment.UIW_SlaveArm_Equipment_C.EquipItem
// 0x0058 (0x0058 - 0x0000)
struct UIW_SlaveArm_Equipment_C_EquipItem final
{
public:
	ELEquipSlotType                               SlotType;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         LocalSelectedSlotIdx;                              // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULItem*                                 LocalSelectedData;                                 // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ULEquipmentComponent*                   CallFunc_GetEquipmentComponentBP_ReturnValue;      // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULItemSystem*                           CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULPlayerEquipment*                      CallFunc_GetPlayerEquipment_ReturnValue;           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EquipItem_ReturnValue;                    // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLEquipItemSlot                        CallFunc_GetChosenSlaveArmItem_ReturnValue;        // 0x0038(0x0018)(NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UIW_SlaveArm_Equipment_C_EquipItem) == 0x000008, "Wrong alignment on UIW_SlaveArm_Equipment_C_EquipItem");
static_assert(sizeof(UIW_SlaveArm_Equipment_C_EquipItem) == 0x000058, "Wrong size on UIW_SlaveArm_Equipment_C_EquipItem");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_EquipItem, SlotType) == 0x000000, "Member 'UIW_SlaveArm_Equipment_C_EquipItem::SlotType' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_EquipItem, LocalSelectedSlotIdx) == 0x000004, "Member 'UIW_SlaveArm_Equipment_C_EquipItem::LocalSelectedSlotIdx' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_EquipItem, LocalSelectedData) == 0x000008, "Member 'UIW_SlaveArm_Equipment_C_EquipItem::LocalSelectedData' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_EquipItem, K2Node_SwitchEnum_CmpSuccess) == 0x000010, "Member 'UIW_SlaveArm_Equipment_C_EquipItem::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_EquipItem, CallFunc_GetEquipmentComponentBP_ReturnValue) == 0x000018, "Member 'UIW_SlaveArm_Equipment_C_EquipItem::CallFunc_GetEquipmentComponentBP_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_EquipItem, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000020, "Member 'UIW_SlaveArm_Equipment_C_EquipItem::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_EquipItem, CallFunc_GetPlayerEquipment_ReturnValue) == 0x000028, "Member 'UIW_SlaveArm_Equipment_C_EquipItem::CallFunc_GetPlayerEquipment_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_EquipItem, CallFunc_EquipItem_ReturnValue) == 0x000030, "Member 'UIW_SlaveArm_Equipment_C_EquipItem::CallFunc_EquipItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_EquipItem, CallFunc_GetChosenSlaveArmItem_ReturnValue) == 0x000038, "Member 'UIW_SlaveArm_Equipment_C_EquipItem::CallFunc_GetChosenSlaveArmItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_EquipItem, CallFunc_IsValid_ReturnValue) == 0x000050, "Member 'UIW_SlaveArm_Equipment_C_EquipItem::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function UIW_SlaveArm_Equipment.UIW_SlaveArm_Equipment_C.UnEquipItem
// 0x0070 (0x0070 - 0x0000)
struct UIW_SlaveArm_Equipment_C_UnEquipItem final
{
public:
	ELEquipSlotType                               SlotType;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         LocalValidCount;                                   // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetGameStrWithName_ReturnValue;           // 0x0010(0x0018)()
	bool                                          CallFunc_Can_Unequip_Bool;                         // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ULItemSystem*                           CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULPlayerEquipment*                      CallFunc_GetPlayerEquipment_ReturnValue;           // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_GetGameStrWithName_ReturnValue_1;         // 0x0040(0x0018)()
	bool                                          CallFunc_UnEquipItem_ReturnValue;                  // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_UnEquipItem_ReturnValue_1;                // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_UnEquipItem_ReturnValue_2;                // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5B[0x5];                                       // 0x005B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ULUISystem*                             CallFunc_GetGameInstanceSubsystem_ReturnValue_1;   // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULUISystem*                             CallFunc_GetGameInstanceSubsystem_ReturnValue_2;   // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UIW_SlaveArm_Equipment_C_UnEquipItem) == 0x000008, "Wrong alignment on UIW_SlaveArm_Equipment_C_UnEquipItem");
static_assert(sizeof(UIW_SlaveArm_Equipment_C_UnEquipItem) == 0x000070, "Wrong size on UIW_SlaveArm_Equipment_C_UnEquipItem");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_UnEquipItem, SlotType) == 0x000000, "Member 'UIW_SlaveArm_Equipment_C_UnEquipItem::SlotType' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_UnEquipItem, LocalValidCount) == 0x000004, "Member 'UIW_SlaveArm_Equipment_C_UnEquipItem::LocalValidCount' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_UnEquipItem, K2Node_SwitchEnum_CmpSuccess) == 0x000008, "Member 'UIW_SlaveArm_Equipment_C_UnEquipItem::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_UnEquipItem, CallFunc_GetGameStrWithName_ReturnValue) == 0x000010, "Member 'UIW_SlaveArm_Equipment_C_UnEquipItem::CallFunc_GetGameStrWithName_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_UnEquipItem, CallFunc_Can_Unequip_Bool) == 0x000028, "Member 'UIW_SlaveArm_Equipment_C_UnEquipItem::CallFunc_Can_Unequip_Bool' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_UnEquipItem, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000030, "Member 'UIW_SlaveArm_Equipment_C_UnEquipItem::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_UnEquipItem, CallFunc_GetPlayerEquipment_ReturnValue) == 0x000038, "Member 'UIW_SlaveArm_Equipment_C_UnEquipItem::CallFunc_GetPlayerEquipment_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_UnEquipItem, CallFunc_GetGameStrWithName_ReturnValue_1) == 0x000040, "Member 'UIW_SlaveArm_Equipment_C_UnEquipItem::CallFunc_GetGameStrWithName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_UnEquipItem, CallFunc_UnEquipItem_ReturnValue) == 0x000058, "Member 'UIW_SlaveArm_Equipment_C_UnEquipItem::CallFunc_UnEquipItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_UnEquipItem, CallFunc_UnEquipItem_ReturnValue_1) == 0x000059, "Member 'UIW_SlaveArm_Equipment_C_UnEquipItem::CallFunc_UnEquipItem_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_UnEquipItem, CallFunc_UnEquipItem_ReturnValue_2) == 0x00005A, "Member 'UIW_SlaveArm_Equipment_C_UnEquipItem::CallFunc_UnEquipItem_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_UnEquipItem, CallFunc_GetGameInstanceSubsystem_ReturnValue_1) == 0x000060, "Member 'UIW_SlaveArm_Equipment_C_UnEquipItem::CallFunc_GetGameInstanceSubsystem_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_UnEquipItem, CallFunc_GetGameInstanceSubsystem_ReturnValue_2) == 0x000068, "Member 'UIW_SlaveArm_Equipment_C_UnEquipItem::CallFunc_GetGameInstanceSubsystem_ReturnValue_2' has a wrong offset!");

// Function UIW_SlaveArm_Equipment.UIW_SlaveArm_Equipment_C.ShowInvenItemLarge
// 0x0048 (0x0048 - 0x0000)
struct UIW_SlaveArm_Equipment_C_ShowInvenItemLarge final
{
public:
	bool                                          NeedTween;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTweenEase                             K2Node_MakeStruct_TweenEase;                       // 0x0004(0x000C)(NoDestructor)
	struct FTweenEase                             K2Node_MakeStruct_TweenEase_1;                     // 0x0010(0x000C)(NoDestructor)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetGameStrWithName_ReturnValue;           // 0x0020(0x0018)()
	class ULSlaveArmInfo*                         CallFunc_GetSlaveArmInfo_ReturnValue;              // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UIW_SlaveArm_Equipment_C_ShowInvenItemLarge) == 0x000008, "Wrong alignment on UIW_SlaveArm_Equipment_C_ShowInvenItemLarge");
static_assert(sizeof(UIW_SlaveArm_Equipment_C_ShowInvenItemLarge) == 0x000048, "Wrong size on UIW_SlaveArm_Equipment_C_ShowInvenItemLarge");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_ShowInvenItemLarge, NeedTween) == 0x000000, "Member 'UIW_SlaveArm_Equipment_C_ShowInvenItemLarge::NeedTween' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_ShowInvenItemLarge, K2Node_MakeStruct_TweenEase) == 0x000004, "Member 'UIW_SlaveArm_Equipment_C_ShowInvenItemLarge::K2Node_MakeStruct_TweenEase' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_ShowInvenItemLarge, K2Node_MakeStruct_TweenEase_1) == 0x000010, "Member 'UIW_SlaveArm_Equipment_C_ShowInvenItemLarge::K2Node_MakeStruct_TweenEase_1' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_ShowInvenItemLarge, CallFunc_GetGameStrWithName_ReturnValue) == 0x000020, "Member 'UIW_SlaveArm_Equipment_C_ShowInvenItemLarge::CallFunc_GetGameStrWithName_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_ShowInvenItemLarge, CallFunc_GetSlaveArmInfo_ReturnValue) == 0x000038, "Member 'UIW_SlaveArm_Equipment_C_ShowInvenItemLarge::CallFunc_GetSlaveArmInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_ShowInvenItemLarge, CallFunc_IsValid_ReturnValue) == 0x000040, "Member 'UIW_SlaveArm_Equipment_C_ShowInvenItemLarge::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_ShowInvenItemLarge, K2Node_SwitchEnum_CmpSuccess) == 0x000041, "Member 'UIW_SlaveArm_Equipment_C_ShowInvenItemLarge::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function UIW_SlaveArm_Equipment.UIW_SlaveArm_Equipment_C.ShowEquipSlot
// 0x001C (0x001C - 0x0000)
struct UIW_SlaveArm_Equipment_C_ShowEquipSlot final
{
public:
	struct FTweenEase                             K2Node_MakeStruct_TweenEase;                       // 0x0000(0x000C)(NoDestructor)
	struct FTweenEase                             K2Node_MakeStruct_TweenEase_1;                     // 0x000C(0x000C)(NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UIW_SlaveArm_Equipment_C_ShowEquipSlot) == 0x000004, "Wrong alignment on UIW_SlaveArm_Equipment_C_ShowEquipSlot");
static_assert(sizeof(UIW_SlaveArm_Equipment_C_ShowEquipSlot) == 0x00001C, "Wrong size on UIW_SlaveArm_Equipment_C_ShowEquipSlot");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_ShowEquipSlot, K2Node_MakeStruct_TweenEase) == 0x000000, "Member 'UIW_SlaveArm_Equipment_C_ShowEquipSlot::K2Node_MakeStruct_TweenEase' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_ShowEquipSlot, K2Node_MakeStruct_TweenEase_1) == 0x00000C, "Member 'UIW_SlaveArm_Equipment_C_ShowEquipSlot::K2Node_MakeStruct_TweenEase_1' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_ShowEquipSlot, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000018, "Member 'UIW_SlaveArm_Equipment_C_ShowEquipSlot::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_ShowEquipSlot, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000019, "Member 'UIW_SlaveArm_Equipment_C_ShowEquipSlot::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_ShowEquipSlot, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x00001A, "Member 'UIW_SlaveArm_Equipment_C_ShowEquipSlot::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");

// Function UIW_SlaveArm_Equipment.UIW_SlaveArm_Equipment_C.FocusManage
// 0x0300 (0x0300 - 0x0000)
struct UIW_SlaveArm_Equipment_C_FocusManage final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0070)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FEventReply                            ReturnValue;                                       // 0x00A8(0x00B8)(Parm, OutParm, ReturnParm)
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x0160(0x00B8)()
	struct FEventReply                            CallFunc_FocusManage_ReturnValue;                  // 0x0218(0x00B8)()
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x02D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D1[0x7];                                      // 0x02D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                K2Node_DynamicCast_AsWidget;                       // 0x02D8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x02E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E1[0x7];                                      // 0x02E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UListView*                              K2Node_DynamicCast_AsList_View;                    // 0x02E8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x02F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F1[0x7];                                      // 0x02F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_BP_GetSelectedItem_ReturnValue;           // 0x02F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UIW_SlaveArm_Equipment_C_FocusManage) == 0x000008, "Wrong alignment on UIW_SlaveArm_Equipment_C_FocusManage");
static_assert(sizeof(UIW_SlaveArm_Equipment_C_FocusManage) == 0x000300, "Wrong size on UIW_SlaveArm_Equipment_C_FocusManage");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_FocusManage, MyGeometry) == 0x000000, "Member 'UIW_SlaveArm_Equipment_C_FocusManage::MyGeometry' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_FocusManage, MouseEvent) == 0x000038, "Member 'UIW_SlaveArm_Equipment_C_FocusManage::MouseEvent' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_FocusManage, ReturnValue) == 0x0000A8, "Member 'UIW_SlaveArm_Equipment_C_FocusManage::ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_FocusManage, CallFunc_Handled_ReturnValue) == 0x000160, "Member 'UIW_SlaveArm_Equipment_C_FocusManage::CallFunc_Handled_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_FocusManage, CallFunc_FocusManage_ReturnValue) == 0x000218, "Member 'UIW_SlaveArm_Equipment_C_FocusManage::CallFunc_FocusManage_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_FocusManage, CallFunc_IsValid_ReturnValue) == 0x0002D0, "Member 'UIW_SlaveArm_Equipment_C_FocusManage::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_FocusManage, K2Node_DynamicCast_AsWidget) == 0x0002D8, "Member 'UIW_SlaveArm_Equipment_C_FocusManage::K2Node_DynamicCast_AsWidget' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_FocusManage, K2Node_DynamicCast_bSuccess) == 0x0002E0, "Member 'UIW_SlaveArm_Equipment_C_FocusManage::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_FocusManage, K2Node_DynamicCast_AsList_View) == 0x0002E8, "Member 'UIW_SlaveArm_Equipment_C_FocusManage::K2Node_DynamicCast_AsList_View' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_FocusManage, K2Node_DynamicCast_bSuccess_1) == 0x0002F0, "Member 'UIW_SlaveArm_Equipment_C_FocusManage::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_FocusManage, CallFunc_BP_GetSelectedItem_ReturnValue) == 0x0002F8, "Member 'UIW_SlaveArm_Equipment_C_FocusManage::CallFunc_BP_GetSelectedItem_ReturnValue' has a wrong offset!");

// Function UIW_SlaveArm_Equipment.UIW_SlaveArm_Equipment_C.InitWidget
// 0x0060 (0x0060 - 0x0000)
struct UIW_SlaveArm_Equipment_C_InitWidget final
{
public:
	TDelegate<void(class UUIW_Btn_Key_C* BtnKey)> K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(ELEquipSlotType EquipSlot, class ULItem* OldItem, class ULItem* NewItem)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x0010(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(class UUIW_Btn_Key_C* BtnKey)> K2Node_CreateDelegate_OutputDelegate_2;            // 0x0020(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(class UObject* Item)>          K2Node_CreateDelegate_OutputDelegate_3;            // 0x0030(0x0010)(ZeroConstructor, NoDestructor)
	class ULItemSystem*                           CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UObject* Item, bool bIsSelected)> K2Node_CreateDelegate_OutputDelegate_4;            // 0x0048(0x0010)(ZeroConstructor, NoDestructor)
	class ULPlayerEquipment*                      CallFunc_GetPlayerEquipment_ReturnValue;           // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UIW_SlaveArm_Equipment_C_InitWidget) == 0x000008, "Wrong alignment on UIW_SlaveArm_Equipment_C_InitWidget");
static_assert(sizeof(UIW_SlaveArm_Equipment_C_InitWidget) == 0x000060, "Wrong size on UIW_SlaveArm_Equipment_C_InitWidget");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_InitWidget, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'UIW_SlaveArm_Equipment_C_InitWidget::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_InitWidget, K2Node_CreateDelegate_OutputDelegate_1) == 0x000010, "Member 'UIW_SlaveArm_Equipment_C_InitWidget::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_InitWidget, K2Node_CreateDelegate_OutputDelegate_2) == 0x000020, "Member 'UIW_SlaveArm_Equipment_C_InitWidget::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_InitWidget, K2Node_CreateDelegate_OutputDelegate_3) == 0x000030, "Member 'UIW_SlaveArm_Equipment_C_InitWidget::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_InitWidget, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000040, "Member 'UIW_SlaveArm_Equipment_C_InitWidget::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_InitWidget, K2Node_CreateDelegate_OutputDelegate_4) == 0x000048, "Member 'UIW_SlaveArm_Equipment_C_InitWidget::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_InitWidget, CallFunc_GetPlayerEquipment_ReturnValue) == 0x000058, "Member 'UIW_SlaveArm_Equipment_C_InitWidget::CallFunc_GetPlayerEquipment_ReturnValue' has a wrong offset!");

// Function UIW_SlaveArm_Equipment.UIW_SlaveArm_Equipment_C.OnSelectedInvenSlaveArm
// 0x0020 (0x0020 - 0x0000)
struct UIW_SlaveArm_Equipment_C_OnSelectedInvenSlaveArm final
{
public:
	class UObject*                                Item;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsSelected;                                       // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUIBP_ListData_Item_C*                  K2Node_DynamicCast_AsUIBP_List_Data_Item;          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UIW_SlaveArm_Equipment_C_OnSelectedInvenSlaveArm) == 0x000008, "Wrong alignment on UIW_SlaveArm_Equipment_C_OnSelectedInvenSlaveArm");
static_assert(sizeof(UIW_SlaveArm_Equipment_C_OnSelectedInvenSlaveArm) == 0x000020, "Wrong size on UIW_SlaveArm_Equipment_C_OnSelectedInvenSlaveArm");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_OnSelectedInvenSlaveArm, Item) == 0x000000, "Member 'UIW_SlaveArm_Equipment_C_OnSelectedInvenSlaveArm::Item' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_OnSelectedInvenSlaveArm, bIsSelected) == 0x000008, "Member 'UIW_SlaveArm_Equipment_C_OnSelectedInvenSlaveArm::bIsSelected' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_OnSelectedInvenSlaveArm, K2Node_DynamicCast_AsUIBP_List_Data_Item) == 0x000010, "Member 'UIW_SlaveArm_Equipment_C_OnSelectedInvenSlaveArm::K2Node_DynamicCast_AsUIBP_List_Data_Item' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_OnSelectedInvenSlaveArm, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'UIW_SlaveArm_Equipment_C_OnSelectedInvenSlaveArm::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function UIW_SlaveArm_Equipment.UIW_SlaveArm_Equipment_C.SetSelectedInvenSlaveArm
// 0x0080 (0x0080 - 0x0000)
struct UIW_SlaveArm_Equipment_C_SetSelectedInvenSlaveArm final
{
public:
	class ULItem*                                 LItem;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LocalCurPage;                                      // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ULItem*                                 LocalSelectedSlotItem;                             // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          LocalCanUnequip;                                   // 0x0018(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ULItem*                                 LocalEquippedItem;                                 // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              LocalSize;                                         // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              LocalPosition;                                     // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULItemSystem*                           CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable;                                // 0x0040(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULPlayerEquipment*                      CallFunc_GetPlayerEquipment_ReturnValue;           // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_1;                              // 0x0050(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Can_Unequip_Bool;                         // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5A[0x2];                                       // 0x005A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_62[0x6];                                       // 0x0062(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ULItem*                                 CallFunc_GetEquipItem_ReturnValue;                 // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_72[0x2];                                       // 0x0072(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default;                             // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UIW_SlaveArm_Equipment_C_SetSelectedInvenSlaveArm) == 0x000008, "Wrong alignment on UIW_SlaveArm_Equipment_C_SetSelectedInvenSlaveArm");
static_assert(sizeof(UIW_SlaveArm_Equipment_C_SetSelectedInvenSlaveArm) == 0x000080, "Wrong size on UIW_SlaveArm_Equipment_C_SetSelectedInvenSlaveArm");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_SetSelectedInvenSlaveArm, LItem) == 0x000000, "Member 'UIW_SlaveArm_Equipment_C_SetSelectedInvenSlaveArm::LItem' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_SetSelectedInvenSlaveArm, LocalCurPage) == 0x000008, "Member 'UIW_SlaveArm_Equipment_C_SetSelectedInvenSlaveArm::LocalCurPage' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_SetSelectedInvenSlaveArm, LocalSelectedSlotItem) == 0x000010, "Member 'UIW_SlaveArm_Equipment_C_SetSelectedInvenSlaveArm::LocalSelectedSlotItem' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_SetSelectedInvenSlaveArm, LocalCanUnequip) == 0x000018, "Member 'UIW_SlaveArm_Equipment_C_SetSelectedInvenSlaveArm::LocalCanUnequip' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_SetSelectedInvenSlaveArm, LocalEquippedItem) == 0x000020, "Member 'UIW_SlaveArm_Equipment_C_SetSelectedInvenSlaveArm::LocalEquippedItem' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_SetSelectedInvenSlaveArm, LocalSize) == 0x000028, "Member 'UIW_SlaveArm_Equipment_C_SetSelectedInvenSlaveArm::LocalSize' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_SetSelectedInvenSlaveArm, LocalPosition) == 0x000030, "Member 'UIW_SlaveArm_Equipment_C_SetSelectedInvenSlaveArm::LocalPosition' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_SetSelectedInvenSlaveArm, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000038, "Member 'UIW_SlaveArm_Equipment_C_SetSelectedInvenSlaveArm::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_SetSelectedInvenSlaveArm, Temp_name_Variable) == 0x000040, "Member 'UIW_SlaveArm_Equipment_C_SetSelectedInvenSlaveArm::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_SetSelectedInvenSlaveArm, CallFunc_GetPlayerEquipment_ReturnValue) == 0x000048, "Member 'UIW_SlaveArm_Equipment_C_SetSelectedInvenSlaveArm::CallFunc_GetPlayerEquipment_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_SetSelectedInvenSlaveArm, Temp_name_Variable_1) == 0x000050, "Member 'UIW_SlaveArm_Equipment_C_SetSelectedInvenSlaveArm::Temp_name_Variable_1' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_SetSelectedInvenSlaveArm, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000058, "Member 'UIW_SlaveArm_Equipment_C_SetSelectedInvenSlaveArm::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_SetSelectedInvenSlaveArm, CallFunc_Can_Unequip_Bool) == 0x000059, "Member 'UIW_SlaveArm_Equipment_C_SetSelectedInvenSlaveArm::CallFunc_Can_Unequip_Bool' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_SetSelectedInvenSlaveArm, Temp_int_Variable) == 0x00005C, "Member 'UIW_SlaveArm_Equipment_C_SetSelectedInvenSlaveArm::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_SetSelectedInvenSlaveArm, K2Node_SwitchEnum_CmpSuccess) == 0x000060, "Member 'UIW_SlaveArm_Equipment_C_SetSelectedInvenSlaveArm::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_SetSelectedInvenSlaveArm, K2Node_SwitchEnum_CmpSuccess_1) == 0x000061, "Member 'UIW_SlaveArm_Equipment_C_SetSelectedInvenSlaveArm::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_SetSelectedInvenSlaveArm, CallFunc_GetEquipItem_ReturnValue) == 0x000068, "Member 'UIW_SlaveArm_Equipment_C_SetSelectedInvenSlaveArm::CallFunc_GetEquipItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_SetSelectedInvenSlaveArm, Temp_bool_Variable) == 0x000070, "Member 'UIW_SlaveArm_Equipment_C_SetSelectedInvenSlaveArm::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_SetSelectedInvenSlaveArm, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000071, "Member 'UIW_SlaveArm_Equipment_C_SetSelectedInvenSlaveArm::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_SetSelectedInvenSlaveArm, K2Node_Select_Default) == 0x000074, "Member 'UIW_SlaveArm_Equipment_C_SetSelectedInvenSlaveArm::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_SetSelectedInvenSlaveArm, CallFunc_IsValid_ReturnValue) == 0x000078, "Member 'UIW_SlaveArm_Equipment_C_SetSelectedInvenSlaveArm::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function UIW_SlaveArm_Equipment.UIW_SlaveArm_Equipment_C.IsSlotChangePossible
// 0x0040 (0x0040 - 0x0000)
struct UIW_SlaveArm_Equipment_C_IsSlotChangePossible final
{
public:
	bool                                          IsAble;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ULItemSystem*                           CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULPlayerEquipment*                      CallFunc_GetPlayerEquipment_ReturnValue;           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetEquipItemSlot_bFound;                  // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLEquipItemSlot                        CallFunc_GetEquipItemSlot_ReturnValue;             // 0x0020(0x0018)(NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UIW_SlaveArm_Equipment_C_IsSlotChangePossible) == 0x000008, "Wrong alignment on UIW_SlaveArm_Equipment_C_IsSlotChangePossible");
static_assert(sizeof(UIW_SlaveArm_Equipment_C_IsSlotChangePossible) == 0x000040, "Wrong size on UIW_SlaveArm_Equipment_C_IsSlotChangePossible");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_IsSlotChangePossible, IsAble) == 0x000000, "Member 'UIW_SlaveArm_Equipment_C_IsSlotChangePossible::IsAble' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_IsSlotChangePossible, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000008, "Member 'UIW_SlaveArm_Equipment_C_IsSlotChangePossible::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_IsSlotChangePossible, CallFunc_GetPlayerEquipment_ReturnValue) == 0x000010, "Member 'UIW_SlaveArm_Equipment_C_IsSlotChangePossible::CallFunc_GetPlayerEquipment_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_IsSlotChangePossible, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000018, "Member 'UIW_SlaveArm_Equipment_C_IsSlotChangePossible::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_IsSlotChangePossible, CallFunc_GetEquipItemSlot_bFound) == 0x000019, "Member 'UIW_SlaveArm_Equipment_C_IsSlotChangePossible::CallFunc_GetEquipItemSlot_bFound' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_IsSlotChangePossible, CallFunc_GetEquipItemSlot_ReturnValue) == 0x000020, "Member 'UIW_SlaveArm_Equipment_C_IsSlotChangePossible::CallFunc_GetEquipItemSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_IsSlotChangePossible, CallFunc_BooleanOR_ReturnValue) == 0x000038, "Member 'UIW_SlaveArm_Equipment_C_IsSlotChangePossible::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function UIW_SlaveArm_Equipment.UIW_SlaveArm_Equipment_C.ChangeEquipItem
// 0x0028 (0x0028 - 0x0000)
struct UIW_SlaveArm_Equipment_C_ChangeEquipItem final
{
public:
	ELEquipSlotType                               EquipSlot;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ULItem*                                 OldItem;                                           // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULItem*                                 NewItem;                                           // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   LocalCodeName;                                     // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UIW_SlaveArm_Equipment_C_ChangeEquipItem) == 0x000008, "Wrong alignment on UIW_SlaveArm_Equipment_C_ChangeEquipItem");
static_assert(sizeof(UIW_SlaveArm_Equipment_C_ChangeEquipItem) == 0x000028, "Wrong size on UIW_SlaveArm_Equipment_C_ChangeEquipItem");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_ChangeEquipItem, EquipSlot) == 0x000000, "Member 'UIW_SlaveArm_Equipment_C_ChangeEquipItem::EquipSlot' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_ChangeEquipItem, OldItem) == 0x000008, "Member 'UIW_SlaveArm_Equipment_C_ChangeEquipItem::OldItem' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_ChangeEquipItem, NewItem) == 0x000010, "Member 'UIW_SlaveArm_Equipment_C_ChangeEquipItem::NewItem' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_ChangeEquipItem, LocalCodeName) == 0x000018, "Member 'UIW_SlaveArm_Equipment_C_ChangeEquipItem::LocalCodeName' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_ChangeEquipItem, K2Node_SwitchEnum_CmpSuccess) == 0x000020, "Member 'UIW_SlaveArm_Equipment_C_ChangeEquipItem::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function UIW_SlaveArm_Equipment.UIW_SlaveArm_Equipment_C.OnVisibleChangeInfo
// 0x0001 (0x0001 - 0x0000)
struct UIW_SlaveArm_Equipment_C_OnVisibleChangeInfo final
{
public:
	ESlateVisibility                              InVisibility;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UIW_SlaveArm_Equipment_C_OnVisibleChangeInfo) == 0x000001, "Wrong alignment on UIW_SlaveArm_Equipment_C_OnVisibleChangeInfo");
static_assert(sizeof(UIW_SlaveArm_Equipment_C_OnVisibleChangeInfo) == 0x000001, "Wrong size on UIW_SlaveArm_Equipment_C_OnVisibleChangeInfo");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_OnVisibleChangeInfo, InVisibility) == 0x000000, "Member 'UIW_SlaveArm_Equipment_C_OnVisibleChangeInfo::InVisibility' has a wrong offset!");

// Function UIW_SlaveArm_Equipment.UIW_SlaveArm_Equipment_C.CallbackContextMenu
// 0x000C (0x000C - 0x0000)
struct UIW_SlaveArm_Equipment_C_CallbackContextMenu final
{
public:
	class FName                                   EventName;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchName_CmpSuccess;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UIW_SlaveArm_Equipment_C_CallbackContextMenu) == 0x000004, "Wrong alignment on UIW_SlaveArm_Equipment_C_CallbackContextMenu");
static_assert(sizeof(UIW_SlaveArm_Equipment_C_CallbackContextMenu) == 0x00000C, "Wrong size on UIW_SlaveArm_Equipment_C_CallbackContextMenu");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_CallbackContextMenu, EventName) == 0x000000, "Member 'UIW_SlaveArm_Equipment_C_CallbackContextMenu::EventName' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_CallbackContextMenu, K2Node_SwitchName_CmpSuccess) == 0x000008, "Member 'UIW_SlaveArm_Equipment_C_CallbackContextMenu::K2Node_SwitchName_CmpSuccess' has a wrong offset!");

// Function UIW_SlaveArm_Equipment.UIW_SlaveArm_Equipment_C.NavToTop
// 0x0020 (0x0020 - 0x0000)
struct UIW_SlaveArm_Equipment_C_NavToTop final
{
public:
	EUINavigation                                 Navigation_0;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_BP_GetSelectedItem_ReturnValue;           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetIndexForItem_ReturnValue;              // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Percent_IntInt_ReturnValue;               // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UIW_SlaveArm_Equipment_C_NavToTop) == 0x000008, "Wrong alignment on UIW_SlaveArm_Equipment_C_NavToTop");
static_assert(sizeof(UIW_SlaveArm_Equipment_C_NavToTop) == 0x000020, "Wrong size on UIW_SlaveArm_Equipment_C_NavToTop");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_NavToTop, Navigation_0) == 0x000000, "Member 'UIW_SlaveArm_Equipment_C_NavToTop::Navigation_0' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_NavToTop, ReturnValue) == 0x000008, "Member 'UIW_SlaveArm_Equipment_C_NavToTop::ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_NavToTop, CallFunc_BP_GetSelectedItem_ReturnValue) == 0x000010, "Member 'UIW_SlaveArm_Equipment_C_NavToTop::CallFunc_BP_GetSelectedItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_NavToTop, CallFunc_GetIndexForItem_ReturnValue) == 0x000018, "Member 'UIW_SlaveArm_Equipment_C_NavToTop::CallFunc_GetIndexForItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_NavToTop, CallFunc_Percent_IntInt_ReturnValue) == 0x00001C, "Member 'UIW_SlaveArm_Equipment_C_NavToTop::CallFunc_Percent_IntInt_ReturnValue' has a wrong offset!");

// Function UIW_SlaveArm_Equipment.UIW_SlaveArm_Equipment_C.NavToBottom
// 0x0078 (0x0078 - 0x0000)
struct UIW_SlaveArm_Equipment_C_NavToBottom final
{
public:
	EUINavigation                                 Navigation_0;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_BP_GetSelectedItem_ReturnValue;           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNumItems_ReturnValue;                  // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetIndexForItem_ReturnValue;              // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Percent_IntInt_ReturnValue;               // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_2;            // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_3;            // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_4;            // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default;                             // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default_1;                           // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_5;            // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_65[0x3];                                       // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_6;            // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6D[0x3];                                       // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default_2;                           // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UIW_SlaveArm_Equipment_C_NavToBottom) == 0x000008, "Wrong alignment on UIW_SlaveArm_Equipment_C_NavToBottom");
static_assert(sizeof(UIW_SlaveArm_Equipment_C_NavToBottom) == 0x000078, "Wrong size on UIW_SlaveArm_Equipment_C_NavToBottom");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_NavToBottom, Navigation_0) == 0x000000, "Member 'UIW_SlaveArm_Equipment_C_NavToBottom::Navigation_0' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_NavToBottom, ReturnValue) == 0x000008, "Member 'UIW_SlaveArm_Equipment_C_NavToBottom::ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_NavToBottom, Temp_int_Variable) == 0x000010, "Member 'UIW_SlaveArm_Equipment_C_NavToBottom::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_NavToBottom, Temp_bool_Variable) == 0x000014, "Member 'UIW_SlaveArm_Equipment_C_NavToBottom::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_NavToBottom, CallFunc_Subtract_IntInt_ReturnValue) == 0x000018, "Member 'UIW_SlaveArm_Equipment_C_NavToBottom::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_NavToBottom, CallFunc_BP_GetSelectedItem_ReturnValue) == 0x000020, "Member 'UIW_SlaveArm_Equipment_C_NavToBottom::CallFunc_BP_GetSelectedItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_NavToBottom, CallFunc_GetNumItems_ReturnValue) == 0x000028, "Member 'UIW_SlaveArm_Equipment_C_NavToBottom::CallFunc_GetNumItems_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_NavToBottom, CallFunc_GetIndexForItem_ReturnValue) == 0x00002C, "Member 'UIW_SlaveArm_Equipment_C_NavToBottom::CallFunc_GetIndexForItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_NavToBottom, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000030, "Member 'UIW_SlaveArm_Equipment_C_NavToBottom::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_NavToBottom, CallFunc_Add_IntInt_ReturnValue) == 0x000034, "Member 'UIW_SlaveArm_Equipment_C_NavToBottom::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_NavToBottom, CallFunc_Percent_IntInt_ReturnValue) == 0x000038, "Member 'UIW_SlaveArm_Equipment_C_NavToBottom::CallFunc_Percent_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_NavToBottom, CallFunc_Subtract_IntInt_ReturnValue_2) == 0x00003C, "Member 'UIW_SlaveArm_Equipment_C_NavToBottom::CallFunc_Subtract_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_NavToBottom, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000040, "Member 'UIW_SlaveArm_Equipment_C_NavToBottom::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_NavToBottom, CallFunc_Subtract_IntInt_ReturnValue_3) == 0x000044, "Member 'UIW_SlaveArm_Equipment_C_NavToBottom::CallFunc_Subtract_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_NavToBottom, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000048, "Member 'UIW_SlaveArm_Equipment_C_NavToBottom::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_NavToBottom, CallFunc_Subtract_IntInt_ReturnValue_4) == 0x00004C, "Member 'UIW_SlaveArm_Equipment_C_NavToBottom::CallFunc_Subtract_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_NavToBottom, Temp_bool_Variable_1) == 0x000050, "Member 'UIW_SlaveArm_Equipment_C_NavToBottom::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_NavToBottom, K2Node_Select_Default) == 0x000054, "Member 'UIW_SlaveArm_Equipment_C_NavToBottom::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_NavToBottom, CallFunc_Add_IntInt_ReturnValue_1) == 0x000058, "Member 'UIW_SlaveArm_Equipment_C_NavToBottom::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_NavToBottom, K2Node_Select_Default_1) == 0x00005C, "Member 'UIW_SlaveArm_Equipment_C_NavToBottom::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_NavToBottom, CallFunc_Subtract_IntInt_ReturnValue_5) == 0x000060, "Member 'UIW_SlaveArm_Equipment_C_NavToBottom::CallFunc_Subtract_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_NavToBottom, CallFunc_Less_IntInt_ReturnValue) == 0x000064, "Member 'UIW_SlaveArm_Equipment_C_NavToBottom::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_NavToBottom, CallFunc_Subtract_IntInt_ReturnValue_6) == 0x000068, "Member 'UIW_SlaveArm_Equipment_C_NavToBottom::CallFunc_Subtract_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_NavToBottom, Temp_bool_Variable_2) == 0x00006C, "Member 'UIW_SlaveArm_Equipment_C_NavToBottom::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_NavToBottom, K2Node_Select_Default_2) == 0x000070, "Member 'UIW_SlaveArm_Equipment_C_NavToBottom::K2Node_Select_Default_2' has a wrong offset!");

// Function UIW_SlaveArm_Equipment.UIW_SlaveArm_Equipment_C.NavToArm3
// 0x0018 (0x0018 - 0x0000)
struct UIW_SlaveArm_Equipment_C_NavToArm3 final
{
public:
	EUINavigation                                 Navigation_0;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UIW_SlaveArm_Equipment_C_NavToArm3) == 0x000008, "Wrong alignment on UIW_SlaveArm_Equipment_C_NavToArm3");
static_assert(sizeof(UIW_SlaveArm_Equipment_C_NavToArm3) == 0x000018, "Wrong size on UIW_SlaveArm_Equipment_C_NavToArm3");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_NavToArm3, Navigation_0) == 0x000000, "Member 'UIW_SlaveArm_Equipment_C_NavToArm3::Navigation_0' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_NavToArm3, ReturnValue) == 0x000008, "Member 'UIW_SlaveArm_Equipment_C_NavToArm3::ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_NavToArm3, CallFunc_IsVisible_ReturnValue) == 0x000010, "Member 'UIW_SlaveArm_Equipment_C_NavToArm3::CallFunc_IsVisible_ReturnValue' has a wrong offset!");

// Function UIW_SlaveArm_Equipment.UIW_SlaveArm_Equipment_C.SetFocusValidSlot
// 0x0018 (0x0018 - 0x0000)
struct UIW_SlaveArm_Equipment_C_SetFocusValidSlot final
{
public:
	class UUIW_Slot_Large_C*                      UnequipSlot;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_1;    // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_2;    // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UIW_SlaveArm_Equipment_C_SetFocusValidSlot) == 0x000008, "Wrong alignment on UIW_SlaveArm_Equipment_C_SetFocusValidSlot");
static_assert(sizeof(UIW_SlaveArm_Equipment_C_SetFocusValidSlot) == 0x000018, "Wrong size on UIW_SlaveArm_Equipment_C_SetFocusValidSlot");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_SetFocusValidSlot, UnequipSlot) == 0x000000, "Member 'UIW_SlaveArm_Equipment_C_SetFocusValidSlot::UnequipSlot' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_SetFocusValidSlot, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'UIW_SlaveArm_Equipment_C_SetFocusValidSlot::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_SetFocusValidSlot, CallFunc_IsValid_ReturnValue_1) == 0x000009, "Member 'UIW_SlaveArm_Equipment_C_SetFocusValidSlot::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_SetFocusValidSlot, CallFunc_IsValid_ReturnValue_2) == 0x00000A, "Member 'UIW_SlaveArm_Equipment_C_SetFocusValidSlot::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_SetFocusValidSlot, CallFunc_IsValid_ReturnValue_3) == 0x00000B, "Member 'UIW_SlaveArm_Equipment_C_SetFocusValidSlot::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_SetFocusValidSlot, CallFunc_IsValid_ReturnValue_4) == 0x00000C, "Member 'UIW_SlaveArm_Equipment_C_SetFocusValidSlot::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_SetFocusValidSlot, CallFunc_IsValid_ReturnValue_5) == 0x00000D, "Member 'UIW_SlaveArm_Equipment_C_SetFocusValidSlot::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_SetFocusValidSlot, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x00000E, "Member 'UIW_SlaveArm_Equipment_C_SetFocusValidSlot::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_SetFocusValidSlot, CallFunc_EqualEqual_ObjectObject_ReturnValue_1) == 0x00000F, "Member 'UIW_SlaveArm_Equipment_C_SetFocusValidSlot::CallFunc_EqualEqual_ObjectObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_SetFocusValidSlot, CallFunc_EqualEqual_ObjectObject_ReturnValue_2) == 0x000010, "Member 'UIW_SlaveArm_Equipment_C_SetFocusValidSlot::CallFunc_EqualEqual_ObjectObject_ReturnValue_2' has a wrong offset!");

// Function UIW_SlaveArm_Equipment.UIW_SlaveArm_Equipment_C.NavToLRLoop
// 0x0058 (0x0058 - 0x0000)
struct UIW_SlaveArm_Equipment_C_NavToLRLoop final
{
public:
	EUINavigation                                 Navigation_0;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LocalIndex;                                        // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LocalDirection;                                    // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B[0x1];                                       // 0x001B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNumItems_ReturnValue;                  // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_BP_GetSelectedItem_ReturnValue;           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetIndexForItem_ReturnValue;              // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Divide_IntInt_ReturnValue;                // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Percent_IntInt_ReturnValue;               // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default;                             // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UIW_SlaveArm_Equipment_C_NavToLRLoop) == 0x000008, "Wrong alignment on UIW_SlaveArm_Equipment_C_NavToLRLoop");
static_assert(sizeof(UIW_SlaveArm_Equipment_C_NavToLRLoop) == 0x000058, "Wrong size on UIW_SlaveArm_Equipment_C_NavToLRLoop");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_NavToLRLoop, Navigation_0) == 0x000000, "Member 'UIW_SlaveArm_Equipment_C_NavToLRLoop::Navigation_0' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_NavToLRLoop, ReturnValue) == 0x000008, "Member 'UIW_SlaveArm_Equipment_C_NavToLRLoop::ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_NavToLRLoop, LocalIndex) == 0x000010, "Member 'UIW_SlaveArm_Equipment_C_NavToLRLoop::LocalIndex' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_NavToLRLoop, LocalDirection) == 0x000014, "Member 'UIW_SlaveArm_Equipment_C_NavToLRLoop::LocalDirection' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_NavToLRLoop, K2Node_SwitchEnum_CmpSuccess) == 0x000018, "Member 'UIW_SlaveArm_Equipment_C_NavToLRLoop::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_NavToLRLoop, K2Node_SwitchEnum_CmpSuccess_1) == 0x000019, "Member 'UIW_SlaveArm_Equipment_C_NavToLRLoop::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_NavToLRLoop, Temp_bool_Variable) == 0x00001A, "Member 'UIW_SlaveArm_Equipment_C_NavToLRLoop::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_NavToLRLoop, CallFunc_Subtract_IntInt_ReturnValue) == 0x00001C, "Member 'UIW_SlaveArm_Equipment_C_NavToLRLoop::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_NavToLRLoop, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000020, "Member 'UIW_SlaveArm_Equipment_C_NavToLRLoop::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_NavToLRLoop, CallFunc_GetNumItems_ReturnValue) == 0x000024, "Member 'UIW_SlaveArm_Equipment_C_NavToLRLoop::CallFunc_GetNumItems_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_NavToLRLoop, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000028, "Member 'UIW_SlaveArm_Equipment_C_NavToLRLoop::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_NavToLRLoop, CallFunc_BP_GetSelectedItem_ReturnValue) == 0x000030, "Member 'UIW_SlaveArm_Equipment_C_NavToLRLoop::CallFunc_BP_GetSelectedItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_NavToLRLoop, CallFunc_GetIndexForItem_ReturnValue) == 0x000038, "Member 'UIW_SlaveArm_Equipment_C_NavToLRLoop::CallFunc_GetIndexForItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_NavToLRLoop, CallFunc_Divide_IntInt_ReturnValue) == 0x00003C, "Member 'UIW_SlaveArm_Equipment_C_NavToLRLoop::CallFunc_Divide_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_NavToLRLoop, CallFunc_Add_IntInt_ReturnValue) == 0x000040, "Member 'UIW_SlaveArm_Equipment_C_NavToLRLoop::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_NavToLRLoop, CallFunc_Multiply_IntInt_ReturnValue) == 0x000044, "Member 'UIW_SlaveArm_Equipment_C_NavToLRLoop::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_NavToLRLoop, CallFunc_Percent_IntInt_ReturnValue) == 0x000048, "Member 'UIW_SlaveArm_Equipment_C_NavToLRLoop::CallFunc_Percent_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_NavToLRLoop, CallFunc_Add_IntInt_ReturnValue_1) == 0x00004C, "Member 'UIW_SlaveArm_Equipment_C_NavToLRLoop::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_NavToLRLoop, CallFunc_Less_IntInt_ReturnValue) == 0x000050, "Member 'UIW_SlaveArm_Equipment_C_NavToLRLoop::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_NavToLRLoop, K2Node_Select_Default) == 0x000054, "Member 'UIW_SlaveArm_Equipment_C_NavToLRLoop::K2Node_Select_Default' has a wrong offset!");

// Function UIW_SlaveArm_Equipment.UIW_SlaveArm_Equipment_C.MoveLeftSlotChangeTab
// 0x0010 (0x0010 - 0x0000)
struct UIW_SlaveArm_Equipment_C_MoveLeftSlotChangeTab final
{
public:
	class UUIW_Btn_Key_C*                         BtnKey;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsRefreshPending_ReturnValue;             // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UIW_SlaveArm_Equipment_C_MoveLeftSlotChangeTab) == 0x000008, "Wrong alignment on UIW_SlaveArm_Equipment_C_MoveLeftSlotChangeTab");
static_assert(sizeof(UIW_SlaveArm_Equipment_C_MoveLeftSlotChangeTab) == 0x000010, "Wrong size on UIW_SlaveArm_Equipment_C_MoveLeftSlotChangeTab");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_MoveLeftSlotChangeTab, BtnKey) == 0x000000, "Member 'UIW_SlaveArm_Equipment_C_MoveLeftSlotChangeTab::BtnKey' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_MoveLeftSlotChangeTab, CallFunc_IsRefreshPending_ReturnValue) == 0x000008, "Member 'UIW_SlaveArm_Equipment_C_MoveLeftSlotChangeTab::CallFunc_IsRefreshPending_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_MoveLeftSlotChangeTab, CallFunc_IsVisible_ReturnValue) == 0x000009, "Member 'UIW_SlaveArm_Equipment_C_MoveLeftSlotChangeTab::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_MoveLeftSlotChangeTab, CallFunc_Not_PreBool_ReturnValue) == 0x00000A, "Member 'UIW_SlaveArm_Equipment_C_MoveLeftSlotChangeTab::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_MoveLeftSlotChangeTab, CallFunc_BooleanAND_ReturnValue) == 0x00000B, "Member 'UIW_SlaveArm_Equipment_C_MoveLeftSlotChangeTab::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function UIW_SlaveArm_Equipment.UIW_SlaveArm_Equipment_C.MoveRightSlotChangeTab
// 0x0010 (0x0010 - 0x0000)
struct UIW_SlaveArm_Equipment_C_MoveRightSlotChangeTab final
{
public:
	class UUIW_Btn_Key_C*                         BtnKey;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsRefreshPending_ReturnValue;             // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UIW_SlaveArm_Equipment_C_MoveRightSlotChangeTab) == 0x000008, "Wrong alignment on UIW_SlaveArm_Equipment_C_MoveRightSlotChangeTab");
static_assert(sizeof(UIW_SlaveArm_Equipment_C_MoveRightSlotChangeTab) == 0x000010, "Wrong size on UIW_SlaveArm_Equipment_C_MoveRightSlotChangeTab");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_MoveRightSlotChangeTab, BtnKey) == 0x000000, "Member 'UIW_SlaveArm_Equipment_C_MoveRightSlotChangeTab::BtnKey' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_MoveRightSlotChangeTab, CallFunc_IsRefreshPending_ReturnValue) == 0x000008, "Member 'UIW_SlaveArm_Equipment_C_MoveRightSlotChangeTab::CallFunc_IsRefreshPending_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_MoveRightSlotChangeTab, CallFunc_IsVisible_ReturnValue) == 0x000009, "Member 'UIW_SlaveArm_Equipment_C_MoveRightSlotChangeTab::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_MoveRightSlotChangeTab, CallFunc_Not_PreBool_ReturnValue) == 0x00000A, "Member 'UIW_SlaveArm_Equipment_C_MoveRightSlotChangeTab::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_MoveRightSlotChangeTab, CallFunc_BooleanAND_ReturnValue) == 0x00000B, "Member 'UIW_SlaveArm_Equipment_C_MoveRightSlotChangeTab::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function UIW_SlaveArm_Equipment.UIW_SlaveArm_Equipment_C.AddEventBinding
// 0x0010 (0x0010 - 0x0000)
struct UIW_SlaveArm_Equipment_C_AddEventBinding final
{
public:
	TDelegate<void(class FName CategoryName)>     K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(UIW_SlaveArm_Equipment_C_AddEventBinding) == 0x000004, "Wrong alignment on UIW_SlaveArm_Equipment_C_AddEventBinding");
static_assert(sizeof(UIW_SlaveArm_Equipment_C_AddEventBinding) == 0x000010, "Wrong size on UIW_SlaveArm_Equipment_C_AddEventBinding");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_AddEventBinding, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'UIW_SlaveArm_Equipment_C_AddEventBinding::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");

// Function UIW_SlaveArm_Equipment.UIW_SlaveArm_Equipment_C.ClearEventBinding
// 0x0010 (0x0010 - 0x0000)
struct UIW_SlaveArm_Equipment_C_ClearEventBinding final
{
public:
	TDelegate<void(class FName CategoryName)>     K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(UIW_SlaveArm_Equipment_C_ClearEventBinding) == 0x000004, "Wrong alignment on UIW_SlaveArm_Equipment_C_ClearEventBinding");
static_assert(sizeof(UIW_SlaveArm_Equipment_C_ClearEventBinding) == 0x000010, "Wrong size on UIW_SlaveArm_Equipment_C_ClearEventBinding");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_ClearEventBinding, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'UIW_SlaveArm_Equipment_C_ClearEventBinding::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");

// Function UIW_SlaveArm_Equipment.UIW_SlaveArm_Equipment_C.OnTweenComplete
// 0x000C (0x000C - 0x0000)
struct UIW_SlaveArm_Equipment_C_OnTweenComplete final
{
public:
	class FName                                   CategoryName;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchName_CmpSuccess;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UIW_SlaveArm_Equipment_C_OnTweenComplete) == 0x000004, "Wrong alignment on UIW_SlaveArm_Equipment_C_OnTweenComplete");
static_assert(sizeof(UIW_SlaveArm_Equipment_C_OnTweenComplete) == 0x00000C, "Wrong size on UIW_SlaveArm_Equipment_C_OnTweenComplete");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_OnTweenComplete, CategoryName) == 0x000000, "Member 'UIW_SlaveArm_Equipment_C_OnTweenComplete::CategoryName' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_OnTweenComplete, K2Node_SwitchName_CmpSuccess) == 0x000008, "Member 'UIW_SlaveArm_Equipment_C_OnTweenComplete::K2Node_SwitchName_CmpSuccess' has a wrong offset!");

// Function UIW_SlaveArm_Equipment.UIW_SlaveArm_Equipment_C.Can Unequip
// 0x0048 (0x0048 - 0x0000)
struct UIW_SlaveArm_Equipment_C_Can_Unequip final
{
public:
	bool                                          NeedItemValidCheck;                                // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ULItem*                                 Item;                                              // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Bool;                                              // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         LocalValidCount;                                   // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_2;                               // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UIW_SlaveArm_Equipment_C_Can_Unequip) == 0x000008, "Wrong alignment on UIW_SlaveArm_Equipment_C_Can_Unequip");
static_assert(sizeof(UIW_SlaveArm_Equipment_C_Can_Unequip) == 0x000048, "Wrong size on UIW_SlaveArm_Equipment_C_Can_Unequip");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_Can_Unequip, NeedItemValidCheck) == 0x000000, "Member 'UIW_SlaveArm_Equipment_C_Can_Unequip::NeedItemValidCheck' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_Can_Unequip, Item) == 0x000008, "Member 'UIW_SlaveArm_Equipment_C_Can_Unequip::Item' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_Can_Unequip, Bool) == 0x000010, "Member 'UIW_SlaveArm_Equipment_C_Can_Unequip::Bool' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_Can_Unequip, LocalValidCount) == 0x000014, "Member 'UIW_SlaveArm_Equipment_C_Can_Unequip::LocalValidCount' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_Can_Unequip, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'UIW_SlaveArm_Equipment_C_Can_Unequip::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_Can_Unequip, Temp_int_Variable) == 0x00001C, "Member 'UIW_SlaveArm_Equipment_C_Can_Unequip::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_Can_Unequip, Temp_int_Variable_1) == 0x000020, "Member 'UIW_SlaveArm_Equipment_C_Can_Unequip::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_Can_Unequip, CallFunc_Greater_IntInt_ReturnValue) == 0x000024, "Member 'UIW_SlaveArm_Equipment_C_Can_Unequip::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_Can_Unequip, Temp_int_Variable_2) == 0x000028, "Member 'UIW_SlaveArm_Equipment_C_Can_Unequip::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_Can_Unequip, CallFunc_IsValid_ReturnValue_1) == 0x00002C, "Member 'UIW_SlaveArm_Equipment_C_Can_Unequip::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_Can_Unequip, CallFunc_Add_IntInt_ReturnValue) == 0x000030, "Member 'UIW_SlaveArm_Equipment_C_Can_Unequip::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_Can_Unequip, CallFunc_IsValid_ReturnValue_2) == 0x000034, "Member 'UIW_SlaveArm_Equipment_C_Can_Unequip::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_Can_Unequip, CallFunc_Add_IntInt_ReturnValue_1) == 0x000038, "Member 'UIW_SlaveArm_Equipment_C_Can_Unequip::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_Can_Unequip, CallFunc_IsValid_ReturnValue_3) == 0x00003C, "Member 'UIW_SlaveArm_Equipment_C_Can_Unequip::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(UIW_SlaveArm_Equipment_C_Can_Unequip, CallFunc_Add_IntInt_ReturnValue_2) == 0x000040, "Member 'UIW_SlaveArm_Equipment_C_Can_Unequip::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");

}


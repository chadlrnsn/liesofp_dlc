#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: LPCComboTableBP

#include "Basic.hpp"

#include "ProjectP_structs.hpp"
#include "ProjectP_classes.hpp"
#include "Engine_structs.hpp"
#include "ProjectPContentInfo_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass LPCComboTableBP.LPCComboTableBP_C
// 0x0030 (0x0118 - 0x00E8)
class ULPCComboTableBP_C final : public ULComboTableBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x00E8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class ALCharacter*                            Cached_Victim;                                     // 0x00F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Cached_FableArts;                                  // 0x00F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Cached_CurrentSkillCodename;                       // 0x0100(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Cached_ConsumeErgo;                                // 0x0108(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   NextBladeSkillNameForDifferentRequireFrenzy;       // 0x010C(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Cached_ComboStep;                                  // 0x0114(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_LPCComboTableBP(int32 EntryPoint);
	void Traverse(class AActor* TargetActor, class FName Command, const struct FVector& Lever, class ULActBase* CurrAction);
	void ResetCombo();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"LPCComboTableBP_C">();
	}
	static class ULPCComboTableBP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ULPCComboTableBP_C>();
	}
};
static_assert(alignof(ULPCComboTableBP_C) == 0x000008, "Wrong alignment on ULPCComboTableBP_C");
static_assert(sizeof(ULPCComboTableBP_C) == 0x000118, "Wrong size on ULPCComboTableBP_C");
static_assert(offsetof(ULPCComboTableBP_C, UberGraphFrame) == 0x0000E8, "Member 'ULPCComboTableBP_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ULPCComboTableBP_C, Cached_Victim) == 0x0000F0, "Member 'ULPCComboTableBP_C::Cached_Victim' has a wrong offset!");
static_assert(offsetof(ULPCComboTableBP_C, Cached_FableArts) == 0x0000F8, "Member 'ULPCComboTableBP_C::Cached_FableArts' has a wrong offset!");
static_assert(offsetof(ULPCComboTableBP_C, Cached_CurrentSkillCodename) == 0x000100, "Member 'ULPCComboTableBP_C::Cached_CurrentSkillCodename' has a wrong offset!");
static_assert(offsetof(ULPCComboTableBP_C, Cached_ConsumeErgo) == 0x000108, "Member 'ULPCComboTableBP_C::Cached_ConsumeErgo' has a wrong offset!");
static_assert(offsetof(ULPCComboTableBP_C, NextBladeSkillNameForDifferentRequireFrenzy) == 0x00010C, "Member 'ULPCComboTableBP_C::NextBladeSkillNameForDifferentRequireFrenzy' has a wrong offset!");
static_assert(offsetof(ULPCComboTableBP_C, Cached_ComboStep) == 0x000114, "Member 'ULPCComboTableBP_C::Cached_ComboStep' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UIW_RecordRemote

#include "Basic.hpp"

#include "ProjectP_classes.hpp"
#include "Engine_structs.hpp"
#include "ProjectPContentInfo_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass UIW_RecordRemote.UIW_RecordRemote_C
// 0x0108 (0x03B0 - 0x02A8)
class UUIW_RecordRemote_C final : public ULWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02A8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Ani_TextMove;                                      // 0x02B0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Ani_Shutdown;                                      // 0x02B8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Ani_ShowSubControl;                                // 0x02C0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UUIW_Btn_Key_C*                         Btn_Next;                                          // 0x02C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUIW_Btn_Key_C*                         Btn_Prev;                                          // 0x02D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUIW_Btn_Key_C*                         Btn_Stop;                                          // 0x02D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUIW_Btn_Key_C*                         Btn_Toggle;                                        // 0x02E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUIW_AlertRecordHumanity_C*             Fx_Gethumanity;                                    // 0x02E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           Group_Btn;                                         // 0x02F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         Group_Time;                                        // 0x02F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Img_Record;                                        // 0x0300(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UProgressBar*                           Progress;                                          // 0x0308(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Text_Name;                                         // 0x0310(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Text_PlayTime;                                     // 0x0318(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Text_Time;                                         // 0x0320(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	bool                                          RecordPlaying;                                     // 0x0328(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_329[0x3];                                      // 0x0329(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   RecordCodeName;                                    // 0x032C(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RecordIndex;                                       // 0x0334(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   RecordLocalizedName;                               // 0x0338(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          SubRecordControlShow;                              // 0x0350(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          RecordPrevTimer;                                   // 0x0351(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsRemoteAnimating;                                 // 0x0352(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_353[0x5];                                      // 0x0353(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           Timer_ShowSubControl;                              // 0x0358(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           Timer_Prev_Block;                                  // 0x0360(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          IsPlayHeadPosition;                                // 0x0368(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsOpenedMenu;                                      // 0x0369(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          InPin;                                             // 0x036A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsLetterPreviewShow;                               // 0x036B(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          LetterPreviewTimer;                                // 0x036C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36D[0x3];                                      // 0x036D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FItemCommonInfo>                RecordList;                                        // 0x0370(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          IsPassedFirst;                                     // 0x0380(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_381[0x7];                                      // 0x0381(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           SpinLPTimer;                                       // 0x0388(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          IsHUDEventOn;                                      // 0x0390(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_391[0x3];                                      // 0x0391(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         RecordPlayPercent;                                 // 0x0394(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   PendingNextCodeName;                               // 0x0398(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SoundMixCount;                                     // 0x03A0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsStoppingByUser;                                  // 0x03A4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsPlaying;                                         // 0x03A5(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A6[0x2];                                      // 0x03A6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   ToggleAction;                                      // 0x03A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_UIW_RecordRemote(int32 EntryPoint);
	void OnRecordStop(bool IsPlay);
	void OnHUDEvent(class FName EventName, bool IsStart);
	void OnVisibilityChange(ESlateVisibility InVisibility);
	void OnSpinLpTimer();
	void OnLetterPreviewTimer();
	void OnLetterPreviewEvent(class ULItem* Item, int32 Count);
	void WidgetAnimationEvt_Ani_ShowSubControl_K2Node_WidgetAnimationEvent_1();
	void WidgetAnimationEvt_Ani_Shutdown_K2Node_WidgetAnimationEvent_0();
	void OnTweenComplete(class FName CategoryName);
	void BndEvt__UIW_HUD_Btn_Stop_K2Node_ComponentBoundEvent_3_OnActive__DelegateSignature(class UUIW_Btn_Key_C* BtnKey);
	void BndEvt__UIW_HUD_Btn_Next_K2Node_ComponentBoundEvent_2_OnActive__DelegateSignature(class UUIW_Btn_Key_C* BtnKey);
	void BndEvt__UIW_HUD_Btn_Prev_K2Node_ComponentBoundEvent_1_OnActive__DelegateSignature(class UUIW_Btn_Key_C* BtnKey);
	void BndEvt__UIW_HUD_Btn_Toggle_K2Node_ComponentBoundEvent_0_OnActive__DelegateSignature(class UUIW_Btn_Key_C* BtnKey);
	void Destruct();
	void Construct();
	void OnNameTextHide();
	void Init();
	void RefreshName(const class FText& LocalizedMusicName, class FName RecordCodeName_0);
	void RefreshTime();
	void RefreshDisc();
	void ShowRecordRemote();
	void HideRecordRemote(bool NeedStopRecord);
	void SubControlAutoHide();
	void Sub_Control_Show(bool IsShow, bool NeedAnimation, bool UISoundPlay);
	void SubControlShowAni(bool Condition);
	void OnPlayTime(const class USoundWave* PlayingSoundWave, const float PlaybackPercent);
	void OnPlayRecord(bool IsPlayStart, class FName RecordCodeName_0);
	void RecordControl(int32 Index_0, int32 AddIndex);
	void SetIsNotPlayHeadPosition();
	void OnGetHumanity();
	void ForceHideSubControl();
	void OnTeleport();
	void ListenPreviewAction();
	void SequenceEvent__ENTRYPOINTUIW_RecordRemote_0();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"UIW_RecordRemote_C">();
	}
	static class UUIW_RecordRemote_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUIW_RecordRemote_C>();
	}
};
static_assert(alignof(UUIW_RecordRemote_C) == 0x000008, "Wrong alignment on UUIW_RecordRemote_C");
static_assert(sizeof(UUIW_RecordRemote_C) == 0x0003B0, "Wrong size on UUIW_RecordRemote_C");
static_assert(offsetof(UUIW_RecordRemote_C, UberGraphFrame) == 0x0002A8, "Member 'UUIW_RecordRemote_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UUIW_RecordRemote_C, Ani_TextMove) == 0x0002B0, "Member 'UUIW_RecordRemote_C::Ani_TextMove' has a wrong offset!");
static_assert(offsetof(UUIW_RecordRemote_C, Ani_Shutdown) == 0x0002B8, "Member 'UUIW_RecordRemote_C::Ani_Shutdown' has a wrong offset!");
static_assert(offsetof(UUIW_RecordRemote_C, Ani_ShowSubControl) == 0x0002C0, "Member 'UUIW_RecordRemote_C::Ani_ShowSubControl' has a wrong offset!");
static_assert(offsetof(UUIW_RecordRemote_C, Btn_Next) == 0x0002C8, "Member 'UUIW_RecordRemote_C::Btn_Next' has a wrong offset!");
static_assert(offsetof(UUIW_RecordRemote_C, Btn_Prev) == 0x0002D0, "Member 'UUIW_RecordRemote_C::Btn_Prev' has a wrong offset!");
static_assert(offsetof(UUIW_RecordRemote_C, Btn_Stop) == 0x0002D8, "Member 'UUIW_RecordRemote_C::Btn_Stop' has a wrong offset!");
static_assert(offsetof(UUIW_RecordRemote_C, Btn_Toggle) == 0x0002E0, "Member 'UUIW_RecordRemote_C::Btn_Toggle' has a wrong offset!");
static_assert(offsetof(UUIW_RecordRemote_C, Fx_Gethumanity) == 0x0002E8, "Member 'UUIW_RecordRemote_C::Fx_Gethumanity' has a wrong offset!");
static_assert(offsetof(UUIW_RecordRemote_C, Group_Btn) == 0x0002F0, "Member 'UUIW_RecordRemote_C::Group_Btn' has a wrong offset!");
static_assert(offsetof(UUIW_RecordRemote_C, Group_Time) == 0x0002F8, "Member 'UUIW_RecordRemote_C::Group_Time' has a wrong offset!");
static_assert(offsetof(UUIW_RecordRemote_C, Img_Record) == 0x000300, "Member 'UUIW_RecordRemote_C::Img_Record' has a wrong offset!");
static_assert(offsetof(UUIW_RecordRemote_C, Progress) == 0x000308, "Member 'UUIW_RecordRemote_C::Progress' has a wrong offset!");
static_assert(offsetof(UUIW_RecordRemote_C, Text_Name) == 0x000310, "Member 'UUIW_RecordRemote_C::Text_Name' has a wrong offset!");
static_assert(offsetof(UUIW_RecordRemote_C, Text_PlayTime) == 0x000318, "Member 'UUIW_RecordRemote_C::Text_PlayTime' has a wrong offset!");
static_assert(offsetof(UUIW_RecordRemote_C, Text_Time) == 0x000320, "Member 'UUIW_RecordRemote_C::Text_Time' has a wrong offset!");
static_assert(offsetof(UUIW_RecordRemote_C, RecordPlaying) == 0x000328, "Member 'UUIW_RecordRemote_C::RecordPlaying' has a wrong offset!");
static_assert(offsetof(UUIW_RecordRemote_C, RecordCodeName) == 0x00032C, "Member 'UUIW_RecordRemote_C::RecordCodeName' has a wrong offset!");
static_assert(offsetof(UUIW_RecordRemote_C, RecordIndex) == 0x000334, "Member 'UUIW_RecordRemote_C::RecordIndex' has a wrong offset!");
static_assert(offsetof(UUIW_RecordRemote_C, RecordLocalizedName) == 0x000338, "Member 'UUIW_RecordRemote_C::RecordLocalizedName' has a wrong offset!");
static_assert(offsetof(UUIW_RecordRemote_C, SubRecordControlShow) == 0x000350, "Member 'UUIW_RecordRemote_C::SubRecordControlShow' has a wrong offset!");
static_assert(offsetof(UUIW_RecordRemote_C, RecordPrevTimer) == 0x000351, "Member 'UUIW_RecordRemote_C::RecordPrevTimer' has a wrong offset!");
static_assert(offsetof(UUIW_RecordRemote_C, IsRemoteAnimating) == 0x000352, "Member 'UUIW_RecordRemote_C::IsRemoteAnimating' has a wrong offset!");
static_assert(offsetof(UUIW_RecordRemote_C, Timer_ShowSubControl) == 0x000358, "Member 'UUIW_RecordRemote_C::Timer_ShowSubControl' has a wrong offset!");
static_assert(offsetof(UUIW_RecordRemote_C, Timer_Prev_Block) == 0x000360, "Member 'UUIW_RecordRemote_C::Timer_Prev_Block' has a wrong offset!");
static_assert(offsetof(UUIW_RecordRemote_C, IsPlayHeadPosition) == 0x000368, "Member 'UUIW_RecordRemote_C::IsPlayHeadPosition' has a wrong offset!");
static_assert(offsetof(UUIW_RecordRemote_C, IsOpenedMenu) == 0x000369, "Member 'UUIW_RecordRemote_C::IsOpenedMenu' has a wrong offset!");
static_assert(offsetof(UUIW_RecordRemote_C, InPin) == 0x00036A, "Member 'UUIW_RecordRemote_C::InPin' has a wrong offset!");
static_assert(offsetof(UUIW_RecordRemote_C, IsLetterPreviewShow) == 0x00036B, "Member 'UUIW_RecordRemote_C::IsLetterPreviewShow' has a wrong offset!");
static_assert(offsetof(UUIW_RecordRemote_C, LetterPreviewTimer) == 0x00036C, "Member 'UUIW_RecordRemote_C::LetterPreviewTimer' has a wrong offset!");
static_assert(offsetof(UUIW_RecordRemote_C, RecordList) == 0x000370, "Member 'UUIW_RecordRemote_C::RecordList' has a wrong offset!");
static_assert(offsetof(UUIW_RecordRemote_C, IsPassedFirst) == 0x000380, "Member 'UUIW_RecordRemote_C::IsPassedFirst' has a wrong offset!");
static_assert(offsetof(UUIW_RecordRemote_C, SpinLPTimer) == 0x000388, "Member 'UUIW_RecordRemote_C::SpinLPTimer' has a wrong offset!");
static_assert(offsetof(UUIW_RecordRemote_C, IsHUDEventOn) == 0x000390, "Member 'UUIW_RecordRemote_C::IsHUDEventOn' has a wrong offset!");
static_assert(offsetof(UUIW_RecordRemote_C, RecordPlayPercent) == 0x000394, "Member 'UUIW_RecordRemote_C::RecordPlayPercent' has a wrong offset!");
static_assert(offsetof(UUIW_RecordRemote_C, PendingNextCodeName) == 0x000398, "Member 'UUIW_RecordRemote_C::PendingNextCodeName' has a wrong offset!");
static_assert(offsetof(UUIW_RecordRemote_C, SoundMixCount) == 0x0003A0, "Member 'UUIW_RecordRemote_C::SoundMixCount' has a wrong offset!");
static_assert(offsetof(UUIW_RecordRemote_C, IsStoppingByUser) == 0x0003A4, "Member 'UUIW_RecordRemote_C::IsStoppingByUser' has a wrong offset!");
static_assert(offsetof(UUIW_RecordRemote_C, IsPlaying) == 0x0003A5, "Member 'UUIW_RecordRemote_C::IsPlaying' has a wrong offset!");
static_assert(offsetof(UUIW_RecordRemote_C, ToggleAction) == 0x0003A8, "Member 'UUIW_RecordRemote_C::ToggleAction' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_CH_PC_Pino

#include "Basic.hpp"

#include "BP_CH_PC_Pino_classes.hpp"
#include "BP_CH_PC_Pino_parameters.hpp"


namespace SDK
{

// Function BP_CH_PC_Pino.BP_CH_PC_Pino_C.ExecuteUbergraph_BP_CH_PC_Pino
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_CH_PC_Pino_C::ExecuteUbergraph_BP_CH_PC_Pino(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CH_PC_Pino_C", "ExecuteUbergraph_BP_CH_PC_Pino");

	Params::BP_CH_PC_Pino_C_ExecuteUbergraph_BP_CH_PC_Pino Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CH_PC_Pino.BP_CH_PC_Pino_C.Gemini_Lamp_Off
// (BlueprintCallable, BlueprintEvent)

void ABP_CH_PC_Pino_C::Gemini_Lamp_Off()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CH_PC_Pino_C", "Gemini_Lamp_Off");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CH_PC_Pino.BP_CH_PC_Pino_C.ReceiveEndPlay
// (Event, Protected, BlueprintEvent)
// Parameters:
// EEndPlayReason                          EndPlayReason                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_CH_PC_Pino_C::ReceiveEndPlay(EEndPlayReason EndPlayReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CH_PC_Pino_C", "ReceiveEndPlay");

	Params::BP_CH_PC_Pino_C_ReceiveEndPlay Parms{};

	Parms.EndPlayReason = EndPlayReason;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CH_PC_Pino.BP_CH_PC_Pino_C.OnApplyNeedShrink
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_CH_PC_Pino_C::OnApplyNeedShrink()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CH_PC_Pino_C", "OnApplyNeedShrink");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CH_PC_Pino.BP_CH_PC_Pino_C.RemoveRainHitSound
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_CH_PC_Pino_C::RemoveRainHitSound()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CH_PC_Pino_C", "RemoveRainHitSound");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CH_PC_Pino.BP_CH_PC_Pino_C.AttachRainHitSound
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// ELPhysicalSurfaceType                   InPhysicalSurface                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          InLocation                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   InRainIntensity                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsPCHit                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_CH_PC_Pino_C::AttachRainHitSound(ELPhysicalSurfaceType InPhysicalSurface, const struct FVector& InLocation, float InRainIntensity, bool IsPCHit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CH_PC_Pino_C", "AttachRainHitSound");

	Params::BP_CH_PC_Pino_C_AttachRainHitSound Parms{};

	Parms.InPhysicalSurface = InPhysicalSurface;
	Parms.InLocation = std::move(InLocation);
	Parms.InRainIntensity = InRainIntensity;
	Parms.IsPCHit = IsPCHit;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CH_PC_Pino.BP_CH_PC_Pino_C.Item Lamp Emissive Off
// (BlueprintCallable, BlueprintEvent)

void ABP_CH_PC_Pino_C::Item_Lamp_Emissive_Off()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CH_PC_Pino_C", "Item Lamp Emissive Off");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CH_PC_Pino.BP_CH_PC_Pino_C.Item Lamp Emissive On
// (BlueprintCallable, BlueprintEvent)

void ABP_CH_PC_Pino_C::Item_Lamp_Emissive_On()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CH_PC_Pino_C", "Item Lamp Emissive On");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CH_PC_Pino.BP_CH_PC_Pino_C.OnAlertLamp
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DurationTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_CH_PC_Pino_C::OnAlertLamp(float DurationTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CH_PC_Pino_C", "OnAlertLamp");

	Params::BP_CH_PC_Pino_C_OnAlertLamp Parms{};

	Parms.DurationTime = DurationTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CH_PC_Pino.BP_CH_PC_Pino_C.OnDialogLampOn
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_CH_PC_Pino_C::OnDialogLampOn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CH_PC_Pino_C", "OnDialogLampOn");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CH_PC_Pino.BP_CH_PC_Pino_C.OnDialogLampOff
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_CH_PC_Pino_C::OnDialogLampOff()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CH_PC_Pino_C", "OnDialogLampOff");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CH_PC_Pino.BP_CH_PC_Pino_C.OnUseItemBP
// (Event, Public, BlueprintEvent)
// Parameters:
// class FName                             ItemId                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsOn                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_CH_PC_Pino_C::OnUseItemBP(class FName ItemId, bool IsOn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CH_PC_Pino_C", "OnUseItemBP");

	Params::BP_CH_PC_Pino_C_OnUseItemBP Parms{};

	Parms.ItemId = ItemId;
	Parms.IsOn = IsOn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CH_PC_Pino.BP_CH_PC_Pino_C.AttachPCLamp
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_CH_PC_Pino_C::AttachPCLamp()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CH_PC_Pino_C", "AttachPCLamp");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CH_PC_Pino.BP_CH_PC_Pino_C.OnFrenzyModeMV
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bFrenzyMode                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bInstant                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_CH_PC_Pino_C::OnFrenzyModeMV(bool bFrenzyMode, bool bInstant)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CH_PC_Pino_C", "OnFrenzyModeMV");

	Params::BP_CH_PC_Pino_C_OnFrenzyModeMV Parms{};

	Parms.bFrenzyMode = bFrenzyMode;
	Parms.bInstant = bInstant;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CH_PC_Pino.BP_CH_PC_Pino_C.OnGainExp
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   InExp                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_CH_PC_Pino_C::OnGainExp(int32 InExp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CH_PC_Pino_C", "OnGainExp");

	Params::BP_CH_PC_Pino_C_OnGainExp Parms{};

	Parms.InExp = InExp;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CH_PC_Pino.BP_CH_PC_Pino_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_CH_PC_Pino_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CH_PC_Pino_C", "ReceiveTick");

	Params::BP_CH_PC_Pino_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CH_PC_Pino.BP_CH_PC_Pino_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_CH_PC_Pino_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CH_PC_Pino_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CH_PC_Pino.BP_CH_PC_Pino_C.Emissive TL__UpdateFunc
// (BlueprintEvent)

void ABP_CH_PC_Pino_C::Emissive_TL__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CH_PC_Pino_C", "Emissive TL__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CH_PC_Pino.BP_CH_PC_Pino_C.Emissive TL__FinishedFunc
// (BlueprintEvent)

void ABP_CH_PC_Pino_C::Emissive_TL__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CH_PC_Pino_C", "Emissive TL__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CH_PC_Pino.BP_CH_PC_Pino_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_CH_PC_Pino_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CH_PC_Pino_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CH_PC_Pino.BP_CH_PC_Pino_C.IK_Trace
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   TraceDistance                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             SocketName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          FootSize                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Moving                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   Offest                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRotator                         Impact                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    BlockHitBool                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_CH_PC_Pino_C::IK_Trace(float TraceDistance, class FName SocketName, const struct FVector& FootSize, bool Moving, float* Offest, struct FRotator* Impact, bool* BlockHitBool)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CH_PC_Pino_C", "IK_Trace");

	Params::BP_CH_PC_Pino_C_IK_Trace Parms{};

	Parms.TraceDistance = TraceDistance;
	Parms.SocketName = SocketName;
	Parms.FootSize = std::move(FootSize);
	Parms.Moving = Moving;

	UObject::ProcessEvent(Func, &Parms);

	if (Offest != nullptr)
		*Offest = Parms.Offest;

	if (Impact != nullptr)
		*Impact = std::move(Parms.Impact);

	if (BlockHitBool != nullptr)
		*BlockHitBool = Parms.BlockHitBool;
}


// Function BP_CH_PC_Pino.BP_CH_PC_Pino_C.IK_UpdateFootOffset 
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   TargetValue                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   EffectorVar                                            (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   InterpSpeed                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   EffectorValue                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_CH_PC_Pino_C::IK_UpdateFootOffset_(float TargetValue, float& EffectorVar, float InterpSpeed, float* EffectorValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CH_PC_Pino_C", "IK_UpdateFootOffset ");

	Params::BP_CH_PC_Pino_C_IK_UpdateFootOffset_ Parms{};

	Parms.TargetValue = TargetValue;
	Parms.EffectorVar = EffectorVar;
	Parms.InterpSpeed = InterpSpeed;

	UObject::ProcessEvent(Func, &Parms);

	EffectorVar = Parms.EffectorVar;

	if (EffectorValue != nullptr)
		*EffectorValue = Parms.EffectorValue;
}


// Function BP_CH_PC_Pino.BP_CH_PC_Pino_C.IK_UpdateFootRotation
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FRotator                         TargetValue                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FRotator                         RotationVar                                            (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
// float                                   InterpSpeed                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRotator                         RotatorValue                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_CH_PC_Pino_C::IK_UpdateFootRotation(const struct FRotator& TargetValue, struct FRotator& RotationVar, float InterpSpeed, struct FRotator* RotatorValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CH_PC_Pino_C", "IK_UpdateFootRotation");

	Params::BP_CH_PC_Pino_C_IK_UpdateFootRotation Parms{};

	Parms.TargetValue = std::move(TargetValue);
	Parms.RotationVar = std::move(RotationVar);
	Parms.InterpSpeed = InterpSpeed;

	UObject::ProcessEvent(Func, &Parms);

	RotationVar = std::move(Parms.RotationVar);

	if (RotatorValue != nullptr)
		*RotatorValue = std::move(Parms.RotatorValue);
}


// Function BP_CH_PC_Pino.BP_CH_PC_Pino_C.IK_UpdateCapsuleHalfHeight
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   HipsShifts                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Reset_Default                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   ReturnHipsOffset                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_CH_PC_Pino_C::IK_UpdateCapsuleHalfHeight(float HipsShifts, bool Reset_Default, float* ReturnHipsOffset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CH_PC_Pino_C", "IK_UpdateCapsuleHalfHeight");

	Params::BP_CH_PC_Pino_C_IK_UpdateCapsuleHalfHeight Parms{};

	Parms.HipsShifts = HipsShifts;
	Parms.Reset_Default = Reset_Default;

	UObject::ProcessEvent(Func, &Parms);

	if (ReturnHipsOffset != nullptr)
		*ReturnHipsOffset = Parms.ReturnHipsOffset;
}


// Function BP_CH_PC_Pino.BP_CH_PC_Pino_C.IK_AllUpdate
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   InterpSpeed                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Moving                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   ReturnLeftOffset                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   ReturnRightOffset                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRotator                         ReturnLeftRotator                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FRotator                         ReturnRightRotator                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   ReturnHipsOffset                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_CH_PC_Pino_C::IK_AllUpdate(float InterpSpeed, bool Moving, float* ReturnLeftOffset, float* ReturnRightOffset, struct FRotator* ReturnLeftRotator, struct FRotator* ReturnRightRotator, float* ReturnHipsOffset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CH_PC_Pino_C", "IK_AllUpdate");

	Params::BP_CH_PC_Pino_C_IK_AllUpdate Parms{};

	Parms.InterpSpeed = InterpSpeed;
	Parms.Moving = Moving;

	UObject::ProcessEvent(Func, &Parms);

	if (ReturnLeftOffset != nullptr)
		*ReturnLeftOffset = Parms.ReturnLeftOffset;

	if (ReturnRightOffset != nullptr)
		*ReturnRightOffset = Parms.ReturnRightOffset;

	if (ReturnLeftRotator != nullptr)
		*ReturnLeftRotator = std::move(Parms.ReturnLeftRotator);

	if (ReturnRightRotator != nullptr)
		*ReturnRightRotator = std::move(Parms.ReturnRightRotator);

	if (ReturnHipsOffset != nullptr)
		*ReturnHipsOffset = Parms.ReturnHipsOffset;
}


// Function BP_CH_PC_Pino.BP_CH_PC_Pino_C.IK_Reset
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   ReturnLeftOffset                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   ReturnRightOffset                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRotator                         ReturnLeftRotator                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FRotator                         ReturnRightRotator                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   ReturnHipsOffset                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_CH_PC_Pino_C::IK_Reset(float* ReturnLeftOffset, float* ReturnRightOffset, struct FRotator* ReturnLeftRotator, struct FRotator* ReturnRightRotator, float* ReturnHipsOffset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CH_PC_Pino_C", "IK_Reset");

	Params::BP_CH_PC_Pino_C_IK_Reset Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ReturnLeftOffset != nullptr)
		*ReturnLeftOffset = Parms.ReturnLeftOffset;

	if (ReturnRightOffset != nullptr)
		*ReturnRightOffset = Parms.ReturnRightOffset;

	if (ReturnLeftRotator != nullptr)
		*ReturnLeftRotator = std::move(Parms.ReturnLeftRotator);

	if (ReturnRightRotator != nullptr)
		*ReturnRightRotator = std::move(Parms.ReturnRightRotator);

	if (ReturnHipsOffset != nullptr)
		*ReturnHipsOffset = Parms.ReturnHipsOffset;
}


// Function BP_CH_PC_Pino.BP_CH_PC_Pino_C.On PCLamp
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   InDepth                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   InMaxDistance                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   InDistance                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   InDegree                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_CH_PC_Pino_C::On_PCLamp(int32 InDepth, float InMaxDistance, float InDistance, float InDegree)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CH_PC_Pino_C", "On PCLamp");

	Params::BP_CH_PC_Pino_C_On_PCLamp Parms{};

	Parms.InDepth = InDepth;
	Parms.InMaxDistance = InMaxDistance;
	Parms.InDistance = InDistance;
	Parms.InDegree = InDegree;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CH_PC_Pino.BP_CH_PC_Pino_C.On Twinkle PCLamp
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_CH_PC_Pino_C::On_Twinkle_PCLamp()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CH_PC_Pino_C", "On Twinkle PCLamp");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CH_PC_Pino.BP_CH_PC_Pino_C.Get Soul Ergo
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_CH_PC_Pino_C::Get_Soul_Ergo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CH_PC_Pino_C", "Get Soul Ergo");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CH_PC_Pino.BP_CH_PC_Pino_C.Turn Off Butterfly Lamp
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// TSoftObjectPtr<class ABP_RedButterFly_Red_C>InActor                                                (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ABP_CH_PC_Pino_C::Turn_Off_Butterfly_Lamp(TSoftObjectPtr<class ABP_RedButterFly_Red_C> InActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CH_PC_Pino_C", "Turn Off Butterfly Lamp");

	Params::BP_CH_PC_Pino_C_Turn_Off_Butterfly_Lamp Parms{};

	Parms.InActor = InActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CH_PC_Pino.BP_CH_PC_Pino_C.TurnOnButterflyLamp
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// TSoftObjectPtr<class ABP_RedButterFly_Red_C>InButterfly                                            (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// int32                                   InDepth                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   InMaxDistance                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   InDistance                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   InDegree                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_CH_PC_Pino_C::TurnOnButterflyLamp(TSoftObjectPtr<class ABP_RedButterFly_Red_C> InButterfly, int32 InDepth, float InMaxDistance, float InDistance, float InDegree)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CH_PC_Pino_C", "TurnOnButterflyLamp");

	Params::BP_CH_PC_Pino_C_TurnOnButterflyLamp Parms{};

	Parms.InButterfly = InButterfly;
	Parms.InDepth = InDepth;
	Parms.InMaxDistance = InMaxDistance;
	Parms.InDistance = InDistance;
	Parms.InDegree = InDegree;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CH_PC_Pino.BP_CH_PC_Pino_C.SetNoseShadow
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Visible                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_CH_PC_Pino_C::SetNoseShadow(bool Visible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CH_PC_Pino_C", "SetNoseShadow");

	Params::BP_CH_PC_Pino_C_SetNoseShadow Parms{};

	Parms.Visible = Visible;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CH_PC_Pino.BP_CH_PC_Pino_C.CreateENVPointLightMaterial
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_CH_PC_Pino_C::CreateENVPointLightMaterial()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CH_PC_Pino_C", "CreateENVPointLightMaterial");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CH_PC_Pino.BP_CH_PC_Pino_C.UpdateDitherInfo
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_CH_PC_Pino_C::UpdateDitherInfo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CH_PC_Pino_C", "UpdateDitherInfo");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CH_PC_Pino.BP_CH_PC_Pino_C.On EnteringN2 PCLamp
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_CH_PC_Pino_C::On_EnteringN2_PCLamp()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CH_PC_Pino_C", "On EnteringN2 PCLamp");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CH_PC_Pino.BP_CH_PC_Pino_C.AddDisplacementShapeData
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FBS_DisplacementShape>    Stack                                                  (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// bool                                    Added                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_CH_PC_Pino_C::AddDisplacementShapeData(TArray<struct FBS_DisplacementShape>& Stack, bool* Added)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CH_PC_Pino_C", "AddDisplacementShapeData");

	Params::BP_CH_PC_Pino_C_AddDisplacementShapeData Parms{};

	Parms.Stack = std::move(Stack);

	UObject::ProcessEvent(Func, &Parms);

	Stack = std::move(Parms.Stack);

	if (Added != nullptr)
		*Added = Parms.Added;
}


// Function BP_CH_PC_Pino.BP_CH_PC_Pino_C.GetLampMesh
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// class UMeshComponent*                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

class UMeshComponent* ABP_CH_PC_Pino_C::GetLampMesh() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CH_PC_Pino_C", "GetLampMesh");

	Params::BP_CH_PC_Pino_C_GetLampMesh Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}


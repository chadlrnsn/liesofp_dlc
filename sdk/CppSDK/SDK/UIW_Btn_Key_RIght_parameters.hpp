#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UIW_Btn_Key_RIght

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "InputCore_structs.hpp"
#include "UIEN_Controller_structs.hpp"
#include "UIEN_InputAction_structs.hpp"
#include "ProjectPContentInfo_structs.hpp"


namespace SDK::Params
{

// Function UIW_Btn_Key_RIght.UIW_Btn_Key_RIght_C.OnActive__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct UIW_Btn_Key_RIght_C_OnActive__DelegateSignature final
{
public:
	class UUIW_Btn_Key_RIght_C*                   BtnKey;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UIW_Btn_Key_RIght_C_OnActive__DelegateSignature) == 0x000008, "Wrong alignment on UIW_Btn_Key_RIght_C_OnActive__DelegateSignature");
static_assert(sizeof(UIW_Btn_Key_RIght_C_OnActive__DelegateSignature) == 0x000008, "Wrong size on UIW_Btn_Key_RIght_C_OnActive__DelegateSignature");
static_assert(offsetof(UIW_Btn_Key_RIght_C_OnActive__DelegateSignature, BtnKey) == 0x000000, "Member 'UIW_Btn_Key_RIght_C_OnActive__DelegateSignature::BtnKey' has a wrong offset!");

// Function UIW_Btn_Key_RIght.UIW_Btn_Key_RIght_C.OnAxis__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct UIW_Btn_Key_RIght_C_OnAxis__DelegateSignature final
{
public:
	class UUIW_Btn_Key_RIght_C*                   BtnKey;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AxisX_0;                                           // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AxisY_0;                                           // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AxisXY;                                            // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Angle;                                             // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UIW_Btn_Key_RIght_C_OnAxis__DelegateSignature) == 0x000008, "Wrong alignment on UIW_Btn_Key_RIght_C_OnAxis__DelegateSignature");
static_assert(sizeof(UIW_Btn_Key_RIght_C_OnAxis__DelegateSignature) == 0x000018, "Wrong size on UIW_Btn_Key_RIght_C_OnAxis__DelegateSignature");
static_assert(offsetof(UIW_Btn_Key_RIght_C_OnAxis__DelegateSignature, BtnKey) == 0x000000, "Member 'UIW_Btn_Key_RIght_C_OnAxis__DelegateSignature::BtnKey' has a wrong offset!");
static_assert(offsetof(UIW_Btn_Key_RIght_C_OnAxis__DelegateSignature, AxisX_0) == 0x000008, "Member 'UIW_Btn_Key_RIght_C_OnAxis__DelegateSignature::AxisX_0' has a wrong offset!");
static_assert(offsetof(UIW_Btn_Key_RIght_C_OnAxis__DelegateSignature, AxisY_0) == 0x00000C, "Member 'UIW_Btn_Key_RIght_C_OnAxis__DelegateSignature::AxisY_0' has a wrong offset!");
static_assert(offsetof(UIW_Btn_Key_RIght_C_OnAxis__DelegateSignature, AxisXY) == 0x000010, "Member 'UIW_Btn_Key_RIght_C_OnAxis__DelegateSignature::AxisXY' has a wrong offset!");
static_assert(offsetof(UIW_Btn_Key_RIght_C_OnAxis__DelegateSignature, Angle) == 0x000014, "Member 'UIW_Btn_Key_RIght_C_OnAxis__DelegateSignature::Angle' has a wrong offset!");

// Function UIW_Btn_Key_RIght.UIW_Btn_Key_RIght_C.OnScroll__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct UIW_Btn_Key_RIght_C_OnScroll__DelegateSignature final
{
public:
	float                                         Delta;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UIW_Btn_Key_RIght_C_OnScroll__DelegateSignature) == 0x000004, "Wrong alignment on UIW_Btn_Key_RIght_C_OnScroll__DelegateSignature");
static_assert(sizeof(UIW_Btn_Key_RIght_C_OnScroll__DelegateSignature) == 0x000004, "Wrong size on UIW_Btn_Key_RIght_C_OnScroll__DelegateSignature");
static_assert(offsetof(UIW_Btn_Key_RIght_C_OnScroll__DelegateSignature, Delta) == 0x000000, "Member 'UIW_Btn_Key_RIght_C_OnScroll__DelegateSignature::Delta' has a wrong offset!");

// Function UIW_Btn_Key_RIght.UIW_Btn_Key_RIght_C.OnRepeat__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct UIW_Btn_Key_RIght_C_OnRepeat__DelegateSignature final
{
public:
	class UUIW_Btn_Key_RIght_C*                   BtnKey;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UIW_Btn_Key_RIght_C_OnRepeat__DelegateSignature) == 0x000008, "Wrong alignment on UIW_Btn_Key_RIght_C_OnRepeat__DelegateSignature");
static_assert(sizeof(UIW_Btn_Key_RIght_C_OnRepeat__DelegateSignature) == 0x000008, "Wrong size on UIW_Btn_Key_RIght_C_OnRepeat__DelegateSignature");
static_assert(offsetof(UIW_Btn_Key_RIght_C_OnRepeat__DelegateSignature, BtnKey) == 0x000000, "Member 'UIW_Btn_Key_RIght_C_OnRepeat__DelegateSignature::BtnKey' has a wrong offset!");

// Function UIW_Btn_Key_RIght.UIW_Btn_Key_RIght_C.ExecuteUbergraph_UIW_Btn_Key_RIght
// 0x0050 (0x0050 - 0x0000)
struct UIW_Btn_Key_RIght_C_ExecuteUbergraph_UIW_Btn_Key_RIght final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ULPlayInputSystem*                      CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsGamePadMode_ReturnValue;                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULPlayInputSystem*                      CallFunc_GetGameInstanceSubsystem_ReturnValue_1;   // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(bool bGamePad)>                K2Node_CreateDelegate_OutputDelegate;              // 0x0028(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(EUINavigation Navigation, EInputEvent EventType)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x0038(0x0010)(ZeroConstructor, NoDestructor)
	EDynamicForceFeedbackAction                   Temp_byte_Variable;                                // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UIW_Btn_Key_RIght_C_ExecuteUbergraph_UIW_Btn_Key_RIght) == 0x000008, "Wrong alignment on UIW_Btn_Key_RIght_C_ExecuteUbergraph_UIW_Btn_Key_RIght");
static_assert(sizeof(UIW_Btn_Key_RIght_C_ExecuteUbergraph_UIW_Btn_Key_RIght) == 0x000050, "Wrong size on UIW_Btn_Key_RIght_C_ExecuteUbergraph_UIW_Btn_Key_RIght");
static_assert(offsetof(UIW_Btn_Key_RIght_C_ExecuteUbergraph_UIW_Btn_Key_RIght, EntryPoint) == 0x000000, "Member 'UIW_Btn_Key_RIght_C_ExecuteUbergraph_UIW_Btn_Key_RIght::EntryPoint' has a wrong offset!");
static_assert(offsetof(UIW_Btn_Key_RIght_C_ExecuteUbergraph_UIW_Btn_Key_RIght, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000008, "Member 'UIW_Btn_Key_RIght_C_ExecuteUbergraph_UIW_Btn_Key_RIght::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Btn_Key_RIght_C_ExecuteUbergraph_UIW_Btn_Key_RIght, CallFunc_IsGamePadMode_ReturnValue) == 0x000010, "Member 'UIW_Btn_Key_RIght_C_ExecuteUbergraph_UIW_Btn_Key_RIght::CallFunc_IsGamePadMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Btn_Key_RIght_C_ExecuteUbergraph_UIW_Btn_Key_RIght, CallFunc_GetPlayerController_ReturnValue) == 0x000018, "Member 'UIW_Btn_Key_RIght_C_ExecuteUbergraph_UIW_Btn_Key_RIght::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Btn_Key_RIght_C_ExecuteUbergraph_UIW_Btn_Key_RIght, CallFunc_GetGameInstanceSubsystem_ReturnValue_1) == 0x000020, "Member 'UIW_Btn_Key_RIght_C_ExecuteUbergraph_UIW_Btn_Key_RIght::CallFunc_GetGameInstanceSubsystem_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UIW_Btn_Key_RIght_C_ExecuteUbergraph_UIW_Btn_Key_RIght, K2Node_CreateDelegate_OutputDelegate) == 0x000028, "Member 'UIW_Btn_Key_RIght_C_ExecuteUbergraph_UIW_Btn_Key_RIght::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(UIW_Btn_Key_RIght_C_ExecuteUbergraph_UIW_Btn_Key_RIght, K2Node_CreateDelegate_OutputDelegate_1) == 0x000038, "Member 'UIW_Btn_Key_RIght_C_ExecuteUbergraph_UIW_Btn_Key_RIght::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(UIW_Btn_Key_RIght_C_ExecuteUbergraph_UIW_Btn_Key_RIght, Temp_byte_Variable) == 0x000048, "Member 'UIW_Btn_Key_RIght_C_ExecuteUbergraph_UIW_Btn_Key_RIght::Temp_byte_Variable' has a wrong offset!");

// Function UIW_Btn_Key_RIght.UIW_Btn_Key_RIght_C.InitButton
// 0x0001 (0x0001 - 0x0000)
struct UIW_Btn_Key_RIght_C_InitButton final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UIW_Btn_Key_RIght_C_InitButton) == 0x000001, "Wrong alignment on UIW_Btn_Key_RIght_C_InitButton");
static_assert(sizeof(UIW_Btn_Key_RIght_C_InitButton) == 0x000001, "Wrong size on UIW_Btn_Key_RIght_C_InitButton");
static_assert(offsetof(UIW_Btn_Key_RIght_C_InitButton, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'UIW_Btn_Key_RIght_C_InitButton::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function UIW_Btn_Key_RIght.UIW_Btn_Key_RIght_C.Set Button by Action Name
// 0x00D8 (0x00D8 - 0x0000)
struct UIW_Btn_Key_RIght_C_Set_Button_by_Action_Name final
{
public:
	EUIEN_InputAction                             InputAction;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         HoldTime_0;                                        // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Label_0;                                           // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUIEN_Controller                              VisibleType_0;                                     // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(EUINavigation Navigation, EInputEvent EventType)> K2Node_CreateDelegate_OutputDelegate;              // 0x0014(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ULPlayInputSystem*                      CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_1;            // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0033(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x004C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0054(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_2;            // 0x0065(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_66[0x2];                                       // 0x0066(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_1; // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x3];                                       // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Conv_StringToName_ReturnValue_1;          // 0x007C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_3;            // 0x0085(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_86[0x2];                                       // 0x0086(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_2; // 0x0088(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99[0x3];                                       // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Conv_StringToName_ReturnValue_2;          // 0x009C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A5[0x3];                                       // 0x00A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ULPlayInputSystem*                      CallFunc_GetGameInstanceSubsystem_ReturnValue_1;   // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsGamePadMode_ReturnValue;                // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B2[0x2];                                       // 0x00B2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x00B4(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_3;            // 0x00C4(0x0010)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(UIW_Btn_Key_RIght_C_Set_Button_by_Action_Name) == 0x000008, "Wrong alignment on UIW_Btn_Key_RIght_C_Set_Button_by_Action_Name");
static_assert(sizeof(UIW_Btn_Key_RIght_C_Set_Button_by_Action_Name) == 0x0000D8, "Wrong size on UIW_Btn_Key_RIght_C_Set_Button_by_Action_Name");
static_assert(offsetof(UIW_Btn_Key_RIght_C_Set_Button_by_Action_Name, InputAction) == 0x000000, "Member 'UIW_Btn_Key_RIght_C_Set_Button_by_Action_Name::InputAction' has a wrong offset!");
static_assert(offsetof(UIW_Btn_Key_RIght_C_Set_Button_by_Action_Name, HoldTime_0) == 0x000004, "Member 'UIW_Btn_Key_RIght_C_Set_Button_by_Action_Name::HoldTime_0' has a wrong offset!");
static_assert(offsetof(UIW_Btn_Key_RIght_C_Set_Button_by_Action_Name, Label_0) == 0x000008, "Member 'UIW_Btn_Key_RIght_C_Set_Button_by_Action_Name::Label_0' has a wrong offset!");
static_assert(offsetof(UIW_Btn_Key_RIght_C_Set_Button_by_Action_Name, VisibleType_0) == 0x000010, "Member 'UIW_Btn_Key_RIght_C_Set_Button_by_Action_Name::VisibleType_0' has a wrong offset!");
static_assert(offsetof(UIW_Btn_Key_RIght_C_Set_Button_by_Action_Name, K2Node_CreateDelegate_OutputDelegate) == 0x000014, "Member 'UIW_Btn_Key_RIght_C_Set_Button_by_Action_Name::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(UIW_Btn_Key_RIght_C_Set_Button_by_Action_Name, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000028, "Member 'UIW_Btn_Key_RIght_C_Set_Button_by_Action_Name::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Btn_Key_RIght_C_Set_Button_by_Action_Name, CallFunc_MakeLiteralByte_ReturnValue) == 0x000030, "Member 'UIW_Btn_Key_RIght_C_Set_Button_by_Action_Name::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Btn_Key_RIght_C_Set_Button_by_Action_Name, CallFunc_MakeLiteralByte_ReturnValue_1) == 0x000031, "Member 'UIW_Btn_Key_RIght_C_Set_Button_by_Action_Name::CallFunc_MakeLiteralByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UIW_Btn_Key_RIght_C_Set_Button_by_Action_Name, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000032, "Member 'UIW_Btn_Key_RIght_C_Set_Button_by_Action_Name::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Btn_Key_RIght_C_Set_Button_by_Action_Name, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000033, "Member 'UIW_Btn_Key_RIght_C_Set_Button_by_Action_Name::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UIW_Btn_Key_RIght_C_Set_Button_by_Action_Name, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000038, "Member 'UIW_Btn_Key_RIght_C_Set_Button_by_Action_Name::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Btn_Key_RIght_C_Set_Button_by_Action_Name, CallFunc_BooleanOR_ReturnValue) == 0x000048, "Member 'UIW_Btn_Key_RIght_C_Set_Button_by_Action_Name::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Btn_Key_RIght_C_Set_Button_by_Action_Name, CallFunc_Conv_StringToName_ReturnValue) == 0x00004C, "Member 'UIW_Btn_Key_RIght_C_Set_Button_by_Action_Name::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Btn_Key_RIght_C_Set_Button_by_Action_Name, K2Node_CreateDelegate_OutputDelegate_1) == 0x000054, "Member 'UIW_Btn_Key_RIght_C_Set_Button_by_Action_Name::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(UIW_Btn_Key_RIght_C_Set_Button_by_Action_Name, CallFunc_IsVisible_ReturnValue) == 0x000064, "Member 'UIW_Btn_Key_RIght_C_Set_Button_by_Action_Name::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Btn_Key_RIght_C_Set_Button_by_Action_Name, CallFunc_MakeLiteralByte_ReturnValue_2) == 0x000065, "Member 'UIW_Btn_Key_RIght_C_Set_Button_by_Action_Name::CallFunc_MakeLiteralByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UIW_Btn_Key_RIght_C_Set_Button_by_Action_Name, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_1) == 0x000068, "Member 'UIW_Btn_Key_RIght_C_Set_Button_by_Action_Name::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UIW_Btn_Key_RIght_C_Set_Button_by_Action_Name, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x000078, "Member 'UIW_Btn_Key_RIght_C_Set_Button_by_Action_Name::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UIW_Btn_Key_RIght_C_Set_Button_by_Action_Name, CallFunc_Conv_StringToName_ReturnValue_1) == 0x00007C, "Member 'UIW_Btn_Key_RIght_C_Set_Button_by_Action_Name::CallFunc_Conv_StringToName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UIW_Btn_Key_RIght_C_Set_Button_by_Action_Name, CallFunc_BooleanOR_ReturnValue_1) == 0x000084, "Member 'UIW_Btn_Key_RIght_C_Set_Button_by_Action_Name::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UIW_Btn_Key_RIght_C_Set_Button_by_Action_Name, CallFunc_MakeLiteralByte_ReturnValue_3) == 0x000085, "Member 'UIW_Btn_Key_RIght_C_Set_Button_by_Action_Name::CallFunc_MakeLiteralByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(UIW_Btn_Key_RIght_C_Set_Button_by_Action_Name, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_2) == 0x000088, "Member 'UIW_Btn_Key_RIght_C_Set_Button_by_Action_Name::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UIW_Btn_Key_RIght_C_Set_Button_by_Action_Name, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x000098, "Member 'UIW_Btn_Key_RIght_C_Set_Button_by_Action_Name::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(UIW_Btn_Key_RIght_C_Set_Button_by_Action_Name, CallFunc_Conv_StringToName_ReturnValue_2) == 0x00009C, "Member 'UIW_Btn_Key_RIght_C_Set_Button_by_Action_Name::CallFunc_Conv_StringToName_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UIW_Btn_Key_RIght_C_Set_Button_by_Action_Name, CallFunc_BooleanOR_ReturnValue_2) == 0x0000A4, "Member 'UIW_Btn_Key_RIght_C_Set_Button_by_Action_Name::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UIW_Btn_Key_RIght_C_Set_Button_by_Action_Name, CallFunc_GetGameInstanceSubsystem_ReturnValue_1) == 0x0000A8, "Member 'UIW_Btn_Key_RIght_C_Set_Button_by_Action_Name::CallFunc_GetGameInstanceSubsystem_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UIW_Btn_Key_RIght_C_Set_Button_by_Action_Name, CallFunc_IsGamePadMode_ReturnValue) == 0x0000B0, "Member 'UIW_Btn_Key_RIght_C_Set_Button_by_Action_Name::CallFunc_IsGamePadMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Btn_Key_RIght_C_Set_Button_by_Action_Name, CallFunc_Greater_FloatFloat_ReturnValue) == 0x0000B1, "Member 'UIW_Btn_Key_RIght_C_Set_Button_by_Action_Name::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Btn_Key_RIght_C_Set_Button_by_Action_Name, K2Node_CreateDelegate_OutputDelegate_2) == 0x0000B4, "Member 'UIW_Btn_Key_RIght_C_Set_Button_by_Action_Name::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(UIW_Btn_Key_RIght_C_Set_Button_by_Action_Name, K2Node_CreateDelegate_OutputDelegate_3) == 0x0000C4, "Member 'UIW_Btn_Key_RIght_C_Set_Button_by_Action_Name::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");

// Function UIW_Btn_Key_RIght.UIW_Btn_Key_RIght_C.Set Button by Axis Name
// 0x0080 (0x0080 - 0x0000)
struct UIW_Btn_Key_RIght_C_Set_Button_by_Axis_Name final
{
public:
	EUIEN_InputAction                             InputAxis;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          All_Directions__XY_;                               // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Label_0;                                           // 0x0004(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ELItemSecondCategory                          NewLocalVar_0;                                     // 0x000C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(float AxisValue)>              K2Node_CreateDelegate_OutputDelegate;              // 0x0010(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(float AxisValue)>              K2Node_CreateDelegate_OutputDelegate_1;            // 0x0020(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(float AxisValue)>              K2Node_CreateDelegate_OutputDelegate_2;            // 0x0030(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(float AxisValue)>              K2Node_CreateDelegate_OutputDelegate_3;            // 0x0040(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_52[0x2];                                       // 0x0052(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(float AxisValue)>              K2Node_CreateDelegate_OutputDelegate_4;            // 0x0054(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UIW_Btn_Key_RIght_C_Set_Button_by_Axis_Name) == 0x000008, "Wrong alignment on UIW_Btn_Key_RIght_C_Set_Button_by_Axis_Name");
static_assert(sizeof(UIW_Btn_Key_RIght_C_Set_Button_by_Axis_Name) == 0x000080, "Wrong size on UIW_Btn_Key_RIght_C_Set_Button_by_Axis_Name");
static_assert(offsetof(UIW_Btn_Key_RIght_C_Set_Button_by_Axis_Name, InputAxis) == 0x000000, "Member 'UIW_Btn_Key_RIght_C_Set_Button_by_Axis_Name::InputAxis' has a wrong offset!");
static_assert(offsetof(UIW_Btn_Key_RIght_C_Set_Button_by_Axis_Name, All_Directions__XY_) == 0x000001, "Member 'UIW_Btn_Key_RIght_C_Set_Button_by_Axis_Name::All_Directions__XY_' has a wrong offset!");
static_assert(offsetof(UIW_Btn_Key_RIght_C_Set_Button_by_Axis_Name, Label_0) == 0x000004, "Member 'UIW_Btn_Key_RIght_C_Set_Button_by_Axis_Name::Label_0' has a wrong offset!");
static_assert(offsetof(UIW_Btn_Key_RIght_C_Set_Button_by_Axis_Name, NewLocalVar_0) == 0x00000C, "Member 'UIW_Btn_Key_RIght_C_Set_Button_by_Axis_Name::NewLocalVar_0' has a wrong offset!");
static_assert(offsetof(UIW_Btn_Key_RIght_C_Set_Button_by_Axis_Name, K2Node_CreateDelegate_OutputDelegate) == 0x000010, "Member 'UIW_Btn_Key_RIght_C_Set_Button_by_Axis_Name::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(UIW_Btn_Key_RIght_C_Set_Button_by_Axis_Name, K2Node_CreateDelegate_OutputDelegate_1) == 0x000020, "Member 'UIW_Btn_Key_RIght_C_Set_Button_by_Axis_Name::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(UIW_Btn_Key_RIght_C_Set_Button_by_Axis_Name, K2Node_CreateDelegate_OutputDelegate_2) == 0x000030, "Member 'UIW_Btn_Key_RIght_C_Set_Button_by_Axis_Name::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(UIW_Btn_Key_RIght_C_Set_Button_by_Axis_Name, K2Node_CreateDelegate_OutputDelegate_3) == 0x000040, "Member 'UIW_Btn_Key_RIght_C_Set_Button_by_Axis_Name::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(UIW_Btn_Key_RIght_C_Set_Button_by_Axis_Name, K2Node_SwitchEnum_CmpSuccess) == 0x000050, "Member 'UIW_Btn_Key_RIght_C_Set_Button_by_Axis_Name::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(UIW_Btn_Key_RIght_C_Set_Button_by_Axis_Name, CallFunc_IsVisible_ReturnValue) == 0x000051, "Member 'UIW_Btn_Key_RIght_C_Set_Button_by_Axis_Name::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Btn_Key_RIght_C_Set_Button_by_Axis_Name, K2Node_CreateDelegate_OutputDelegate_4) == 0x000054, "Member 'UIW_Btn_Key_RIght_C_Set_Button_by_Axis_Name::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(UIW_Btn_Key_RIght_C_Set_Button_by_Axis_Name, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000068, "Member 'UIW_Btn_Key_RIght_C_Set_Button_by_Axis_Name::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Btn_Key_RIght_C_Set_Button_by_Axis_Name, CallFunc_Conv_StringToName_ReturnValue) == 0x000078, "Member 'UIW_Btn_Key_RIght_C_Set_Button_by_Axis_Name::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");

// Function UIW_Btn_Key_RIght.UIW_Btn_Key_RIght_C.Set Button by Thumbstick Scroll
// 0x0090 (0x0090 - 0x0000)
struct UIW_Btn_Key_RIght_C_Set_Button_by_Thumbstick_Scroll final
{
public:
	class FName                                   Label_0;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             CallFunc_GetKeyIcon_Icon;                          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0030(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0040(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x0054(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_1;            // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_65[0x3];                                       // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_3;            // 0x0068(0x0010)(ZeroConstructor, NoDestructor)
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_1; // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue_1;          // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UIW_Btn_Key_RIght_C_Set_Button_by_Thumbstick_Scroll) == 0x000008, "Wrong alignment on UIW_Btn_Key_RIght_C_Set_Button_by_Thumbstick_Scroll");
static_assert(sizeof(UIW_Btn_Key_RIght_C_Set_Button_by_Thumbstick_Scroll) == 0x000090, "Wrong size on UIW_Btn_Key_RIght_C_Set_Button_by_Thumbstick_Scroll");
static_assert(offsetof(UIW_Btn_Key_RIght_C_Set_Button_by_Thumbstick_Scroll, Label_0) == 0x000000, "Member 'UIW_Btn_Key_RIght_C_Set_Button_by_Thumbstick_Scroll::Label_0' has a wrong offset!");
static_assert(offsetof(UIW_Btn_Key_RIght_C_Set_Button_by_Thumbstick_Scroll, CallFunc_MakeLiteralByte_ReturnValue) == 0x000008, "Member 'UIW_Btn_Key_RIght_C_Set_Button_by_Thumbstick_Scroll::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Btn_Key_RIght_C_Set_Button_by_Thumbstick_Scroll, CallFunc_GetKeyIcon_Icon) == 0x000010, "Member 'UIW_Btn_Key_RIght_C_Set_Button_by_Thumbstick_Scroll::CallFunc_GetKeyIcon_Icon' has a wrong offset!");
static_assert(offsetof(UIW_Btn_Key_RIght_C_Set_Button_by_Thumbstick_Scroll, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000018, "Member 'UIW_Btn_Key_RIght_C_Set_Button_by_Thumbstick_Scroll::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Btn_Key_RIght_C_Set_Button_by_Thumbstick_Scroll, CallFunc_Conv_StringToName_ReturnValue) == 0x000028, "Member 'UIW_Btn_Key_RIght_C_Set_Button_by_Thumbstick_Scroll::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Btn_Key_RIght_C_Set_Button_by_Thumbstick_Scroll, K2Node_CreateDelegate_OutputDelegate) == 0x000030, "Member 'UIW_Btn_Key_RIght_C_Set_Button_by_Thumbstick_Scroll::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(UIW_Btn_Key_RIght_C_Set_Button_by_Thumbstick_Scroll, K2Node_CreateDelegate_OutputDelegate_1) == 0x000040, "Member 'UIW_Btn_Key_RIght_C_Set_Button_by_Thumbstick_Scroll::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(UIW_Btn_Key_RIght_C_Set_Button_by_Thumbstick_Scroll, CallFunc_IsVisible_ReturnValue) == 0x000050, "Member 'UIW_Btn_Key_RIght_C_Set_Button_by_Thumbstick_Scroll::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Btn_Key_RIght_C_Set_Button_by_Thumbstick_Scroll, K2Node_CreateDelegate_OutputDelegate_2) == 0x000054, "Member 'UIW_Btn_Key_RIght_C_Set_Button_by_Thumbstick_Scroll::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(UIW_Btn_Key_RIght_C_Set_Button_by_Thumbstick_Scroll, CallFunc_MakeLiteralByte_ReturnValue_1) == 0x000064, "Member 'UIW_Btn_Key_RIght_C_Set_Button_by_Thumbstick_Scroll::CallFunc_MakeLiteralByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UIW_Btn_Key_RIght_C_Set_Button_by_Thumbstick_Scroll, K2Node_CreateDelegate_OutputDelegate_3) == 0x000068, "Member 'UIW_Btn_Key_RIght_C_Set_Button_by_Thumbstick_Scroll::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(UIW_Btn_Key_RIght_C_Set_Button_by_Thumbstick_Scroll, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_1) == 0x000078, "Member 'UIW_Btn_Key_RIght_C_Set_Button_by_Thumbstick_Scroll::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UIW_Btn_Key_RIght_C_Set_Button_by_Thumbstick_Scroll, CallFunc_Conv_StringToName_ReturnValue_1) == 0x000088, "Member 'UIW_Btn_Key_RIght_C_Set_Button_by_Thumbstick_Scroll::CallFunc_Conv_StringToName_ReturnValue_1' has a wrong offset!");

// Function UIW_Btn_Key_RIght.UIW_Btn_Key_RIght_C.Set Button Only Icon
// 0x0038 (0x0038 - 0x0000)
struct UIW_Btn_Key_RIght_C_Set_Button_Only_Icon final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	class FName                                   Label_0;                                           // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUIEN_Controller                              Visible_Type;                                      // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             CallFunc_GetKeyIcon_Icon;                          // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UIW_Btn_Key_RIght_C_Set_Button_Only_Icon) == 0x000008, "Wrong alignment on UIW_Btn_Key_RIght_C_Set_Button_Only_Icon");
static_assert(sizeof(UIW_Btn_Key_RIght_C_Set_Button_Only_Icon) == 0x000038, "Wrong size on UIW_Btn_Key_RIght_C_Set_Button_Only_Icon");
static_assert(offsetof(UIW_Btn_Key_RIght_C_Set_Button_Only_Icon, Key) == 0x000000, "Member 'UIW_Btn_Key_RIght_C_Set_Button_Only_Icon::Key' has a wrong offset!");
static_assert(offsetof(UIW_Btn_Key_RIght_C_Set_Button_Only_Icon, Label_0) == 0x000018, "Member 'UIW_Btn_Key_RIght_C_Set_Button_Only_Icon::Label_0' has a wrong offset!");
static_assert(offsetof(UIW_Btn_Key_RIght_C_Set_Button_Only_Icon, Visible_Type) == 0x000020, "Member 'UIW_Btn_Key_RIght_C_Set_Button_Only_Icon::Visible_Type' has a wrong offset!");
static_assert(offsetof(UIW_Btn_Key_RIght_C_Set_Button_Only_Icon, CallFunc_GetKeyIcon_Icon) == 0x000028, "Member 'UIW_Btn_Key_RIght_C_Set_Button_Only_Icon::CallFunc_GetKeyIcon_Icon' has a wrong offset!");
static_assert(offsetof(UIW_Btn_Key_RIght_C_Set_Button_Only_Icon, CallFunc_IsVisible_ReturnValue) == 0x000030, "Member 'UIW_Btn_Key_RIght_C_Set_Button_Only_Icon::CallFunc_IsVisible_ReturnValue' has a wrong offset!");

// Function UIW_Btn_Key_RIght.UIW_Btn_Key_RIght_C.Set Label
// 0x0058 (0x0058 - 0x0000)
struct UIW_Btn_Key_RIght_C_Set_Label final
{
public:
	class FName                                   Label_0;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_GetEmptyText_ReturnValue;                 // 0x0008(0x0018)()
	class FText                                   CallFunc_Conv_NameToText_ReturnValue;              // 0x0020(0x0018)()
	class FText                                   CallFunc_GetGameStrWithName_ReturnValue;           // 0x0038(0x0018)()
	bool                                          CallFunc_NotEqual_NameName_ReturnValue;            // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_TextText_ReturnValue;          // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UIW_Btn_Key_RIght_C_Set_Label) == 0x000008, "Wrong alignment on UIW_Btn_Key_RIght_C_Set_Label");
static_assert(sizeof(UIW_Btn_Key_RIght_C_Set_Label) == 0x000058, "Wrong size on UIW_Btn_Key_RIght_C_Set_Label");
static_assert(offsetof(UIW_Btn_Key_RIght_C_Set_Label, Label_0) == 0x000000, "Member 'UIW_Btn_Key_RIght_C_Set_Label::Label_0' has a wrong offset!");
static_assert(offsetof(UIW_Btn_Key_RIght_C_Set_Label, CallFunc_GetEmptyText_ReturnValue) == 0x000008, "Member 'UIW_Btn_Key_RIght_C_Set_Label::CallFunc_GetEmptyText_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Btn_Key_RIght_C_Set_Label, CallFunc_Conv_NameToText_ReturnValue) == 0x000020, "Member 'UIW_Btn_Key_RIght_C_Set_Label::CallFunc_Conv_NameToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Btn_Key_RIght_C_Set_Label, CallFunc_GetGameStrWithName_ReturnValue) == 0x000038, "Member 'UIW_Btn_Key_RIght_C_Set_Label::CallFunc_GetGameStrWithName_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Btn_Key_RIght_C_Set_Label, CallFunc_NotEqual_NameName_ReturnValue) == 0x000050, "Member 'UIW_Btn_Key_RIght_C_Set_Label::CallFunc_NotEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Btn_Key_RIght_C_Set_Label, CallFunc_EqualEqual_TextText_ReturnValue) == 0x000051, "Member 'UIW_Btn_Key_RIght_C_Set_Label::CallFunc_EqualEqual_TextText_ReturnValue' has a wrong offset!");

// Function UIW_Btn_Key_RIght.UIW_Btn_Key_RIght_C.PressKey
// 0x0020 (0x0020 - 0x0000)
struct UIW_Btn_Key_RIght_C_PressKey final
{
public:
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0010(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetIsEnabled_ReturnValue;                 // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UIW_Btn_Key_RIght_C_PressKey) == 0x000008, "Wrong alignment on UIW_Btn_Key_RIght_C_PressKey");
static_assert(sizeof(UIW_Btn_Key_RIght_C_PressKey) == 0x000020, "Wrong size on UIW_Btn_Key_RIght_C_PressKey");
static_assert(offsetof(UIW_Btn_Key_RIght_C_PressKey, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'UIW_Btn_Key_RIght_C_PressKey::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(UIW_Btn_Key_RIght_C_PressKey, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000010, "Member 'UIW_Btn_Key_RIght_C_PressKey::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Btn_Key_RIght_C_PressKey, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000018, "Member 'UIW_Btn_Key_RIght_C_PressKey::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Btn_Key_RIght_C_PressKey, CallFunc_IsVisible_ReturnValue) == 0x000019, "Member 'UIW_Btn_Key_RIght_C_PressKey::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Btn_Key_RIght_C_PressKey, CallFunc_GetIsEnabled_ReturnValue) == 0x00001A, "Member 'UIW_Btn_Key_RIght_C_PressKey::CallFunc_GetIsEnabled_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Btn_Key_RIght_C_PressKey, CallFunc_BooleanAND_ReturnValue) == 0x00001B, "Member 'UIW_Btn_Key_RIght_C_PressKey::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function UIW_Btn_Key_RIght.UIW_Btn_Key_RIght_C.GaugeLoop
// 0x0020 (0x0020 - 0x0000)
struct UIW_Btn_Key_RIght_C_GaugeLoop final
{
public:
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue_1;         // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UIW_Btn_Key_RIght_C_GaugeLoop) == 0x000008, "Wrong alignment on UIW_Btn_Key_RIght_C_GaugeLoop");
static_assert(sizeof(UIW_Btn_Key_RIght_C_GaugeLoop) == 0x000020, "Wrong size on UIW_Btn_Key_RIght_C_GaugeLoop");
static_assert(offsetof(UIW_Btn_Key_RIght_C_GaugeLoop, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000000, "Member 'UIW_Btn_Key_RIght_C_GaugeLoop::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Btn_Key_RIght_C_GaugeLoop, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000008, "Member 'UIW_Btn_Key_RIght_C_GaugeLoop::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Btn_Key_RIght_C_GaugeLoop, CallFunc_GetDynamicMaterial_ReturnValue_1) == 0x000010, "Member 'UIW_Btn_Key_RIght_C_GaugeLoop::CallFunc_GetDynamicMaterial_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UIW_Btn_Key_RIght_C_GaugeLoop, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000018, "Member 'UIW_Btn_Key_RIght_C_GaugeLoop::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Btn_Key_RIght_C_GaugeLoop, CallFunc_Add_FloatFloat_ReturnValue) == 0x00001C, "Member 'UIW_Btn_Key_RIght_C_GaugeLoop::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");

// Function UIW_Btn_Key_RIght.UIW_Btn_Key_RIght_C.SetGaugeType
// 0x0010 (0x0010 - 0x0000)
struct UIW_Btn_Key_RIght_C_SetGaugeType final
{
public:
	class ULPlayInputSystem*                      CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsGamePadMode_ReturnValue;                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UIW_Btn_Key_RIght_C_SetGaugeType) == 0x000008, "Wrong alignment on UIW_Btn_Key_RIght_C_SetGaugeType");
static_assert(sizeof(UIW_Btn_Key_RIght_C_SetGaugeType) == 0x000010, "Wrong size on UIW_Btn_Key_RIght_C_SetGaugeType");
static_assert(offsetof(UIW_Btn_Key_RIght_C_SetGaugeType, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000000, "Member 'UIW_Btn_Key_RIght_C_SetGaugeType::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Btn_Key_RIght_C_SetGaugeType, CallFunc_IsGamePadMode_ReturnValue) == 0x000008, "Member 'UIW_Btn_Key_RIght_C_SetGaugeType::CallFunc_IsGamePadMode_ReturnValue' has a wrong offset!");

// Function UIW_Btn_Key_RIght.UIW_Btn_Key_RIght_C.ReleaseKey
// 0x0006 (0x0006 - 0x0000)
struct UIW_Btn_Key_RIght_C_ReleaseKey final
{
public:
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetIsEnabled_ReturnValue;                 // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UIW_Btn_Key_RIght_C_ReleaseKey) == 0x000001, "Wrong alignment on UIW_Btn_Key_RIght_C_ReleaseKey");
static_assert(sizeof(UIW_Btn_Key_RIght_C_ReleaseKey) == 0x000006, "Wrong size on UIW_Btn_Key_RIght_C_ReleaseKey");
static_assert(offsetof(UIW_Btn_Key_RIght_C_ReleaseKey, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000000, "Member 'UIW_Btn_Key_RIght_C_ReleaseKey::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Btn_Key_RIght_C_ReleaseKey, CallFunc_Less_FloatFloat_ReturnValue) == 0x000001, "Member 'UIW_Btn_Key_RIght_C_ReleaseKey::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Btn_Key_RIght_C_ReleaseKey, CallFunc_IsVisible_ReturnValue) == 0x000002, "Member 'UIW_Btn_Key_RIght_C_ReleaseKey::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Btn_Key_RIght_C_ReleaseKey, CallFunc_GetIsEnabled_ReturnValue) == 0x000003, "Member 'UIW_Btn_Key_RIght_C_ReleaseKey::CallFunc_GetIsEnabled_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Btn_Key_RIght_C_ReleaseKey, CallFunc_BooleanAND_ReturnValue) == 0x000004, "Member 'UIW_Btn_Key_RIght_C_ReleaseKey::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Btn_Key_RIght_C_ReleaseKey, CallFunc_BooleanAND_ReturnValue_1) == 0x000005, "Member 'UIW_Btn_Key_RIght_C_ReleaseKey::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

// Function UIW_Btn_Key_RIght.UIW_Btn_Key_RIght_C.RepeatKey
// 0x0020 (0x0020 - 0x0000)
struct UIW_Btn_Key_RIght_C_RepeatKey final
{
public:
	int32                                         Temp_int_Variable;                                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ULPlayInputSystem*                      CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsGamePadMode_ReturnValue;                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetIsEnabled_ReturnValue;                 // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UIW_Btn_Key_RIght_C_RepeatKey) == 0x000008, "Wrong alignment on UIW_Btn_Key_RIght_C_RepeatKey");
static_assert(sizeof(UIW_Btn_Key_RIght_C_RepeatKey) == 0x000020, "Wrong size on UIW_Btn_Key_RIght_C_RepeatKey");
static_assert(offsetof(UIW_Btn_Key_RIght_C_RepeatKey, Temp_int_Variable) == 0x000000, "Member 'UIW_Btn_Key_RIght_C_RepeatKey::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(UIW_Btn_Key_RIght_C_RepeatKey, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000008, "Member 'UIW_Btn_Key_RIght_C_RepeatKey::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Btn_Key_RIght_C_RepeatKey, CallFunc_IsGamePadMode_ReturnValue) == 0x000010, "Member 'UIW_Btn_Key_RIght_C_RepeatKey::CallFunc_IsGamePadMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Btn_Key_RIght_C_RepeatKey, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'UIW_Btn_Key_RIght_C_RepeatKey::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Btn_Key_RIght_C_RepeatKey, CallFunc_Less_IntInt_ReturnValue) == 0x000018, "Member 'UIW_Btn_Key_RIght_C_RepeatKey::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Btn_Key_RIght_C_RepeatKey, CallFunc_IsVisible_ReturnValue) == 0x000019, "Member 'UIW_Btn_Key_RIght_C_RepeatKey::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Btn_Key_RIght_C_RepeatKey, CallFunc_GetIsEnabled_ReturnValue) == 0x00001A, "Member 'UIW_Btn_Key_RIght_C_RepeatKey::CallFunc_GetIsEnabled_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Btn_Key_RIght_C_RepeatKey, CallFunc_BooleanAND_ReturnValue) == 0x00001B, "Member 'UIW_Btn_Key_RIght_C_RepeatKey::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function UIW_Btn_Key_RIght.UIW_Btn_Key_RIght_C.Set Icon
// 0x0018 (0x0018 - 0x0000)
struct UIW_Btn_Key_RIght_C_Set_Icon final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(UIW_Btn_Key_RIght_C_Set_Icon) == 0x000008, "Wrong alignment on UIW_Btn_Key_RIght_C_Set_Icon");
static_assert(sizeof(UIW_Btn_Key_RIght_C_Set_Icon) == 0x000018, "Wrong size on UIW_Btn_Key_RIght_C_Set_Icon");
static_assert(offsetof(UIW_Btn_Key_RIght_C_Set_Icon, Key) == 0x000000, "Member 'UIW_Btn_Key_RIght_C_Set_Icon::Key' has a wrong offset!");

// Function UIW_Btn_Key_RIght.UIW_Btn_Key_RIght_C.Action Key Update
// 0x0098 (0x0098 - 0x0000)
struct UIW_Btn_Key_RIght_C_Action_Key_Update final
{
public:
	bool                                          IsGamePad;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UInputSettings*                         CallFunc_GetInputSettings_ReturnValue;             // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FInputActionKeyMapping>         CallFunc_GetActionMappingByName_OutMappings;       // 0x0040(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FInputActionKeyMapping                 CallFunc_Array_Get_Item;                           // 0x0058(0x0028)()
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_82[0x6];                                       // 0x0082(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             CallFunc_GetKeyIcon_Icon;                          // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Key_IsGamepadKey_ReturnValue;             // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_BoolBool_ReturnValue;          // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UIW_Btn_Key_RIght_C_Action_Key_Update) == 0x000008, "Wrong alignment on UIW_Btn_Key_RIght_C_Action_Key_Update");
static_assert(sizeof(UIW_Btn_Key_RIght_C_Action_Key_Update) == 0x000098, "Wrong size on UIW_Btn_Key_RIght_C_Action_Key_Update");
static_assert(offsetof(UIW_Btn_Key_RIght_C_Action_Key_Update, IsGamePad) == 0x000000, "Member 'UIW_Btn_Key_RIght_C_Action_Key_Update::IsGamePad' has a wrong offset!");
static_assert(offsetof(UIW_Btn_Key_RIght_C_Action_Key_Update, Temp_bool_True_if_break_was_hit_Variable) == 0x000001, "Member 'UIW_Btn_Key_RIght_C_Action_Key_Update::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(UIW_Btn_Key_RIght_C_Action_Key_Update, Temp_int_Array_Index_Variable) == 0x000004, "Member 'UIW_Btn_Key_RIght_C_Action_Key_Update::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(UIW_Btn_Key_RIght_C_Action_Key_Update, CallFunc_Not_PreBool_ReturnValue) == 0x000008, "Member 'UIW_Btn_Key_RIght_C_Action_Key_Update::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Btn_Key_RIght_C_Action_Key_Update, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'UIW_Btn_Key_RIght_C_Action_Key_Update::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(UIW_Btn_Key_RIght_C_Action_Key_Update, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'UIW_Btn_Key_RIght_C_Action_Key_Update::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Btn_Key_RIght_C_Action_Key_Update, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000018, "Member 'UIW_Btn_Key_RIght_C_Action_Key_Update::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Btn_Key_RIght_C_Action_Key_Update, CallFunc_Conv_StringToName_ReturnValue) == 0x000028, "Member 'UIW_Btn_Key_RIght_C_Action_Key_Update::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Btn_Key_RIght_C_Action_Key_Update, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000030, "Member 'UIW_Btn_Key_RIght_C_Action_Key_Update::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Btn_Key_RIght_C_Action_Key_Update, CallFunc_GetInputSettings_ReturnValue) == 0x000038, "Member 'UIW_Btn_Key_RIght_C_Action_Key_Update::CallFunc_GetInputSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Btn_Key_RIght_C_Action_Key_Update, CallFunc_GetActionMappingByName_OutMappings) == 0x000040, "Member 'UIW_Btn_Key_RIght_C_Action_Key_Update::CallFunc_GetActionMappingByName_OutMappings' has a wrong offset!");
static_assert(offsetof(UIW_Btn_Key_RIght_C_Action_Key_Update, CallFunc_Array_Length_ReturnValue) == 0x000050, "Member 'UIW_Btn_Key_RIght_C_Action_Key_Update::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Btn_Key_RIght_C_Action_Key_Update, CallFunc_Array_Get_Item) == 0x000058, "Member 'UIW_Btn_Key_RIght_C_Action_Key_Update::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(UIW_Btn_Key_RIght_C_Action_Key_Update, CallFunc_Less_IntInt_ReturnValue) == 0x000080, "Member 'UIW_Btn_Key_RIght_C_Action_Key_Update::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Btn_Key_RIght_C_Action_Key_Update, CallFunc_BooleanAND_ReturnValue) == 0x000081, "Member 'UIW_Btn_Key_RIght_C_Action_Key_Update::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Btn_Key_RIght_C_Action_Key_Update, CallFunc_GetKeyIcon_Icon) == 0x000088, "Member 'UIW_Btn_Key_RIght_C_Action_Key_Update::CallFunc_GetKeyIcon_Icon' has a wrong offset!");
static_assert(offsetof(UIW_Btn_Key_RIght_C_Action_Key_Update, CallFunc_Key_IsGamepadKey_ReturnValue) == 0x000090, "Member 'UIW_Btn_Key_RIght_C_Action_Key_Update::CallFunc_Key_IsGamepadKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Btn_Key_RIght_C_Action_Key_Update, CallFunc_EqualEqual_BoolBool_ReturnValue) == 0x000091, "Member 'UIW_Btn_Key_RIght_C_Action_Key_Update::CallFunc_EqualEqual_BoolBool_ReturnValue' has a wrong offset!");

// Function UIW_Btn_Key_RIght.UIW_Btn_Key_RIght_C.Axis Key Update
// 0x0038 (0x0038 - 0x0000)
struct UIW_Btn_Key_RIght_C_Axis_Key_Update final
{
public:
	class UInputSettings*                         CallFunc_GetInputSettings_ReturnValue;             // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FInputAxisKeyMapping>           CallFunc_GetAxisMappingByName_OutMappings;         // 0x0020(0x0010)(ReferenceParm)
	class UTexture2D*                             CallFunc_GetKeyIcon_Icon;                          // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UIW_Btn_Key_RIght_C_Axis_Key_Update) == 0x000008, "Wrong alignment on UIW_Btn_Key_RIght_C_Axis_Key_Update");
static_assert(sizeof(UIW_Btn_Key_RIght_C_Axis_Key_Update) == 0x000038, "Wrong size on UIW_Btn_Key_RIght_C_Axis_Key_Update");
static_assert(offsetof(UIW_Btn_Key_RIght_C_Axis_Key_Update, CallFunc_GetInputSettings_ReturnValue) == 0x000000, "Member 'UIW_Btn_Key_RIght_C_Axis_Key_Update::CallFunc_GetInputSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Btn_Key_RIght_C_Axis_Key_Update, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000008, "Member 'UIW_Btn_Key_RIght_C_Axis_Key_Update::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Btn_Key_RIght_C_Axis_Key_Update, CallFunc_Conv_StringToName_ReturnValue) == 0x000018, "Member 'UIW_Btn_Key_RIght_C_Axis_Key_Update::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Btn_Key_RIght_C_Axis_Key_Update, CallFunc_GetAxisMappingByName_OutMappings) == 0x000020, "Member 'UIW_Btn_Key_RIght_C_Axis_Key_Update::CallFunc_GetAxisMappingByName_OutMappings' has a wrong offset!");
static_assert(offsetof(UIW_Btn_Key_RIght_C_Axis_Key_Update, CallFunc_GetKeyIcon_Icon) == 0x000030, "Member 'UIW_Btn_Key_RIght_C_Axis_Key_Update::CallFunc_GetKeyIcon_Icon' has a wrong offset!");

// Function UIW_Btn_Key_RIght.UIW_Btn_Key_RIght_C.AxisKey
// 0x0008 (0x0008 - 0x0000)
struct UIW_Btn_Key_RIght_C_AxisKey final
{
public:
	float                                         Axis;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetIsEnabled_ReturnValue;                 // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UIW_Btn_Key_RIght_C_AxisKey) == 0x000004, "Wrong alignment on UIW_Btn_Key_RIght_C_AxisKey");
static_assert(sizeof(UIW_Btn_Key_RIght_C_AxisKey) == 0x000008, "Wrong size on UIW_Btn_Key_RIght_C_AxisKey");
static_assert(offsetof(UIW_Btn_Key_RIght_C_AxisKey, Axis) == 0x000000, "Member 'UIW_Btn_Key_RIght_C_AxisKey::Axis' has a wrong offset!");
static_assert(offsetof(UIW_Btn_Key_RIght_C_AxisKey, CallFunc_IsVisible_ReturnValue) == 0x000004, "Member 'UIW_Btn_Key_RIght_C_AxisKey::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Btn_Key_RIght_C_AxisKey, CallFunc_GetIsEnabled_ReturnValue) == 0x000005, "Member 'UIW_Btn_Key_RIght_C_AxisKey::CallFunc_GetIsEnabled_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Btn_Key_RIght_C_AxisKey, CallFunc_BooleanAND_ReturnValue) == 0x000006, "Member 'UIW_Btn_Key_RIght_C_AxisKey::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function UIW_Btn_Key_RIght.UIW_Btn_Key_RIght_C.AxisXKey
// 0x0008 (0x0008 - 0x0000)
struct UIW_Btn_Key_RIght_C_AxisXKey final
{
public:
	float                                         AxisValue;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetIsEnabled_ReturnValue;                 // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UIW_Btn_Key_RIght_C_AxisXKey) == 0x000004, "Wrong alignment on UIW_Btn_Key_RIght_C_AxisXKey");
static_assert(sizeof(UIW_Btn_Key_RIght_C_AxisXKey) == 0x000008, "Wrong size on UIW_Btn_Key_RIght_C_AxisXKey");
static_assert(offsetof(UIW_Btn_Key_RIght_C_AxisXKey, AxisValue) == 0x000000, "Member 'UIW_Btn_Key_RIght_C_AxisXKey::AxisValue' has a wrong offset!");
static_assert(offsetof(UIW_Btn_Key_RIght_C_AxisXKey, CallFunc_IsVisible_ReturnValue) == 0x000004, "Member 'UIW_Btn_Key_RIght_C_AxisXKey::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Btn_Key_RIght_C_AxisXKey, CallFunc_GetIsEnabled_ReturnValue) == 0x000005, "Member 'UIW_Btn_Key_RIght_C_AxisXKey::CallFunc_GetIsEnabled_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Btn_Key_RIght_C_AxisXKey, CallFunc_BooleanAND_ReturnValue) == 0x000006, "Member 'UIW_Btn_Key_RIght_C_AxisXKey::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function UIW_Btn_Key_RIght.UIW_Btn_Key_RIght_C.AxisYKey
// 0x0008 (0x0008 - 0x0000)
struct UIW_Btn_Key_RIght_C_AxisYKey final
{
public:
	float                                         AxisValue;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetIsEnabled_ReturnValue;                 // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UIW_Btn_Key_RIght_C_AxisYKey) == 0x000004, "Wrong alignment on UIW_Btn_Key_RIght_C_AxisYKey");
static_assert(sizeof(UIW_Btn_Key_RIght_C_AxisYKey) == 0x000008, "Wrong size on UIW_Btn_Key_RIght_C_AxisYKey");
static_assert(offsetof(UIW_Btn_Key_RIght_C_AxisYKey, AxisValue) == 0x000000, "Member 'UIW_Btn_Key_RIght_C_AxisYKey::AxisValue' has a wrong offset!");
static_assert(offsetof(UIW_Btn_Key_RIght_C_AxisYKey, CallFunc_IsVisible_ReturnValue) == 0x000004, "Member 'UIW_Btn_Key_RIght_C_AxisYKey::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Btn_Key_RIght_C_AxisYKey, CallFunc_GetIsEnabled_ReturnValue) == 0x000005, "Member 'UIW_Btn_Key_RIght_C_AxisYKey::CallFunc_GetIsEnabled_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Btn_Key_RIght_C_AxisYKey, CallFunc_BooleanAND_ReturnValue) == 0x000006, "Member 'UIW_Btn_Key_RIght_C_AxisYKey::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function UIW_Btn_Key_RIght.UIW_Btn_Key_RIght_C.CalculationAxis
// 0x0010 (0x0010 - 0x0000)
struct UIW_Btn_Key_RIght_C_CalculationAxis final
{
public:
	float                                         CallFunc_DegAtan2_ReturnValue;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0004(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize2D_ReturnValue;                      // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UIW_Btn_Key_RIght_C_CalculationAxis) == 0x000004, "Wrong alignment on UIW_Btn_Key_RIght_C_CalculationAxis");
static_assert(sizeof(UIW_Btn_Key_RIght_C_CalculationAxis) == 0x000010, "Wrong size on UIW_Btn_Key_RIght_C_CalculationAxis");
static_assert(offsetof(UIW_Btn_Key_RIght_C_CalculationAxis, CallFunc_DegAtan2_ReturnValue) == 0x000000, "Member 'UIW_Btn_Key_RIght_C_CalculationAxis::CallFunc_DegAtan2_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Btn_Key_RIght_C_CalculationAxis, CallFunc_MakeVector2D_ReturnValue) == 0x000004, "Member 'UIW_Btn_Key_RIght_C_CalculationAxis::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Btn_Key_RIght_C_CalculationAxis, CallFunc_VSize2D_ReturnValue) == 0x00000C, "Member 'UIW_Btn_Key_RIght_C_CalculationAxis::CallFunc_VSize2D_ReturnValue' has a wrong offset!");

// Function UIW_Btn_Key_RIght.UIW_Btn_Key_RIght_C.ScrollUpPressKey
// 0x0003 (0x0003 - 0x0000)
struct UIW_Btn_Key_RIght_C_ScrollUpPressKey final
{
public:
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetIsEnabled_ReturnValue;                 // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UIW_Btn_Key_RIght_C_ScrollUpPressKey) == 0x000001, "Wrong alignment on UIW_Btn_Key_RIght_C_ScrollUpPressKey");
static_assert(sizeof(UIW_Btn_Key_RIght_C_ScrollUpPressKey) == 0x000003, "Wrong size on UIW_Btn_Key_RIght_C_ScrollUpPressKey");
static_assert(offsetof(UIW_Btn_Key_RIght_C_ScrollUpPressKey, CallFunc_IsVisible_ReturnValue) == 0x000000, "Member 'UIW_Btn_Key_RIght_C_ScrollUpPressKey::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Btn_Key_RIght_C_ScrollUpPressKey, CallFunc_GetIsEnabled_ReturnValue) == 0x000001, "Member 'UIW_Btn_Key_RIght_C_ScrollUpPressKey::CallFunc_GetIsEnabled_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Btn_Key_RIght_C_ScrollUpPressKey, CallFunc_BooleanAND_ReturnValue) == 0x000002, "Member 'UIW_Btn_Key_RIght_C_ScrollUpPressKey::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function UIW_Btn_Key_RIght.UIW_Btn_Key_RIght_C.ScrollUpRepeatKey
// 0x0010 (0x0010 - 0x0000)
struct UIW_Btn_Key_RIght_C_ScrollUpRepeatKey final
{
public:
	int32                                         Temp_int_Variable;                                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetIsEnabled_ReturnValue;                 // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UIW_Btn_Key_RIght_C_ScrollUpRepeatKey) == 0x000004, "Wrong alignment on UIW_Btn_Key_RIght_C_ScrollUpRepeatKey");
static_assert(sizeof(UIW_Btn_Key_RIght_C_ScrollUpRepeatKey) == 0x000010, "Wrong size on UIW_Btn_Key_RIght_C_ScrollUpRepeatKey");
static_assert(offsetof(UIW_Btn_Key_RIght_C_ScrollUpRepeatKey, Temp_int_Variable) == 0x000000, "Member 'UIW_Btn_Key_RIght_C_ScrollUpRepeatKey::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(UIW_Btn_Key_RIght_C_ScrollUpRepeatKey, CallFunc_Less_IntInt_ReturnValue) == 0x000004, "Member 'UIW_Btn_Key_RIght_C_ScrollUpRepeatKey::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Btn_Key_RIght_C_ScrollUpRepeatKey, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'UIW_Btn_Key_RIght_C_ScrollUpRepeatKey::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Btn_Key_RIght_C_ScrollUpRepeatKey, CallFunc_IsVisible_ReturnValue) == 0x00000C, "Member 'UIW_Btn_Key_RIght_C_ScrollUpRepeatKey::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Btn_Key_RIght_C_ScrollUpRepeatKey, CallFunc_GetIsEnabled_ReturnValue) == 0x00000D, "Member 'UIW_Btn_Key_RIght_C_ScrollUpRepeatKey::CallFunc_GetIsEnabled_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Btn_Key_RIght_C_ScrollUpRepeatKey, CallFunc_BooleanAND_ReturnValue) == 0x00000E, "Member 'UIW_Btn_Key_RIght_C_ScrollUpRepeatKey::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function UIW_Btn_Key_RIght.UIW_Btn_Key_RIght_C.ScrollDownPressKey
// 0x0003 (0x0003 - 0x0000)
struct UIW_Btn_Key_RIght_C_ScrollDownPressKey final
{
public:
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetIsEnabled_ReturnValue;                 // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UIW_Btn_Key_RIght_C_ScrollDownPressKey) == 0x000001, "Wrong alignment on UIW_Btn_Key_RIght_C_ScrollDownPressKey");
static_assert(sizeof(UIW_Btn_Key_RIght_C_ScrollDownPressKey) == 0x000003, "Wrong size on UIW_Btn_Key_RIght_C_ScrollDownPressKey");
static_assert(offsetof(UIW_Btn_Key_RIght_C_ScrollDownPressKey, CallFunc_IsVisible_ReturnValue) == 0x000000, "Member 'UIW_Btn_Key_RIght_C_ScrollDownPressKey::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Btn_Key_RIght_C_ScrollDownPressKey, CallFunc_GetIsEnabled_ReturnValue) == 0x000001, "Member 'UIW_Btn_Key_RIght_C_ScrollDownPressKey::CallFunc_GetIsEnabled_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Btn_Key_RIght_C_ScrollDownPressKey, CallFunc_BooleanAND_ReturnValue) == 0x000002, "Member 'UIW_Btn_Key_RIght_C_ScrollDownPressKey::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function UIW_Btn_Key_RIght.UIW_Btn_Key_RIght_C.Set Visibility Button
// 0x0018 (0x0018 - 0x0000)
struct UIW_Btn_Key_RIght_C_Set_Visibility_Button final
{
public:
	bool                                          IsViewContents_0;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ULPlayInputSystem*                      CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsGamePadMode_ReturnValue;                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UIW_Btn_Key_RIght_C_Set_Visibility_Button) == 0x000008, "Wrong alignment on UIW_Btn_Key_RIght_C_Set_Visibility_Button");
static_assert(sizeof(UIW_Btn_Key_RIght_C_Set_Visibility_Button) == 0x000018, "Wrong size on UIW_Btn_Key_RIght_C_Set_Visibility_Button");
static_assert(offsetof(UIW_Btn_Key_RIght_C_Set_Visibility_Button, IsViewContents_0) == 0x000000, "Member 'UIW_Btn_Key_RIght_C_Set_Visibility_Button::IsViewContents_0' has a wrong offset!");
static_assert(offsetof(UIW_Btn_Key_RIght_C_Set_Visibility_Button, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000008, "Member 'UIW_Btn_Key_RIght_C_Set_Visibility_Button::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Btn_Key_RIght_C_Set_Visibility_Button, CallFunc_IsGamePadMode_ReturnValue) == 0x000010, "Member 'UIW_Btn_Key_RIght_C_Set_Visibility_Button::CallFunc_IsGamePadMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Btn_Key_RIght_C_Set_Visibility_Button, K2Node_SwitchEnum_CmpSuccess) == 0x000011, "Member 'UIW_Btn_Key_RIght_C_Set_Visibility_Button::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function UIW_Btn_Key_RIght.UIW_Btn_Key_RIght_C.ScrollDownRepeatKey
// 0x0010 (0x0010 - 0x0000)
struct UIW_Btn_Key_RIght_C_ScrollDownRepeatKey final
{
public:
	int32                                         Temp_int_Variable;                                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetIsEnabled_ReturnValue;                 // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UIW_Btn_Key_RIght_C_ScrollDownRepeatKey) == 0x000004, "Wrong alignment on UIW_Btn_Key_RIght_C_ScrollDownRepeatKey");
static_assert(sizeof(UIW_Btn_Key_RIght_C_ScrollDownRepeatKey) == 0x000010, "Wrong size on UIW_Btn_Key_RIght_C_ScrollDownRepeatKey");
static_assert(offsetof(UIW_Btn_Key_RIght_C_ScrollDownRepeatKey, Temp_int_Variable) == 0x000000, "Member 'UIW_Btn_Key_RIght_C_ScrollDownRepeatKey::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(UIW_Btn_Key_RIght_C_ScrollDownRepeatKey, CallFunc_Less_IntInt_ReturnValue) == 0x000004, "Member 'UIW_Btn_Key_RIght_C_ScrollDownRepeatKey::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Btn_Key_RIght_C_ScrollDownRepeatKey, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'UIW_Btn_Key_RIght_C_ScrollDownRepeatKey::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Btn_Key_RIght_C_ScrollDownRepeatKey, CallFunc_IsVisible_ReturnValue) == 0x00000C, "Member 'UIW_Btn_Key_RIght_C_ScrollDownRepeatKey::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Btn_Key_RIght_C_ScrollDownRepeatKey, CallFunc_GetIsEnabled_ReturnValue) == 0x00000D, "Member 'UIW_Btn_Key_RIght_C_ScrollDownRepeatKey::CallFunc_GetIsEnabled_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Btn_Key_RIght_C_ScrollDownRepeatKey, CallFunc_BooleanAND_ReturnValue) == 0x00000E, "Member 'UIW_Btn_Key_RIght_C_ScrollDownRepeatKey::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function UIW_Btn_Key_RIght.UIW_Btn_Key_RIght_C.ListenForNavigationKey
// 0x000D (0x000D - 0x0000)
struct UIW_Btn_Key_RIght_C_ListenForNavigationKey final
{
public:
	EUINavigation                                 Navigation_0;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EInputEvent                                   EventType;                                         // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_1;            // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_2;            // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_3;            // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UIW_Btn_Key_RIght_C_ListenForNavigationKey) == 0x000001, "Wrong alignment on UIW_Btn_Key_RIght_C_ListenForNavigationKey");
static_assert(sizeof(UIW_Btn_Key_RIght_C_ListenForNavigationKey) == 0x00000D, "Wrong size on UIW_Btn_Key_RIght_C_ListenForNavigationKey");
static_assert(offsetof(UIW_Btn_Key_RIght_C_ListenForNavigationKey, Navigation_0) == 0x000000, "Member 'UIW_Btn_Key_RIght_C_ListenForNavigationKey::Navigation_0' has a wrong offset!");
static_assert(offsetof(UIW_Btn_Key_RIght_C_ListenForNavigationKey, EventType) == 0x000001, "Member 'UIW_Btn_Key_RIght_C_ListenForNavigationKey::EventType' has a wrong offset!");
static_assert(offsetof(UIW_Btn_Key_RIght_C_ListenForNavigationKey, CallFunc_MakeLiteralByte_ReturnValue) == 0x000002, "Member 'UIW_Btn_Key_RIght_C_ListenForNavigationKey::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Btn_Key_RIght_C_ListenForNavigationKey, K2Node_SwitchEnum_CmpSuccess) == 0x000003, "Member 'UIW_Btn_Key_RIght_C_ListenForNavigationKey::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(UIW_Btn_Key_RIght_C_ListenForNavigationKey, CallFunc_MakeLiteralByte_ReturnValue_1) == 0x000004, "Member 'UIW_Btn_Key_RIght_C_ListenForNavigationKey::CallFunc_MakeLiteralByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UIW_Btn_Key_RIght_C_ListenForNavigationKey, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000005, "Member 'UIW_Btn_Key_RIght_C_ListenForNavigationKey::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Btn_Key_RIght_C_ListenForNavigationKey, K2Node_SwitchEnum_CmpSuccess_1) == 0x000006, "Member 'UIW_Btn_Key_RIght_C_ListenForNavigationKey::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(UIW_Btn_Key_RIght_C_ListenForNavigationKey, CallFunc_MakeLiteralByte_ReturnValue_2) == 0x000007, "Member 'UIW_Btn_Key_RIght_C_ListenForNavigationKey::CallFunc_MakeLiteralByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UIW_Btn_Key_RIght_C_ListenForNavigationKey, CallFunc_MakeLiteralByte_ReturnValue_3) == 0x000008, "Member 'UIW_Btn_Key_RIght_C_ListenForNavigationKey::CallFunc_MakeLiteralByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(UIW_Btn_Key_RIght_C_ListenForNavigationKey, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000009, "Member 'UIW_Btn_Key_RIght_C_ListenForNavigationKey::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Btn_Key_RIght_C_ListenForNavigationKey, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x00000A, "Member 'UIW_Btn_Key_RIght_C_ListenForNavigationKey::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UIW_Btn_Key_RIght_C_ListenForNavigationKey, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x00000B, "Member 'UIW_Btn_Key_RIght_C_ListenForNavigationKey::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UIW_Btn_Key_RIght_C_ListenForNavigationKey, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x00000C, "Member 'UIW_Btn_Key_RIght_C_ListenForNavigationKey::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");

// Function UIW_Btn_Key_RIght.UIW_Btn_Key_RIght_C.GaugeReset
// 0x0010 (0x0010 - 0x0000)
struct UIW_Btn_Key_RIght_C_GaugeReset final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UIW_Btn_Key_RIght_C_GaugeReset) == 0x000008, "Wrong alignment on UIW_Btn_Key_RIght_C_GaugeReset");
static_assert(sizeof(UIW_Btn_Key_RIght_C_GaugeReset) == 0x000010, "Wrong size on UIW_Btn_Key_RIght_C_GaugeReset");
static_assert(offsetof(UIW_Btn_Key_RIght_C_GaugeReset, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'UIW_Btn_Key_RIght_C_GaugeReset::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Btn_Key_RIght_C_GaugeReset, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000008, "Member 'UIW_Btn_Key_RIght_C_GaugeReset::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");

// Function UIW_Btn_Key_RIght.UIW_Btn_Key_RIght_C.ChangeInputMode
// 0x0002 (0x0002 - 0x0000)
struct UIW_Btn_Key_RIght_C_ChangeInputMode final
{
public:
	bool                                          IsGamePad;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UIW_Btn_Key_RIght_C_ChangeInputMode) == 0x000001, "Wrong alignment on UIW_Btn_Key_RIght_C_ChangeInputMode");
static_assert(sizeof(UIW_Btn_Key_RIght_C_ChangeInputMode) == 0x000002, "Wrong size on UIW_Btn_Key_RIght_C_ChangeInputMode");
static_assert(offsetof(UIW_Btn_Key_RIght_C_ChangeInputMode, IsGamePad) == 0x000000, "Member 'UIW_Btn_Key_RIght_C_ChangeInputMode::IsGamePad' has a wrong offset!");
static_assert(offsetof(UIW_Btn_Key_RIght_C_ChangeInputMode, K2Node_SwitchEnum_CmpSuccess) == 0x000001, "Member 'UIW_Btn_Key_RIght_C_ChangeInputMode::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function UIW_Btn_Key_RIght.UIW_Btn_Key_RIght_C.SetHoldControlGuide
// 0x0001 (0x0001 - 0x0000)
struct UIW_Btn_Key_RIght_C_SetHoldControlGuide final
{
public:
	bool                                          IsHoldType;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UIW_Btn_Key_RIght_C_SetHoldControlGuide) == 0x000001, "Wrong alignment on UIW_Btn_Key_RIght_C_SetHoldControlGuide");
static_assert(sizeof(UIW_Btn_Key_RIght_C_SetHoldControlGuide) == 0x000001, "Wrong size on UIW_Btn_Key_RIght_C_SetHoldControlGuide");
static_assert(offsetof(UIW_Btn_Key_RIght_C_SetHoldControlGuide, IsHoldType) == 0x000000, "Member 'UIW_Btn_Key_RIght_C_SetHoldControlGuide::IsHoldType' has a wrong offset!");

}


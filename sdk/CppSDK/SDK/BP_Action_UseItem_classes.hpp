#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Action_UseItem

#include "Basic.hpp"

#include "ProjectP_structs.hpp"
#include "ProjectP_classes.hpp"
#include "Engine_structs.hpp"
#include "ProjectPContentInfo_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Action_UseItem.BP_Action_UseItem_C
// 0x0020 (0x0278 - 0x0258)
class UBP_Action_UseItem_C final : public ULAction_LoopAnim
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0258(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class ULActPayload_UseItem*                   PayloadItem;                                       // 0x0260(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULItem*                                 Cached_UseItem;                                    // 0x0268(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Cached_UseMainItemInstead;                         // 0x0270(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_BP_Action_UseItem(int32 EntryPoint);
	void OnCommandOccured_Event(class ULActMgrComponent* ActMgrComponent, class AActor* TargetActor, class FName Command, const struct FVector& Lever, bool SkipCommandPrerequisitiesCheck);
	void OnStop(class ULActBase* ReasonAction, class FName Reason);
	void OnCurrMontageEnded(class UAnimMontage* Montage, bool bInterrupted, int32 MontageInstanceID);
	void OnStart();
	bool OnPreProcessAction();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Action_UseItem_C">();
	}
	static class UBP_Action_UseItem_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_Action_UseItem_C>();
	}
};
static_assert(alignof(UBP_Action_UseItem_C) == 0x000008, "Wrong alignment on UBP_Action_UseItem_C");
static_assert(sizeof(UBP_Action_UseItem_C) == 0x000278, "Wrong size on UBP_Action_UseItem_C");
static_assert(offsetof(UBP_Action_UseItem_C, UberGraphFrame) == 0x000258, "Member 'UBP_Action_UseItem_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_Action_UseItem_C, PayloadItem) == 0x000260, "Member 'UBP_Action_UseItem_C::PayloadItem' has a wrong offset!");
static_assert(offsetof(UBP_Action_UseItem_C, Cached_UseItem) == 0x000268, "Member 'UBP_Action_UseItem_C::Cached_UseItem' has a wrong offset!");
static_assert(offsetof(UBP_Action_UseItem_C, Cached_UseMainItemInstead) == 0x000270, "Member 'UBP_Action_UseItem_C::Cached_UseMainItemInstead' has a wrong offset!");

}


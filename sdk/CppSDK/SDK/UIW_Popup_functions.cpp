#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UIW_Popup

#include "Basic.hpp"

#include "UIW_Popup_classes.hpp"
#include "UIW_Popup_parameters.hpp"


namespace SDK
{

// Function UIW_Popup.UIW_Popup_C.OnActiveKey__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UUIW_Popup_C*                     Popup                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UUIW_Btn_Key_C*                   BtnKey                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUIW_Popup_C::OnActiveKey__DelegateSignature(class UUIW_Popup_C* Popup, class UUIW_Btn_Key_C* BtnKey)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIW_Popup_C", "OnActiveKey__DelegateSignature");

	Params::UIW_Popup_C_OnActiveKey__DelegateSignature Parms{};

	Parms.Popup = Popup;
	Parms.BtnKey = BtnKey;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UIW_Popup.UIW_Popup_C.SetPopup
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             PopupRowName_0                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUIW_Popup_C::SetPopup(class FName PopupRowName_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIW_Popup_C", "SetPopup");

	Params::UIW_Popup_C_SetPopup Parms{};

	Parms.PopupRowName_0 = PopupRowName_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UIW_Popup.UIW_Popup_C.ActiveKey
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UUIW_Btn_Key_C*                   BtnKey                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUIW_Popup_C::ActiveKey(class UUIW_Btn_Key_C* BtnKey)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIW_Popup_C", "ActiveKey");

	Params::UIW_Popup_C_ActiveKey Parms{};

	Parms.BtnKey = BtnKey;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UIW_Popup.UIW_Popup_C.RepeatKey
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UUIW_Btn_Key_C*                   BtnKey                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUIW_Popup_C::RepeatKey(class UUIW_Btn_Key_C* BtnKey)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIW_Popup_C", "RepeatKey");

	Params::UIW_Popup_C_RepeatKey Parms{};

	Parms.BtnKey = BtnKey;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UIW_Popup.UIW_Popup_C.FocusManage
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// struct FPointerEvent                    MouseEvent                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FEventReply                      ReturnValue                                            (Parm, OutParm, ReturnParm)

struct FEventReply UUIW_Popup_C::FocusManage(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIW_Popup_C", "FocusManage");

	Params::UIW_Popup_C_FocusManage Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.MouseEvent = std::move(MouseEvent);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function UIW_Popup.UIW_Popup_C.SetText
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Title                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FText                             Desc                                                   (BlueprintVisible, BlueprintReadOnly, Parm)

void UUIW_Popup_C::SetText(const class FString& Title, const class FText& Desc)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIW_Popup_C", "SetText");

	Params::UIW_Popup_C_SetText Parms{};

	Parms.Title = std::move(Title);
	Parms.Desc = std::move(Desc);

	UObject::ProcessEvent(Func, &Parms);
}


// Function UIW_Popup.UIW_Popup_C.SetKeyHoldTime
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Time                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUIW_Popup_C::SetKeyHoldTime(float Time)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIW_Popup_C", "SetKeyHoldTime");

	Params::UIW_Popup_C_SetKeyHoldTime Parms{};

	Parms.Time = Time;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UIW_Popup.UIW_Popup_C.SetResource
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Title                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// TArray<class UObject*>                  ListItems                                              (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UUIW_Popup_C::SetResource(const class FString& Title, TArray<class UObject*>& ListItems)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIW_Popup_C", "SetResource");

	Params::UIW_Popup_C_SetResource Parms{};

	Parms.Title = std::move(Title);
	Parms.ListItems = std::move(ListItems);

	UObject::ProcessEvent(Func, &Parms);

	ListItems = std::move(Parms.ListItems);
}


// Function UIW_Popup.UIW_Popup_C.SetCostGain
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class UObject*>                  CostList                                               (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// TArray<class UObject*>                  GainList                                               (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UUIW_Popup_C::SetCostGain(TArray<class UObject*>& CostList, TArray<class UObject*>& GainList)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIW_Popup_C", "SetCostGain");

	Params::UIW_Popup_C_SetCostGain Parms{};

	Parms.CostList = std::move(CostList);
	Parms.GainList = std::move(GainList);

	UObject::ProcessEvent(Func, &Parms);

	CostList = std::move(Parms.CostList);
	GainList = std::move(Parms.GainList);
}


// Function UIW_Popup.UIW_Popup_C.GetResourceListView
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UListView*                        ListView                                               (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUIW_Popup_C::GetResourceListView(class UListView** ListView)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIW_Popup_C", "GetResourceListView");

	Params::UIW_Popup_C_GetResourceListView Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ListView != nullptr)
		*ListView = Parms.ListView;
}


// Function UIW_Popup.UIW_Popup_C.RequestCloseWindow
// (Public, BlueprintCallable, BlueprintEvent)

void UUIW_Popup_C::RequestCloseWindow()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIW_Popup_C", "RequestCloseWindow");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UIW_Popup.UIW_Popup_C.SetContentsSize
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void UUIW_Popup_C::SetContentsSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIW_Popup_C", "SetContentsSize");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UIW_Popup.UIW_Popup_C.OnMouseWheel
// (BlueprintCosmetic, Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// struct FPointerEvent                    MouseEvent                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FEventReply                      ReturnValue                                            (Parm, OutParm, ReturnParm)

struct FEventReply UUIW_Popup_C::OnMouseWheel(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIW_Popup_C", "OnMouseWheel");

	Params::UIW_Popup_C_OnMouseWheel Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.MouseEvent = std::move(MouseEvent);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function UIW_Popup.UIW_Popup_C.SetEnabledWindow
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsEnabled                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UUIW_Popup_C::SetEnabledWindow(bool IsEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIW_Popup_C", "SetEnabledWindow");

	Params::UIW_Popup_C_SetEnabledWindow Parms{};

	Parms.IsEnabled = IsEnabled;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UIW_Popup.UIW_Popup_C.CheckFocus
// (Private, BlueprintCallable, BlueprintEvent)

void UUIW_Popup_C::CheckFocus()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIW_Popup_C", "CheckFocus");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UIW_Popup.UIW_Popup_C.OnCompleteTweenEvent
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             Name_0                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUIW_Popup_C::OnCompleteTweenEvent(class FName Name_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIW_Popup_C", "OnCompleteTweenEvent");

	Params::UIW_Popup_C_OnCompleteTweenEvent Parms{};

	Parms.Name_0 = Name_0;

	UObject::ProcessEvent(Func, &Parms);
}

}


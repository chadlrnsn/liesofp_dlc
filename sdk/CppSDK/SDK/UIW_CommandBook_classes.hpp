#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UIW_CommandBook

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UIW_Window_classes.hpp"
#include "SlateCore_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass UIW_CommandBook.UIW_CommandBook_C
// 0x0168 (0x04B8 - 0x0350)
class UUIW_CommandBook_C final : public UUIW_Window_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_UIW_CommandBook_C;                  // 0x0350(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UCanvasPanel*                           AddPanel;                                          // 0x0358(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUIW_Btn_Key_C*                         Btn_Add;                                           // 0x0360(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUIW_Btn_Key_C*                         Btn_Cancel;                                        // 0x0368(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUIW_Btn_Key_C*                         Btn_Close;                                         // 0x0370(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUIW_Btn_Key_C*                         Btn_Confirm;                                       // 0x0378(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                Btn_Guide;                                         // 0x0380(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUIW_Btn_Key_C*                         Btn_Tab_LeftKey;                                   // 0x0388(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUIW_Btn_Key_C*                         Btn_Tab_RightKey;                                  // 0x0390(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUIW_Btn_Key_C*                         Btn_Use;                                           // 0x0398(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UInputKeySelector*                      InputKeySelector;                                  // 0x03A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Label_Add;                                         // 0x03A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class ULListView*                             List;                                              // 0x03B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class ULListView*                             List_Tab;                                          // 0x03B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           Panel;                                             // 0x03C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEditableText*                          Text_Cmd_0;                                        // 0x03C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEditableText*                          Text_Cmd_1;                                        // 0x03D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEditableText*                          Text_Cmd_2;                                        // 0x03D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEditableText*                          Text_Cmd_3;                                        // 0x03E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEditableText*                          Text_Cmd_4;                                        // 0x03E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEditableText*                          Text_Cmd_5;                                        // 0x03F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEditableText*                          Text_Cmd_6;                                        // 0x03F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEditableText*                          Text_Cmd_7;                                        // 0x0400(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEditableText*                          Text_Cmd_8;                                        // 0x0408(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEditableText*                          Text_Cmd_9;                                        // 0x0410(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEditableText*                          Text_Cmd_10;                                       // 0x0418(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEditableText*                          Text_Cmd_11;                                       // 0x0420(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEditableText*                          Text_Cmd_12;                                       // 0x0428(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEditableText*                          Text_Cmd_13;                                       // 0x0430(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEditableText*                          Text_Cmd_14;                                       // 0x0438(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEditableText*                          Text_Cmd_15;                                       // 0x0440(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEditableText*                          Text_Cmd_16;                                       // 0x0448(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEditableText*                          Text_Cmd_17;                                       // 0x0450(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEditableText*                          Text_Cmd_18;                                       // 0x0458(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEditableText*                          Text_Cmd_19;                                       // 0x0460(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEditableText*                          Text_Title;                                        // 0x0468(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Text_Tooltip;                                      // 0x0470(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Tooltip;                                           // 0x0478(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	bool                                          IsEdit;                                            // 0x0480(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsShowAddPanel;                                    // 0x0481(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_482[0x6];                                      // 0x0482(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UUIBP_ListData_Command_C*>       ListData;                                          // 0x0488(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UEditableText*>                  CmdLinesTextList;                                  // 0x0498(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	class UUIBP_ListData_Command_C*               StartDragItem;                                     // 0x04A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LastIndex;                                         // 0x04B0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_UIW_CommandBook(int32 EntryPoint);
	void BndEvt__Text_Title_K2Node_ComponentBoundEvent_8_OnEditableTextCommittedEvent__DelegateSignature(const class FText& Text, ETextCommit CommitMethod);
	void BndEvt__Text_Cmd_0_K2Node_ComponentBoundEvent_14_OnEditableTextCommittedEvent__DelegateSignature(const class FText& Text, ETextCommit CommitMethod);
	void BndEvt__Text_Cmd_1_K2Node_ComponentBoundEvent_15_OnEditableTextCommittedEvent__DelegateSignature(const class FText& Text, ETextCommit CommitMethod);
	void BndEvt__Text_Cmd_2_K2Node_ComponentBoundEvent_16_OnEditableTextCommittedEvent__DelegateSignature(const class FText& Text, ETextCommit CommitMethod);
	void BndEvt__Text_Cmd_3_K2Node_ComponentBoundEvent_17_OnEditableTextCommittedEvent__DelegateSignature(const class FText& Text, ETextCommit CommitMethod);
	void BndEvt__Text_Cmd_4_K2Node_ComponentBoundEvent_18_OnEditableTextCommittedEvent__DelegateSignature(const class FText& Text, ETextCommit CommitMethod);
	void BndEvt__Text_Cmd_5_K2Node_ComponentBoundEvent_19_OnEditableTextCommittedEvent__DelegateSignature(const class FText& Text, ETextCommit CommitMethod);
	void BndEvt__Text_Cmd_6_K2Node_ComponentBoundEvent_20_OnEditableTextCommittedEvent__DelegateSignature(const class FText& Text, ETextCommit CommitMethod);
	void BndEvt__Text_Cmd_7_K2Node_ComponentBoundEvent_21_OnEditableTextCommittedEvent__DelegateSignature(const class FText& Text, ETextCommit CommitMethod);
	void BndEvt__Text_Cmd_8_K2Node_ComponentBoundEvent_22_OnEditableTextCommittedEvent__DelegateSignature(const class FText& Text, ETextCommit CommitMethod);
	void BndEvt__Text_Cmd_9_K2Node_ComponentBoundEvent_23_OnEditableTextCommittedEvent__DelegateSignature(const class FText& Text, ETextCommit CommitMethod);
	void BndEvt__Text_Cmd_10_K2Node_ComponentBoundEvent_24_OnEditableTextCommittedEvent__DelegateSignature(const class FText& Text, ETextCommit CommitMethod);
	void BndEvt__Text_Cmd_11_K2Node_ComponentBoundEvent_25_OnEditableTextCommittedEvent__DelegateSignature(const class FText& Text, ETextCommit CommitMethod);
	void BndEvt__Text_Cmd_12_K2Node_ComponentBoundEvent_26_OnEditableTextCommittedEvent__DelegateSignature(const class FText& Text, ETextCommit CommitMethod);
	void BndEvt__Text_Cmd_13_K2Node_ComponentBoundEvent_27_OnEditableTextCommittedEvent__DelegateSignature(const class FText& Text, ETextCommit CommitMethod);
	void BndEvt__Text_Cmd_14_K2Node_ComponentBoundEvent_28_OnEditableTextCommittedEvent__DelegateSignature(const class FText& Text, ETextCommit CommitMethod);
	void BndEvt__Text_Cmd_15_K2Node_ComponentBoundEvent_29_OnEditableTextCommittedEvent__DelegateSignature(const class FText& Text, ETextCommit CommitMethod);
	void BndEvt__Text_Cmd_16_K2Node_ComponentBoundEvent_30_OnEditableTextCommittedEvent__DelegateSignature(const class FText& Text, ETextCommit CommitMethod);
	void BndEvt__Text_Cmd_17_K2Node_ComponentBoundEvent_31_OnEditableTextCommittedEvent__DelegateSignature(const class FText& Text, ETextCommit CommitMethod);
	void BndEvt__Text_Cmd_18_K2Node_ComponentBoundEvent_34_OnEditableTextCommittedEvent__DelegateSignature(const class FText& Text, ETextCommit CommitMethod);
	void BndEvt__UIW_CommandBook_Btn_Use_K2Node_ComponentBoundEvent_9_OnActive__DelegateSignature(class UUIW_Btn_Key_C* BtnKey);
	void BndEvt__InputKeySelector_K2Node_ComponentBoundEvent_8_OnIsSelectingKeyChanged__DelegateSignature();
	void BndEvt__Btn_Cancel_K2Node_ComponentBoundEvent_7_OnActive__DelegateSignature(class UUIW_Btn_Key_C* BtnKey);
	void BndEvt__Btn_Sumit_K2Node_ComponentBoundEvent_3_OnActive__DelegateSignature(class UUIW_Btn_Key_C* BtnKey);
	void BndEvt__List_K2Node_ComponentBoundEvent_6_OnItemIsHoveredChangedDynamic__DelegateSignature(class UObject* Item, bool bIsHovered);
	void BndEvt__Btn_Guide_K2Node_ComponentBoundEvent_5_OnButtonHoverEvent__DelegateSignature();
	void BndEvt__Btn_Guide_K2Node_ComponentBoundEvent_4_OnButtonHoverEvent__DelegateSignature();
	void BndEvt__Btn_Add_K2Node_ComponentBoundEvent_2_OnActive__DelegateSignature(class UUIW_Btn_Key_C* BtnKey);
	void BndEvt__Btn_Back_K2Node_ComponentBoundEvent_1_OnActive__DelegateSignature(class UUIW_Btn_Key_C* BtnKey);
	void BndEvt__List_K2Node_ComponentBoundEvent_0_SimpleListItemEventDynamic__DelegateSignature(class UObject* Item);
	void Construct();
	void RefreshPersonalList();
	void RefreshPublicList();
	void ShowTooltip(TArray<class FString>& CommandLines, float PositionY);
	void HideTooltip();
	void CallbackContextMenu(class FName EventName);
	void RefreshChapterList();
	void RefreshMoneyList();
	void SetAddPanel(const class FString& Title, TArray<class FString>& CommandLines);
	void ShowAddPanel(bool IsEdit_0);
	void HideAddPanel();
	void Add_Edit();
	void StartDrag(class UUIBP_ListData_Command_C* CmdData);
	void StopDrag(class UUIBP_ListData_Command_C* CmdData);
	void SaveData();
	void OnReady();
	void ChangeTab(class UObject* Item, bool bIsSelected);
	struct FEventReply FocusManage(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);
	void MoveLeftTab(class UUIW_Btn_Key_C* BtnKey);
	void MoveRightTab(class UUIW_Btn_Key_C* BtnKey);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"UIW_CommandBook_C">();
	}
	static class UUIW_CommandBook_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUIW_CommandBook_C>();
	}
};
static_assert(alignof(UUIW_CommandBook_C) == 0x000008, "Wrong alignment on UUIW_CommandBook_C");
static_assert(sizeof(UUIW_CommandBook_C) == 0x0004B8, "Wrong size on UUIW_CommandBook_C");
static_assert(offsetof(UUIW_CommandBook_C, UberGraphFrame_UIW_CommandBook_C) == 0x000350, "Member 'UUIW_CommandBook_C::UberGraphFrame_UIW_CommandBook_C' has a wrong offset!");
static_assert(offsetof(UUIW_CommandBook_C, AddPanel) == 0x000358, "Member 'UUIW_CommandBook_C::AddPanel' has a wrong offset!");
static_assert(offsetof(UUIW_CommandBook_C, Btn_Add) == 0x000360, "Member 'UUIW_CommandBook_C::Btn_Add' has a wrong offset!");
static_assert(offsetof(UUIW_CommandBook_C, Btn_Cancel) == 0x000368, "Member 'UUIW_CommandBook_C::Btn_Cancel' has a wrong offset!");
static_assert(offsetof(UUIW_CommandBook_C, Btn_Close) == 0x000370, "Member 'UUIW_CommandBook_C::Btn_Close' has a wrong offset!");
static_assert(offsetof(UUIW_CommandBook_C, Btn_Confirm) == 0x000378, "Member 'UUIW_CommandBook_C::Btn_Confirm' has a wrong offset!");
static_assert(offsetof(UUIW_CommandBook_C, Btn_Guide) == 0x000380, "Member 'UUIW_CommandBook_C::Btn_Guide' has a wrong offset!");
static_assert(offsetof(UUIW_CommandBook_C, Btn_Tab_LeftKey) == 0x000388, "Member 'UUIW_CommandBook_C::Btn_Tab_LeftKey' has a wrong offset!");
static_assert(offsetof(UUIW_CommandBook_C, Btn_Tab_RightKey) == 0x000390, "Member 'UUIW_CommandBook_C::Btn_Tab_RightKey' has a wrong offset!");
static_assert(offsetof(UUIW_CommandBook_C, Btn_Use) == 0x000398, "Member 'UUIW_CommandBook_C::Btn_Use' has a wrong offset!");
static_assert(offsetof(UUIW_CommandBook_C, InputKeySelector) == 0x0003A0, "Member 'UUIW_CommandBook_C::InputKeySelector' has a wrong offset!");
static_assert(offsetof(UUIW_CommandBook_C, Label_Add) == 0x0003A8, "Member 'UUIW_CommandBook_C::Label_Add' has a wrong offset!");
static_assert(offsetof(UUIW_CommandBook_C, List) == 0x0003B0, "Member 'UUIW_CommandBook_C::List' has a wrong offset!");
static_assert(offsetof(UUIW_CommandBook_C, List_Tab) == 0x0003B8, "Member 'UUIW_CommandBook_C::List_Tab' has a wrong offset!");
static_assert(offsetof(UUIW_CommandBook_C, Panel) == 0x0003C0, "Member 'UUIW_CommandBook_C::Panel' has a wrong offset!");
static_assert(offsetof(UUIW_CommandBook_C, Text_Cmd_0) == 0x0003C8, "Member 'UUIW_CommandBook_C::Text_Cmd_0' has a wrong offset!");
static_assert(offsetof(UUIW_CommandBook_C, Text_Cmd_1) == 0x0003D0, "Member 'UUIW_CommandBook_C::Text_Cmd_1' has a wrong offset!");
static_assert(offsetof(UUIW_CommandBook_C, Text_Cmd_2) == 0x0003D8, "Member 'UUIW_CommandBook_C::Text_Cmd_2' has a wrong offset!");
static_assert(offsetof(UUIW_CommandBook_C, Text_Cmd_3) == 0x0003E0, "Member 'UUIW_CommandBook_C::Text_Cmd_3' has a wrong offset!");
static_assert(offsetof(UUIW_CommandBook_C, Text_Cmd_4) == 0x0003E8, "Member 'UUIW_CommandBook_C::Text_Cmd_4' has a wrong offset!");
static_assert(offsetof(UUIW_CommandBook_C, Text_Cmd_5) == 0x0003F0, "Member 'UUIW_CommandBook_C::Text_Cmd_5' has a wrong offset!");
static_assert(offsetof(UUIW_CommandBook_C, Text_Cmd_6) == 0x0003F8, "Member 'UUIW_CommandBook_C::Text_Cmd_6' has a wrong offset!");
static_assert(offsetof(UUIW_CommandBook_C, Text_Cmd_7) == 0x000400, "Member 'UUIW_CommandBook_C::Text_Cmd_7' has a wrong offset!");
static_assert(offsetof(UUIW_CommandBook_C, Text_Cmd_8) == 0x000408, "Member 'UUIW_CommandBook_C::Text_Cmd_8' has a wrong offset!");
static_assert(offsetof(UUIW_CommandBook_C, Text_Cmd_9) == 0x000410, "Member 'UUIW_CommandBook_C::Text_Cmd_9' has a wrong offset!");
static_assert(offsetof(UUIW_CommandBook_C, Text_Cmd_10) == 0x000418, "Member 'UUIW_CommandBook_C::Text_Cmd_10' has a wrong offset!");
static_assert(offsetof(UUIW_CommandBook_C, Text_Cmd_11) == 0x000420, "Member 'UUIW_CommandBook_C::Text_Cmd_11' has a wrong offset!");
static_assert(offsetof(UUIW_CommandBook_C, Text_Cmd_12) == 0x000428, "Member 'UUIW_CommandBook_C::Text_Cmd_12' has a wrong offset!");
static_assert(offsetof(UUIW_CommandBook_C, Text_Cmd_13) == 0x000430, "Member 'UUIW_CommandBook_C::Text_Cmd_13' has a wrong offset!");
static_assert(offsetof(UUIW_CommandBook_C, Text_Cmd_14) == 0x000438, "Member 'UUIW_CommandBook_C::Text_Cmd_14' has a wrong offset!");
static_assert(offsetof(UUIW_CommandBook_C, Text_Cmd_15) == 0x000440, "Member 'UUIW_CommandBook_C::Text_Cmd_15' has a wrong offset!");
static_assert(offsetof(UUIW_CommandBook_C, Text_Cmd_16) == 0x000448, "Member 'UUIW_CommandBook_C::Text_Cmd_16' has a wrong offset!");
static_assert(offsetof(UUIW_CommandBook_C, Text_Cmd_17) == 0x000450, "Member 'UUIW_CommandBook_C::Text_Cmd_17' has a wrong offset!");
static_assert(offsetof(UUIW_CommandBook_C, Text_Cmd_18) == 0x000458, "Member 'UUIW_CommandBook_C::Text_Cmd_18' has a wrong offset!");
static_assert(offsetof(UUIW_CommandBook_C, Text_Cmd_19) == 0x000460, "Member 'UUIW_CommandBook_C::Text_Cmd_19' has a wrong offset!");
static_assert(offsetof(UUIW_CommandBook_C, Text_Title) == 0x000468, "Member 'UUIW_CommandBook_C::Text_Title' has a wrong offset!");
static_assert(offsetof(UUIW_CommandBook_C, Text_Tooltip) == 0x000470, "Member 'UUIW_CommandBook_C::Text_Tooltip' has a wrong offset!");
static_assert(offsetof(UUIW_CommandBook_C, Tooltip) == 0x000478, "Member 'UUIW_CommandBook_C::Tooltip' has a wrong offset!");
static_assert(offsetof(UUIW_CommandBook_C, IsEdit) == 0x000480, "Member 'UUIW_CommandBook_C::IsEdit' has a wrong offset!");
static_assert(offsetof(UUIW_CommandBook_C, IsShowAddPanel) == 0x000481, "Member 'UUIW_CommandBook_C::IsShowAddPanel' has a wrong offset!");
static_assert(offsetof(UUIW_CommandBook_C, ListData) == 0x000488, "Member 'UUIW_CommandBook_C::ListData' has a wrong offset!");
static_assert(offsetof(UUIW_CommandBook_C, CmdLinesTextList) == 0x000498, "Member 'UUIW_CommandBook_C::CmdLinesTextList' has a wrong offset!");
static_assert(offsetof(UUIW_CommandBook_C, StartDragItem) == 0x0004A8, "Member 'UUIW_CommandBook_C::StartDragItem' has a wrong offset!");
static_assert(offsetof(UUIW_CommandBook_C, LastIndex) == 0x0004B0, "Member 'UUIW_CommandBook_C::LastIndex' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UIW_DPad_Item

#include "Basic.hpp"

#include "ProjectP_classes.hpp"
#include "Engine_structs.hpp"
#include "ProjectPContentInfo_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass UIW_DPad_Item.UIW_DPad_Item_C
// 0x00C8 (0x0370 - 0x02A8)
class UUIW_DPad_Item_C final : public ULWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02A8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Ani_Active;                                        // 0x02B0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Ani_Selected;                                      // 0x02B8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 Fill;                                              // 0x02C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           Group_Recharge;                                    // 0x02C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Img_Icon;                                          // 0x02D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Img_Input_Fx;                                      // 0x02D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Img_Key;                                           // 0x02E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Img_Selected;                                      // 0x02E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Img_Selected_Bg;                                   // 0x02F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Img_Transition;                                    // 0x02F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 SlotBg_Belt;                                       // 0x0300(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 SlotBg_Pouch;                                      // 0x0308(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Text_Count;                                        // 0x0310(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	struct FTimerHandle                           Timer;                                             // 0x0318(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class ULStatComponent*                        StatComponent;                                     // 0x0320(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   ItemCodeName;                                      // 0x0328(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   BGType;                                            // 0x0330(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class FName                                   InputAction;                                       // 0x0338(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class FName                                   PulseItemCodeName;                                 // 0x0340(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         PrevPulsePoint;                                    // 0x0348(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         PrevCount;                                         // 0x034C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULItem*                                 ComplexItemUnit;                                   // 0x0350(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsTransitionEnabled;                               // 0x0358(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_359[0x7];                                      // 0x0359(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             TransitionEnableDispatcher;                        // 0x0360(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)

public:
	void TransitionEnableDispatcher__DelegateSignature(bool IsEnabled);
	void ExecuteUbergraph_UIW_DPad_Item(int32 EntryPoint);
	void PreConstruct(bool IsDesignTime);
	void Destruct();
	void Construct();
	void SetItem(class FName CodeName, bool IsInit);
	void OnUpdateItem(class ULItem* Item);
	void UpdatePulseGauge();
	void SetSelected(bool IsSelected);
	void SetPouchKey(bool IsGamePad);
	void OnChangeComplex(class FName MainItemCodeName, class FName UnitItemCodeName);
	void GetPouchKey(bool IsGamePad, struct FKey* Key);
	void IsComplexGrinder(bool* Bool);
	void CanUse(bool* NewParam);
	void IsGrinder(bool* Bool);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"UIW_DPad_Item_C">();
	}
	static class UUIW_DPad_Item_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUIW_DPad_Item_C>();
	}
};
static_assert(alignof(UUIW_DPad_Item_C) == 0x000008, "Wrong alignment on UUIW_DPad_Item_C");
static_assert(sizeof(UUIW_DPad_Item_C) == 0x000370, "Wrong size on UUIW_DPad_Item_C");
static_assert(offsetof(UUIW_DPad_Item_C, UberGraphFrame) == 0x0002A8, "Member 'UUIW_DPad_Item_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UUIW_DPad_Item_C, Ani_Active) == 0x0002B0, "Member 'UUIW_DPad_Item_C::Ani_Active' has a wrong offset!");
static_assert(offsetof(UUIW_DPad_Item_C, Ani_Selected) == 0x0002B8, "Member 'UUIW_DPad_Item_C::Ani_Selected' has a wrong offset!");
static_assert(offsetof(UUIW_DPad_Item_C, Fill) == 0x0002C0, "Member 'UUIW_DPad_Item_C::Fill' has a wrong offset!");
static_assert(offsetof(UUIW_DPad_Item_C, Group_Recharge) == 0x0002C8, "Member 'UUIW_DPad_Item_C::Group_Recharge' has a wrong offset!");
static_assert(offsetof(UUIW_DPad_Item_C, Img_Icon) == 0x0002D0, "Member 'UUIW_DPad_Item_C::Img_Icon' has a wrong offset!");
static_assert(offsetof(UUIW_DPad_Item_C, Img_Input_Fx) == 0x0002D8, "Member 'UUIW_DPad_Item_C::Img_Input_Fx' has a wrong offset!");
static_assert(offsetof(UUIW_DPad_Item_C, Img_Key) == 0x0002E0, "Member 'UUIW_DPad_Item_C::Img_Key' has a wrong offset!");
static_assert(offsetof(UUIW_DPad_Item_C, Img_Selected) == 0x0002E8, "Member 'UUIW_DPad_Item_C::Img_Selected' has a wrong offset!");
static_assert(offsetof(UUIW_DPad_Item_C, Img_Selected_Bg) == 0x0002F0, "Member 'UUIW_DPad_Item_C::Img_Selected_Bg' has a wrong offset!");
static_assert(offsetof(UUIW_DPad_Item_C, Img_Transition) == 0x0002F8, "Member 'UUIW_DPad_Item_C::Img_Transition' has a wrong offset!");
static_assert(offsetof(UUIW_DPad_Item_C, SlotBg_Belt) == 0x000300, "Member 'UUIW_DPad_Item_C::SlotBg_Belt' has a wrong offset!");
static_assert(offsetof(UUIW_DPad_Item_C, SlotBg_Pouch) == 0x000308, "Member 'UUIW_DPad_Item_C::SlotBg_Pouch' has a wrong offset!");
static_assert(offsetof(UUIW_DPad_Item_C, Text_Count) == 0x000310, "Member 'UUIW_DPad_Item_C::Text_Count' has a wrong offset!");
static_assert(offsetof(UUIW_DPad_Item_C, Timer) == 0x000318, "Member 'UUIW_DPad_Item_C::Timer' has a wrong offset!");
static_assert(offsetof(UUIW_DPad_Item_C, StatComponent) == 0x000320, "Member 'UUIW_DPad_Item_C::StatComponent' has a wrong offset!");
static_assert(offsetof(UUIW_DPad_Item_C, ItemCodeName) == 0x000328, "Member 'UUIW_DPad_Item_C::ItemCodeName' has a wrong offset!");
static_assert(offsetof(UUIW_DPad_Item_C, BGType) == 0x000330, "Member 'UUIW_DPad_Item_C::BGType' has a wrong offset!");
static_assert(offsetof(UUIW_DPad_Item_C, InputAction) == 0x000338, "Member 'UUIW_DPad_Item_C::InputAction' has a wrong offset!");
static_assert(offsetof(UUIW_DPad_Item_C, PulseItemCodeName) == 0x000340, "Member 'UUIW_DPad_Item_C::PulseItemCodeName' has a wrong offset!");
static_assert(offsetof(UUIW_DPad_Item_C, PrevPulsePoint) == 0x000348, "Member 'UUIW_DPad_Item_C::PrevPulsePoint' has a wrong offset!");
static_assert(offsetof(UUIW_DPad_Item_C, PrevCount) == 0x00034C, "Member 'UUIW_DPad_Item_C::PrevCount' has a wrong offset!");
static_assert(offsetof(UUIW_DPad_Item_C, ComplexItemUnit) == 0x000350, "Member 'UUIW_DPad_Item_C::ComplexItemUnit' has a wrong offset!");
static_assert(offsetof(UUIW_DPad_Item_C, IsTransitionEnabled) == 0x000358, "Member 'UUIW_DPad_Item_C::IsTransitionEnabled' has a wrong offset!");
static_assert(offsetof(UUIW_DPad_Item_C, TransitionEnableDispatcher) == 0x000360, "Member 'UUIW_DPad_Item_C::TransitionEnableDispatcher' has a wrong offset!");

}


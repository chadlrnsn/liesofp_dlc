#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_HitProcComponent

#include "Basic.hpp"

#include "ProjectP_structs.hpp"
#include "ProjectP_classes.hpp"
#include "Engine_structs.hpp"
#include "ProjectPContentInfo_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_HitProcComponent.BP_HitProcComponent_C
// 0x0020 (0x02D8 - 0x02B8)
class UBP_HitProcComponent_C final : public ULHitProcComponent
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02B8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBP_HitProcContext_C*                   Cached_BP_HitProcContext;                          // 0x02C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Option_ParryCooltimeRatioByFrenzy;                 // 0x02C8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Option_HitFXMoveOffset_Thrust;                     // 0x02CC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Option_HitFxMoveOffset;                            // 0x02D0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Option_ReverseThrustEffectRotation;                // 0x02D4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	ELPhysicalSurfaceType                         Overrided_VictimPhysicalSurface;                   // 0x02D5(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ReduceGuardRegainOnHit();
	void CheckRepulse(bool* Result);
	void CalcDestructionDurability(class ALWeapon* Weapon, int32* Durability);
	void MarkPerfectGuardOcurred();
	void SelectActionClassCodeNameByHitMotion(class AActor* Victim, class AActor* Attacker, ELHitMotionType HitMotionType, class FName* NewParam);
	void ProcessHit(class AActor* Attacker, class AActor* Victim, const struct FHitResult& HitResult, const struct FLHitInfo& HitInfo);
	void OnDebugHitOcurred(const struct FHitResult& Info);
	void ProcessHitDecoMesh(class AActor* Attacker, class AActor* Victim, const struct FHitResult& HitResult);
	void OnRepulseSocketHitOccurred(class ULActMgrComponent* ActMgrComponent, const struct FLFxSocketTracerInfo& SocketTracerInfo, const struct FHitResult& HitResult);
	void OnFxSocketHitOccurred(class ULActMgrComponent* ActMgrComponent, const struct FLFxSocketTracerInfo& SocketTracerInfo, const struct FHitResult& HitResult);
	void ExecuteUbergraph_BP_HitProcComponent(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_HitProcComponent_C">();
	}
	static class UBP_HitProcComponent_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_HitProcComponent_C>();
	}
};
static_assert(alignof(UBP_HitProcComponent_C) == 0x000008, "Wrong alignment on UBP_HitProcComponent_C");
static_assert(sizeof(UBP_HitProcComponent_C) == 0x0002D8, "Wrong size on UBP_HitProcComponent_C");
static_assert(offsetof(UBP_HitProcComponent_C, UberGraphFrame) == 0x0002B8, "Member 'UBP_HitProcComponent_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_HitProcComponent_C, Cached_BP_HitProcContext) == 0x0002C0, "Member 'UBP_HitProcComponent_C::Cached_BP_HitProcContext' has a wrong offset!");
static_assert(offsetof(UBP_HitProcComponent_C, Option_ParryCooltimeRatioByFrenzy) == 0x0002C8, "Member 'UBP_HitProcComponent_C::Option_ParryCooltimeRatioByFrenzy' has a wrong offset!");
static_assert(offsetof(UBP_HitProcComponent_C, Option_HitFXMoveOffset_Thrust) == 0x0002CC, "Member 'UBP_HitProcComponent_C::Option_HitFXMoveOffset_Thrust' has a wrong offset!");
static_assert(offsetof(UBP_HitProcComponent_C, Option_HitFxMoveOffset) == 0x0002D0, "Member 'UBP_HitProcComponent_C::Option_HitFxMoveOffset' has a wrong offset!");
static_assert(offsetof(UBP_HitProcComponent_C, Option_ReverseThrustEffectRotation) == 0x0002D4, "Member 'UBP_HitProcComponent_C::Option_ReverseThrustEffectRotation' has a wrong offset!");
static_assert(offsetof(UBP_HitProcComponent_C, Overrided_VictimPhysicalSurface) == 0x0002D5, "Member 'UBP_HitProcComponent_C::Overrided_VictimPhysicalSurface' has a wrong offset!");

}


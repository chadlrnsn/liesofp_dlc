#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UIParticle

#include "Basic.hpp"


namespace SDK::Params
{

// Function UIParticle.UIParticle.SetPlayParticle
// 0x0001 (0x0001 - 0x0000)
struct UIParticle_SetPlayParticle final
{
public:
	bool                                          InPlayParticle;                                    // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UIParticle_SetPlayParticle) == 0x000001, "Wrong alignment on UIParticle_SetPlayParticle");
static_assert(sizeof(UIParticle_SetPlayParticle) == 0x000001, "Wrong size on UIParticle_SetPlayParticle");
static_assert(offsetof(UIParticle_SetPlayParticle, InPlayParticle) == 0x000000, "Member 'UIParticle_SetPlayParticle::InPlayParticle' has a wrong offset!");

// Function UIParticle.UIParticleEmitter.SetPlayParticle
// 0x0001 (0x0001 - 0x0000)
struct UIParticleEmitter_SetPlayParticle final
{
public:
	bool                                          InPlayParticle;                                    // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UIParticleEmitter_SetPlayParticle) == 0x000001, "Wrong alignment on UIParticleEmitter_SetPlayParticle");
static_assert(sizeof(UIParticleEmitter_SetPlayParticle) == 0x000001, "Wrong size on UIParticleEmitter_SetPlayParticle");
static_assert(offsetof(UIParticleEmitter_SetPlayParticle, InPlayParticle) == 0x000000, "Member 'UIParticleEmitter_SetPlayParticle::InPlayParticle' has a wrong offset!");

// Function UIParticle.UIParticleUtility.GetLOD
// 0x0004 (0x0004 - 0x0000)
struct UIParticleUtility_GetLOD final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UIParticleUtility_GetLOD) == 0x000004, "Wrong alignment on UIParticleUtility_GetLOD");
static_assert(sizeof(UIParticleUtility_GetLOD) == 0x000004, "Wrong size on UIParticleUtility_GetLOD");
static_assert(offsetof(UIParticleUtility_GetLOD, ReturnValue) == 0x000000, "Member 'UIParticleUtility_GetLOD::ReturnValue' has a wrong offset!");

// Function UIParticle.UIParticleUtility.GetMultiThread
// 0x0001 (0x0001 - 0x0000)
struct UIParticleUtility_GetMultiThread final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UIParticleUtility_GetMultiThread) == 0x000001, "Wrong alignment on UIParticleUtility_GetMultiThread");
static_assert(sizeof(UIParticleUtility_GetMultiThread) == 0x000001, "Wrong size on UIParticleUtility_GetMultiThread");
static_assert(offsetof(UIParticleUtility_GetMultiThread, ReturnValue) == 0x000000, "Member 'UIParticleUtility_GetMultiThread::ReturnValue' has a wrong offset!");

// Function UIParticle.UIParticleUtility.SetLOD
// 0x0004 (0x0004 - 0x0000)
struct UIParticleUtility_SetLOD final
{
public:
	int32                                         Newlod;                                            // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UIParticleUtility_SetLOD) == 0x000004, "Wrong alignment on UIParticleUtility_SetLOD");
static_assert(sizeof(UIParticleUtility_SetLOD) == 0x000004, "Wrong size on UIParticleUtility_SetLOD");
static_assert(offsetof(UIParticleUtility_SetLOD, Newlod) == 0x000000, "Member 'UIParticleUtility_SetLOD::Newlod' has a wrong offset!");

// Function UIParticle.UIParticleUtility.SetMultiThread
// 0x0001 (0x0001 - 0x0000)
struct UIParticleUtility_SetMultiThread final
{
public:
	bool                                          Value;                                             // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UIParticleUtility_SetMultiThread) == 0x000001, "Wrong alignment on UIParticleUtility_SetMultiThread");
static_assert(sizeof(UIParticleUtility_SetMultiThread) == 0x000001, "Wrong size on UIParticleUtility_SetMultiThread");
static_assert(offsetof(UIParticleUtility_SetMultiThread, Value) == 0x000000, "Member 'UIParticleUtility_SetMultiThread::Value' has a wrong offset!");

}


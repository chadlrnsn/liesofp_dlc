#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BDeco_CheckActionCategory

#include "Basic.hpp"

#include "ProjectPContentInfo_structs.hpp"
#include "ProjectP_structs.hpp"
#include "ProjectP_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BDeco_CheckActionCategory.BDeco_CheckActionCategory_C
// 0x0018 (0x00C0 - 0x00A8)
class UBDeco_CheckActionCategory_C final : public ULBDecorator_BlueprintBase
{
public:
	ELAITargetType                                Target_Type;                                       // 0x00A8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ELHostileType                                 Hostile_Target_Type;                               // 0x00A9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AA[0x2];                                       // 0x00AA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Target_Check_Range;                                // 0x00AC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ELActionCategory                              ActionCategory;                                    // 0x00B0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B1[0x3];                                       // 0x00B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Action_Category_Any_Code_Name;                     // 0x00B4(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	bool PerformConditionCheckAI(class AAIController* OwnerController, class APawn* ControlledPawn);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BDeco_CheckActionCategory_C">();
	}
	static class UBDeco_CheckActionCategory_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBDeco_CheckActionCategory_C>();
	}
};
static_assert(alignof(UBDeco_CheckActionCategory_C) == 0x000008, "Wrong alignment on UBDeco_CheckActionCategory_C");
static_assert(sizeof(UBDeco_CheckActionCategory_C) == 0x0000C0, "Wrong size on UBDeco_CheckActionCategory_C");
static_assert(offsetof(UBDeco_CheckActionCategory_C, Target_Type) == 0x0000A8, "Member 'UBDeco_CheckActionCategory_C::Target_Type' has a wrong offset!");
static_assert(offsetof(UBDeco_CheckActionCategory_C, Hostile_Target_Type) == 0x0000A9, "Member 'UBDeco_CheckActionCategory_C::Hostile_Target_Type' has a wrong offset!");
static_assert(offsetof(UBDeco_CheckActionCategory_C, Target_Check_Range) == 0x0000AC, "Member 'UBDeco_CheckActionCategory_C::Target_Check_Range' has a wrong offset!");
static_assert(offsetof(UBDeco_CheckActionCategory_C, ActionCategory) == 0x0000B0, "Member 'UBDeco_CheckActionCategory_C::ActionCategory' has a wrong offset!");
static_assert(offsetof(UBDeco_CheckActionCategory_C, Action_Category_Any_Code_Name) == 0x0000B4, "Member 'UBDeco_CheckActionCategory_C::Action_Category_Any_Code_Name' has a wrong offset!");

}


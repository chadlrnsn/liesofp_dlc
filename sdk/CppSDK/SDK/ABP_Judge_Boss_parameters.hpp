#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_Judge_Boss

#include "Basic.hpp"

#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function ABP_Judge_Boss.ABP_Judge_Boss_C.ExecuteUbergraph_ABP_Judge_Boss
// 0x0050 (0x0050 - 0x0000)
struct ABP_Judge_Boss_C_ExecuteUbergraph_ABP_Judge_Boss final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurveValue_ReturnValue;                // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurveValue_ReturnValue_1;              // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_1;          // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_2;          // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_3;          // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_16[0x2];                                       // 0x0016(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetCurveValue_ReturnValue_2;              // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurveValue_ReturnValue_3;              // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurveValue_ReturnValue_4;              // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaTimeX;                           // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue;                         // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue_1;                       // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_TryGetPawnOwner_ReturnValue;              // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ALNPCCharacterBP_C*                     K2Node_DynamicCast_AsLNPCCharacter_BP;             // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchName_CmpSuccess;                      // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ABP_Judge_Boss_C_ExecuteUbergraph_ABP_Judge_Boss) == 0x000008, "Wrong alignment on ABP_Judge_Boss_C_ExecuteUbergraph_ABP_Judge_Boss");
static_assert(sizeof(ABP_Judge_Boss_C_ExecuteUbergraph_ABP_Judge_Boss) == 0x000050, "Wrong size on ABP_Judge_Boss_C_ExecuteUbergraph_ABP_Judge_Boss");
static_assert(offsetof(ABP_Judge_Boss_C_ExecuteUbergraph_ABP_Judge_Boss, EntryPoint) == 0x000000, "Member 'ABP_Judge_Boss_C_ExecuteUbergraph_ABP_Judge_Boss::EntryPoint' has a wrong offset!");
static_assert(offsetof(ABP_Judge_Boss_C_ExecuteUbergraph_ABP_Judge_Boss, CallFunc_GetCurveValue_ReturnValue) == 0x000004, "Member 'ABP_Judge_Boss_C_ExecuteUbergraph_ABP_Judge_Boss::CallFunc_GetCurveValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Judge_Boss_C_ExecuteUbergraph_ABP_Judge_Boss, CallFunc_GetCurveValue_ReturnValue_1) == 0x000008, "Member 'ABP_Judge_Boss_C_ExecuteUbergraph_ABP_Judge_Boss::CallFunc_GetCurveValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_Judge_Boss_C_ExecuteUbergraph_ABP_Judge_Boss, CallFunc_Not_PreBool_ReturnValue) == 0x00000C, "Member 'ABP_Judge_Boss_C_ExecuteUbergraph_ABP_Judge_Boss::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Judge_Boss_C_ExecuteUbergraph_ABP_Judge_Boss, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x00000D, "Member 'ABP_Judge_Boss_C_ExecuteUbergraph_ABP_Judge_Boss::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Judge_Boss_C_ExecuteUbergraph_ABP_Judge_Boss, CallFunc_BooleanAND_ReturnValue) == 0x00000E, "Member 'ABP_Judge_Boss_C_ExecuteUbergraph_ABP_Judge_Boss::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Judge_Boss_C_ExecuteUbergraph_ABP_Judge_Boss, CallFunc_NotEqual_ByteByte_ReturnValue_1) == 0x00000F, "Member 'ABP_Judge_Boss_C_ExecuteUbergraph_ABP_Judge_Boss::CallFunc_NotEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_Judge_Boss_C_ExecuteUbergraph_ABP_Judge_Boss, CallFunc_BooleanAND_ReturnValue_1) == 0x000010, "Member 'ABP_Judge_Boss_C_ExecuteUbergraph_ABP_Judge_Boss::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_Judge_Boss_C_ExecuteUbergraph_ABP_Judge_Boss, CallFunc_NotEqual_ByteByte_ReturnValue_2) == 0x000011, "Member 'ABP_Judge_Boss_C_ExecuteUbergraph_ABP_Judge_Boss::CallFunc_NotEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ABP_Judge_Boss_C_ExecuteUbergraph_ABP_Judge_Boss, CallFunc_BooleanAND_ReturnValue_2) == 0x000012, "Member 'ABP_Judge_Boss_C_ExecuteUbergraph_ABP_Judge_Boss::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ABP_Judge_Boss_C_ExecuteUbergraph_ABP_Judge_Boss, CallFunc_Not_PreBool_ReturnValue_1) == 0x000013, "Member 'ABP_Judge_Boss_C_ExecuteUbergraph_ABP_Judge_Boss::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_Judge_Boss_C_ExecuteUbergraph_ABP_Judge_Boss, CallFunc_NotEqual_ByteByte_ReturnValue_3) == 0x000014, "Member 'ABP_Judge_Boss_C_ExecuteUbergraph_ABP_Judge_Boss::CallFunc_NotEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ABP_Judge_Boss_C_ExecuteUbergraph_ABP_Judge_Boss, CallFunc_BooleanAND_ReturnValue_3) == 0x000015, "Member 'ABP_Judge_Boss_C_ExecuteUbergraph_ABP_Judge_Boss::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ABP_Judge_Boss_C_ExecuteUbergraph_ABP_Judge_Boss, CallFunc_GetCurveValue_ReturnValue_2) == 0x000018, "Member 'ABP_Judge_Boss_C_ExecuteUbergraph_ABP_Judge_Boss::CallFunc_GetCurveValue_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ABP_Judge_Boss_C_ExecuteUbergraph_ABP_Judge_Boss, CallFunc_GetCurveValue_ReturnValue_3) == 0x00001C, "Member 'ABP_Judge_Boss_C_ExecuteUbergraph_ABP_Judge_Boss::CallFunc_GetCurveValue_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ABP_Judge_Boss_C_ExecuteUbergraph_ABP_Judge_Boss, CallFunc_GetCurveValue_ReturnValue_4) == 0x000020, "Member 'ABP_Judge_Boss_C_ExecuteUbergraph_ABP_Judge_Boss::CallFunc_GetCurveValue_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ABP_Judge_Boss_C_ExecuteUbergraph_ABP_Judge_Boss, K2Node_Event_DeltaTimeX) == 0x000024, "Member 'ABP_Judge_Boss_C_ExecuteUbergraph_ABP_Judge_Boss::K2Node_Event_DeltaTimeX' has a wrong offset!");
static_assert(offsetof(ABP_Judge_Boss_C_ExecuteUbergraph_ABP_Judge_Boss, CallFunc_FMax_ReturnValue) == 0x000028, "Member 'ABP_Judge_Boss_C_ExecuteUbergraph_ABP_Judge_Boss::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Judge_Boss_C_ExecuteUbergraph_ABP_Judge_Boss, CallFunc_FMax_ReturnValue_1) == 0x00002C, "Member 'ABP_Judge_Boss_C_ExecuteUbergraph_ABP_Judge_Boss::CallFunc_FMax_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_Judge_Boss_C_ExecuteUbergraph_ABP_Judge_Boss, CallFunc_TryGetPawnOwner_ReturnValue) == 0x000030, "Member 'ABP_Judge_Boss_C_ExecuteUbergraph_ABP_Judge_Boss::CallFunc_TryGetPawnOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Judge_Boss_C_ExecuteUbergraph_ABP_Judge_Boss, CallFunc_Lerp_ReturnValue) == 0x000038, "Member 'ABP_Judge_Boss_C_ExecuteUbergraph_ABP_Judge_Boss::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Judge_Boss_C_ExecuteUbergraph_ABP_Judge_Boss, K2Node_DynamicCast_AsLNPCCharacter_BP) == 0x000040, "Member 'ABP_Judge_Boss_C_ExecuteUbergraph_ABP_Judge_Boss::K2Node_DynamicCast_AsLNPCCharacter_BP' has a wrong offset!");
static_assert(offsetof(ABP_Judge_Boss_C_ExecuteUbergraph_ABP_Judge_Boss, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'ABP_Judge_Boss_C_ExecuteUbergraph_ABP_Judge_Boss::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ABP_Judge_Boss_C_ExecuteUbergraph_ABP_Judge_Boss, K2Node_SwitchName_CmpSuccess) == 0x000049, "Member 'ABP_Judge_Boss_C_ExecuteUbergraph_ABP_Judge_Boss::K2Node_SwitchName_CmpSuccess' has a wrong offset!");

// Function ABP_Judge_Boss.ABP_Judge_Boss_C.BlueprintUpdateAnimation
// 0x0004 (0x0004 - 0x0000)
struct ABP_Judge_Boss_C_BlueprintUpdateAnimation final
{
public:
	float                                         DeltaTimeX;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_Judge_Boss_C_BlueprintUpdateAnimation) == 0x000004, "Wrong alignment on ABP_Judge_Boss_C_BlueprintUpdateAnimation");
static_assert(sizeof(ABP_Judge_Boss_C_BlueprintUpdateAnimation) == 0x000004, "Wrong size on ABP_Judge_Boss_C_BlueprintUpdateAnimation");
static_assert(offsetof(ABP_Judge_Boss_C_BlueprintUpdateAnimation, DeltaTimeX) == 0x000000, "Member 'ABP_Judge_Boss_C_BlueprintUpdateAnimation::DeltaTimeX' has a wrong offset!");

// Function ABP_Judge_Boss.ABP_Judge_Boss_C.AnimGraph
// 0x0010 (0x0010 - 0x0000)
struct ABP_Judge_Boss_C_AnimGraph final
{
public:
	struct FPoseLink                              AnimGraph_0;                                       // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(ABP_Judge_Boss_C_AnimGraph) == 0x000008, "Wrong alignment on ABP_Judge_Boss_C_AnimGraph");
static_assert(sizeof(ABP_Judge_Boss_C_AnimGraph) == 0x000010, "Wrong size on ABP_Judge_Boss_C_AnimGraph");
static_assert(offsetof(ABP_Judge_Boss_C_AnimGraph, AnimGraph_0) == 0x000000, "Member 'ABP_Judge_Boss_C_AnimGraph::AnimGraph_0' has a wrong offset!");

// Function ABP_Judge_Boss.ABP_Judge_Boss_C.AnimLayer_Additive
// 0x0040 (0x0040 - 0x0000)
struct ABP_Judge_Boss_C_AnimLayer_Additive final
{
public:
	struct FPoseLink                              MainStateBasePose;                                 // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FPoseLink                              Mesh_AdditivePose;                                 // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FPoseLink                              Local_AdditivePose;                                // 0x0020(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FPoseLink                              AnimLayer_Additive_0;                              // 0x0030(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(ABP_Judge_Boss_C_AnimLayer_Additive) == 0x000008, "Wrong alignment on ABP_Judge_Boss_C_AnimLayer_Additive");
static_assert(sizeof(ABP_Judge_Boss_C_AnimLayer_Additive) == 0x000040, "Wrong size on ABP_Judge_Boss_C_AnimLayer_Additive");
static_assert(offsetof(ABP_Judge_Boss_C_AnimLayer_Additive, MainStateBasePose) == 0x000000, "Member 'ABP_Judge_Boss_C_AnimLayer_Additive::MainStateBasePose' has a wrong offset!");
static_assert(offsetof(ABP_Judge_Boss_C_AnimLayer_Additive, Mesh_AdditivePose) == 0x000010, "Member 'ABP_Judge_Boss_C_AnimLayer_Additive::Mesh_AdditivePose' has a wrong offset!");
static_assert(offsetof(ABP_Judge_Boss_C_AnimLayer_Additive, Local_AdditivePose) == 0x000020, "Member 'ABP_Judge_Boss_C_AnimLayer_Additive::Local_AdditivePose' has a wrong offset!");
static_assert(offsetof(ABP_Judge_Boss_C_AnimLayer_Additive, AnimLayer_Additive_0) == 0x000030, "Member 'ABP_Judge_Boss_C_AnimLayer_Additive::AnimLayer_Additive_0' has a wrong offset!");

}


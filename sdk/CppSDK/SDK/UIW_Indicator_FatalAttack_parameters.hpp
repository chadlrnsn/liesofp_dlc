#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UIW_Indicator_FatalAttack

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function UIW_Indicator_FatalAttack.UIW_Indicator_FatalAttack_C.ExecuteUbergraph_UIW_Indicator_FatalAttack
// 0x0040 (0x0040 - 0x0000)
struct UIW_Indicator_FatalAttack_C_ExecuteUbergraph_UIW_Indicator_FatalAttack final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0004(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UIW_Indicator_FatalAttack_C_ExecuteUbergraph_UIW_Indicator_FatalAttack) == 0x000004, "Wrong alignment on UIW_Indicator_FatalAttack_C_ExecuteUbergraph_UIW_Indicator_FatalAttack");
static_assert(sizeof(UIW_Indicator_FatalAttack_C_ExecuteUbergraph_UIW_Indicator_FatalAttack) == 0x000040, "Wrong size on UIW_Indicator_FatalAttack_C_ExecuteUbergraph_UIW_Indicator_FatalAttack");
static_assert(offsetof(UIW_Indicator_FatalAttack_C_ExecuteUbergraph_UIW_Indicator_FatalAttack, EntryPoint) == 0x000000, "Member 'UIW_Indicator_FatalAttack_C_ExecuteUbergraph_UIW_Indicator_FatalAttack::EntryPoint' has a wrong offset!");
static_assert(offsetof(UIW_Indicator_FatalAttack_C_ExecuteUbergraph_UIW_Indicator_FatalAttack, K2Node_Event_MyGeometry) == 0x000004, "Member 'UIW_Indicator_FatalAttack_C_ExecuteUbergraph_UIW_Indicator_FatalAttack::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(UIW_Indicator_FatalAttack_C_ExecuteUbergraph_UIW_Indicator_FatalAttack, K2Node_Event_InDeltaTime) == 0x00003C, "Member 'UIW_Indicator_FatalAttack_C_ExecuteUbergraph_UIW_Indicator_FatalAttack::K2Node_Event_InDeltaTime' has a wrong offset!");

// Function UIW_Indicator_FatalAttack.UIW_Indicator_FatalAttack_C.Tick
// 0x003C (0x003C - 0x0000)
struct UIW_Indicator_FatalAttack_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UIW_Indicator_FatalAttack_C_Tick) == 0x000004, "Wrong alignment on UIW_Indicator_FatalAttack_C_Tick");
static_assert(sizeof(UIW_Indicator_FatalAttack_C_Tick) == 0x00003C, "Wrong size on UIW_Indicator_FatalAttack_C_Tick");
static_assert(offsetof(UIW_Indicator_FatalAttack_C_Tick, MyGeometry) == 0x000000, "Member 'UIW_Indicator_FatalAttack_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(UIW_Indicator_FatalAttack_C_Tick, InDeltaTime) == 0x000038, "Member 'UIW_Indicator_FatalAttack_C_Tick::InDeltaTime' has a wrong offset!");

// Function UIW_Indicator_FatalAttack.UIW_Indicator_FatalAttack_C.Refresh
// 0x0048 (0x0048 - 0x0000)
struct UIW_Indicator_FatalAttack_C_Refresh final
{
public:
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULActionSystem*                         CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetFatalTargetPointLocation_WorldLocation; // 0x0010(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetFatalTargetPointLocation_InRange;      // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_ProjectWorldLocationToWidgetPosition_ScreenPosition; // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ProjectWorldLocationToWidgetPosition_ReturnValue; // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAnimationPlaying_ReturnValue;           // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A[0x6];                                       // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAnimationPlaying_ReturnValue_1;         // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UIW_Indicator_FatalAttack_C_Refresh) == 0x000008, "Wrong alignment on UIW_Indicator_FatalAttack_C_Refresh");
static_assert(sizeof(UIW_Indicator_FatalAttack_C_Refresh) == 0x000048, "Wrong size on UIW_Indicator_FatalAttack_C_Refresh");
static_assert(offsetof(UIW_Indicator_FatalAttack_C_Refresh, CallFunc_GetPlayerController_ReturnValue) == 0x000000, "Member 'UIW_Indicator_FatalAttack_C_Refresh::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Indicator_FatalAttack_C_Refresh, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000008, "Member 'UIW_Indicator_FatalAttack_C_Refresh::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Indicator_FatalAttack_C_Refresh, CallFunc_GetFatalTargetPointLocation_WorldLocation) == 0x000010, "Member 'UIW_Indicator_FatalAttack_C_Refresh::CallFunc_GetFatalTargetPointLocation_WorldLocation' has a wrong offset!");
static_assert(offsetof(UIW_Indicator_FatalAttack_C_Refresh, CallFunc_GetFatalTargetPointLocation_InRange) == 0x00001C, "Member 'UIW_Indicator_FatalAttack_C_Refresh::CallFunc_GetFatalTargetPointLocation_InRange' has a wrong offset!");
static_assert(offsetof(UIW_Indicator_FatalAttack_C_Refresh, CallFunc_ProjectWorldLocationToWidgetPosition_ScreenPosition) == 0x000020, "Member 'UIW_Indicator_FatalAttack_C_Refresh::CallFunc_ProjectWorldLocationToWidgetPosition_ScreenPosition' has a wrong offset!");
static_assert(offsetof(UIW_Indicator_FatalAttack_C_Refresh, CallFunc_ProjectWorldLocationToWidgetPosition_ReturnValue) == 0x000028, "Member 'UIW_Indicator_FatalAttack_C_Refresh::CallFunc_ProjectWorldLocationToWidgetPosition_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Indicator_FatalAttack_C_Refresh, CallFunc_IsAnimationPlaying_ReturnValue) == 0x000029, "Member 'UIW_Indicator_FatalAttack_C_Refresh::CallFunc_IsAnimationPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Indicator_FatalAttack_C_Refresh, CallFunc_PlayAnimation_ReturnValue) == 0x000030, "Member 'UIW_Indicator_FatalAttack_C_Refresh::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(UIW_Indicator_FatalAttack_C_Refresh, CallFunc_PlayAnimation_ReturnValue_1) == 0x000038, "Member 'UIW_Indicator_FatalAttack_C_Refresh::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UIW_Indicator_FatalAttack_C_Refresh, CallFunc_IsAnimationPlaying_ReturnValue_1) == 0x000040, "Member 'UIW_Indicator_FatalAttack_C_Refresh::CallFunc_IsAnimationPlaying_ReturnValue_1' has a wrong offset!");

}

